;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:10:44 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$105)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$59)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$105)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$11, DW_AT_decl_column(0x16)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$3)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$10)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$52)
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x82)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$52)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x86)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x58)
	.dwattr $C$DW$19, DW_AT_decl_column(0x05)

$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$20, DW_AT_decl_column(0x06)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$59)
	.dwendtag $C$DW$20


$C$DW$23	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwattr $C$DW$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$23, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$23, DW_AT_decl_column(0x06)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$59)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$23


$C$DW$30	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwattr $C$DW$30, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$30, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$30, DW_AT_decl_column(0x06)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$59)
	.dwendtag $C$DW$30


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$10)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$59)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$59)
	.dwendtag $C$DW$32


$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x80)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$68)
	.dwendtag $C$DW$36


$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x81)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)

$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x82)
	.dwattr $C$DW$39, DW_AT_decl_column(0x0a)

$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x83)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)

$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("VLIB_compare_mem")
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_memory.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x72)
	.dwattr $C$DW$41, DW_AT_decl_column(0x11)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$51)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$51)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$22)
	.dwendtag $C$DW$41


$C$DW$45	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwattr $C$DW$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_memory.h")
	.dwattr $C$DW$45, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$45, DW_AT_decl_column(0x06)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$19)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$19)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$3)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$3)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$20)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$20)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$20)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$19)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$59)
	.dwendtag $C$DW$45


$C$DW$55	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwattr $C$DW$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_memory.h")
	.dwattr $C$DW$55, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$55, DW_AT_decl_column(0x07)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$52)
	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwattr $C$DW$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_memory.h")
	.dwattr $C$DW$57, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$57, DW_AT_decl_column(0x07)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$57


$C$DW$59	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_histogram_nD_U16")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("VLIB_histogram_nD_U16")
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwattr $C$DW$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\c66/VLIB_histogram_nD_U16.h")
	.dwattr $C$DW$59, DW_AT_decl_line(0x99)
	.dwattr $C$DW$59, DW_AT_decl_column(0x09)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$102)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$114)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$114)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$20)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$102)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$102)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$99)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$21)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$59


$C$DW$69	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_histogram_nD_U16_cn")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("VLIB_histogram_nD_U16_cn")
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$69, DW_AT_declaration
	.dwattr $C$DW$69, DW_AT_external
	.dwattr $C$DW$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_cn.h")
	.dwattr $C$DW$69, DW_AT_decl_line(0x20)
	.dwattr $C$DW$69, DW_AT_decl_column(0x09)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$99)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$114)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$114)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$20)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$99)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$99)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$99)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$21)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$69


$C$DW$79	.dwtag  DW_TAG_subprogram, DW_AT_name("histogram_nD_U16_getTestParams")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("histogram_nD_U16_getTestParams")
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
	.dwattr $C$DW$79, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$79, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$79, DW_AT_decl_column(0x06)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$44)
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$76)
	.dwendtag $C$DW$79

$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x60)
	.dwattr $C$DW$82, DW_AT_decl_column(0x13)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x62)
	.dwattr $C$DW$83, DW_AT_decl_column(0x13)
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x63)
	.dwattr $C$DW$84, DW_AT_decl_column(0x13)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x64)
	.dwattr $C$DW$85, DW_AT_decl_column(0x13)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x75)
	.dwattr $C$DW$86, DW_AT_decl_column(0x14)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x76)
	.dwattr $C$DW$87, DW_AT_decl_column(0x14)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x77)
	.dwattr $C$DW$88, DW_AT_decl_column(0x14)
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$89, DW_AT_decl_line(0x78)
	.dwattr $C$DW$89, DW_AT_decl_column(0x14)
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$156)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h")
	.dwattr $C$DW$90, DW_AT_decl_line(0x79)
	.dwattr $C$DW$90, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021766 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021768 
	.sect	".text"
	.clink
	.global	VLIB_histogram_nD_U16_d

$C$DW$91	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_histogram_nD_U16_d")
	.dwattr $C$DW$91, DW_AT_low_pc(VLIB_histogram_nD_U16_d)
	.dwattr $C$DW$91, DW_AT_high_pc(0x00)
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("VLIB_histogram_nD_U16_d")
	.dwattr $C$DW$91, DW_AT_external
	.dwattr $C$DW$91, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$91, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$91, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$91, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$91, DW_AT_decl_line(0x26)
	.dwattr $C$DW$91, DW_AT_decl_column(0x06)
	.dwattr $C$DW$91, DW_AT_TI_max_frame_size(0x78)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 39,column 1,is_stmt,address VLIB_histogram_nD_U16_d,isa 0

	.dwfde $C$DW$CIE, VLIB_histogram_nD_U16_d
$C$DW$92	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_histogram_nD_U16_d (uint8_t LevelOfFeedback)                 
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_histogram_nD_U16_d                                     *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 36 Auto + 56 Save = 116 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_histogram_nD_U16_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 45	-----------------------    histogram_nD_U16_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(4, "VLIB_histogram_nD_U16");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g24;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | histogram_nD_U16_testParams_t   *prm;                                  
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(72)      ; |39| 
	.dwcfi	cfa_offset, 120
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg20]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg20]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg16]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg11]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$154)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg8]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$154)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg3]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg8]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg7]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg20]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg21]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg20]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg20]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg20]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg28]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$K40")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$K40")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg12]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$K55")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$K55")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg7]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$U61")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$U61")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg3]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$U11")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$U11")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg29]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$U81")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$U81")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg21]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$U68")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$U68")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg20]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$U88")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$U88")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg5]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$K130")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$K130")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg8]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg5]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg20]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg13]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_breg31 28]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg10]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_breg31 32]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("inSize")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("inSize")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg15]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("X")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("X")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_breg31 36]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("numBins")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("numBins")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_breg31 40]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("normVals")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("normVals")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 44]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("scrap")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("scrap")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_breg31 48]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("H")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("H")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_breg31 52]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("H_cn")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("H_cn")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_breg31 56]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("H1")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("H1")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_breg31 60]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg3]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("outSize")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("outSize")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg14]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$U56")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$U56")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg23]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$U56")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$U56")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg23]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_reg22]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_reg22]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg27]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg27]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg22]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg20]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$139, DW_AT_name("histogram_nD_U16_getTestParams")
	.dwattr $C$DW$139, DW_AT_TI_call

           CALLP   .S2     histogram_nD_U16_getTestParams,B3
||         ADDAW   .D1X    SP,7,A4           ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | histogram_nD_U16_getTestParams(&prm, &test_cases);                     
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {histogram_nD_U16_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$140, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$140, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x4,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(4, "VLIB_histogram_nD_U16");                         
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$40 = &testPatternString[0];
;**  	-----------------------    K$130 = &desc[0];
;**  	-----------------------    U$12 = prm;
;**  	-----------------------    U$11 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |51| 
           LDW     .D2T2   *+SP(28),B12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  54 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  55 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;----------------------------------------------------------------------
           ZERO    .L2     B13               ; |51| 
           ZERO    .L1     A13               ; |51| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 17,is_stmt,isa 0
           CMPGT   .L1     A3,0,A0           ; |51| 

   [!A0]   BNOP    .S1     $C$L19,1          ; |51| 
|| [ A0]   LDW     .D2T1   *+B12(24),A3      ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 58,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  58 | int32_t    inSize = prm[tpi].numX * prm[tpi].dimX;                     
;----------------------------------------------------------------------
   [ A0]   LDW     .D2T2   *+B12(20),B4      ; |58| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L19}        ; |51| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 58	-----------------------    inSize = (*U$12).numX*(*U$12).dimX;
;** 61	-----------------------    X = VLIB_malloc((unsigned)(inSize*2));
;** 62	-----------------------    numBins = VLIB_malloc((unsigned)((*U$12).dimX*2));
;** 63	-----------------------    normVals = VLIB_malloc((unsigned)((*U$12).dimX*2));
;** 64	-----------------------    scrap = VLIB_malloc((unsigned)((*U$12).numX*2));
;** 70	-----------------------    if ( !((X != NULL)&(numBins != NULL)&(normVals != NULL)&(scrap != NULL)) ) goto g22;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 61,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint16_t   *X              =  (uint16_t *) VLIB_malloc(inSize * sizeof(
;     | uint16_t));                                                            
;----------------------------------------------------------------------
$C$DW$141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$141, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$141, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |61| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 58,column 20,is_stmt,isa 0
           MPY32   .M1X    A3,B4,A15         ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 61,column 21,is_stmt,isa 0
           ADDKPC  .S2     $C$RL2,B3,2       ; |61| 
           ADD     .L1     A15,A15,A4        ; |61| 
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |61| 
$C$DW$L$VLIB_histogram_nD_U16_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$5$B:
;          EXCLUSIVE CPU CYCLES: 33
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 62,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  62 | uint16_t   *numBins        =  (uint16_t *) VLIB_malloc(prm[tpi].dimX *
;     | sizeof(uint16_t));                                                     
;----------------------------------------------------------------------
           LDW     .D2T1   *+B12(24),A3      ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 61,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(36)       ; |61| 
           NOP             3
$C$DW$142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$142, DW_AT_low_pc(0x04)
	.dwattr $C$DW$142, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$142, DW_AT_TI_call

           ADD     .L1     A3,A3,A4          ; |62| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 62,column 21,is_stmt,isa 0
$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | uint16_t   *normVals       =  (uint16_t *) VLIB_malloc(prm[tpi].dimX *
;     | sizeof(uint16_t));                                                     
;----------------------------------------------------------------------
           LDW     .D2T1   *+B12(24),A3      ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 62,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(40)       ; |62| 
           NOP             3
$C$DW$143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$143, DW_AT_low_pc(0x04)
	.dwattr $C$DW$143, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$143, DW_AT_TI_call

           ADD     .L1     A3,A3,A4          ; |63| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 63,column 21,is_stmt,isa 0
$C$RL4:    ; CALL OCCURS {VLIB_malloc} {0}   ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | uint16_t   *scrap          =  (uint16_t *) VLIB_malloc(prm[tpi].numX *
;     | sizeof(uint16_t));                                                     
;----------------------------------------------------------------------
           LDW     .D2T1   *+B12(20),A3      ; |64| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 63,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(44)       ; |63| 
           NOP             3
$C$DW$144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$144, DW_AT_low_pc(0x04)
	.dwattr $C$DW$144, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$144, DW_AT_TI_call

           ADD     .L1     A3,A3,A4          ; |64| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | uint16_t   *H;                                                         
;  66 | uint16_t   *H_cn;                                                      
;  67 | uint16_t   *H1;                                                        
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |64| 
$C$DW$L$VLIB_histogram_nD_U16_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$6$B:
;          EXCLUSIVE CPU CYCLES: 17

           LDW     .D2T1   *+SP(40),A0       ; |70| 
||         ZERO    .L1     A3                ; |70| 
||         ZERO    .L2     B4                ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 70,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | if( X && numBins && normVals && scrap ) {                              
;  72 |     int32_t    fail, i, outSize;                                       
;  75 |     VLIB_fillBuffer(STATIC,                                            
;  76 |                     (uint16_t)1,                                       
;  77 |                     numBins, prm[tpi].numBins,                         
;  78 |                     prm[tpi].dimX, 1, prm[tpi].dimX * sizeof(numBins[0]
;     | ),                                                                     
;  79 |                     sizeof(numBins[0]), testPatternString);            
;  81 |     if( prm[tpi].normVals ) {                                          
;  82 |         VLIB_fillBuffer(STATIC,                                        
;  83 |                         (uint16_t)1,                                   
;  84 |                         normVals, prm[tpi].normVals,                   
;  85 |                         prm[tpi].dimX, 1, prm[tpi].dimX * sizeof(normVa
;     | ls[0]),                                                                
;  86 |                         sizeof(normVals[0]), testPatternString);       
;  87 |     } else {                                                           
;  88 |         for( i=0; i < prm[tpi].dimX; i++ ) {                           
;  90 |             normVals[i] = 65536 / prm[tpi].maxSize;                    
;  94 |     VLIB_fillBuffer(prm[tpi].testPattern,                              
;  95 |                     (uint16_t)1,                                       
;  96 |                     X, prm[tpi].staticIn,                              
;  97 |                     inSize, 1, inSize * sizeof(X[0]),                  
;  98 |                     sizeof(X[0]), testPatternString);                  
; 101 |     for( i=0; i < prm[tpi].numX * prm[tpi].dimX; i++ ) {               
; 102 |         if( X[i] > prm[tpi].maxSize - 1 ) {                            
; 103 |             X[i] = prm[tpi].maxSize - 1;                               
; 107 |     outSize = 1;                                                       
; 109 |     for( i=0; i < prm[tpi].dimX; i++ ) {                               
; 110 |         outSize *= numBins[i];                                         
; 113 |     H    =  (uint16_t *) VLIB_malloc(outSize * sizeof(uint16_t));      
; 114 |     H_cn =  (uint16_t *) malloc(outSize * sizeof(uint16_t));           
; 115 |     H1   =  (uint16_t *) VLIB_malloc(outSize * sizeof(uint16_t));      
; 117 |     if( H && H_cn && H1 ) {                                            
; 120 |         memset(H, 0, outSize * sizeof(uint16_t));                      
; 121 |         memset(H1, 0, outSize * sizeof(uint16_t));                     
; 122 |         memset(scrap, 0, prm[tpi].numX * sizeof(uint16_t));            
; 125 |         VLIB_profile_start(vlib_KERNEL_OPT);                           
; 126 |         VLIB_histogram_nD_U16(X, prm[tpi].numX, prm[tpi].dimX, prm[tpi]
;     | .binWeight, numBins, normVals, scrap, H1, H);                          
; 127 |         VLIB_profile_stop();                                           
; 130 |         memset(H_cn, 0, outSize * sizeof(uint16_t));                   
; 131 |         memset(H1, 0, outSize * sizeof(uint16_t));                     
; 132 |         memset(scrap, 0, prm[tpi].numX * sizeof(uint16_t));            
; 135 |         VLIB_profile_start(vlib_KERNEL_CN);                            
; 136 |         VLIB_histogram_nD_U16_cn(X, prm[tpi].numX, prm[tpi].dimX, prm[t
;     | pi].binWeight, numBins, normVals, scrap, H1, H_cn);                    
; 137 |         VLIB_profile_stop();                                           
; 141 |         status_nat_vs_int = VLIB_compare_mem((void *) H, (void *)H_cn,
;     | outSize * sizeof(uint16_t));                                           
; 144 |         if( prm[tpi].staticOut != NULL ) {                             
; 145 |             status_nat_vs_ref = VLIB_compare_mem((void *) prm[tpi].stat
;     | icOut, (void *)H_cn, outSize * sizeof(uint16_t));                      
; 149 |         fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_
;     | vs_ref == vlib_KERNEL_FAIL)) ? 1 : 0;                                  
; 151 |         est_test=1;                                                    
; 154 |         sprintf(desc, "%s generated input | Opt results compared to Nat
;     | C results | numX=%d, dimX=%d, maxSize=%d, outsize=%d",                 
; 155 |                 testPatternString, prm[tpi].numX, prm[tpi].dimX, prm[tp
;     | i].maxSize, outSize);                                                  
; 156 |         VLIB_formula_add_test(inSize, prm[tpi].numX, outSize, fail, des
;     | c, NULL);                                                              
; 157 |     } else {                                                           
; 159 |         sprintf(desc, "numX=%d, dimX=%d, maxSize=%d, outsize=%d",      
; 160 |                 prm[tpi].numX, prm[tpi].dimX, prm[tpi].maxSize, outSize
;     | );                                                                     
; 161 |         VLIB_skip_test(desc);                                          
; 163 | } else {                                                               
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(36),A2       ; |70| 
           LDW     .D2T2   *+SP(44),B0       ; |70| 

           STW     .D2T1   A4,*+SP(48)       ; |64| 
||         ZERO    .L1     A4                ; |70| 

           LDW     .D2T1   *+SP(48),A1       ; |70| 
   [ A0]   MVK     .L1     0x1,A4            ; |70| 
   [ A2]   MVK     .L2     0x1,B4            ; |70| 

   [ B0]   MVK     .L1     0x1,A3            ; |70| 
||         AND     .L2X    A4,B4,B5          ; |70| 

           ZERO    .L2     B4                ; |70| 

   [ A1]   MVK     .L2     0x1,B4            ; |70| 
||         AND     .S2X    A3,B5,B5          ; |70| 

           AND     .L2     B4,B5,B0          ; |70| 

   [!B0]   B       .S1     $C$L16            ; |70| 
|| [ B0]   LDW     .D2T2   *+B12(24),B4      ; |75| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 165,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 165 | sprintf(desc, "numX=%d, dimX=%d, maxSize=%d",                          
; 166 |         prm[tpi].numX, prm[tpi].dimX, prm[tpi].maxSize);               
; 167 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!B0]   LDW     .D2T2   *+B12(24),B5      ; |165| 
   [!B0]   LDW     .D2T2   *+B12(20),B6      ; |165| 
$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$145, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$145, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |75| 
|| [ B0]   LDW     .D2T2   *+B12(8),B6       ; |75| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 75,column 13,is_stmt,isa 0
   [ B0]   LDW     .D2T1   *+SP(40),A6       ; |75| 
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("sprintf")
	.dwattr $C$DW$146, DW_AT_TI_call

   [!B0]   CALL    .S1     sprintf           ; |165| 
||         EXTU    .S2     B4,16,16,B7       ; |75| 
|| [!B0]   LDW     .D2T2   *+B12(32),B4      ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 70,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |70| 
$C$DW$L$VLIB_histogram_nD_U16_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$7$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 75	-----------------------    C$15 = (*U$12).dimX;
;** 75	-----------------------    VLIB_fillBuffer(4u, 1u, (void *)numBins, (*U$12).numBins, (unsigned short)C$15, 1u, (unsigned short)(C$15*2), 2u, K$40);
;** 81	-----------------------    v$1 = prm;
;** 55	-----------------------    status_nat_vs_ref = 1;
;** 81	-----------------------    if ( (*U$12).normVals ) goto g8;

           EXTU    .S2     B4,17,16,B5       ; |75| 
||         MVKL    .S1     testPatternString,A12

           MVK     .L2     0x1,B4            ; |75| 
||         MV      .L1X    B7,A8             ; |75| 
||         MVKH    .S1     testPatternString,A12

           MV      .L1X    B5,A10            ; |75| 
||         MV      .L2     B4,B8             ; |75| 
||         ADDKPC  .S2     $C$RL6,B3,0       ; |75| 
||         MVK     .D2     0x2,B10           ; |75| 
||         MVK     .S1     0x4,A4            ; |75| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 75,column 13,is_stmt,isa 0
$C$RL6:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |75| 
$C$DW$L$VLIB_histogram_nD_U16_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$8$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 81,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B12(12),B0      ; |81| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 55,column 20,is_stmt,isa 0
           MVK     .L1     0x1,A3            ; |55| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 81,column 13,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(32)       ; |81| 
           LDW     .D2T2   *+SP(28),B6       ; |81| 
           NOP             1

   [ B0]   BNOP    .S1     $C$L3,3           ; |81| 
|| [!B0]   LDW     .D2T2   *+B12(24),B4      ; |88| 
||         MV      .L2     B0,B2             ; branch predicate copy

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 82,column 17,is_stmt,isa 0
   [ B2]   ADD     .L2     B6,B13,B5         ; |82| 

           CMPGT   .L2     B4,0,B0           ; |88| 
|| [ B2]   LDW     .D2T2   *+B5(24),B4       ; |82| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 81,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |81| 
$C$DW$L$VLIB_histogram_nD_U16_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$9$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 88	-----------------------    if ( (C$14 = (*U$12).dimX) <= 0 ) goto g9;

   [!B0]   BNOP    .S1     $C$L4,4           ; |88| 
|| [ B0]   ZERO    .L1     A7
|| [ B0]   MV      .D1X    B4,A5             ; |90| 
|| [ B0]   LDW     .D2T1   *+SP(44),A3       ; |90| 
|| [ B0]   ADD     .L2     B6,B13,B7

   [ B0]   SET     .S1     A7,0x10,0x10,A7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 88,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |88| 
$C$DW$L$VLIB_histogram_nD_U16_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$10$B:
;**  	-----------------------    K$55 = 65536;
;**  	-----------------------    U$56 = U$11+v$1;
;**  	-----------------------    U$61 = normVals;
;** 90	-----------------------    L$1 = C$14;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
$C$DW$L$VLIB_histogram_nD_U16_d$10$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 90,column 21,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$11$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g7:
;** 90	-----------------------    *U$61++ = K$55/(*U$56).maxSize;
;** 88	-----------------------    if ( L$1 = L$1-1 ) goto g7;
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("__c6xabi_divi")
	.dwattr $C$DW$147, DW_AT_TI_call
           CALL    .S1     __c6xabi_divi     ; |90| 
           LDW     .D2T2   *+B7(32),B4       ; |90| 
           ADDKPC  .S2     $C$RL7,B3,2       ; |90| 
           MV      .L1     A7,A4             ; |90| 
$C$RL7:    ; CALL OCCURS {__c6xabi_divi} {0}  ; |90| 
$C$DW$L$VLIB_histogram_nD_U16_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$12$B:
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1     A5,1,A0           ; |88| 
||         STH     .D1T1   A4,*A3++          ; |90| 
||         SUB     .S1     A5,1,A5           ; |88| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 88,column 27,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L2,5           ; |88| 
           ; BRANCHCC OCCURS {$C$L2}         ; |88| 
$C$DW$L$VLIB_histogram_nD_U16_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$13$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 88	-----------------------    goto g9;

           B       .S1     $C$L5             ; |88| 
||         ADD     .L2     B6,B13,B4         ; |94| 
||         LDW     .D2T1   *+SP(36),A6       ; |94| 

$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$148, DW_AT_TI_call

           CALL    .S1     VLIB_fillBuffer   ; |94| 
||         LDBU    .D2T2   *B4,B5            ; |94| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 94,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B4(4),B6        ; |94| 
           EXTU    .S1     A15,16,16,A8      ; |94| 
           MVK     .L2     0x1,B8            ; |94| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 88,column 27,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L5}           ; |88| 
$C$DW$L$VLIB_histogram_nD_U16_d$13$E:
;** --------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 81,column 13,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$14$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g8:
;** 82	-----------------------    C$12 = U$11+v$1;
;** 82	-----------------------    C$13 = (*C$12).dimX;
;** 82	-----------------------    VLIB_fillBuffer(4u, 1u, (void *)normVals, (*C$12).normVals, (unsigned short)C$13, 1u, (unsigned short)(C$13*2), 2u, K$40);
;** 87	-----------------------    v$1 = prm;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 82,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B5(12),B6       ; |82| 
           LDW     .D2T1   *+SP(44),A6       ; |82| 
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$149, DW_AT_TI_call
           CALL    .S1     VLIB_fillBuffer   ; |82| 
           MV      .L2X    A3,B8             ; |82| 
           EXTU    .S2     B4,17,16,B7       ; |82| 
           EXTU    .S2     B4,16,16,B5       ; |82| 
           MV      .L1X    B7,A10            ; |82| 

           MV      .L1X    B5,A8             ; |82| 
||         MV      .L2X    A3,B4             ; |82| 
||         ADDKPC  .S2     $C$RL8,B3,0       ; |82| 
||         MVK     .S1     0x4,A4            ; |82| 

$C$RL8:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |82| 
$C$DW$L$VLIB_histogram_nD_U16_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$15$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 87,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(28),B6       ; |87| 
$C$DW$L$VLIB_histogram_nD_U16_d$15$E:
;** --------------------------------------------------------------------------*
$C$L4:    
$C$DW$L$VLIB_histogram_nD_U16_d$16$B:
;          EXCLUSIVE CPU CYCLES: 10
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 94,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(36),A6       ; |94| 
           EXTU    .S1     A15,16,16,A8      ; |94| 
           MVK     .L2     0x1,B8            ; |94| 
           NOP             1
           ADD     .L2     B6,B13,B4         ; |94| 
$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x04)
	.dwattr $C$DW$150, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$150, DW_AT_TI_call

           LDBU    .D2T2   *B4,B5            ; |94| 
||         CALL    .S1     VLIB_fillBuffer   ; |94| 

           LDW     .D2T2   *+B4(4),B6        ; |94| 
           NOP             3
$C$DW$L$VLIB_histogram_nD_U16_d$16$E:
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 88,column 27,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$17$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g9:
;** 94	-----------------------    C$11 = U$11+v$1;
;** 94	-----------------------    VLIB_fillBuffer((*C$11).testPattern, 1u, (void *)X, (*C$11).staticIn, (unsigned short)inSize, 1u, (unsigned short)(inSize*2), 2u, K$40);
;** 101	-----------------------    v$1 = prm;
;**  	-----------------------    U$56 = U$11+v$1;
;**  	-----------------------    U$68 = (v$1[tpi]).dimX;
;**  	-----------------------    U$11 = _lo(_mpyli(36, tpi));
;**  	-----------------------    if ( (U$81 = (*(U$11+v$1)).numX*U$68) <= 0 ) goto g14;

           EXTU    .S1     A15,17,16,A10     ; |94| 
||         ADDKPC  .S2     $C$RL9,B3,0       ; |94| 
||         MV      .L2     B8,B4             ; |94| 
||         MV      .L1X    B5,A4             ; |94| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 94,column 13,is_stmt,isa 0
$C$RL9:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |94| 
$C$DW$L$VLIB_histogram_nD_U16_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$18$B:
;          EXCLUSIVE CPU CYCLES: 23

           MVK     .S1     36,A3
||         LDW     .D2T2   *+SP(28),B6       ; |101| 

           MPYLI   .M1     A3,A13,A5:A4
           SHL     .S1     A13,5,A31
           ADDAW   .D1     A31,A13,A3
           LDW     .D2T1   *+SP(36),A23
           ADD     .L1X    B6,A3,A3

           ADD     .L2X    B6,A4,B5
||         LDW     .D1T2   *+A3(24),B4

           LDW     .D2T2   *+B5(20),B5
           ADD     .L2     B6,B13,B7
           MV      .L2X    A4,B13
           NOP             2
           MPY32   .M2     B4,B5,B5
           NOP             3
           CMPGT   .L2     B5,0,B0

   [ B0]   MVK     .S1     36,A17
|| [ B0]   MV      .L1     A13,A24
|| [ B0]   MVK     .L2     0x1,B2
|| [!B0]   B       .S2     $C$L9

   [ B0]   MV      .L1X    B7,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 102,column 17,is_stmt,isa 0
   [ B0]   LDW     .D1T1   *+A4(32),A19      ; |102| (P) <0,0>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 101,column 18,is_stmt,isa 0
   [ B0]   ZERO    .L1     A22               ; |101| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 102,column 17,is_stmt,isa 0
   [ B0]   LDHU    .D1T1   *+A23[A22],A18    ; |102| (P) <0,1> 
   [ B0]   MPYLI   .M1     A17,A24,A5:A4     ; (P) <0,4> 
           ; BRANCHCC OCCURS {$C$L9}  
$C$DW$L$VLIB_histogram_nD_U16_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$19$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 101	-----------------------    i = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g11:
;** 102	-----------------------    C$10 = (*U$56).maxSize-1;
;** 102	-----------------------    if ( X[i] <= C$10 ) goto g13;
;** 103	-----------------------    X[i] = C$10;
;**  	-----------------------    U$68 = (v$1[tpi]).dimX;
;**  	-----------------------    U$11 = _lo(_mpyli(36, tpi));
;**  	-----------------------    U$56 = U$11+v$1;
;**  	-----------------------    U$81 = (*U$56).numX*U$68;
;**	-----------------------g13:
;** 101	-----------------------    if ( (++i) < U$81 ) goto g11;

           MV      .L2     B2,B0
||         MV      .L1X    B7,A21
||         MV      .S2     B2,B1
||         ZERO    .S1     A3                ; |101| 

           MV      .L1X    B6,A20
||         SUB     .S1     A19,1,A7          ; |102| (P) <0,5>  ^ 

           MV      .L1X    B4,A25
           MV      .L1X    B5,A26
           MV      .L1X    B13,A27
$C$DW$L$VLIB_histogram_nD_U16_d$19$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c
;*      Loop source line                 : 101
;*      Loop opening brace source line   : 101
;*      Loop closing brace source line   : 105
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 21
;*      Unpartitioned Resource Bound     : 5
;*      Partitioned Resource Bound(*)    : 7
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     2        0     
;*      .S units                     1        1     
;*      .D units                     6        0     
;*      .M units                     2        0     
;*      .X cross paths               0        0     
;*      .T address paths             5        0     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)         11        4     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             2        1     
;*      Bound(.L .S .D .LS .LSD)     7*       2     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 21 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   *** ***      ************    |***                             |
;*       1: |*  *** ***      ************    |***                             |
;*       2: |*  *******      ************    |***                             |
;*       3: |*  **  ***      ************    |***                             |
;*       4: |*  **  ***      ************    |* *                             |
;*       5: |*  *   ***      ************    |* *                             |
;*       6: |*       **      ************    |* *                             |
;*       7: |*       **      ************    |* *                             |
;*       8: |*       **      ************    |* *                             |
;*       9: |*       **      ************    |* *                             |
;*      10: |        **      ************    |  *                             |
;*      11: |        **      ************    |  *                             |
;*      12: |        **      ************    |  *                             |
;*      13: |        **      ************    |  *                             |
;*      14: |*  *    **      ************    |  *                             |
;*      15: |    *   **      ************    |  *                             |
;*      16: |        **      ************    |  *                             |
;*      17: |        **      ************    |  *                             |
;*      18: |        **      ************    |  *                             |
;*      19: |        **      ************    |  * *                           |
;*      20: |    **  **      ************    | **                             |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop is interruptible
;*      Collapsed epilog stages       : 1
;*      Prolog not removed
;*      Collapsed prolog stages       : 0
;*
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 6 + trip_cnt * 21        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,B2
;*                  MV              A22,A3
;*                  MV              A21,A4
;*                  MV              B2,B1
;*                  MV              B1,B0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C128:
;*   0      [ B2]   LDW     .D1T1   *+A4(32),A19      ; |102|  ^ 
;*   1      [ B2]   LDHU    .D1T1   *+A23[A22],A18    ; |102| 
;*   2              NOP             2
;*   4              MPYLI   .M1     A17,A24,A5:A4
;*   5              SUB     .S1     A19,1,A7          ; |102|  ^ 
;*   6              CMPGT   .L1     A18,A7,A0         ; |102|  ^ 
;*   7      [!B1]   ZERO    .L1     A0                ;  ^ 
;*     ||           SHL     .S1     A24,5,A6
;*   8      [ A0]   ADDAW   .D1     A6,A24,A4         ;  ^ 
;*     ||   [ A0]   MV      .L1     A4,A27
;*     ||   [ A0]   ADD     .S1     A20,A4,A21
;*   9      [ A0]   ADD     .S1     A20,A4,A4         ;  ^ 
;*     ||   [ A0]   LDW     .D1T1   *+A21(20),A16
;*     ||   [ B1]   MV      .L1     A27,A9            ; |101| 
;*  10      [ A0]   LDW     .D1T1   *+A4(24),A25      ;  ^ 
;*  11      [ A0]   STH     .D1T1   A7,*+A23[A3]      ; |103| 
;*  12              NOP             3
;*  15      [ A0]   MPY32   .M1     A25,A16,A26       ;  ^ 
;*     ||   [ B0]   MV      .L1     A25,A8            ; |101| 
;*  16              NOP             2
;*  18              ADD     .L1     1,A22,A22         ; |101| 
;*  19              MV      .S1     A21,A3            ; Split a long life(pre-sched)
;*     ||           CMPLT   .L1     A22,A26,A0        ; |101|  ^ 
;*  20              MV      .L1     A3,A4             ; Split a long life(pre-sched)
;*     ||   [!A0]   ZERO    .L2     B2                ; |101|  ^ 
;*  21      [ B2]   B       .S2     $C$C128           ; |101| 
;*  22              NOP             2
;*  24              MV      .L2     B2,B4             ; |101| Split a long life(pre-sched)
;*  25              MV      .L2     B4,B1             ; |101| Split a long life(pre-sched)
;*  26              MV      .L1     A22,A3            ; |101| Split a long life(pre-sched)
;*     ||           MV      .L2     B1,B0             ; |101| Split a long life(pre-sched)
;*  27              ; BRANCHCC OCCURS {$C$C128}       ; |101| 
;*
;*       RESTORE CODE
;*
;*                  MV              A8,A25
;*                  MV              A9,A27
;*----------------------------------------------------------------------------*
$C$L6:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L7:    ; PIPED LOOP KERNEL
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 101,column 18,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$21$B:
;          EXCLUSIVE CPU CYCLES: 21
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 102,column 17,is_stmt,isa 0
           CMPGT   .L1     A18,A7,A0         ; |102| <0,6>  ^ 

           SHL     .S1     A24,5,A6          ; <0,7> 
|| [!B1]   ZERO    .L1     A0                ; <0,7>  ^ 

   [ A0]   MV      .L1     A4,A27            ; <0,8> 
|| [ A0]   ADDAW   .D1     A6,A24,A4         ; <0,8>  ^ 
|| [ A0]   ADD     .S1     A20,A4,A21        ; <0,8> 

   [ B1]   MV      .L1     A27,A9            ; |101| <0,9> 
|| [ A0]   ADD     .S1     A20,A4,A4         ; <0,9>  ^ 
|| [ A0]   LDW     .D1T1   *+A21(20),A16     ; <0,9> 

   [ A0]   LDW     .D1T1   *+A4(24),A25      ; <0,10>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 103,column 21,is_stmt,isa 0
   [ A0]   STH     .D1T1   A7,*+A23[A3]      ; |103| <0,11> 
           NOP             3

   [ B0]   MV      .L1     A25,A8            ; |101| <0,15> 
|| [ A0]   MPY32   .M1     A25,A16,A26       ; <0,15>  ^ 

           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 101,column 23,is_stmt,isa 0
           ADD     .L1     1,A22,A22         ; |101| <0,18> 

           MV      .S1     A21,A3            ; <0,19> Split a long life(pre-sched)
||         CMPLT   .L1     A22,A26,A0        ; |101| <0,19>  ^ 

           MV      .L1     A3,A4             ; <0,20> Split a long life(pre-sched)
|| [!A0]   ZERO    .L2     B2                ; |101| <0,20>  ^ 

   [ B2]   B       .S2     $C$L7             ; |101| <0,21> 
|| [ B2]   LDW     .D1T1   *+A4(32),A19      ; |102| <1,0>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 102,column 17,is_stmt,isa 0
   [ B2]   LDHU    .D1T1   *+A23[A22],A18    ; |102| <1,1> 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 101,column 23,is_stmt,isa 0
           MV      .L2     B2,B4             ; |101| <0,24> Split a long life(pre-sched)

           MV      .L2     B4,B1             ; |101| <0,25> Split a long life(pre-sched)
||         MPYLI   .M1     A17,A24,A5:A4     ; <1,4> 

           MV      .L1     A22,A3            ; |101| <0,26> Split a long life(pre-sched)
||         MV      .L2     B1,B0             ; |101| <0,26> Split a long life(pre-sched)
||         SUB     .S1     A19,1,A7          ; |102| <1,5>  ^ 

$C$DW$L$VLIB_histogram_nD_U16_d$21$E:
;** --------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$23$B:
;          EXCLUSIVE CPU CYCLES: 2
           MV      .L2X    A9,B13

           MV      .L2X    A8,B4
||         STW     .D2T1   A23,*+SP(36)
||         MV      .L1     A24,A13

$C$DW$L$VLIB_histogram_nD_U16_d$23$E:
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_histogram_nD_U16_d$24$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g14:
;** 107	-----------------------    outSize = 1;
;** 109	-----------------------    if ( U$68 <= 0 ) goto g17;

           CMPGT   .L2     B4,0,B0           ; |109| 
||         MVK     .L1     0x1,A14           ; |107| 

   [!B0]   BNOP    .S1     $C$L13,5          ; |109| 
|| [ B0]   LDW     .D2T1   *+SP(40),A5       ; |110| 
|| [ B0]   SUB     .L2     B4,1,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 109,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |109| 
$C$DW$L$VLIB_histogram_nD_U16_d$24$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 110,column 17,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$25$B:
;**  	-----------------------    U$88 = numBins;
;** 110	-----------------------    L$2 = U$68;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g16:
;** 110	-----------------------    outSize *= *U$88++;
;** 109	-----------------------    if ( L$2 = L$2-1 ) goto g16;
$C$DW$L$VLIB_histogram_nD_U16_d$25$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c
;*      Loop source line                 : 109
;*      Loop opening brace source line   : 109
;*      Loop closing brace source line   : 111
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 4
;*      Unpartitioned Resource Bound     : 1
;*      Partitioned Resource Bound(*)    : 1
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     0        0     
;*      .S units                     0        0     
;*      .D units                     1*       0     
;*      .M units                     1*       0     
;*      .X cross paths               0        0     
;*      .T address paths             1*       0     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          0        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             0        0     
;*      Bound(.L .S .D .LS .LSD)     1*       0     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    **                          |                                |
;*       1: |   ***                          |                                |
;*       2: |    **                          |                                |
;*       3: |    **                          |                                |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 4 + trip_cnt * 4        
;*----------------------------------------------------------------------------*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C58:
;*   0              LDHU    .D1T1   *A5++,A3          ; |110| 
;*   1              NOP             4
;*   5              MPY32   .M1     A3,A4,A4          ; |110|  ^ 
;*     ||           SPBR            $C$C58
;*   6              NOP             2
;*   8              ; BRANCHCC OCCURS {$C$C58}        ; |109| 
;*----------------------------------------------------------------------------*
$C$L10:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 5

           SPLOOPD 4       ;8                ; (P) 
||         MVC     .S2     B4,ILC

;** --------------------------------------------------------------------------*
$C$L11:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_histogram_nD_U16_d$27$B:
;          EXCLUSIVE CPU CYCLES: 4
           LDHU    .D1T1   *A5++,A3          ; |110| (P) <0,0> 
           NOP             2

           SPMASK          L1
||         MV      .L1     A14,A4

           NOP             1

           SPKERNEL 0,0
||         MPY32   .M1     A3,A4,A4          ; |110| <0,5>  ^ 

$C$DW$L$VLIB_histogram_nD_U16_d$27$E:
;** --------------------------------------------------------------------------*
$C$L12:    ; PIPED LOOP EPILOG
;          EXCLUSIVE CPU CYCLES: 2
           NOP             2
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$29$B:
;          EXCLUSIVE CPU CYCLES: 4
           NOP             3
           MV      .L1     A4,A14
$C$DW$L$VLIB_histogram_nD_U16_d$29$E:
;** --------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 109,column 23,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$30$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g17:
;** 113	-----------------------    C$6 = outSize*2;
;** 113	-----------------------    H = VLIB_malloc((unsigned)C$6);
;** 114	-----------------------    H_cn = malloc((unsigned)C$6);
;** 115	-----------------------    H1 = VLIB_malloc((unsigned)C$6);
;** 117	-----------------------    v$1 = prm;
;** 117	-----------------------    if ( !((H != NULL)&(H_cn != NULL)&(H1 != NULL)) ) goto g21;
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$151, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         ADD     .L1     A14,A14,A4        ; |113| 
||         ADD     .S1     A14,A14,A11       ; |113| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 113,column 13,is_stmt,isa 0
$C$RL10:   ; CALL OCCURS {VLIB_malloc} {0}   ; |113| 
$C$DW$L$VLIB_histogram_nD_U16_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$31$B:
;          EXCLUSIVE CPU CYCLES: 12
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("malloc")
	.dwattr $C$DW$152, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(52)       ; |113| 
||         MV      .L1     A11,A4            ; |114| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 114,column 13,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {malloc} {0}        ; |114| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(56)       ; |114| 
||         MV      .L1     A11,A4            ; |115| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 115,column 13,is_stmt,isa 0
$C$RL12:   ; CALL OCCURS {VLIB_malloc} {0}   ; |115| 
$C$DW$L$VLIB_histogram_nD_U16_d$31$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$32$B:
;          EXCLUSIVE CPU CYCLES: 15

           LDW     .D2T2   *+SP(56),B0       ; |117| 
||         ZERO    .L2     B5                ; |117| 
||         ZERO    .S2     B4                ; |117| 
||         ZERO    .L1     A3                ; |117| 
||         MV      .S1     A4,A1             ; |117| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 117,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(52),A0       ; |117| 
   [ A1]   MVK     .L1     0x1,A3            ; |117| 
           LDW     .D2T2   *+SP(28),B11      ; |117| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 115,column 13,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(60)       ; |115| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 117,column 13,is_stmt,isa 0
   [ B0]   MVK     .L2     0x1,B4            ; |117| 
   [ A0]   MVK     .L2     0x1,B5            ; |117| 
           AND     .L2     B4,B5,B4          ; |117| 
           AND     .L2X    A3,B4,B0          ; |117| 

   [!B0]   B       .S1     $C$L15            ; |117| 
|| [!B0]   ADD     .L2     B11,B13,B4        ; |159| 
|| [!B0]   MVKL    .S2     $C$SL3+0,B7

$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("memset")
	.dwattr $C$DW$154, DW_AT_TI_call

   [ B0]   CALL    .S1     memset            ; |120| 
|| [!B0]   LDW     .D2T2   *+B4(24),B5       ; |159| 
|| [!B0]   MVKH    .S2     $C$SL3+0,B7

   [!B0]   MVKL    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 159,column 17,is_stmt,isa 0
   [!B0]   LDW     .D2T2   *+B4(32),B6       ; |159| 
   [!B0]   LDW     .D2T2   *+B4(20),B4       ; |159| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("sprintf")
	.dwattr $C$DW$155, DW_AT_TI_call
   [!B0]   CALL    .S1     sprintf           ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 117,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |117| 
$C$DW$L$VLIB_histogram_nD_U16_d$32$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$33$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 120	-----------------------    memset((void *)H, 0, (unsigned)C$6);
;** 121	-----------------------    memset((void *)H1, 0, (unsigned)C$6);
;** 122	-----------------------    memset((void *)scrap, 0, (unsigned)((*U$12).numX*2));
;** 137	-----------------------    act_kernel = 0;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 126	-----------------------    VLIB_histogram_nD_U16(X, (*U$12).numX, (*U$12).dimX, (*U$12).binWeight, numBins, normVals, scrap, H1, H);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$9 = act_kernel;  // [16]
;** 156	-----------------------    C$8 = &cycles[0];  // [16]
;** 156	-----------------------    *((C$9<<3)+C$8) = *((C$9<<3)+C$8)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 130	-----------------------    memset((void *)H_cn, 0, (unsigned)C$6);
;** 131	-----------------------    memset((void *)H1, 0, (unsigned)C$6);
;** 132	-----------------------    memset((void *)scrap, 0, (unsigned)((*U$12).numX*2));

           MV      .L1     A11,A6            ; |120| 
||         ZERO    .L2     B4                ; |120| 
||         MV      .S1     A0,A4             ; |120| 
||         ADDKPC  .S2     $C$RL13,B3,0      ; |120| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 120,column 17,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {memset} {0}        ; |120| 
$C$DW$L$VLIB_histogram_nD_U16_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$34$B:
;          EXCLUSIVE CPU CYCLES: 104
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("memset")
	.dwattr $C$DW$156, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(60),A4       ; |121| 
||         ZERO    .L2     B4                ; |121| 
||         MV      .L1     A11,A6            ; |121| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 121,column 17,is_stmt,isa 0
$C$RL14:   ; CALL OCCURS {memset} {0}        ; |121| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 122,column 17,is_stmt,isa 0
           LDW     .D2T1   *+B12(20),A3      ; |122| 
           LDW     .D2T1   *+SP(48),A4       ; |122| 
           ZERO    .L2     B4                ; |122| 
           NOP             2
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("memset")
	.dwattr $C$DW$157, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         ADD     .L1     A3,A3,A6          ; |122| 

$C$RL15:   ; CALL OCCURS {memset} {0}        ; |122| 
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         ZERO    .L1     A4                ; |137| 

$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("getSP")
	.dwattr $C$DW$159, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL17:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("initStack")
	.dwattr $C$DW$160, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL18:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |146| 
           MVC     .S2     TSCH,B9           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 126,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(36),A4       ; |126| 
           LDW     .D2T1   *+B12(24),A6      ; |126| 
           LDW     .D2T2   *+B12(20),B4      ; |126| 
           LDHU    .D2T2   *+B12(28),B6      ; |126| 
           LDW     .D2T1   *+SP(52),A12      ; |126| 
           LDW     .D2T2   *+SP(60),B10      ; |126| 

           MVKL    .S2     beg_count,B5
||         LDW     .D2T1   *+SP(48),A10      ; |126| 

           MVKH    .S2     beg_count,B5
||         LDW     .D2T1   *+SP(40),A8       ; |126| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           STDW    .D2T2   B9:B8,*B5         ; |146| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_histogram_nD_U16")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     VLIB_histogram_nD_U16,B3
||         LDW     .D2T2   *+SP(44),B8       ; |126| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 126,column 17,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {VLIB_histogram_nD_U16} {0}  ; |126| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S2     overhead,B4

           MVKL    .S1     act_kernel,A10
||         MVKL    .S2     beg_count,B10

           MVKH    .S1     act_kernel,A10
||         MVKH    .S2     beg_count,B10

           LDW     .D1T1   *A10,A8           ; |156| 
||         MVKH    .S2     overhead,B4
||         LDDW    .D2T2   *B10,B9:B8        ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D2T2   *B4,B17:B16       ; |156| 
           MVKL    .S1     cycles,A3
           MVKH    .S1     cycles,A3
           NOP             1
           LDDW    .D1T1   *+A3[A8],A7:A6    ; |156| 
           ADDU    .L2     B16,B8,B5:B4      ; |156| 
           ADD     .L2     B5,B17,B8         ; |156| 

           ADD     .S2     B8,B9,B8          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           SUB     .L2     B7,B8,B31         ; |156| 
||         EXT     .S2     B5,24,24,B5       ; |156| 

           ADDU    .L1X    A6,B4,A5:A4       ; |156| 
||         ADD     .L2     B31,B5,B4         ; |156| 

           ADD     .L1     A5,A7,A3          ; |156| 

           ADD     .L1X    A3,B4,A5          ; |156| 
||         MVKL    .S2     end_count,B4
||         MVKL    .S1     cycles,A3

           MVKH    .S2     end_count,B4
||         MVKH    .S1     cycles,A3

$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("setStackDepth")
	.dwattr $C$DW$162, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D2T2   B7:B6,*B4         ; |153| 
||         STDW    .D1T1   A5:A4,*+A3[A8]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("memset")
	.dwattr $C$DW$163, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(56),A4       ; |130| 
||         ZERO    .L2     B4                ; |130| 
||         MV      .L1     A11,A6            ; |130| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 130,column 17,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {memset} {0}        ; |130| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("memset")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(60),A4       ; |131| 
||         ZERO    .L2     B4                ; |131| 
||         MV      .L1     A11,A6            ; |131| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 131,column 17,is_stmt,isa 0
$C$RL22:   ; CALL OCCURS {memset} {0}        ; |131| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 132,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B12(20),B4      ; |132| 
           LDW     .D2T1   *+SP(48),A4       ; |132| 
           NOP             3
           ADD     .L2     B4,B4,B5          ; |132| 
           ZERO    .L2     B4                ; |132| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("memset")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         MV      .L1X    B5,A6             ; |132| 

$C$RL23:   ; CALL OCCURS {memset} {0}        ; |132| 
$C$DW$L$VLIB_histogram_nD_U16_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$35$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 137	-----------------------    act_kernel = 1;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 136	-----------------------    VLIB_histogram_nD_U16_cn(X, (*U$12).numX, (*U$12).dimX, (*U$12).binWeight, numBins, normVals, scrap, H1, H_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$7 = (act_kernel<<3)+C$8;  // [16]
;** 156	-----------------------    *C$7 = *C$7+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 141	-----------------------    status_nat_vs_int = VLIB_compare_mem((void *)H, (void *)H_cn, C$6);
;** 144	-----------------------    v$1 = v$1;
;** 144	-----------------------    C$5 = (*U$12).staticOut;
;** 144	-----------------------    if ( C$5 == NULL ) goto g20;

           MVK     .L1     1,A4              ; |137| 
||         MV      .S1     A10,A3            ; |137| 

$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$166, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL24:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_histogram_nD_U16_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$36$B:
;          EXCLUSIVE CPU CYCLES: 63
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("getSP")
	.dwattr $C$DW$167, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL25:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("initStack")
	.dwattr $C$DW$168, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL26:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |146| 
           MVC     .S2     TSCH,B9           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 136,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(36),A4       ; |136| 
           LDHU    .D2T2   *+B12(28),B6      ; |136| 
           LDW     .D2T1   *+B12(24),A6      ; |136| 
           LDW     .D2T2   *+B12(20),B4      ; |136| 
           LDW     .D2T1   *+SP(56),A12      ; |136| 
           LDW     .D2T1   *+SP(40),A8       ; |136| 

           MV      .L2     B10,B5            ; |136| 
||         LDW     .D2T1   *+SP(48),A10      ; |136| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           STDW    .D2T2   B9:B8,*B5         ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 136,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(60),B10      ; |136| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("VLIB_histogram_nD_U16_cn")
	.dwattr $C$DW$169, DW_AT_TI_call

           CALLP   .S2     VLIB_histogram_nD_U16_cn,B3
||         LDW     .D2T2   *+SP(44),B8       ; |136| 

$C$RL27:   ; CALL OCCURS {VLIB_histogram_nD_U16_cn} {0}  ; |136| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |153| 
           MVC     .S2     TSCH,B5           ; |153| 
           MVKL    .S1     beg_count,A4
           MVKL    .S1     act_kernel,A31
           MVKL    .S1     overhead,A3
           MVKH    .S1     beg_count,A4
           MVKH    .S1     act_kernel,A31
           MVKH    .S1     overhead,A3

           MV      .L2X    A4,B8
||         LDW     .D1T1   *A31,A4           ; |156| 

           MV      .L2X    A3,B6             ; |156| 
||         LDDW    .D2T2   *B8,B9:B8         ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D2T2   *B6,B7:B6         ; |156| 
           MVKL    .S1     cycles,A30
           MVKH    .S1     cycles,A30
           ADDAD   .D1     A30,A4,A8         ; |156| 
           LDDW    .D1T1   *A8,A7:A6         ; |156| 
           ADDU    .L2     B6,B8,B17:B16     ; |156| 

           ADD     .S2     B17,B7,B16        ; |156| 
||         SUBU    .L2     B4,B16,B7:B6      ; |156| 

           ADD     .L2     B16,B9,B9         ; |156| 
||         MVKL    .S1     end_count,A3

           SUB     .L2     B5,B9,B31         ; |156| 
||         EXT     .S2     B7,24,24,B7       ; |156| 
||         MVKH    .S1     end_count,A3

           ADDU    .L1X    A6,B6,A5:A4       ; |156| 
||         ADD     .L2     B31,B7,B6         ; |156| 

           MV      .L2X    A3,B8
||         ADD     .L1     A5,A7,A3          ; |156| 

           ADD     .L1X    A3,B6,A5          ; |156| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("setStackDepth")
	.dwattr $C$DW$170, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*A8         ; |156| 
||         STDW    .D2T2   B5:B4,*B8         ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$171, DW_AT_TI_call

           CALLP   .S2     VLIB_compare_mem,B3
||         LDW     .D2T1   *+SP(52),A4       ; |141| 
||         MV      .L2X    A12,B4            ; |141| 
||         MV      .L1     A11,A6            ; |141| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 141,column 17,is_stmt,isa 0
$C$RL29:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |141| 
$C$DW$L$VLIB_histogram_nD_U16_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$37$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 144,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B12(16),B0      ; |144| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 141,column 17,is_stmt,isa 0
           MV      .L1     A4,A10            ; |141| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 144,column 17,is_stmt,isa 0
   [!B0]   B       .S1     $C$L14            ; |144| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 145,column 21,is_stmt,isa 0
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$172, DW_AT_TI_call
   [ B0]   CALL    .S1     VLIB_compare_mem  ; |145| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 144,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |144| 
$C$DW$L$VLIB_histogram_nD_U16_d$37$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$38$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 145	-----------------------    status_nat_vs_ref = VLIB_compare_mem((void *)C$5, (void *)H_cn, C$6);

           MV      .L1     A11,A6            ; |145| 
||         MV      .L2X    A12,B4            ; |145| 
||         MV      .S1X    B0,A4             ; |145| 
||         ADDKPC  .S2     $C$RL30,B3,0      ; |145| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 145,column 21,is_stmt,isa 0
$C$RL30:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |145| 
$C$DW$L$VLIB_histogram_nD_U16_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$39$B:
;          EXCLUSIVE CPU CYCLES: 1
           STW     .D2T1   A4,*+SP(32)       ; |145| 
$C$DW$L$VLIB_histogram_nD_U16_d$39$E:
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 144,column 17,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$40$B:
;          EXCLUSIVE CPU CYCLES: 15
;**	-----------------------g20:
;** 151	-----------------------    est_test = 1;
;** 154	-----------------------    C$4 = U$11+v$1;
;** 154	-----------------------    sprintf(K$130, (const char *)"%s generated input | Opt results compared to NatC results | numX=%d, dimX=%d, maxSize=%d, outsize=%d", K$40, (*C$4).numX, (*C$4).dimX, (*C$4).maxSize, outSize);
;** 156	-----------------------    VLIB_formula_add_test(inSize, (*U$12).numX, outSize, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$130, 0);
;** 157	-----------------------    goto g23;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 154,column 17,is_stmt,isa 0
           ADD     .L2     B11,B13,B4        ; |154| 

           LDW     .D2T2   *+B4(24),B6       ; |154| 
||         MVKL    .S1     testPatternString,A3

           LDW     .D2T2   *+B4(32),B5       ; |154| 
||         MVKH    .S1     testPatternString,A3

           STW     .D2T1   A3,*+SP(8)        ; |154| 

           LDW     .D2T2   *+B4(20),B4       ; |154| 
||         MVKL    .S2     $C$SL2+0,B7

           MVKH    .S2     $C$SL2+0,B7
||         STW     .D2T1   A14,*+SP(24)      ; |154| 

           MVKL    .S1     est_test,A4
||         STW     .D2T2   B7,*+SP(4)        ; |154| 

           MVK     .L1     1,A3              ; |151| 
||         MVKH    .S1     est_test,A4
||         STW     .D2T2   B6,*+SP(16)       ; |154| 

           STW     .D1T1   A3,*A4            ; |151| 
||         MVKL    .S1     desc,A4
||         STW     .D2T2   B5,*+SP(20)       ; |154| 

$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("sprintf")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     sprintf,B3
||         STW     .D2T2   B4,*+SP(12)       ; |154| 
||         MVKH    .S1     desc,A4

$C$RL31:   ; CALL OCCURS {sprintf} {0}       ; |154| 
$C$DW$L$VLIB_histogram_nD_U16_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$41$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 156,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(32),A3       ; |156| 
           CMPEQ   .L1     A10,0,A4          ; |156| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |156| 
           MVKH    .S1     desc,A8
           CMPEQ   .L2X    A3,0,B4           ; |156| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x04)
	.dwattr $C$DW$174, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$174, DW_AT_TI_call

           MV      .L1     A14,A6            ; |156| 
||         CALLP   .S2     VLIB_formula_add_test,B3
||         OR      .L2X    B4,A4,B6          ; |156| 
||         LDW     .D2T2   *+B12(20),B4      ; |156| 
||         MV      .S1     A15,A4            ; |156| 

$C$RL32:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |156| 
$C$DW$L$VLIB_histogram_nD_U16_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$42$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 157,column 13,is_stmt,isa 0
           BNOP    .S1     $C$L17,5          ; |157| 
           ; BRANCH OCCURS {$C$L17}          ; |157| 
$C$DW$L$VLIB_histogram_nD_U16_d$42$E:
;** --------------------------------------------------------------------------*
$C$L15:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 117,column 13,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$43$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g21:
;** 159	-----------------------    C$3 = U$11+v$1;
;** 159	-----------------------    sprintf(K$130, (const char *)"numX=%d, dimX=%d, maxSize=%d, outsize=%d", (*C$3).numX, (*C$3).dimX, (*C$3).maxSize, outSize);
;** 161	-----------------------    VLIB_skip_test(K$130);
;** 161	-----------------------    goto g23;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 159,column 17,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(12)       ; |159| 
           STW     .D2T2   B7,*+SP(4)        ; |159| 
           STW     .D2T1   A14,*+SP(20)      ; |159| 
           STW     .D2T2   B6,*+SP(16)       ; |159| 

           STW     .D2T2   B4,*+SP(8)        ; |159| 
||         ADDKPC  .S2     $C$RL33,B3,0      ; |159| 
||         MVKH    .S1     desc,A4

$C$RL33:   ; CALL OCCURS {sprintf} {0}       ; |159| 
$C$DW$L$VLIB_histogram_nD_U16_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$44$B:
;          EXCLUSIVE CPU CYCLES: 7
           MVKL    .S1     desc,A4
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 161,column 17,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |161| 
$C$DW$L$VLIB_histogram_nD_U16_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$45$B:
;          EXCLUSIVE CPU CYCLES: 6
           B       .S1     $C$L18            ; |161| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 171,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 171 | VLIB_free(H1);                                                         
;----------------------------------------------------------------------
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("VLIB_free")
	.dwattr $C$DW$176, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |171| 
           LDW     .D2T1   *+SP(60),A4       ; |171| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 161,column 17,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L18}          ; |161| 
$C$DW$L$VLIB_histogram_nD_U16_d$45$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 70,column 9,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$46$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g22:
;** 165	-----------------------    sprintf(K$130, (const char *)"numX=%d, dimX=%d, maxSize=%d", (*U$12).numX, (*U$12).dimX, (*U$12).maxSize);
;** 167	-----------------------    VLIB_skip_test(K$130);

           MVKL    .S2     $C$SL4+0,B7
||         MVKL    .S1     desc,A4

           MVKH    .S2     $C$SL4+0,B7
||         MVKH    .S1     desc,A4
||         STW     .D2T2   B5,*+SP(12)       ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 165,column 13,is_stmt,isa 0
           STW     .D2T2   B7,*+SP(4)        ; |165| 
           STW     .D2T2   B6,*+SP(8)        ; |165| 

           STW     .D2T2   B4,*+SP(16)       ; |165| 
||         ADDKPC  .S2     $C$RL35,B3,0      ; |165| 

$C$RL35:   ; CALL OCCURS {sprintf} {0}       ; |165| 
$C$DW$L$VLIB_histogram_nD_U16_d$46$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$47$B:
;          EXCLUSIVE CPU CYCLES: 7
           MVKL    .S1     desc,A4
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 167,column 13,is_stmt,isa 0
$C$RL36:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |167| 
$C$DW$L$VLIB_histogram_nD_U16_d$47$E:
;** --------------------------------------------------------------------------*
$C$L17:    
$C$DW$L$VLIB_histogram_nD_U16_d$48$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 171,column 9,is_stmt,isa 0
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("VLIB_free")
	.dwattr $C$DW$178, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |171| 
           LDW     .D2T1   *+SP(60),A4       ; |171| 
           NOP             3
$C$DW$L$VLIB_histogram_nD_U16_d$48$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 157,column 13,is_stmt,isa 0
$C$DW$L$VLIB_histogram_nD_U16_d$49$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g23:
;** 171	-----------------------    VLIB_free((void *)H1);
;** 172	-----------------------    free((void *)H_cn);
;** 173	-----------------------    VLIB_free((void *)H);
;** 174	-----------------------    VLIB_free((void *)scrap);
;** 175	-----------------------    VLIB_free((void *)normVals);
;** 176	-----------------------    VLIB_free((void *)numBins);
;** 177	-----------------------    VLIB_free((void *)X);
;** 51	-----------------------    U$11 += 36;
;** 51	-----------------------    U$12 += 36;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 171,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL37,B3,0      ; |171| 
$C$RL37:   ; CALL OCCURS {VLIB_free} {0}     ; |171| 
$C$DW$L$VLIB_histogram_nD_U16_d$49$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$50$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("free")
	.dwattr $C$DW$179, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(56),A4       ; |172| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 172,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 172 | free(H_cn);                                                            
;----------------------------------------------------------------------
$C$RL38:   ; CALL OCCURS {free} {0}          ; |172| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("VLIB_free")
	.dwattr $C$DW$180, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(52),A4       ; |173| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 173,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 173 | VLIB_free(H);                                                          
;----------------------------------------------------------------------
$C$RL39:   ; CALL OCCURS {VLIB_free} {0}     ; |173| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("VLIB_free")
	.dwattr $C$DW$181, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(48),A4       ; |174| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 174,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 174 | VLIB_free(scrap);                                                      
;----------------------------------------------------------------------
$C$RL40:   ; CALL OCCURS {VLIB_free} {0}     ; |174| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("VLIB_free")
	.dwattr $C$DW$182, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(44),A4       ; |175| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 175,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 175 | VLIB_free(normVals);                                                   
;----------------------------------------------------------------------
$C$RL41:   ; CALL OCCURS {VLIB_free} {0}     ; |175| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("VLIB_free")
	.dwattr $C$DW$183, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(40),A4       ; |176| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 176,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 176 | VLIB_free(numBins);                                                    
;----------------------------------------------------------------------
$C$RL42:   ; CALL OCCURS {VLIB_free} {0}     ; |176| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("VLIB_free")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(36),A4       ; |177| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 177,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 177 | VLIB_free(X);                                                          
;----------------------------------------------------------------------
$C$RL43:   ; CALL OCCURS {VLIB_free} {0}     ; |177| 
$C$DW$L$VLIB_histogram_nD_U16_d$50$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_histogram_nD_U16_d$51$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |51| 
           ADDK    .S2     36,B12            ; |51| 
           ADD     .L1     1,A13,A13         ; |51| 
           ADDK    .S2     36,B13            ; |51| 
           NOP             1
           CMPGT   .L1     A3,A13,A0         ; |51| 

   [ A0]   BNOP    .S1     $C$L1,1           ; |51| 
|| [ A0]   LDW     .D2T1   *+B12(24),A3      ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 58,column 20,is_stmt,isa 0
   [ A0]   LDW     .D2T2   *+B12(20),B4      ; |58| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_histogram_nD_U16_d$51$E:
;** --------------------------------------------------------------------------*
$C$L19:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g24:
;** 181	-----------------------    VLIB_profile_cycle_report(2, "N = numX*dimX; M = numX; L = outsize (product of num of bins in each dim)", "numX*dimX");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [19]
;** 168	-----------------------    VLIB_stack_memory();  // [19]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL6+0,B4

           MVKL    .S1     $C$SL5+0,A6
||         MVKH    .S2     $C$SL6+0,B4

$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$185, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL5+0,A6
||         MVK     .L1     0x2,A4            ; |181| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 181,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 181 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 182 |                           "N = numX*dimX; M = numX; L = outsize (produc
;     | t of num of bins in each dim)",                                        
; 183 |                           "numX*dimX");                                
; 186 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL44:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |181| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL7+0,B4
           MVKH    .S2     $C$SL7+0,B4
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("printf")
	.dwattr $C$DW$186, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL45:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$187, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL46:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c",line 187,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(72),B3      ; |187| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |187| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$189	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$189, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.se66:$C$L1:1:1443280244")
	.dwattr $C$DW$189, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$189, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$189, DW_AT_TI_end_line(0xb2)
$C$DW$190	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$190, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$4$B)
	.dwattr $C$DW$190, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$4$E)
$C$DW$191	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$191, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$46$B)
	.dwattr $C$DW$191, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$46$E)
$C$DW$192	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$192, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$38$B)
	.dwattr $C$DW$192, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$38$E)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$33$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$33$E)
$C$DW$194	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$194, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$34$B)
	.dwattr $C$DW$194, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$34$E)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$35$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$35$E)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$36$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$36$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$37$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$37$E)
$C$DW$198	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$198, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$39$B)
	.dwattr $C$DW$198, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$39$E)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$40$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$40$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$41$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$41$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$42$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$42$E)
$C$DW$202	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$202, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$47$B)
	.dwattr $C$DW$202, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$47$E)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$25$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$25$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$19$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$19$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$14$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$14$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$15$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$15$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$5$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$5$E)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$6$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$6$E)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$7$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$7$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$8$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$8$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$9$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$9$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$10$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$10$E)
$C$DW$213	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$13$B)
	.dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$13$E)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$16$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$16$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$17$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$17$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$18$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$18$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$23$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$23$E)
$C$DW$218	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$218, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$24$B)
	.dwattr $C$DW$218, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$24$E)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$29$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$29$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$30$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$30$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$31$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$31$E)
$C$DW$222	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$32$B)
	.dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$32$E)
$C$DW$223	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$223, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$43$B)
	.dwattr $C$DW$223, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$43$E)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$44$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$44$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$45$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$45$E)
$C$DW$226	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$226, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$48$B)
	.dwattr $C$DW$226, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$48$E)
$C$DW$227	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$227, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$49$B)
	.dwattr $C$DW$227, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$49$E)
$C$DW$228	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$228, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$50$B)
	.dwattr $C$DW$228, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$50$E)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$51$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$51$E)

$C$DW$230	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$230, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.se66:$C$L11:2:1443280244")
	.dwattr $C$DW$230, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$230, DW_AT_TI_begin_line(0x6d)
	.dwattr $C$DW$230, DW_AT_TI_end_line(0x6f)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$27$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$27$E)
	.dwendtag $C$DW$230


$C$DW$232	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$232, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.se66:$C$L7:2:1443280244")
	.dwattr $C$DW$232, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$232, DW_AT_TI_begin_line(0x65)
	.dwattr $C$DW$232, DW_AT_TI_end_line(0x69)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$21$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$21$E)
	.dwendtag $C$DW$232


$C$DW$234	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$234, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.se66:$C$L2:2:1443280244")
	.dwattr $C$DW$234, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$234, DW_AT_TI_begin_line(0x58)
	.dwattr $C$DW$234, DW_AT_TI_end_line(0x5b)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$11$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$11$E)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_histogram_nD_U16_d$12$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_histogram_nD_U16_d$12$E)
	.dwendtag $C$DW$234

	.dwendtag $C$DW$189

	.dwattr $C$DW$91, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_histogram_nD_U16/VLIB_histogram_nD_U16_d.c")
	.dwattr $C$DW$91, DW_AT_TI_end_line(0xbb)
	.dwattr $C$DW$91, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$91

;; Inlined function references:
;; [ 15] VLIB_profile_start
;; [ 16] VLIB_profile_stop
;; [ 19] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_histogram_nD_U16",0
$C$SL2:	.string	"%s generated input | Opt results compared to NatC results |"
	.string	" numX=%d, dimX=%d, maxSize=%d, outsize=%d",0
$C$SL3:	.string	"numX=%d, dimX=%d, maxSize=%d, outsize=%d",0
$C$SL4:	.string	"numX=%d, dimX=%d, maxSize=%d",0
$C$SL5:	.string	"numX*dimX",0
$C$SL6:	.string	"N = numX*dimX; M = numX; L = outsize (product of num of bin"
	.string	"s in each dim)",0
$C$SL7:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_compare_mem
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_histogram_nD_U16
	.global	VLIB_histogram_nD_U16_cn
	.global	histogram_nD_U16_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles
	.global	__c6xabi_divi

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$36	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x04)
$C$DW$237	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$237, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$237, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$237, DW_AT_decl_column(0x05)
$C$DW$238	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$238, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$238, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$238, DW_AT_decl_column(0x05)
$C$DW$239	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$239, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$239, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$239, DW_AT_decl_column(0x05)
$C$DW$240	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$240, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$240, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$240, DW_AT_decl_column(0x05)
$C$DW$241	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$241, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$241, DW_AT_decl_column(0x05)
$C$DW$242	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$242, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$242, DW_AT_decl_column(0x05)
$C$DW$243	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x80)
	.dwattr $C$DW$243, DW_AT_decl_column(0x05)
$C$DW$244	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x81)
	.dwattr $C$DW$244, DW_AT_decl_column(0x05)
$C$DW$245	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x82)
	.dwattr $C$DW$245, DW_AT_decl_column(0x05)
$C$DW$246	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$246, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x83)
	.dwattr $C$DW$246, DW_AT_decl_column(0x05)
$C$DW$247	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$247, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x84)
	.dwattr $C$DW$247, DW_AT_decl_column(0x05)
$C$DW$248	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$248, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x85)
	.dwattr $C$DW$248, DW_AT_decl_column(0x05)
$C$DW$249	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$249, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x86)
	.dwattr $C$DW$249, DW_AT_decl_column(0x05)
$C$DW$250	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$250, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x87)
	.dwattr $C$DW$250, DW_AT_decl_column(0x05)
$C$DW$251	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$251, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x88)
	.dwattr $C$DW$251, DW_AT_decl_column(0x05)
$C$DW$252	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$252, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x89)
	.dwattr $C$DW$252, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x0e)
$C$DW$T$37	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x03)

$C$DW$T$38	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x04)
$C$DW$253	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$253, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$253, DW_AT_decl_column(0x05)
$C$DW$254	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$254, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$254, DW_AT_decl_column(0x05)
$C$DW$255	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$255, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$255, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x06)

$C$DW$T$39	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x04)
$C$DW$256	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$256, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$256, DW_AT_decl_line(0x72)
	.dwattr $C$DW$256, DW_AT_decl_column(0x05)
$C$DW$257	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$257, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$257, DW_AT_decl_line(0x73)
	.dwattr $C$DW$257, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\../common/VLIB_test.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x06)

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x24)
$C$DW$258	.dwtag  DW_TAG_member
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$258, DW_AT_name("testPattern")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$258, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$258, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$258, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$258, DW_AT_decl_line(0x24)
	.dwattr $C$DW$258, DW_AT_decl_column(0x0f)
$C$DW$259	.dwtag  DW_TAG_member
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$259, DW_AT_name("staticIn")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$259, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$259, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$259, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$259, DW_AT_decl_line(0x25)
	.dwattr $C$DW$259, DW_AT_decl_column(0x0f)
$C$DW$260	.dwtag  DW_TAG_member
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$260, DW_AT_name("numBins")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("numBins")
	.dwattr $C$DW$260, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$260, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$260, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0x26)
	.dwattr $C$DW$260, DW_AT_decl_column(0x0f)
$C$DW$261	.dwtag  DW_TAG_member
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$261, DW_AT_name("normVals")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("normVals")
	.dwattr $C$DW$261, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$261, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$261, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x27)
	.dwattr $C$DW$261, DW_AT_decl_column(0x0f)
$C$DW$262	.dwtag  DW_TAG_member
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$262, DW_AT_name("staticOut")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$262, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x28)
	.dwattr $C$DW$262, DW_AT_decl_column(0x0f)
$C$DW$263	.dwtag  DW_TAG_member
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$263, DW_AT_name("numX")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("numX")
	.dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$263, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x29)
	.dwattr $C$DW$263, DW_AT_decl_column(0x0f)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$264, DW_AT_name("dimX")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("dimX")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$264, DW_AT_decl_column(0x0f)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$265, DW_AT_name("binWeight")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("binWeight")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$265, DW_AT_decl_column(0x0f)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$266, DW_AT_name("maxSize")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("maxSize")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$266, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$23

	.dwattr $C$DW$T$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x10)
$C$DW$T$40	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$40, DW_AT_address_class(0x20)
$C$DW$T$42	.dwtag  DW_TAG_typedef, DW_AT_name("histogram_nD_U16_testParams_t")
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$42, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\VLIB_histogram_nD_U16_idat.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x03)
$C$DW$T$43	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$T$43, DW_AT_address_class(0x20)
$C$DW$T$44	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$44, DW_AT_address_class(0x20)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x18)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$267, DW_AT_name("fd")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x49)
	.dwattr $C$DW$267, DW_AT_decl_column(0x0b)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$268, DW_AT_name("buf")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$268, DW_AT_decl_column(0x16)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$269, DW_AT_name("pos")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$269, DW_AT_decl_column(0x16)
$C$DW$270	.dwtag  DW_TAG_member
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$270, DW_AT_name("bufend")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$270, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$270, DW_AT_decl_column(0x16)
$C$DW$271	.dwtag  DW_TAG_member
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$271, DW_AT_name("buff_stop")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$271, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$271, DW_AT_decl_column(0x16)
$C$DW$272	.dwtag  DW_TAG_member
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$272, DW_AT_name("flags")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$272, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$272, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x03)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x08)
$C$DW$273	.dwtag  DW_TAG_member
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$273, DW_AT_name("quot")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$273, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$273, DW_AT_decl_column(0x16)
$C$DW$274	.dwtag  DW_TAG_member
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$274, DW_AT_name("rem")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$274, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$274, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x23)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x08)
$C$DW$275	.dwtag  DW_TAG_member
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$275, DW_AT_name("quot")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$275, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x40)
	.dwattr $C$DW$275, DW_AT_decl_column(0x17)
$C$DW$276	.dwtag  DW_TAG_member
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$276, DW_AT_name("rem")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$276, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x40)
	.dwattr $C$DW$276, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x24)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x10)
$C$DW$277	.dwtag  DW_TAG_member
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$277, DW_AT_name("quot")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$277, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x43)
	.dwattr $C$DW$277, DW_AT_decl_column(0x1c)
$C$DW$278	.dwtag  DW_TAG_member
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$278, DW_AT_name("rem")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$278, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x43)
	.dwattr $C$DW$278, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x29)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x24)
$C$DW$279	.dwtag  DW_TAG_member
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$279, DW_AT_name("area")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$279, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x69)
	.dwattr $C$DW$279, DW_AT_decl_column(0x0d)
$C$DW$280	.dwtag  DW_TAG_member
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$280, DW_AT_name("xsum")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$280, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$280, DW_AT_decl_column(0x0d)
$C$DW$281	.dwtag  DW_TAG_member
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$281, DW_AT_name("ysum")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$281, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$281, DW_AT_decl_column(0x0d)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$282, DW_AT_name("xmin")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$282, DW_AT_decl_column(0x0d)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$283, DW_AT_name("ymin")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$283, DW_AT_decl_column(0x0d)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$284, DW_AT_name("xmax")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$284, DW_AT_decl_column(0x0d)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$285, DW_AT_name("ymax")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0x70)
	.dwattr $C$DW$285, DW_AT_decl_column(0x0d)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$286, DW_AT_name("seedx")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0x72)
	.dwattr $C$DW$286, DW_AT_decl_column(0x0d)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$287, DW_AT_name("seedy")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0x73)
	.dwattr $C$DW$287, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x03)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x10)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$288, DW_AT_name("daylight")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0x52)
	.dwattr $C$DW$288, DW_AT_decl_column(0x0b)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$289, DW_AT_name("timezone")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0x53)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0b)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$290, DW_AT_name("tzname")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0x54)
	.dwattr $C$DW$290, DW_AT_decl_column(0x0b)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$291, DW_AT_name("dstname")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x55)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x01)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$80	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$80, DW_AT_address_class(0x20)
$C$DW$T$92	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$92, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$92, DW_AT_decl_column(0x1d)
$C$DW$T$93	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$93, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$93, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$93, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$94	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$94, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$94, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$95	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$95, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$95, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$95, DW_AT_decl_column(0x1d)
$C$DW$T$96	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$96, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$96, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$97	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$97, DW_AT_address_class(0x20)
$C$DW$T$20	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$20, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$20, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$20, DW_AT_decl_column(0x1c)
$C$DW$T$21	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$21, DW_AT_address_class(0x20)
$C$DW$T$99	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$21)
$C$DW$T$100	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$20)
$C$DW$T$101	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$T$101, DW_AT_address_class(0x20)
$C$DW$T$102	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
$C$DW$T$103	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$103, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$103, DW_AT_decl_column(0x16)
$C$DW$T$98	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$98, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$98, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$129	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$129, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$129, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$129, DW_AT_decl_column(0x0d)
$C$DW$T$22	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x1d)
$C$DW$T$120	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$120, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$120, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$120, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$120, DW_AT_decl_column(0x11)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x10)
$C$DW$292	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$292, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$33

$C$DW$T$76	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$76, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$76, DW_AT_address_class(0x20)
$C$DW$T$114	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$22)
$C$DW$T$124	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$124, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$124, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$124, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$124, DW_AT_decl_column(0x17)
$C$DW$T$125	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$125, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$125, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$125, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$125, DW_AT_decl_column(0x17)
$C$DW$T$126	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$126, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$126, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$126, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$126, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$126, DW_AT_decl_column(0x17)
$C$DW$T$127	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$127, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$127, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$127, DW_AT_decl_column(0x17)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$130	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$130, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$130, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$130, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$130, DW_AT_decl_column(0x17)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x16)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x19)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x16)
$C$DW$T$68	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$68, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$68, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$68, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$68, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$68, DW_AT_decl_column(0x1c)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x16)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x16)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x16)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x16)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x21)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x17)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x20)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x16)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x21)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x17)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x17)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$154	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$154, DW_AT_address_class(0x20)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x20)

$C$DW$T$156	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_byte_size(0x10)
$C$DW$293	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$293, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$156

$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x16)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x16)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x0f)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_histogram_nD_U16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x10)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$30	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$30, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$30, DW_AT_name("signed char")
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x01)

$C$DW$T$31	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x04)
$C$DW$294	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$294, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$31

$C$DW$T$59	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$59, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$59, DW_AT_address_class(0x20)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x12)
$C$DW$T$104	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$104, DW_AT_type(*$C$DW$T$30)
$C$DW$T$105	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$105, DW_AT_address_class(0x20)

$C$DW$T$165	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
$C$DW$295	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$165


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$296, DW_AT_name("_v")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x44)
	.dwattr $C$DW$296, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x01)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x01)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$166)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x13)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("tm")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x24)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$297, DW_AT_name("tm_sec")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0x41)
	.dwattr $C$DW$297, DW_AT_decl_column(0x09)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$298, DW_AT_name("tm_min")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0x42)
	.dwattr $C$DW$298, DW_AT_decl_column(0x09)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$299, DW_AT_name("tm_hour")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0x43)
	.dwattr $C$DW$299, DW_AT_decl_column(0x09)
$C$DW$300	.dwtag  DW_TAG_member
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$300, DW_AT_name("tm_mday")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$300, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$300, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$300, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0x44)
	.dwattr $C$DW$300, DW_AT_decl_column(0x09)
$C$DW$301	.dwtag  DW_TAG_member
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$301, DW_AT_name("tm_mon")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$301, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$301, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$301, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x45)
	.dwattr $C$DW$301, DW_AT_decl_column(0x09)
$C$DW$302	.dwtag  DW_TAG_member
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$302, DW_AT_name("tm_year")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$302, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x46)
	.dwattr $C$DW$302, DW_AT_decl_column(0x09)
$C$DW$303	.dwtag  DW_TAG_member
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$303, DW_AT_name("tm_wday")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$303, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x47)
	.dwattr $C$DW$303, DW_AT_decl_column(0x09)
$C$DW$304	.dwtag  DW_TAG_member
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$304, DW_AT_name("tm_yday")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$304, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$304, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$304, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x48)
	.dwattr $C$DW$304, DW_AT_decl_column(0x09)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$305, DW_AT_name("tm_isdst")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x49)
	.dwattr $C$DW$305, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

