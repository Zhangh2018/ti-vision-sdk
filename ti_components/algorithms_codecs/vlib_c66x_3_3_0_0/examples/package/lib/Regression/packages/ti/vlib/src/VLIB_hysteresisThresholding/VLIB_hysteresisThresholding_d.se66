;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:10:57 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("memcpy")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("memcpy")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0x56)
	.dwattr $C$DW$1, DW_AT_decl_column(0x16)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$3)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$53)
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$1


$C$DW$5	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwattr $C$DW$5, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$5, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$5, DW_AT_decl_column(0x0b)
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$11)
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$5


$C$DW$8	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
	.dwattr $C$DW$8, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$8, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$8, DW_AT_decl_column(0x19)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$130)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$8


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$62)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$130)
$C$DW$14	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$15, DW_AT_decl_column(0x16)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$3)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$15


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x82)
	.dwattr $C$DW$19, DW_AT_decl_column(0x19)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$19


$C$DW$21	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwattr $C$DW$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$21, DW_AT_decl_line(0x86)
	.dwattr $C$DW$21, DW_AT_decl_column(0x19)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$21


$C$DW$23	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwattr $C$DW$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$23, DW_AT_decl_line(0x58)
	.dwattr $C$DW$23, DW_AT_decl_column(0x05)

$C$DW$24	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwattr $C$DW$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$24, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$24, DW_AT_decl_column(0x06)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$62)
	.dwendtag $C$DW$24


$C$DW$27	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwattr $C$DW$27, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$27, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$27, DW_AT_decl_column(0x06)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$10)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$10)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$62)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$27


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$62)
	.dwendtag $C$DW$34


$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$10)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$62)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$62)
	.dwendtag $C$DW$36


$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x80)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$71)
	.dwendtag $C$DW$40


$C$DW$42	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwattr $C$DW$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$42, DW_AT_decl_line(0x81)
	.dwattr $C$DW$42, DW_AT_decl_column(0x06)

$C$DW$43	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwattr $C$DW$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$43, DW_AT_decl_line(0x82)
	.dwattr $C$DW$43, DW_AT_decl_column(0x0a)

$C$DW$44	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwattr $C$DW$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$44, DW_AT_decl_line(0x83)
	.dwattr $C$DW$44, DW_AT_decl_column(0x06)

$C$DW$45	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("VLIB_compare_mem")
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwattr $C$DW$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_memory.h")
	.dwattr $C$DW$45, DW_AT_decl_line(0x72)
	.dwattr $C$DW$45, DW_AT_decl_column(0x11)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$51)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$51)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$28)
	.dwendtag $C$DW$45


$C$DW$49	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwattr $C$DW$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_memory.h")
	.dwattr $C$DW$49, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$49, DW_AT_decl_column(0x06)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$19)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$19)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$3)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$3)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$21)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$21)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$21)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$19)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$62)
	.dwendtag $C$DW$49


$C$DW$59	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwattr $C$DW$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_memory.h")
	.dwattr $C$DW$59, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$59, DW_AT_decl_column(0x07)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$59


$C$DW$61	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwattr $C$DW$61, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_memory.h")
	.dwattr $C$DW$61, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$61, DW_AT_decl_column(0x07)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$61


$C$DW$63	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_hysteresisThresholding")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("VLIB_hysteresisThresholding")
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
	.dwattr $C$DW$63, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\c66/VLIB_hysteresisThresholding.h")
	.dwattr $C$DW$63, DW_AT_decl_line(0x73)
	.dwattr $C$DW$63, DW_AT_decl_column(0x09)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$125)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$20)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$85)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$21)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$21)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$21)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$19)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$19)
	.dwendtag $C$DW$63


$C$DW$72	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_hysteresisThresholding_cn")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("VLIB_hysteresisThresholding_cn")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
	.dwattr $C$DW$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_cn.h")
	.dwattr $C$DW$72, DW_AT_decl_line(0x22)
	.dwattr $C$DW$72, DW_AT_decl_column(0x09)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$122)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$20)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$85)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$21)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$21)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$21)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$19)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$19)
	.dwendtag $C$DW$72


$C$DW$81	.dwtag  DW_TAG_subprogram, DW_AT_name("hysteresis_getTestParams")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("hysteresis_getTestParams")
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$81, DW_AT_decl_column(0x06)
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$44)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$79)
	.dwendtag $C$DW$81


$C$DW$84	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_conv_7x7_i8_c8s_cn")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("VLIB_conv_7x7_i8_c8s_cn")
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../VLIB_Canny_Edge_Detection/VLIB_Canny_Edge_Detection_cn.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x22)
	.dwattr $C$DW$84, DW_AT_decl_column(0x06)
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$84)
$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$85)
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$71)
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$86)
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$90)
$C$DW$90	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$86)
	.dwendtag $C$DW$84


$C$DW$91	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_nonMaximumSuppressionCanny_cn")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("VLIB_nonMaximumSuppressionCanny_cn")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
	.dwattr $C$DW$91, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../VLIB_Canny_Edge_Detection/VLIB_Canny_Edge_Detection_cn.h")
	.dwattr $C$DW$91, DW_AT_decl_line(0x34)
	.dwattr $C$DW$91, DW_AT_decl_column(0x09)
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$122)
$C$DW$93	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$122)
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$122)
$C$DW$95	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$85)
$C$DW$96	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$21)
$C$DW$97	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$21)
$C$DW$98	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$91


$C$DW$99	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_xyGradientsAndMagnitude_cn")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("VLIB_xyGradientsAndMagnitude_cn")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwattr $C$DW$99, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../VLIB_xyGradientsAndMagnitude/VLIB_xyGradientsAndMagnitude_cn.h")
	.dwattr $C$DW$99, DW_AT_decl_line(0x20)
	.dwattr $C$DW$99, DW_AT_decl_column(0x09)
$C$DW$100	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$85)
$C$DW$101	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$122)
$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$122)
$C$DW$103	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$122)
$C$DW$104	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$21)
$C$DW$105	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$99

$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
	.dwattr $C$DW$106, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$106, DW_AT_decl_line(0x60)
	.dwattr $C$DW$106, DW_AT_decl_column(0x13)
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwattr $C$DW$107, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$107, DW_AT_decl_line(0x62)
	.dwattr $C$DW$107, DW_AT_decl_column(0x13)
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$195)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
	.dwattr $C$DW$108, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$108, DW_AT_decl_line(0x63)
	.dwattr $C$DW$108, DW_AT_decl_column(0x13)
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$195)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
	.dwattr $C$DW$109, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$109, DW_AT_decl_line(0x64)
	.dwattr $C$DW$109, DW_AT_decl_column(0x13)
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
	.dwattr $C$DW$110, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$110, DW_AT_decl_line(0x75)
	.dwattr $C$DW$110, DW_AT_decl_column(0x14)
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$111, DW_AT_declaration
	.dwattr $C$DW$111, DW_AT_external
	.dwattr $C$DW$111, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$111, DW_AT_decl_line(0x76)
	.dwattr $C$DW$111, DW_AT_decl_column(0x14)
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
	.dwattr $C$DW$112, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$112, DW_AT_decl_line(0x77)
	.dwattr $C$DW$112, DW_AT_decl_column(0x14)
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$113, DW_AT_declaration
	.dwattr $C$DW$113, DW_AT_external
	.dwattr $C$DW$113, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$113, DW_AT_decl_line(0x78)
	.dwattr $C$DW$113, DW_AT_decl_column(0x14)
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$186)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
	.dwattr $C$DW$114, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h")
	.dwattr $C$DW$114, DW_AT_decl_line(0x79)
	.dwattr $C$DW$114, DW_AT_decl_column(0x14)
	.sect	".const:.string:$P$T0$1"
	.clink
	.align	8
	.elfsym	$P$T0$1,SYM_SIZE(49)
$P$T0$1:
	.field	0,8			; $P$T0$1[0] @ 0
	.field	0,8			; $P$T0$1[1] @ 8
	.field	0,8			; $P$T0$1[2] @ 16
	.field	0,8			; $P$T0$1[3] @ 24
	.field	0,8			; $P$T0$1[4] @ 32
	.field	0,8			; $P$T0$1[5] @ 40
	.field	0,8			; $P$T0$1[6] @ 48
	.field	0,8			; $P$T0$1[7] @ 56
	.field	0,8			; $P$T0$1[8] @ 64
	.field	0,8			; $P$T0$1[9] @ 72
	.field	0,8			; $P$T0$1[10] @ 80
	.field	0,8			; $P$T0$1[11] @ 88
	.field	0,8			; $P$T0$1[12] @ 96
	.field	0,8			; $P$T0$1[13] @ 104
	.field	0,8			; $P$T0$1[14] @ 112
	.field	0,8			; $P$T0$1[15] @ 120
	.field	16,8			; $P$T0$1[16] @ 128
	.field	32,8			; $P$T0$1[17] @ 136
	.field	16,8			; $P$T0$1[18] @ 144
	.field	0,8			; $P$T0$1[19] @ 152
	.field	0,8			; $P$T0$1[20] @ 160
	.field	0,8			; $P$T0$1[21] @ 168
	.field	0,8			; $P$T0$1[22] @ 176
	.field	32,8			; $P$T0$1[23] @ 184
	.field	64,8			; $P$T0$1[24] @ 192
	.field	32,8			; $P$T0$1[25] @ 200
	.field	0,8			; $P$T0$1[26] @ 208
	.field	0,8			; $P$T0$1[27] @ 216
	.field	0,8			; $P$T0$1[28] @ 224
	.field	0,8			; $P$T0$1[29] @ 232
	.field	16,8			; $P$T0$1[30] @ 240
	.field	32,8			; $P$T0$1[31] @ 248
	.field	16,8			; $P$T0$1[32] @ 256
	.field	0,8			; $P$T0$1[33] @ 264
	.field	0,8			; $P$T0$1[34] @ 272
	.field	0,8			; $P$T0$1[35] @ 280
	.field	0,8			; $P$T0$1[36] @ 288
	.field	0,8			; $P$T0$1[37] @ 296
	.field	0,8			; $P$T0$1[38] @ 304
	.field	0,8			; $P$T0$1[39] @ 312
	.field	0,8			; $P$T0$1[40] @ 320
	.field	0,8			; $P$T0$1[41] @ 328
	.field	0,8			; $P$T0$1[42] @ 336
	.field	0,8			; $P$T0$1[43] @ 344
	.field	0,8			; $P$T0$1[44] @ 352
	.field	0,8			; $P$T0$1[45] @ 360
	.field	0,8			; $P$T0$1[46] @ 368
	.field	0,8			; $P$T0$1[47] @ 376
	.field	0,8			; $P$T0$1[48] @ 384

$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$P$T0$1")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$P$T0$1")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_addr $P$T0$1]
	.dwattr $C$DW$115, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$115, DW_AT_decl_line(0x56)
	.dwattr $C$DW$115, DW_AT_decl_column(0x1d)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021766 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021768 
	.sect	".text"
	.clink
	.global	VLIB_hysteresisThresholding_d

$C$DW$116	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_hysteresisThresholding_d")
	.dwattr $C$DW$116, DW_AT_low_pc(VLIB_hysteresisThresholding_d)
	.dwattr $C$DW$116, DW_AT_high_pc(0x00)
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("VLIB_hysteresisThresholding_d")
	.dwattr $C$DW$116, DW_AT_external
	.dwattr $C$DW$116, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$116, DW_AT_TI_begin_line(0x29)
	.dwattr $C$DW$116, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$116, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$116, DW_AT_decl_line(0x29)
	.dwattr $C$DW$116, DW_AT_decl_column(0x06)
	.dwattr $C$DW$116, DW_AT_TI_max_frame_size(0xc0)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 42,column 1,is_stmt,address VLIB_hysteresisThresholding_d,isa 0

	.dwfde $C$DW$CIE, VLIB_hysteresisThresholding_d
$C$DW$117	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  41 | void VLIB_hysteresisThresholding_d (uint8_t LevelOfFeedback)           
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_hysteresisThresholding_d                               *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 16 Args + 116 Auto + 56 Save = 188 byte              *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_hysteresisThresholding_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 48	-----------------------    hysteresis_getTestParams(&prm, &test_cases);
;** 51	-----------------------    VLIB_profile_init(2, "VLIB_hysteresisThresholding");
;** 54	-----------------------    if ( test_cases <= 0 ) goto g51;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  43 | int32_t    tpi;                      /* test parameter index */        
;  46 | hysteresis_testParams_t   *prm;                                        
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |42| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |42| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |42| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |42| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |42| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |42| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(8)       ; |42| 
	.dwcfi	cfa_offset, 56
	.dwcfi	save_reg_to_mem, 19, -48
           ADDK    .S2     -136,SP           ; |42| 
	.dwcfi	cfa_offset, 192
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$C1")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$C1")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg16]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$C2")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$C2")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg5]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg3]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg8]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_regx 0x25]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg4]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg24]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg4]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg22]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg21]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg3]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg26]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg29]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg20]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg3]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_reg21]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_reg26]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg28]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$K46")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$K46")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg12]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$K50")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$K50")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg20]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("$O$U20")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("$O$U20")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg13]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_breg31 80]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("$O$K95")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("$O$K95")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_regx 0x44]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("$O$U116")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("$O$U116")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$119)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_reg26]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$K141")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$K141")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg3]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("$O$U129")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("$O$U129")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg3]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("$O$K169")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("$O$K169")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg8]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg15]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_breg31 84]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_breg31 84]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 84]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("$O$L5")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("$O$L5")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_reg29]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_breg31 88]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_reg11]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_breg31 20]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg10]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_breg31 92]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("bufferSize")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("bufferSize")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_reg27]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("pInput")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("pInput")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_breg31 96]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("pBufGradX")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("pBufGradX")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_breg31 100]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("pBufGradY")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("pBufGradY")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_breg31 104]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("pBufMag")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("pBufMag")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_breg31 108]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("pScratch")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("pScratch")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_breg31 112]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("pBufOut")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("pBufOut")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_breg31 116]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("pBufOut_cn")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("pBufOut_cn")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_breg31 120]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("new_width")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("new_width")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg14]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("new_height")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("new_height")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg12]
$C$DW$165	.dwtag  DW_TAG_variable, DW_AT_name("pGx")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("pGx")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_breg31 124]
$C$DW$166	.dwtag  DW_TAG_variable, DW_AT_name("pGy")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("pGy")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_reg15]
$C$DW$167	.dwtag  DW_TAG_variable, DW_AT_name("pMag")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("pMag")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_breg31 128]
$C$DW$168	.dwtag  DW_TAG_variable, DW_AT_name("$O$U63")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("$O$U63")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_reg10]
$C$DW$169	.dwtag  DW_TAG_variable, DW_AT_name("$O$U63")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("$O$U63")
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$169, DW_AT_location[DW_OP_reg26]
$C$DW$170	.dwtag  DW_TAG_variable, DW_AT_name("$O$U63")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("$O$U63")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_breg31 132]
$C$DW$171	.dwtag  DW_TAG_variable, DW_AT_name("$O$U63")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("$O$U63")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_breg31 132]
$C$DW$172	.dwtag  DW_TAG_variable, DW_AT_name("$O$U63")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("$O$U63")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_reg26]
$C$DW$173	.dwtag  DW_TAG_variable, DW_AT_name("$O$U70")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("$O$U70")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg14]
$C$DW$174	.dwtag  DW_TAG_variable, DW_AT_name("$O$U70")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("$O$U70")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg15]
$C$DW$175	.dwtag  DW_TAG_variable, DW_AT_name("$O$U70")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("$O$U70")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg15]
$C$DW$176	.dwtag  DW_TAG_variable, DW_AT_name("$O$U70")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("$O$U70")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg15]
$C$DW$177	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_reg13]
$C$DW$178	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_reg13]
$C$DW$179	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_reg13]
$C$DW$180	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_reg13]
$C$DW$181	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_reg13]
$C$DW$182	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_reg12]
$C$DW$183	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$183, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$183, DW_AT_location[DW_OP_reg10]
$C$DW$184	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$184, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$184, DW_AT_location[DW_OP_reg10]
$C$DW$185	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_reg10]
$C$DW$186	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$186, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$186, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$186, DW_AT_location[DW_OP_reg10]
$C$DW$187	.dwtag  DW_TAG_variable, DW_AT_name("pOut")
	.dwattr $C$DW$187, DW_AT_TI_symbol_name("pOut")
	.dwattr $C$DW$187, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$187, DW_AT_location[DW_OP_reg29]
$C$DW$188	.dwtag  DW_TAG_variable, DW_AT_name("pOut")
	.dwattr $C$DW$188, DW_AT_TI_symbol_name("pOut")
	.dwattr $C$DW$188, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$188, DW_AT_location[DW_OP_reg20]
$C$DW$189	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$189, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$189, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$189, DW_AT_location[DW_OP_reg26]
$C$DW$190	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$190, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$190, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$190, DW_AT_location[DW_OP_reg29]
$C$DW$191	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$191, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$191, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$191, DW_AT_location[DW_OP_reg29]
$C$DW$192	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$192, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$192, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$192, DW_AT_location[DW_OP_reg26]
$C$DW$193	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$193, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$193, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$193, DW_AT_location[DW_OP_reg22]
$C$DW$194	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$194, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$194, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$194, DW_AT_location[DW_OP_reg20]
$C$DW$195	.dwtag  DW_TAG_variable, DW_AT_name("gaussian_7x7")
	.dwattr $C$DW$195, DW_AT_TI_symbol_name("gaussian_7x7")
	.dwattr $C$DW$195, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$195, DW_AT_location[DW_OP_breg31 24]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("hysteresis_getTestParams")
	.dwattr $C$DW$196, DW_AT_TI_call

           CALLP   .S2     hysteresis_getTestParams,B3
||         STW     .D2T1   A4,*+SP(88)       ; |42| 
||         ADDAW   .D1X    SP,5,A4           ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | hysteresis_getTestParams(&prm, &test_cases);                           
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {hysteresis_getTestParams} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$197, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |51| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 51,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | VLIB_profile_init(2, "VLIB_hysteresisThresholding");                   
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |51| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  54 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |54| 
           LDW     .D2T2   *+SP(20),B12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  57 | int32_t    status_nat_vs_int  = vlib_KERNEL_PASS; /* Test status : Natu
;     | ral c vs. Optimized */                                                 
;  58 | int32_t    status_nat_vs_ref  = vlib_KERNEL_PASS; /* Test status : Natu
;     | ral c vs. Static Reference */                                          
;----------------------------------------------------------------------
           ZERO    .L2     B4                ; |54| 
           STW     .D2T2   B4,*+SP(80)
           ZERO    .L1     A11               ; |54| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 17,is_stmt,isa 0
           CMPGT   .L1     A3,0,A0           ; |54| 

   [!A0]   BNOP    .S1     $C$L36,2          ; |54| 
|| [ A0]   LDHU    .D2T2   *+B12(12),B5      ; |61| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 61,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint32_t  bufferSize  = prm[tpi].width * prm[tpi].height;              
;----------------------------------------------------------------------
   [ A0]   LDHU    .D2T2   *+B12(14),B4      ; |61| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L36}        ; |54| 
;** --------------------------------------------------------------------------*
;**  	-----------------------    K$46 = &testPatternString[0];
;**  	-----------------------    K$50 = 127;
;**  	-----------------------    K$169 = &desc[0];
;**  	-----------------------    U$13 = prm;
;**  	-----------------------    U$12 = 0;
;** 54	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 10,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$5$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 61	-----------------------    bufferSize = _mpyu((*U$13).width, (*U$13).height);
;** 64	-----------------------    pInput = VLIB_malloc(bufferSize);
;** 65	-----------------------    C$17 = bufferSize*2u;
;** 65	-----------------------    pBufGradX = VLIB_malloc(C$17);
;** 66	-----------------------    pBufGradY = VLIB_malloc(C$17);
;** 67	-----------------------    U$20 = C$17;
;** 67	-----------------------    pBufMag = VLIB_malloc(U$20);
;** 68	-----------------------    pScratch = VLIB_malloc(bufferSize);
;** 69	-----------------------    pBufOut = VLIB_malloc(bufferSize);
;** 70	-----------------------    pBufOut_cn = malloc(bufferSize);
;** 73	-----------------------    if ( !((pInput != NULL)&(pBufGradX != NULL)&(pBufGradY != NULL)&(pBufMag != NULL)&(pScratch != NULL)&(pBufOut != NULL)&(pBufOut_cn != NULL)) ) goto g49;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 64,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | uint8_t  *pInput      = (uint8_t *) VLIB_malloc(bufferSize * sizeof(uin
;     | t8_t));                                                                
;----------------------------------------------------------------------
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$198, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |64| 
           ADDKPC  .S2     $C$RL2,B3,0       ; |64| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 61,column 19,is_stmt,isa 0
           MPYU    .M2     B5,B4,B11         ; |61| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 64,column 19,is_stmt,isa 0
           MV      .L1X    B11,A4            ; |64| 
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |64| 
$C$DW$L$VLIB_hysteresisThresholding_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$6$B:
;          EXCLUSIVE CPU CYCLES: 38
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 65,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | int16_t  *pBufGradX   = (int16_t *) VLIB_malloc(bufferSize * sizeof(int
;     | 16_t));                                                                
;----------------------------------------------------------------------
           ADD     .L2     B11,B11,B10       ; |65| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 64,column 19,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(96)       ; |64| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x04)
	.dwattr $C$DW$199, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$199, DW_AT_TI_call

           MV      .L1X    B10,A4            ; |65| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 65,column 19,is_stmt,isa 0
$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |65| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$200, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(100)      ; |65| 
||         MV      .L1X    B10,A4            ; |66| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 66,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | int16_t  *pBufGradY   = (int16_t *) VLIB_malloc(bufferSize * sizeof(int
;     | 16_t));                                                                
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {VLIB_malloc} {0}   ; |66| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$201, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(104)      ; |66| 
||         MV      .L1X    B10,A4            ; |67| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 67,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | int16_t  *pBufMag     = (int16_t *) VLIB_malloc(bufferSize * sizeof(int
;     | 16_t));                                                                
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |67| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$202, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(108)      ; |67| 
||         MV      .L1X    B11,A4            ; |68| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 68,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  68 | uint8_t  *pScratch    = (uint8_t *) VLIB_malloc(bufferSize * sizeof(uin
;     | t8_t));                                                                
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |68| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$203, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(112)      ; |68| 
||         MV      .L1X    B11,A4            ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 69,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | uint8_t  *pBufOut     = (uint8_t *) VLIB_malloc(bufferSize * sizeof(uin
;     | t8_t));                                                                
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {VLIB_malloc} {0}   ; |69| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("malloc")
	.dwattr $C$DW$204, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(116)      ; |69| 
||         MV      .L1X    B11,A4            ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 70,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | uint8_t  *pBufOut_cn  = (uint8_t *) malloc(bufferSize * sizeof(uint8_t)
;     | );                                                                     
;----------------------------------------------------------------------
$C$RL8:    ; CALL OCCURS {malloc} {0}        ; |70| 
$C$DW$L$VLIB_hysteresisThresholding_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$7$B:
;          EXCLUSIVE CPU CYCLES: 21

           LDW     .D2T1   *+SP(100),A0      ; |73| 
||         ZERO    .L2     B4                ; |73| 
||         ZERO    .L1     A3                ; |73| 
||         MV      .S1X    B10,A13           ; |67| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 73,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  73 | if( pInput && pBufGradX && pBufGradY && pBufMag && pScratch && pBufOut
;     | && pBufOut_cn ) {                                                      
;  74 |     uint32_t    fail, i, j;                                            
;  76 |     uint16_t    new_width;                                             
;  77 |     uint16_t    new_height;                                            
;  78 |     uint8_t    *listptr;                                               
;  79 |     uint16_t    conv_window_size=7;                                    
;  80 |     int16_t *restrict    pGx;                                          
;  81 |     int16_t *restrict    pGy;                                          
;  82 |     int16_t *restrict    pMag;                                         
;  83 |     uint8_t              *pOut;                                        
;  86 |     const int8_t    gaussian_7x7[49] =                                 
;  88 |         0, 0,  0,  0,  0, 0, 0,                                        
;  89 |         0, 0,  0,  0,  0, 0, 0,                                        
;  90 |         0, 0, 16, 32, 16, 0, 0,                                        
;  91 |         0, 0, 32, 64, 32, 0, 0,                                        
;  92 |         0, 0, 16, 32, 16, 0, 0,                                        
;  93 |         0, 0,  0,  0,  0, 0, 0,                                        
;  94 |         0, 0,  0,  0,  0, 0, 0                                         
;  95 |     };                                                                 
;  98 |     VLIB_fillBuffer(prm[tpi].testPattern,                              
;  99 |                     (uint8_t)127,                                      
; 100 |                     pInput, prm[tpi].input,                            
; 101 |                     prm[tpi].width, prm[tpi].height, prm[tpi].width,   
; 102 |                     sizeof(uint8_t), testPatternString);               
; 105 |     memset(pBufGradX,  0, bufferSize * sizeof(int16_t));               
; 106 |     memset(pBufGradY,  0, bufferSize * sizeof(int16_t));               
; 107 |     memset(pBufMag,    0, bufferSize * sizeof(int16_t));               
; 108 |     memset(pBufOut,    0, bufferSize * sizeof(uint8_t));               
; 109 |     memset(pScratch,   0, bufferSize * sizeof(uint8_t));               
; 111 |     if( LevelOfFeedback > 0 ) {                                        
; 113 |         printf("\nDisplay the original 8-bit input image:\n\n");       
; 115 |         for( i=0; i < prm[tpi].height; i++ ) {                         
; 116 |             for( j=0; j < prm[tpi].width; j++ ) {                      
; 117 |                 printf("%3d", pInput[i * prm[tpi].width + j]);         
; 119 |             printf("\n");                                              
; 123 |     new_height = prm[tpi].height - (conv_window_size - 1);  /* Output h
;     | eight of convolution */                                                
; 124 |     new_width = prm[tpi].width - (conv_window_size - 1);    /* Output w
;     | idth of convolution */                                                 
; 126 |     VLIB_conv_7x7_i8_c8s_cn(pInput,                                    
; 127 |                          pScratch,                                     
; 128 |                          prm[tpi].width * (new_height) - 6,            
; 129 |                          prm[tpi].width,                               
; 130 |                          gaussian_7x7,                                 
; 131 |                          8);                                           
; 133 |     if( LevelOfFeedback > 0 ) {                                        
; 135 |         printf("\nDisplay the smoothed 8-bit input image:\n\n");       
; 137 |         for( i=0; i < prm[tpi].height; i++ ) {                         
; 138 |             for( j=0; j < prm[tpi].width; j++ ) {                      
; 139 |                 printf("%3d", pScratch[i * prm[tpi].width + j]);       
; 141 |             printf("\n");                                              
; 145 |     pGx  = pBufGradX +                                                 
; 146 |            prm[tpi].width * (conv_window_size - 1) / 2 + (conv_window_s
;     | ize - 1) / 2 + /* Convolution border */                                
; 147 |            (prm[tpi].width + 1); /* xyGradients border */              
; 148 |     pGy  = pBufGradY +                                                 
; 149 |            prm[tpi].width * (conv_window_size - 1) / 2 + (conv_window_s
;     | ize - 1) / 2 + /* Convolution border */                                
; 150 |            (prm[tpi].width + 1); /* xyGradients border */              
; 151 |     pMag = pBufMag   +                                                 
; 152 |            prm[tpi].width * (conv_window_size - 1) / 2 + (conv_window_s
;     | ize - 1) / 2 + /* Convolution border */                                
; 153 |            (prm[tpi].width + 1); /* xyGradients border */              
; 155 |     VLIB_xyGradientsAndMagnitude_cn(pScratch,                          
; 156 |                                  pGx,                                  
; 157 |                                  pGy,                                  
; 158 |                                  pMag,                                 
; 159 |                                  prm[tpi].width,                       
; 160 |                                  new_height);                          
; 162 |     if( LevelOfFeedback > 0 ) {                                        
; 164 |         printf("\nDisplay the 16-bit Gradient Magnitude image:\n\n");  
; 166 |         for( i=0; i < prm[tpi].height; i++ ) {                         
; 167 |             for( j=0; j < prm[tpi].width; j++ ) {                      
; 168 |                 printf("%3d", pBufMag[i * prm[tpi].width + j]);        
; 170 |             printf("\n");                                              
; 175 |     new_height -= 2;                                                   
; 176 |     new_width  -= 2;                                                   
; 177 |     pOut = pBufOut +                                                   
; 178 |            prm[tpi].width * (conv_window_size - 1) / 2 + (conv_window_s
;     | ize - 1) / 2 + /* Convolution border */                                
; 179 |            (2 * prm[tpi].width + 2); /* xyGradients and nonMaxSuppressi
;     | on border */                                                           
; 181 |     VLIB_nonMaximumSuppressionCanny_cn(pMag,                           
; 182 |                                        pGx,                            
; 183 |                                        pGy,                            
; 184 |                                        pOut,                           
; 185 |                                        new_width,                      
; 186 |                                        prm[tpi].width,                 
; 187 |                                        new_height);                    
; 189 |     if( LevelOfFeedback > 0 ) {                                        
; 191 |         printf("\nDisplay the edge map after Non-Maximum Suppression:\n
;     | \n");                                                                  
; 193 |         for( i=0; i < prm[tpi].height; i++ ) {                         
; 194 |             for( j=0; j < prm[tpi].width; j++ ) {                      
; 195 |                 printf("%3d", pBufOut[i * prm[tpi].width + j]);        
; 197 |             printf("\n");                                              
; 201 |     listptr   = (uint8_t *) pGx;                                       
; 202 |     pMag += (prm[tpi].width + 1); /* nonMaxSuppression border */       
; 203 |     new_height -= 2;                                                   
; 204 |     new_width  -= 2;                                                   
; 208 |     memcpy(pBufOut_cn, pBufOut, bufferSize * sizeof(uint8_t));         
; 211 |     VLIB_profile_start(vlib_KERNEL_OPT);                               
; 212 |     VLIB_hysteresisThresholding(pMag,                                  
; 213 |                                 pOut,                                  
; 214 |                                 listptr,                               
; 215 |                                 new_height,                            
; 216 |                                 new_width,                             
; 217 |                                 prm[tpi].width,                        
; 218 |                                 prm[tpi].loThresh,                     
; 219 |                                 prm[tpi].hiThreshold);                 
; 220 |     VLIB_profile_stop();                                               
; 222 | #if 0       /* Normally, we would also do the following step in the app
;     | lication, but so that we verify the raw output of                      
; 223 |        VLIB_hysteresisThresholding we need to compare before this step
;     | */                                                                     
; 225 |     for( i=prm[tpi].width * 5; i < prm[tpi].width * (prm[tpi].height -
;     | 5); i++ ) {                                                            
; 226 |         pBufOut[i] = (pBufOut[i] >> 7) * 255;                          
; 228 | #endif                                                                 
; 231 |     pOut = pBufOut_cn +                                                
; 232 |            prm[tpi].width * (conv_window_size - 1) / 2 + (conv_window_s
;     | ize - 1) / 2 + /* Convolution border */                                
; 233 |            (2 * prm[tpi].width + 2); /* xyGradients and nonMaxSuppressi
;     | on border */                                                           
; 236 |     VLIB_profile_start(vlib_KERNEL_CN);                                
; 237 |     VLIB_hysteresisThresholding_cn(pMag,                               
; 238 |                                 pOut,                                  
; 239 |                                 listptr,                               
; 240 |                                 new_height,                            
; 241 |                                 new_width,                             
; 242 |                                 prm[tpi].width,                        
; 243 |                                 prm[tpi].loThresh,                     
; 244 |                                 prm[tpi].hiThreshold);                 
; 245 |     VLIB_profile_stop();                                               
; 247 | #if 0       /* Normally, we would also do the following step in the app
;     | lication, but so that we verify the raw output of                      
; 248 |        VLIB_hysteresisThresholding we need to compare before this step
;     | */                                                                     
; 250 |     for( i=prm[tpi].width * 5; i < prm[tpi].width * (prm[tpi].height -
;     | 5); i++ ) {                                                            
; 251 |         pBufOut_cn[i] = (pBufOut_cn[i] >> 7) * 255;                    
; 253 | #endif                                                                 
; 256 |     if( LevelOfFeedback > 0 ) {                                        
; 257 |         printf("\nDisplay the final edge map after Hysteresis:\n\n");  
; 258 |         for( i=0; i < prm[tpi].height; i++ ) {                         
; 259 |             for( j=0; j < prm[tpi].width; j++ ) {                      
; 260 |                 if( pBufOut[i * prm[tpi].width + j] == pBufOut_cn[i * p
;     | rm[tpi].width + j] ) {                                                 
; 261 |                     printf("%3d", pBufOut[i * prm[tpi].width + j]);    
; 262 |                 } else {                                               
; 263 |                     printf("***");                                     
; 266 |             printf("\n");                                              
; 271 |     status_nat_vs_int = VLIB_compare_mem((void *) pBufOut, (void *)pBuf
;     | Out_cn, bufferSize * sizeof(uint8_t));                                 
; 274 |     if( prm[tpi].refOutput != NULL ) {                                 
; 275 |         status_nat_vs_ref = VLIB_compare_mem((void *) prm[tpi].refOutpu
;     | t, (void *)pBufOut_cn, bufferSize * sizeof(uint8_t));                  
; 279 |     fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_r
;     | ef == vlib_KERNEL_FAIL)) ? 1 : 0;                                      
; 281 |     est_test=1;                                                        
; 284 |     sprintf(desc, "%s generated input | Opt results compared to NatC re
;     | sults | width=%d, height=%d",                                          
; 285 |             testPatternString, new_width, new_height);                 
; 286 |     VLIB_formula_add_test(new_width*new_height, NULL, NULL, fail, desc,
;     |  NULL);                                                                
; 288 | } else {                                                               
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(96),A2       ; |73| 
           LDW     .D2T2   *+SP(104),B0      ; |73| 
           LDW     .D2T1   *+SP(108),A1      ; |73| 
           LDW     .D2T2   *+SP(112),B2      ; |73| 

           STW     .D2T1   A4,*+SP(120)      ; |70| 
||         ZERO    .L1     A4                ; |73| 

   [ A2]   MVK     .L2     0x1,B4            ; |73| 
|| [ A0]   MVK     .L1     0x1,A4            ; |73| 
||         LDW     .D2T1   *+SP(116),A2      ; |73| 

           LDW     .D2T2   *+SP(120),B1      ; |73| 
|| [ B0]   MVK     .L1     0x1,A3            ; |73| 

           AND     .L2X    A4,B4,B5          ; |73| 
||         ZERO    .L1     A4                ; |73| 
||         ZERO    .S2     B4                ; |73| 

   [ B2]   MVK     .L1     0x1,A4            ; |73| 
|| [ A1]   MVK     .L2     0x1,B4            ; |73| 
||         AND     .S2X    A3,B5,B5          ; |73| 
||         ZERO    .S1     A3                ; |73| 

           AND     .L2     B4,B5,B5          ; |73| 
||         ZERO    .S2     B4                ; |73| 

   [ A2]   MVK     .L2     0x1,B4            ; |73| 
||         AND     .S2X    A4,B5,B5          ; |73| 

   [ B1]   MVK     .L1     0x1,A3            ; |73| 
           AND     .L2     B4,B5,B4          ; |73| 
           AND     .L2X    A3,B4,B0          ; |73| 

   [!B0]   B       .S2     $C$L34            ; |73| 
|| [!B0]   LDHU    .D2T2   *+B12(12),B5      ; |290| 
|| [ B0]   MVKL    .S1     $P$T0$1,A3

$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("memcpy")
	.dwattr $C$DW$205, DW_AT_TI_call

   [ B0]   CALL    .S2     memcpy            ; |86| 
|| [!B0]   LDHU    .D2T2   *+B12(14),B4      ; |290| 
|| [!B0]   MVKL    .S1     desc,A4

   [!B0]   MVKL    .S2     $C$SL11+0,B6
   [ B0]   MVKH    .S1     $P$T0$1,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 290,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | sprintf(desc, "width=%d, height=%d",                                   
; 291 |         prm[tpi].width, prm[tpi].height);                              
; 292 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call
   [!B0]   CALL    .S1     sprintf           ; |290| 
   [!B0]   MVKH    .S2     $C$SL11+0,B6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 73,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L34}        ; |73| 
$C$DW$L$VLIB_hysteresisThresholding_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$8$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 86	-----------------------    gaussian_7x7 = $P$T0$1;
;** 98	-----------------------    C$16 = (*U$13).width;
;** 98	-----------------------    VLIB_fillBuffer((*U$13).testPattern, (unsigned char)K$50, (void *)pInput, (*U$13).input, C$16, (*U$13).height, C$16, 1u, K$46);
;** 105	-----------------------    memset((void *)pBufGradX, 0, U$20);
;** 106	-----------------------    memset((void *)pBufGradY, 0, U$20);
;** 107	-----------------------    memset((void *)pBufMag, 0, U$20);
;** 108	-----------------------    memset((void *)pBufOut, 0, bufferSize);
;** 109	-----------------------    memset((void *)pScratch, 0, bufferSize);
;**  	-----------------------    K$95 = 0xfffffffau;
;**  	-----------------------    K$141 = &cycles[0];
;** 58	-----------------------    status_nat_vs_ref = 1;
;** 111	-----------------------    if ( !LevelOfFeedback ) goto g11;

           ADDAW   .D1X    SP,6,A4           ; |86| 
||         MVK     .S1     0x31,A6           ; |86| 
||         MV      .L2X    A3,B4             ; |86| 
||         ADDKPC  .S2     $C$RL9,B3,0       ; |86| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 86,column 29,is_stmt,isa 0
$C$RL9:    ; CALL OCCURS {memcpy} {0}        ; |86| 
$C$DW$L$VLIB_hysteresisThresholding_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$9$B:
;          EXCLUSIVE CPU CYCLES: 42
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 98,column 13,is_stmt,isa 0
           LDHU    .D2T2   *+B12(12),B5      ; |98| 
           LDBU    .D2T1   *B12,A4           ; |98| 
           LDW     .D2T1   *+SP(96),A6       ; |98| 
           MVK     .S2     0x7f,B4
           LDW     .D2T2   *+B12(4),B6       ; |98| 

           MVKL    .S1     testPatternString,A12
||         MV      .L1X    B5,A8             ; |98| 
||         EXTU    .S2     B4,24,24,B4       ; |98| 

$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$207, DW_AT_TI_call

           CALLP   .S2     VLIB_fillBuffer,B3
||         LDHU    .D2T2   *+B12(14),B8      ; |98| 
||         MV      .L1X    B5,A10            ; |98| 
||         MVKH    .S1     testPatternString,A12
||         MVK     .L2     0x1,B10           ; |98| 

$C$RL10:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |98| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("memset")
	.dwattr $C$DW$208, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(100),A4      ; |105| 
||         ZERO    .L2     B4                ; |105| 
||         MV      .L1     A13,A6            ; |105| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 105,column 13,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {memset} {0}        ; |105| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("memset")
	.dwattr $C$DW$209, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(104),A4      ; |106| 
||         ZERO    .L2     B4                ; |106| 
||         MV      .L1     A13,A6            ; |106| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 106,column 13,is_stmt,isa 0
$C$RL12:   ; CALL OCCURS {memset} {0}        ; |106| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("memset")
	.dwattr $C$DW$210, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(108),A4      ; |107| 
||         ZERO    .L2     B4                ; |107| 
||         MV      .L1     A13,A6            ; |107| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 107,column 13,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {memset} {0}        ; |107| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("memset")
	.dwattr $C$DW$211, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(116),A4      ; |108| 
||         ZERO    .L2     B4                ; |108| 
||         MV      .L1X    B11,A6            ; |108| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 108,column 13,is_stmt,isa 0
$C$RL14:   ; CALL OCCURS {memset} {0}        ; |108| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("memset")
	.dwattr $C$DW$212, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(112),A4      ; |109| 
||         ZERO    .L2     B4                ; |109| 
||         MV      .L1X    B11,A6            ; |109| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 109,column 13,is_stmt,isa 0
$C$RL15:   ; CALL OCCURS {memset} {0}        ; |109| 
$C$DW$L$VLIB_hysteresisThresholding_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$10$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(88),A0
           MV      .L2     B10,B5            ; |109| 
           STW     .D2T2   B5,*+SP(92)
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 111,column 13,is_stmt,isa 0
   [!A0]   B       .S1     $C$L5             ; |111| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 113,column 17,is_stmt,isa 0
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("printf")
	.dwattr $C$DW$213, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |113| 
   [!A0]   LDW     .D2T2   *+SP(20),B10
   [ A0]   MVKL    .S2     $C$SL2+0,B4
   [ A0]   MVKH    .S2     $C$SL2+0,B4
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 111,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |111| 
$C$DW$L$VLIB_hysteresisThresholding_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$11$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 113	-----------------------    printf((const char *)"\nDisplay the original 8-bit input image:\n\n");
;** 115	-----------------------    v$1 = prm;
;** 115	-----------------------    if ( !(*U$13).height ) goto g12;

           STW     .D2T2   B4,*+SP(4)        ; |113| 
||         ADDKPC  .S2     $C$RL16,B3,0      ; |113| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 113,column 17,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {printf} {0}        ; |113| 
$C$DW$L$VLIB_hysteresisThresholding_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$12$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 27,is_stmt,isa 0
           LDHU    .D2T2   *+B12(14),B0      ; |115| 
           LDW     .D2T2   *+SP(20),B10      ; |115| 
           SHL     .S1     A11,4,A3
           ADDAW   .D1     A3,A11,A3
           NOP             1
   [!B0]   B       .S1     $C$L6             ; |115| 
           ADD     .L1X    B10,A3,A3
   [ B0]   LDHU    .D1T1   *+A3(12),A10
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 22,is_stmt,isa 0
   [ B0]   ZERO    .L1     A13               ; |115| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |115| 
$C$DW$L$VLIB_hysteresisThresholding_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$13$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    C$15 = &v$1[tpi];
;**  	-----------------------    U$63 = (*C$15).width;
;** 116	-----------------------    L$1 = (unsigned)(*C$15).height;
;** 115	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 117,column 25,is_stmt,isa 0
           LDW     .D2T1   *+SP(96),A4       ; |117| 

           MPY32   .M1     A13,A10,A14
||         MV      .L1     A10,A0
||         LDHU    .D1T1   *+A3(14),A15      ; |116| 

   [ A0]   MVKL    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 116,column 26,is_stmt,isa 0
   [ A0]   ZERO    .L1     A12               ; |116| 
   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 117,column 25,is_stmt,isa 0
           ADD     .L1     A14,A12,A3        ; |117| 
$C$DW$L$VLIB_hysteresisThresholding_d$13$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L2
;** --------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 22,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$14$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g7:
;** 116	-----------------------    if ( !U$63 ) goto g10;

   [!A0]   BNOP    .S1     $C$L4,4           ; |116| 
|| [ A0]   STW     .D2T2   B4,*+SP(4)        ; |117| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 117,column 25,is_stmt,isa 0
   [ A0]   LDBU    .D1T1   *+A3[A4],A3       ; |117| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 116,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |116| 
$C$DW$L$VLIB_hysteresisThresholding_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$15$B:
;**  	-----------------------    U$70 = U$63*i;
;** 116	-----------------------    j = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)
$C$DW$L$VLIB_hysteresisThresholding_d$15$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 116,column 26,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$16$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g9:
;** 117	-----------------------    printf((const char *)"%3d", (int)pInput[(int)j+U$70]);
;** 116	-----------------------    if ( (unsigned)U$63 > (++j) ) goto g9;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 117,column 25,is_stmt,isa 0
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("printf")
	.dwattr $C$DW$214, DW_AT_TI_call
           CALL    .S1     printf            ; |117| 
           ADDKPC  .S2     $C$RL17,B3,3      ; |117| 
           STW     .D2T1   A3,*+SP(8)        ; |117| 
$C$RL17:   ; CALL OCCURS {printf} {0}        ; |117| 
$C$DW$L$VLIB_hysteresisThresholding_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$17$B:
;          EXCLUSIVE CPU CYCLES: 8

           ADD     .L1     1,A12,A12         ; |116| 
||         LDW     .D2T1   *+SP(96),A4       ; |117| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 116,column 31,is_stmt,isa 0
           CMPGTU  .L1     A10,A12,A0        ; |116| 

   [ A0]   BNOP    .S1     $C$L3,2           ; |116| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4
|| [ A0]   ADD     .L1     A14,A12,A3        ; |117| 

   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 117,column 25,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |117| 
   [ A0]   LDBU    .D1T1   *+A3[A4],A3       ; |117| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 116,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |116| 
$C$DW$L$VLIB_hysteresisThresholding_d$17$E:
;** --------------------------------------------------------------------------*
$C$L4:    
$C$DW$L$VLIB_hysteresisThresholding_d$18$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g10:
;** 119	-----------------------    printf((const char *)"\n");
;** 115	-----------------------    ++i;
;** 115	-----------------------    if ( L$1 = L$1-1 ) goto g7;
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("printf")
	.dwattr $C$DW$215, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |119| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 119,column 21,is_stmt,isa 0
$C$RL18:   ; CALL OCCURS {printf} {0}        ; |119| 
$C$DW$L$VLIB_hysteresisThresholding_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$19$B:
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1     A15,1,A0          ; |115| 
||         ADD     .S1     1,A13,A13         ; |115| 
||         LDW     .D2T1   *+SP(96),A4       ; |117| 
||         SUB     .D1     A15,1,A15         ; |115| 

   [ A0]   BNOP    .S1     $C$L2,1           ; |115| 
||         MPY32   .M1     A13,A10,A14
||         MV      .L1     A0,A1             ; guard predicate rewrite
||         MV      .D1     A10,A0

   [ A0]   MVKL    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 116,column 26,is_stmt,isa 0
   [ A0]   ZERO    .L1     A12               ; |116| 
   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 117,column 25,is_stmt,isa 0
           ADD     .L1     A14,A12,A3        ; |117| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L2}         ; |115| 
$C$DW$L$VLIB_hysteresisThresholding_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$20$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 115	-----------------------    goto g12;

           BNOP    .S1     $C$L7,4           ; |115| 
||         LDW     .D2T2   *+SP(80),B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           ADD     .L2     B10,B4,B4         ; |123| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 27,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L7}           ; |115| 
$C$DW$L$VLIB_hysteresisThresholding_d$20$E:
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 111,column 13,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$21$B:
;**	-----------------------g11:
;**  	-----------------------    v$1 = prm;
$C$DW$L$VLIB_hysteresisThresholding_d$21$E:
;** --------------------------------------------------------------------------*
$C$L6:    
$C$DW$L$VLIB_hysteresisThresholding_d$22$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(80),B4
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           ADD     .L2     B10,B4,B4         ; |123| 
$C$DW$L$VLIB_hysteresisThresholding_d$22$E:
;** --------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 115,column 27,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$23$B:
;          EXCLUSIVE CPU CYCLES: 13
;**	-----------------------g12:
;** 123	-----------------------    C$14 = U$12+v$1;
;** 123	-----------------------    C$13 = (*C$14).height-6;
;** 123	-----------------------    new_height = C$13;
;** 124	-----------------------    C$12 = (*C$14).width;
;** 124	-----------------------    new_width = C$12-6;
;** 126	-----------------------    VLIB_conv_7x7_i8_c8s_cn(pInput, pScratch, _mpyu(C$12, C$13)+K$95, (short)C$12, &gaussian_7x7, 8);
;** 133	-----------------------    if ( !LevelOfFeedback ) goto g19;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           LDHU    .D2T2   *+B4(14),B5       ; |123| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 124,column 13,is_stmt,isa 0
           LDHU    .D2T2   *+B4(12),B10      ; |124| 
           MVK     .L2     0xfffffffa,B31
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 126,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(96),A4       ; |126| 
           MVK     .L2     0x8,B8            ; |126| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           SUB     .L2     B5,6,B13          ; |123| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 126,column 13,is_stmt,isa 0
           MPYU    .M2     B10,B13,B4        ; |126| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("VLIB_conv_7x7_i8_c8s_cn")
	.dwattr $C$DW$216, DW_AT_TI_call
           CALL    .S1     VLIB_conv_7x7_i8_c8s_cn ; |126| 

           ADD     .L2     B31,B4,B5         ; |126| 
||         LDW     .D2T2   *+SP(112),B4      ; |126| 

           EXT     .S2     B10,16,16,B6      ; |126| 
           MV      .L1X    B5,A6             ; |126| 
           ADDAW   .D1X    SP,6,A8           ; |126| 
           ADDKPC  .S2     $C$RL19,B3,0      ; |126| 
$C$RL19:   ; CALL OCCURS {VLIB_conv_7x7_i8_c8s_cn} {0}  ; |126| 
$C$DW$L$VLIB_hysteresisThresholding_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$24$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(88),A0       ; |123| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 124,column 13,is_stmt,isa 0
           SUB     .L1X    B10,6,A3          ; |124| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           EXTU    .S2     B13,16,16,B4      ; |123| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 124,column 13,is_stmt,isa 0
           EXTU    .S1     A3,16,16,A14      ; |124| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 123,column 13,is_stmt,isa 0
           MV      .L1X    B4,A12            ; |123| Define a twin register
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 133,column 13,is_stmt,isa 0
   [!A0]   B       .S1     $C$L11            ; |133| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 135,column 17,is_stmt,isa 0
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("printf")
	.dwattr $C$DW$217, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |135| 
   [!A0]   LDW     .D2T2   *+SP(20),B13
   [ A0]   MVKL    .S2     $C$SL5+0,B4
   [ A0]   MVKH    .S2     $C$SL5+0,B4
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 133,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |133| 
$C$DW$L$VLIB_hysteresisThresholding_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$25$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 135	-----------------------    printf((const char *)"\nDisplay the smoothed 8-bit input image:\n\n");
;** 137	-----------------------    v$1 = prm;
;** 137	-----------------------    if ( !(*U$13).height ) goto g20;

           STW     .D2T2   B4,*+SP(4)        ; |135| 
||         ADDKPC  .S2     $C$RL20,B3,0      ; |135| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 135,column 17,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {printf} {0}        ; |135| 
$C$DW$L$VLIB_hysteresisThresholding_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$26$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 27,is_stmt,isa 0
           LDHU    .D2T2   *+B12(14),B0      ; |137| 
           LDW     .D2T2   *+SP(20),B13      ; |137| 
           SHL     .S1     A11,4,A3
           ADDAW   .D1     A3,A11,A3
           NOP             1
   [!B0]   B       .S1     $C$L12            ; |137| 
           ADD     .L1X    B13,A3,A3
   [ B0]   LDHU    .D1T2   *+A3(12),B10
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 138,column 26,is_stmt,isa 0
   [ B0]   LDHU    .D1T1   *+A3(14),A4       ; |138| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |137| 
$C$DW$L$VLIB_hysteresisThresholding_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$27$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    C$11 = &v$1[tpi];
;**  	-----------------------    U$63 = (*C$11).width;
;** 138	-----------------------    L$2 = (unsigned)(*C$11).height;
;** 137	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 22,is_stmt,isa 0
           ZERO    .L1     A13               ; |137| 
           MV      .L1X    B10,A3

           MPY32   .M1     A13,A3,A15
||         MV      .L1X    B10,A0
||         STW     .D2T1   A4,*+SP(84)       ; |138| 

           LDW     .D2T1   *+SP(112),A3      ; |139| 
|| [ A0]   ZERO    .L1     A10               ; |138| 

   [ A0]   MVKL    .S2     $C$SL3+0,B4
   [ A0]   MVKH    .S2     $C$SL3+0,B4
$C$DW$L$VLIB_hysteresisThresholding_d$27$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L8
;** --------------------------------------------------------------------------*
$C$L8:    
$C$DW$L$VLIB_hysteresisThresholding_d$28$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g15:
;** 138	-----------------------    if ( !U$63 ) goto g18;

   [!A0]   BNOP    .S1     $C$L10,5          ; |138| 
||         ADD     .L1     A15,A10,A4        ; |139| 
|| [ A0]   STW     .D2T2   B4,*+SP(4)        ; |139| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 138,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |138| 
$C$DW$L$VLIB_hysteresisThresholding_d$28$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$29$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    U$70 = U$63*i;
;** 138	-----------------------    j = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 139,column 25,is_stmt,isa 0
           LDBU    .D1T1   *+A4[A3],A3       ; |139| 
$C$DW$L$VLIB_hysteresisThresholding_d$29$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L9:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 138,column 26,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$30$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g17:
;** 139	-----------------------    printf((const char *)"%3d", (int)pScratch[(int)j+U$70]);
;** 138	-----------------------    if ( (unsigned)U$63 > (++j) ) goto g17;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 139,column 25,is_stmt,isa 0
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("printf")
	.dwattr $C$DW$218, DW_AT_TI_call
           CALL    .S1     printf            ; |139| 
           ADDKPC  .S2     $C$RL21,B3,3      ; |139| 
           STW     .D2T1   A3,*+SP(8)        ; |139| 
$C$RL21:   ; CALL OCCURS {printf} {0}        ; |139| 
$C$DW$L$VLIB_hysteresisThresholding_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$31$B:
;          EXCLUSIVE CPU CYCLES: 8

           ADD     .L1     1,A10,A10         ; |138| 
||         LDW     .D2T1   *+SP(112),A3      ; |139| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 138,column 31,is_stmt,isa 0
           CMPGTU  .L1X    B10,A10,A0        ; |138| 

   [ A0]   BNOP    .S1     $C$L9,2           ; |138| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4
|| [ A0]   ADD     .L1     A15,A10,A4        ; |139| 

   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 139,column 25,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |139| 
   [ A0]   LDBU    .D1T1   *+A4[A3],A3       ; |139| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 138,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |138| 
$C$DW$L$VLIB_hysteresisThresholding_d$31$E:
;** --------------------------------------------------------------------------*
$C$L10:    
$C$DW$L$VLIB_hysteresisThresholding_d$32$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g18:
;** 141	-----------------------    printf((const char *)"\n");
;** 137	-----------------------    ++i;
;** 137	-----------------------    if ( L$2 = L$2-1 ) goto g15;
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("printf")
	.dwattr $C$DW$219, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |141| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 141,column 21,is_stmt,isa 0
$C$RL22:   ; CALL OCCURS {printf} {0}        ; |141| 
$C$DW$L$VLIB_hysteresisThresholding_d$32$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$33$B:
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T1   *+SP(84),A3       ; |141| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 27,is_stmt,isa 0
           ADD     .L1     1,A13,A13         ; |137| 
           NOP             3

           SUB     .L1     A3,1,A0           ; |137| 
||         SUB     .S1     A3,1,A3           ; |137| 

   [ A0]   B       .S1     $C$L8             ; |137| 
||         STW     .D2T1   A3,*+SP(84)       ; |137| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
||         MV      .D1X    B10,A0

   [ A0]   ZERO    .L1     A10               ; |138| 
||         MV      .S1X    B10,A3

           MPY32   .M1     A13,A3,A15
   [ A0]   MVKL    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 139,column 25,is_stmt,isa 0
           LDW     .D2T1   *+SP(112),A3      ; |139| 
   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L8}         ; |137| 
$C$DW$L$VLIB_hysteresisThresholding_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$34$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 137	-----------------------    goto g20;

           BNOP    .S1     $C$L13,1          ; |137| 
||         LDW     .D2T2   *+SP(80),B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 145,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(104),A3      ; |145| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 148,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(100),A31     ; |148| 
           LDW     .D2T2   *+SP(108),B31     ; |148| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 145,column 13,is_stmt,isa 0
           ADD     .L2     B13,B4,B4         ; |145| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 27,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L13}          ; |137| 
$C$DW$L$VLIB_hysteresisThresholding_d$34$E:
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 133,column 13,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$35$B:
;**	-----------------------g19:
;**  	-----------------------    v$1 = prm;
$C$DW$L$VLIB_hysteresisThresholding_d$35$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_hysteresisThresholding_d$36$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(80),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 148,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(108),B31     ; |148| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 145,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(104),A3      ; |145| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 148,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(100),A31     ; |148| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 145,column 13,is_stmt,isa 0
           ADD     .L2     B13,B4,B4         ; |145| 
$C$DW$L$VLIB_hysteresisThresholding_d$36$E:
;** --------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 137,column 27,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$37$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g20:
;** 145	-----------------------    C$9 = (*(U$12+v$1)).width;
;** 145	-----------------------    C$10 = (int)C$9<<3;
;** 145	-----------------------    pGx = pBufGradX+C$10+8;
;** 148	-----------------------    pGy = pBufGradY+C$10+8;
;** 151	-----------------------    pMag = pBufMag+C$10+8;
;** 155	-----------------------    VLIB_xyGradientsAndMagnitude_cn(pScratch, pGx, pGy, pMag, C$9, new_height);
;** 162	-----------------------    if ( !LevelOfFeedback ) goto g27;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 145,column 13,is_stmt,isa 0
           LDHU    .D2T2   *+B4(12),B6       ; |145| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 155,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(112),A4      ; |155| 
           MV      .L2X    A12,B8            ; |155| 
           NOP             2
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x04)
	.dwattr $C$DW$220, DW_AT_name("VLIB_xyGradientsAndMagnitude_cn")
	.dwattr $C$DW$220, DW_AT_TI_call

           SHL     .S2     B6,3,B5           ; |145| 
||         CALL    .S1     VLIB_xyGradientsAndMagnitude_cn ; |155| 
||         MV      .L1X    B6,A8             ; |155| 

           ADD     .L2X    B5,A3,B7          ; |148| 
||         ADD     .S2     B5,B31,B4         ; |151| 

           ADD     .L1X    B5,A31,A3         ; |145| 
||         ADD     .L2     8,B4,B6           ; |151| 
||         ADD     .S2     8,B4,B4           ; |151| 

           STW     .D2T2   B4,*+SP(128)      ; |155| 
||         ADD     .L1X    8,B7,A6           ; |148| 

           ADD     .L2X    8,A3,B4           ; |145| 
||         ADD     .L1     8,A3,A3           ; |145| 
||         ADD     .S1X    8,B7,A15          ; |148| 

           STW     .D2T1   A3,*+SP(124)      ; |155| 
||         ADDKPC  .S2     $C$RL23,B3,0      ; |155| 

$C$RL23:   ; CALL OCCURS {VLIB_xyGradientsAndMagnitude_cn} {0}  ; |155| 
$C$DW$L$VLIB_hysteresisThresholding_d$37$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$38$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(88),A0       ; |155| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 162,column 13,is_stmt,isa 0
   [!A0]   B       .S1     $C$L17            ; |162| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 164,column 17,is_stmt,isa 0
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("printf")
	.dwattr $C$DW$221, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |164| 
   [!A0]   LDW     .D2T2   *+SP(20),B13
   [ A0]   MVKL    .S2     $C$SL6+0,B4
   [ A0]   MVKH    .S2     $C$SL6+0,B4
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 162,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |162| 
$C$DW$L$VLIB_hysteresisThresholding_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$39$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 164	-----------------------    printf((const char *)"\nDisplay the 16-bit Gradient Magnitude image:\n\n");
;** 166	-----------------------    v$1 = prm;
;** 166	-----------------------    if ( !(*U$13).height ) goto g28;

           STW     .D2T2   B4,*+SP(4)        ; |164| 
||         ADDKPC  .S2     $C$RL24,B3,0      ; |164| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 164,column 17,is_stmt,isa 0
$C$RL24:   ; CALL OCCURS {printf} {0}        ; |164| 
$C$DW$L$VLIB_hysteresisThresholding_d$39$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$40$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 166,column 27,is_stmt,isa 0
           LDHU    .D2T2   *+B12(14),B0      ; |166| 
           LDW     .D2T2   *+SP(20),B13      ; |166| 
           SHL     .S1     A11,4,A3
           ADDAW   .D1     A3,A11,A3
           NOP             1
   [!B0]   B       .S1     $C$L18            ; |166| 
           ADD     .L1X    B13,A3,A4
   [ B0]   LDHU    .D1T1   *+A4(12),A31
           NOP             3
           ; BRANCHCC OCCURS {$C$L18}        ; |166| 
$C$DW$L$VLIB_hysteresisThresholding_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$41$B:
;          EXCLUSIVE CPU CYCLES: 8
;**  	-----------------------    C$8 = &v$1[tpi];
;**  	-----------------------    U$63 = (*C$8).width;
;** 167	-----------------------    L$3 = (unsigned)(*C$8).height;
;** 166	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 167,column 26,is_stmt,isa 0
           LDHU    .D1T1   *+A4(14),A3       ; |167| 
           STW     .D2T1   A31,*+SP(132)
           LDW     .D2T1   *+SP(132),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 166,column 22,is_stmt,isa 0
           ZERO    .L1     A13               ; |166| 
           LDW     .D2T2   *+SP(108),B31
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 167,column 26,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(84)       ; |167| 
           NOP             1
           MV      .L2X    A0,B4
$C$DW$L$VLIB_hysteresisThresholding_d$41$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L14
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 166,column 22,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$42$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g23:
;** 167	-----------------------    if ( !U$63 ) goto g26;

   [!A0]   BNOP    .S1     $C$L16,2          ; |167| 
||         MPY32   .M2X    A13,B4,B5
|| [ A0]   MVKL    .S2     $C$SL3+0,B4

   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 168,column 25,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |168| 
           ADDAH   .D2     B31,B5,B10
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 167,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |167| 
$C$DW$L$VLIB_hysteresisThresholding_d$42$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$43$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    U$116 = &pBufMag[U$63*i];
;** 167	-----------------------    j = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)

           ZERO    .L1     A10               ; |167| 
||         LDH     .D2T2   *B10++,B4         ; |168| 

$C$DW$L$VLIB_hysteresisThresholding_d$43$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L15:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 167,column 26,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$44$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g25:
;** 168	-----------------------    printf((const char *)"%3d", (int)*U$116++);
;** 167	-----------------------    if ( (unsigned)U$63 > (++j) ) goto g25;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 168,column 25,is_stmt,isa 0
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("printf")
	.dwattr $C$DW$222, DW_AT_TI_call
           CALL    .S1     printf            ; |168| 
           ADDKPC  .S2     $C$RL25,B3,3      ; |168| 
           STW     .D2T2   B4,*+SP(8)        ; |168| 
$C$RL25:   ; CALL OCCURS {printf} {0}        ; |168| 
$C$DW$L$VLIB_hysteresisThresholding_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$45$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 167,column 31,is_stmt,isa 0
           LDW     .D2T1   *+SP(132),A3      ; |167| 
           MVKL    .S2     $C$SL3+0,B4
           ADD     .L1     1,A10,A10         ; |167| 
           MVKH    .S2     $C$SL3+0,B4
           NOP             1
           CMPGTU  .L1     A3,A10,A0         ; |167| 

   [ A0]   BNOP    .S1     $C$L15,4          ; |167| 
|| [ A0]   STW     .D2T2   B4,*+SP(4)        ; |168| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 168,column 25,is_stmt,isa 0
   [ A0]   LDH     .D2T2   *B10++,B4         ; |168| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 167,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |167| 
$C$DW$L$VLIB_hysteresisThresholding_d$45$E:
;** --------------------------------------------------------------------------*
$C$L16:    
$C$DW$L$VLIB_hysteresisThresholding_d$46$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g26:
;** 170	-----------------------    printf((const char *)"\n");
;** 166	-----------------------    ++i;
;** 166	-----------------------    if ( L$3 = L$3-1 ) goto g23;
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("printf")
	.dwattr $C$DW$223, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |170| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 170,column 21,is_stmt,isa 0
$C$RL26:   ; CALL OCCURS {printf} {0}        ; |170| 
$C$DW$L$VLIB_hysteresisThresholding_d$46$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$47$B:
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T1   *+SP(84),A3       ; |170| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 166,column 27,is_stmt,isa 0
           ADD     .L1     1,A13,A13         ; |166| 
           NOP             3

           SUB     .L1     A3,1,A0           ; |166| 
||         SUB     .S1     A3,1,A3           ; |166| 

   [ A0]   BNOP    .S1     $C$L14,2          ; |166| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
||         LDW     .D2T1   *+SP(132),A0

           STW     .D2T1   A3,*+SP(84)       ; |166| 
   [ A1]   LDW     .D2T2   *+SP(108),B31
           MV      .L2X    A0,B4
           ; BRANCHCC OCCURS {$C$L14}        ; |166| 
$C$DW$L$VLIB_hysteresisThresholding_d$47$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$48$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 166	-----------------------    goto g28;

           BNOP    .S1     $C$L19,1          ; |166| 
||         LDW     .D2T2   *+SP(80),B4
||         SUB     .L1     A12,2,A3          ; |181| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 181,column 13,is_stmt,isa 0
           EXTU    .S1     A3,16,16,A12      ; |181| 
           LDW     .D2T1   *+SP(116),A3      ; |181| 
           MV      .L1     A12,A10           ; |181| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 177,column 13,is_stmt,isa 0
           ADD     .L2     B13,B4,B4         ; |177| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 166,column 27,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L19}          ; |166| 
$C$DW$L$VLIB_hysteresisThresholding_d$48$E:
;** --------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 162,column 13,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$49$B:
;**	-----------------------g27:
;**  	-----------------------    v$1 = prm;
$C$DW$L$VLIB_hysteresisThresholding_d$49$E:
;** --------------------------------------------------------------------------*
$C$L18:    
$C$DW$L$VLIB_hysteresisThresholding_d$50$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(80),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 181,column 13,is_stmt,isa 0
           SUB     .L1     A12,2,A3          ; |181| 
           EXTU    .S1     A3,16,16,A12      ; |181| 
           MV      .L1     A12,A10           ; |181| 
           LDW     .D2T1   *+SP(116),A3      ; |181| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 177,column 13,is_stmt,isa 0
           ADD     .L2     B13,B4,B4         ; |177| 
$C$DW$L$VLIB_hysteresisThresholding_d$50$E:
;** --------------------------------------------------------------------------*
$C$L19:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 166,column 27,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$51$B:
;          EXCLUSIVE CPU CYCLES: 13
;**	-----------------------g28:
;** 177	-----------------------    C$7 = (*(U$12+v$1)).width;
;** 177	-----------------------    pOut = &pBufOut[5*C$7+5];
;** 181	-----------------------    VLIB_nonMaximumSuppressionCanny_cn(pMag, pGx, pGy, pOut, new_width -= 2, C$7, new_height -= 2);
;** 189	-----------------------    if ( !LevelOfFeedback ) goto g35;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 177,column 13,is_stmt,isa 0
           LDHU    .D2T2   *+B4(12),B8       ; |177| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 181,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(128),A4      ; |181| 
           SUB     .L1     A14,2,A31         ; |181| 
           EXTU    .S1     A31,16,16,A14     ; |181| 
           MV      .L1     A14,A8            ; |181| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 177,column 13,is_stmt,isa 0
           MPYSU   .M2     5,B8,B4           ; |177| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 181,column 13,is_stmt,isa 0
           MV      .L1     A15,A6            ; |181| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x04)
	.dwattr $C$DW$224, DW_AT_name("VLIB_nonMaximumSuppressionCanny_cn")
	.dwattr $C$DW$224, DW_AT_TI_call

           ADD     .L2X    A3,B4,B4          ; |177| 
||         CALL    .S1     VLIB_nonMaximumSuppressionCanny_cn ; |181| 

           ADD     .L2     5,B4,B13          ; |177| 
||         ADD     .S2     5,B4,B6           ; |177| 
||         LDW     .D2T2   *+SP(124),B4      ; |181| 

           ADDKPC  .S2     $C$RL27,B3,3      ; |181| 
$C$RL27:   ; CALL OCCURS {VLIB_nonMaximumSuppressionCanny_cn} {0}  ; |181| 
$C$DW$L$VLIB_hysteresisThresholding_d$51$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$52$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(88),A0       ; |181| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 189,column 13,is_stmt,isa 0
   [!A0]   B       .S1     $C$L23            ; |189| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 191,column 17,is_stmt,isa 0
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("printf")
	.dwattr $C$DW$225, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |191| 
   [!A0]   LDW     .D2T2   *+SP(20),B10
   [ A0]   MVKL    .S2     $C$SL7+0,B4
   [ A0]   MVKH    .S2     $C$SL7+0,B4
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 189,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |189| 
$C$DW$L$VLIB_hysteresisThresholding_d$52$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$53$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 191	-----------------------    printf((const char *)"\nDisplay the edge map after Non-Maximum Suppression:\n\n");
;** 193	-----------------------    v$1 = prm;
;** 193	-----------------------    if ( !(*U$13).height ) goto g36;

           STW     .D2T2   B4,*+SP(4)        ; |191| 
||         ADDKPC  .S2     $C$RL28,B3,0      ; |191| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 191,column 17,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {printf} {0}        ; |191| 
$C$DW$L$VLIB_hysteresisThresholding_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$54$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 193,column 27,is_stmt,isa 0
           LDHU    .D2T2   *+B12(14),B0      ; |193| 
           LDW     .D2T2   *+SP(20),B10      ; |193| 
           SHL     .S1     A11,4,A3
           ADDAW   .D1     A3,A11,A3
           NOP             1
   [!B0]   B       .S1     $C$L24            ; |193| 
           ADD     .L1X    B10,A3,A4
   [ B0]   LDHU    .D1T1   *+A4(12),A31
           NOP             3
           ; BRANCHCC OCCURS {$C$L24}        ; |193| 
$C$DW$L$VLIB_hysteresisThresholding_d$54$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$55$B:
;          EXCLUSIVE CPU CYCLES: 8
;**  	-----------------------    C$6 = &v$1[tpi];
;**  	-----------------------    U$63 = (*C$6).width;
;** 194	-----------------------    L$4 = (unsigned)(*C$6).height;
;** 193	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 194,column 26,is_stmt,isa 0
           LDHU    .D1T1   *+A4(14),A3       ; |194| 
           STW     .D2T1   A31,*+SP(132)
           LDW     .D2T1   *+SP(132),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 193,column 22,is_stmt,isa 0
           ZERO    .L1     A13               ; |193| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 194,column 26,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(84)       ; |194| 

   [ A0]   ZERO    .L1     A10               ; |194| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4
||         MV      .S1     A0,A3

$C$DW$L$VLIB_hysteresisThresholding_d$55$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L20
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 193,column 22,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$56$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g31:
;** 194	-----------------------    if ( !U$63 ) goto g34;

   [!A0]   BNOP    .S1     $C$L22,3          ; |194| 
||         MPY32   .M1     A13,A3,A15
||         LDW     .D2T1   *+SP(116),A3      ; |195| 
|| [ A0]   MVKH    .S2     $C$SL3+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 195,column 25,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |195| 
           ADD     .L1     A15,A10,A4        ; |195| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 194,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L22}        ; |194| 
$C$DW$L$VLIB_hysteresisThresholding_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$57$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    U$70 = U$63*i;
;** 194	-----------------------    j = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 195,column 25,is_stmt,isa 0
           LDBU    .D1T1   *+A4[A3],A3       ; |195| 
$C$DW$L$VLIB_hysteresisThresholding_d$57$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L21:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 194,column 26,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$58$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g33:
;** 195	-----------------------    printf((const char *)"%3d", (int)pBufOut[(int)j+U$70]);
;** 194	-----------------------    if ( (unsigned)U$63 > (++j) ) goto g33;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 195,column 25,is_stmt,isa 0
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("printf")
	.dwattr $C$DW$226, DW_AT_TI_call
           CALL    .S1     printf            ; |195| 
           ADDKPC  .S2     $C$RL29,B3,3      ; |195| 
           STW     .D2T1   A3,*+SP(8)        ; |195| 
$C$RL29:   ; CALL OCCURS {printf} {0}        ; |195| 
$C$DW$L$VLIB_hysteresisThresholding_d$58$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$59$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 194,column 31,is_stmt,isa 0
           LDW     .D2T1   *+SP(132),A3      ; |194| 
           ADD     .L1     1,A10,A10         ; |194| 
           NOP             3

           CMPGTU  .L1     A3,A10,A0         ; |194| 
||         LDW     .D2T1   *+SP(116),A3      ; |195| 

   [ A0]   BNOP    .S1     $C$L21,2          ; |194| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4
|| [ A0]   ADD     .L1     A15,A10,A4        ; |195| 

   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 195,column 25,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |195| 
   [ A0]   LDBU    .D1T1   *+A4[A3],A3       ; |195| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 194,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L21}        ; |194| 
$C$DW$L$VLIB_hysteresisThresholding_d$59$E:
;** --------------------------------------------------------------------------*
$C$L22:    
$C$DW$L$VLIB_hysteresisThresholding_d$60$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g34:
;** 197	-----------------------    printf((const char *)"\n");
;** 193	-----------------------    ++i;
;** 193	-----------------------    if ( L$4 = L$4-1 ) goto g31;
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("printf")
	.dwattr $C$DW$227, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |197| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 197,column 21,is_stmt,isa 0
$C$RL30:   ; CALL OCCURS {printf} {0}        ; |197| 
$C$DW$L$VLIB_hysteresisThresholding_d$60$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$61$B:
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T1   *+SP(84),A3       ; |197| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 193,column 27,is_stmt,isa 0
           ADD     .L1     1,A13,A13         ; |193| 
           NOP             3

           SUB     .L1     A3,1,A0           ; |193| 
||         SUB     .S1     A3,1,A3           ; |193| 

   [ A0]   BNOP    .S1     $C$L20,3          ; |193| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
||         LDW     .D2T1   *+SP(132),A0

           STW     .D2T1   A3,*+SP(84)       ; |193| 

   [ A0]   ZERO    .L1     A10               ; |194| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4
||         MV      .S1     A0,A3

           ; BRANCHCC OCCURS {$C$L20}        ; |193| 
$C$DW$L$VLIB_hysteresisThresholding_d$61$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$62$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 193	-----------------------    goto g36;

           BNOP    .S1     $C$L25,4          ; |193| 
||         LDW     .D2T2   *+SP(80),B4

           ADD     .L2     B10,B4,B4         ; |202| 
||         LDW     .D2T1   *+SP(120),A4      ; |208| 

           ; BRANCH OCCURS {$C$L25}          ; |193| 
$C$DW$L$VLIB_hysteresisThresholding_d$62$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 189,column 13,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$63$B:
;**	-----------------------g35:
;**  	-----------------------    v$1 = prm;
$C$DW$L$VLIB_hysteresisThresholding_d$63$E:
;** --------------------------------------------------------------------------*
$C$L24:    
$C$DW$L$VLIB_hysteresisThresholding_d$64$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(80),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 208,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(120),A4      ; |208| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 202,column 13,is_stmt,isa 0
           ADD     .L2     B10,B4,B4         ; |202| 
$C$DW$L$VLIB_hysteresisThresholding_d$64$E:
;** --------------------------------------------------------------------------*
$C$L25:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 193,column 27,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$65$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g36:
;** 202	-----------------------    pMag = (*(U$12+v$1)).width*2+pMag+2;
;** 208	-----------------------    memcpy((void *)pBufOut_cn, (const void *)pBufOut, bufferSize);
;** 137	-----------------------    act_kernel = 0;  // [16]
;** 140	-----------------------    VLIB_cache_inval();  // [16]
;** 143	-----------------------    initStack(getSP());  // [16]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [16]
;** 212	-----------------------    VLIB_hysteresisThresholding(pMag, pOut, (unsigned char *)pGx, new_height -= 2, new_width -= 2, (*U$13).width, (*U$13).loThresh, (*U$13).hiThreshold);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [17]
;** 153	-----------------------    end_count = v$2;  // [17]
;** 156	-----------------------    C$5 = act_kernel;  // [17]
;** 156	-----------------------    *((C$5<<3)+K$141) = *((C$5<<3)+K$141)+(v$2-(beg_count+overhead));  // [17]
;** 159	-----------------------    setStackDepth();  // [17]
;** 231	-----------------------    pOut = &pBufOut_cn[5*(*U$13).width+5];
;** 137	-----------------------    act_kernel = 1;  // [16]
;** 140	-----------------------    VLIB_cache_inval();  // [16]
;** 143	-----------------------    initStack(getSP());  // [16]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [16]
;** 237	-----------------------    VLIB_hysteresisThresholding_cn(pMag, pOut, (unsigned char *)pGx, new_height, new_width, (*U$13).width, (*U$13).loThresh, (*U$13).hiThreshold);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [17]
;** 153	-----------------------    end_count = v$2;  // [17]
;** 156	-----------------------    C$4 = act_kernel;  // [17]
;** 156	-----------------------    *((C$4<<3)+K$141) = *((C$4<<3)+K$141)+(v$2-(beg_count+overhead));  // [17]
;** 159	-----------------------    setStackDepth();  // [17]
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("memcpy")
	.dwattr $C$DW$228, DW_AT_TI_call

           CALL    .S1     memcpy            ; |208| 
||         LDHU    .D2T2   *+B4(12),B10      ; |202| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 208,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(116),B4      ; |208| 
           ADDKPC  .S2     $C$RL31,B3,2      ; |208| 
           MV      .L1X    B11,A6            ; |208| 
$C$RL31:   ; CALL OCCURS {memcpy} {0}        ; |208| 
$C$DW$L$VLIB_hysteresisThresholding_d$65$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$66$B:
;          EXCLUSIVE CPU CYCLES: 122
           MVKL    .S1     act_kernel,A13

           MVKH    .S1     act_kernel,A13
||         ZERO    .L2     B4                ; |137| 

$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$229, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A13           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL32:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("getSP")
	.dwattr $C$DW$230, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("initStack")
	.dwattr $C$DW$231, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL34:   ; CALL OCCURS {initStack} {0}     ; |143| 
           LDW     .D2T2   *+SP(128),B4      ; |143| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 202,column 13,is_stmt,isa 0
           ADDAH   .D2     B4,B10,B4         ; |202| 
           NOP             1

           ADD     .L1X    2,B4,A15          ; |202| 
||         MVC     .S2     TSCL,B4           ; |146| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B5           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 212,column 13,is_stmt,isa 0
           SUB     .L1     A14,2,A3          ; |212| 

           LDW     .D2T1   *+SP(124),A6      ; |212| 
||         SUB     .L1     A12,2,A31         ; |212| 
||         EXTU    .S1     A3,16,16,A14      ; |212| 

           LDHU    .D2T2   *+B12(12),B8      ; |212| 
||         EXTU    .S1     A31,16,16,A12     ; |212| 

           LDBU    .D2T1   *+B12(16),A10     ; |212| 
||         MVKL    .S1     beg_count,A3

           LDBU    .D2T2   *+B12(17),B10     ; |212| 
||         MVKH    .S1     beg_count,A3

$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("VLIB_hysteresisThresholding")
	.dwattr $C$DW$232, DW_AT_TI_call

           CALLP   .S2     VLIB_hysteresisThresholding,B3
||         MV      .L2X    A12,B6            ; |212| 
||         STDW    .D1T2   B5:B4,*A3         ; |146| 
||         MV      .D2     B13,B4            ; |212| 
||         MV      .L1     A14,A8            ; |212| 
||         MV      .S1     A15,A4            ; |212| 

$C$RL35:   ; CALL OCCURS {VLIB_hysteresisThresholding} {0}  ; |212| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 

           MVKL    .S2     overhead,B13
||         MVKL    .S1     beg_count,A10

           MVKH    .S1     beg_count,A10
||         MVKH    .S2     overhead,B13
||         LDW     .D1T1   *A13,A16          ; |156| 

           LDDW    .D1T1   *A10,A7:A6        ; |156| 
||         LDDW    .D2T2   *B13,B5:B4        ; |156| 

           MVKL    .S1     cycles,A3
           MVKH    .S1     cycles,A3
           MVKL    .S1     end_count,A30
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A3[A16],A9:A8   ; |156| 
           ADDU    .L1X    B4,A6,A5:A4       ; |156| 
           ADD     .L1X    A5,B5,A3          ; |156| 
           ADD     .L1     A3,A7,A3          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 

           MVKH    .S1     end_count,A30
||         SUB     .L2X    B7,A3,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1     A5,A9,A6          ; |156| 
||         ADD     .D1X    B4,A31,A5         ; |156| 
||         MVKL    .S1     cycles,A3

           ADD     .L1     A6,A5,A5          ; |156| 
||         MVKH    .S1     cycles,A3
||         STDW    .D1T2   B7:B6,*A30        ; |153| 

$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("setStackDepth")
	.dwattr $C$DW$233, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A3[A16]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL36:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 

           MV      .L1     A13,A3            ; |137| 
||         MVK     .S1     1,A4              ; |137| 

$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$234, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         LDHU    .D2T2   *+B12(12),B10     ; |231| 
||         STW     .D1T1   A4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL37:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("getSP")
	.dwattr $C$DW$235, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL38:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("initStack")
	.dwattr $C$DW$236, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL39:   ; CALL OCCURS {initStack} {0}     ; |143| 
           LDW     .D2T1   *+SP(120),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 231,column 13,is_stmt,isa 0
           MPYSU   .M2     5,B10,B4          ; |231| 
           NOP             3
           ADD     .L2X    A3,B4,B4          ; |231| 

           ADD     .L2     5,B4,B4           ; |231| 
||         MVC     .S2     TSCL,B6           ; |146| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B7           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 237,column 13,is_stmt,isa 0
           LDBU    .D2T2   *+B12(17),B10     ; |237| 
           LDW     .D2T1   *+SP(124),A6      ; |237| 

           MV      .L1     A10,A13           ; |146| 
||         LDHU    .D2T2   *+B12(12),B8      ; |237| 

$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("VLIB_hysteresisThresholding_cn")
	.dwattr $C$DW$237, DW_AT_TI_call

           CALLP   .S2     VLIB_hysteresisThresholding_cn,B3
||         LDBU    .D2T1   *+B12(16),A10     ; |237| 
||         STDW    .D1T2   B7:B6,*A13        ; |146| 
||         MV      .L2X    A12,B6            ; |237| 
||         MV      .L1     A15,A4            ; |237| 
||         MV      .S1     A14,A8            ; |237| 

$C$RL40:   ; CALL OCCURS {VLIB_hysteresisThresholding_cn} {0}  ; |237| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |153| 
           MVC     .S2     TSCH,B5           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKH    .S1     act_kernel,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A3,A8            ; |156| 
           LDDW    .D2T2   *B13,B9:B8        ; |156| 
           LDDW    .D1T1   *A13,A5:A4        ; |156| 
           MVKL    .S1     cycles,A31
           MVKH    .S1     cycles,A31
           LDDW    .D1T1   *+A31[A8],A7:A6   ; |156| 
           MVKL    .S1     end_count,A30
           ADDU    .L2X    B8,A4,B7:B6       ; |156| 
           ADD     .L2     B7,B9,B8          ; |156| 

           ADD     .S2X    B8,A5,B8          ; |156| 
||         SUBU    .L2     B4,B6,B7:B6       ; |156| 

           EXT     .S2     B7,24,24,B9       ; |156| 
||         ADDU    .L2X    A6,B6,B7:B6       ; |156| 
||         SUB     .D2     B5,B8,B8          ; |156| 
||         MVKH    .S1     end_count,A30

           ADD     .L2X    B7,A7,B7          ; |156| 
||         ADD     .S2     B8,B9,B8          ; |156| 
||         MVKL    .S1     cycles,A3

           ADD     .L2     B7,B8,B7          ; |156| 
||         MVKH    .S1     cycles,A3
||         STDW    .D1T2   B5:B4,*A30        ; |153| 

$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("setStackDepth")
	.dwattr $C$DW$238, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B7:B6,*+A3[A8]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL41:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_hysteresisThresholding_d$66$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$67$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 256	-----------------------    if ( !LevelOfFeedback ) goto g46;
           LDW     .D2T1   *+SP(88),A0
           NOP             4

   [!A0]   B       .S1     $C$L32            ; |256| 
|| [!A0]   LDW     .D2T1   *+SP(116),A4      ; |271| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 257,column 17,is_stmt,isa 0
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("printf")
	.dwattr $C$DW$239, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |257| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 271,column 13,is_stmt,isa 0
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$240, DW_AT_TI_call
   [!A0]   CALL    .S1     VLIB_compare_mem  ; |271| 
   [!A0]   LDW     .D2T2   *+SP(120),B4      ; |271| 
   [ A0]   MVKL    .S2     $C$SL8+0,B4
   [ A0]   MVKH    .S2     $C$SL8+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 256,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L32}        ; |256| 
$C$DW$L$VLIB_hysteresisThresholding_d$67$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$68$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 257	-----------------------    printf((const char *)"\nDisplay the final edge map after Hysteresis:\n\n");
;** 258	-----------------------    if ( !(*U$13).height ) goto g46;

           STW     .D2T2   B4,*+SP(4)        ; |257| 
||         ADDKPC  .S2     $C$RL42,B3,0      ; |257| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 257,column 17,is_stmt,isa 0
$C$RL42:   ; CALL OCCURS {printf} {0}        ; |257| 
$C$DW$L$VLIB_hysteresisThresholding_d$68$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$69$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 258,column 27,is_stmt,isa 0
           LDHU    .D2T2   *+B12(14),B0      ; |258| 
           LDW     .D2T2   *+SP(20),B4
           NOP             3

   [ B0]   SHL     .S1     A11,4,A3
|| [!B0]   B       .S2     $C$L31            ; |258| 

   [ B0]   ADDAW   .D1     A3,A11,A3
           ADD     .L1X    B4,A3,A3
   [ B0]   LDHU    .D1T2   *+A3(12),B10
           NOP             2
           ; BRANCHCC OCCURS {$C$L31}        ; |258| 
$C$DW$L$VLIB_hysteresisThresholding_d$69$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$70$B:
;          EXCLUSIVE CPU CYCLES: 5
;**  	-----------------------    C$3 = tpi*20+prm;
;**  	-----------------------    U$63 = (*C$3).width;
;** 259	-----------------------    L$5 = (unsigned)(*C$3).height;
;** 258	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 258,column 22,is_stmt,isa 0
           ZERO    .L1     A13               ; |258| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 26,is_stmt,isa 0
           LDHU    .D1T2   *+A3(14),B13      ; |259| 
           MV      .L1X    B10,A0

   [ A0]   MV      .L1X    B10,A3
|| [ A0]   ZERO    .S1     A10               ; |259| 

   [ A0]   MPY32   .M1     A13,A3,A15
$C$DW$L$VLIB_hysteresisThresholding_d$70$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L26
;** --------------------------------------------------------------------------*
$C$L26:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 258,column 22,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$71$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g39:
;** 259	-----------------------    if ( !U$63 ) goto g45;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 31,is_stmt,isa 0
   [!A0]   BNOP    .S1     $C$L30,5          ; |259| 
           ; BRANCHCC OCCURS {$C$L30}        ; |259| 
$C$DW$L$VLIB_hysteresisThresholding_d$71$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$72$B:
;**  	-----------------------    U$70 = U$63*i;
;** 259	-----------------------    j = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)
$C$DW$L$VLIB_hysteresisThresholding_d$72$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$73$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 260,column 25,is_stmt,isa 0
           LDW     .D2T1   *+SP(120),A3      ; |260| 

           LDW     .D2T1   *+SP(116),A31     ; |260| 
||         ADD     .L1     A15,A10,A5        ; |260| 

$C$DW$L$VLIB_hysteresisThresholding_d$73$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L27:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 26,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$74$B:
;          EXCLUSIVE CPU CYCLES: 16
;**	-----------------------g41:
;** 260	-----------------------    C$2 = (int)j+U$70;
;** 260	-----------------------    U$129 = pBufOut[C$2];
;** 260	-----------------------    if ( U$129 == pBufOut_cn[C$2] ) goto g43;
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 260,column 25,is_stmt,isa 0
           LDBU    .D1T1   *+A5[A3],A4       ; |260| 
           LDBU    .D1T1   *+A5[A31],A3      ; |260| 
           NOP             4
           CMPEQ   .L1     A3,A4,A0          ; |260| 

   [ A0]   B       .S1     $C$L28            ; |260| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 263,column 29,is_stmt,isa 0
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("printf")
	.dwattr $C$DW$241, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |263| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 261,column 29,is_stmt,isa 0
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("printf")
	.dwattr $C$DW$242, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |261| 
   [!A0]   MVKL    .S2     $C$SL9+0,B4
   [!A0]   MVKH    .S2     $C$SL9+0,B4
   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 260,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L28}        ; |260| 
$C$DW$L$VLIB_hysteresisThresholding_d$74$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$75$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 263	-----------------------    printf((const char *)"***");
;** 263	-----------------------    goto g44;

           STW     .D2T2   B4,*+SP(4)        ; |263| 
||         ADDKPC  .S2     $C$RL43,B3,0      ; |263| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 263,column 29,is_stmt,isa 0
$C$RL43:   ; CALL OCCURS {printf} {0}        ; |263| 
$C$DW$L$VLIB_hysteresisThresholding_d$75$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$76$B:
;          EXCLUSIVE CPU CYCLES: 6

           B       .S1     $C$L29            ; |263| 
||         ADD     .L1     1,A10,A10         ; |259| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 31,is_stmt,isa 0
           CMPGTU  .L1X    B10,A10,A0        ; |259| 
   [ A0]   BNOP    .S1     $C$L27,3          ; |259| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 263,column 29,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L29}          ; |263| 
$C$DW$L$VLIB_hysteresisThresholding_d$76$E:
;** --------------------------------------------------------------------------*
$C$L28:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 260,column 25,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$77$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g43:
;** 261	-----------------------    printf((const char *)"%3d", (int)U$129);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 261,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |261| 

           STW     .D2T1   A3,*+SP(8)        ; |261| 
||         ADDKPC  .S2     $C$RL44,B3,0      ; |261| 

$C$RL44:   ; CALL OCCURS {printf} {0}        ; |261| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 31,is_stmt,isa 0
           ADD     .L1     1,A10,A10         ; |259| 
           CMPGTU  .L1X    B10,A10,A0        ; |259| 
   [ A0]   BNOP    .S1     $C$L27,3          ; |259| 
$C$DW$L$VLIB_hysteresisThresholding_d$77$E:
;** --------------------------------------------------------------------------*
$C$L29:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 263,column 29,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$78$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g44:
;** 259	-----------------------    if ( (unsigned)U$63 > (++j) ) goto g41;

   [ A0]   LDW     .D2T1   *+SP(120),A3      ; |260| 
|| [ A0]   ADD     .L1     A15,A10,A5        ; |260| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 260,column 25,is_stmt,isa 0
   [ A0]   LDW     .D2T1   *+SP(116),A31     ; |260| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L27}        ; |259| 
$C$DW$L$VLIB_hysteresisThresholding_d$78$E:
;** --------------------------------------------------------------------------*
$C$L30:    
$C$DW$L$VLIB_hysteresisThresholding_d$79$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g45:
;** 266	-----------------------    printf((const char *)"\n");
;** 258	-----------------------    ++i;
;** 258	-----------------------    if ( L$5 = L$5-1 ) goto g39;
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("printf")
	.dwattr $C$DW$243, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |266| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 266,column 21,is_stmt,isa 0
$C$RL45:   ; CALL OCCURS {printf} {0}        ; |266| 
$C$DW$L$VLIB_hysteresisThresholding_d$79$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$80$B:
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1X    B13,1,A0          ; |258| 
||         ADD     .S1     1,A13,A13         ; |258| 
||         SUB     .L2     B13,1,B13         ; |258| 

   [ A0]   BNOP    .S1     $C$L26,2          ; |258| 
||         MV      .L1X    B10,A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 259,column 26,is_stmt,isa 0
   [ A0]   ZERO    .L1     A10               ; |259| 
   [ A0]   MV      .L1X    B10,A3
   [ A0]   MPY32   .M1     A13,A3,A15
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 258,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L26}        ; |258| 
$C$DW$L$VLIB_hysteresisThresholding_d$80$E:
;** --------------------------------------------------------------------------*
$C$L31:    
$C$DW$L$VLIB_hysteresisThresholding_d$81$B:
;          EXCLUSIVE CPU CYCLES: 4
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$244, DW_AT_TI_call

           CALL    .S1     VLIB_compare_mem  ; |271| 
||         LDW     .D2T2   *+SP(120),B4      ; |271| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 271,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(116),A4      ; |271| 
           NOP             2
$C$DW$L$VLIB_hysteresisThresholding_d$81$E:
;** --------------------------------------------------------------------------*
$C$L32:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 256,column 13,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$82$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g46:
;** 271	-----------------------    status_nat_vs_int = VLIB_compare_mem((void *)pBufOut, (void *)pBufOut_cn, (int)bufferSize);
;** 274	-----------------------    C$1 = (*U$13).refOutput;
;** 274	-----------------------    if ( C$1 == NULL ) goto g48;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 271,column 13,is_stmt,isa 0
           MV      .L1X    B11,A6            ; |271| 
           ADDKPC  .S2     $C$RL46,B3,0      ; |271| 
$C$RL46:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |271| 
$C$DW$L$VLIB_hysteresisThresholding_d$82$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$83$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 274,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B12(8),B0       ; |274| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 271,column 13,is_stmt,isa 0
           MV      .L1     A4,A10            ; |271| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 274,column 13,is_stmt,isa 0
   [!B0]   BNOP    .S1     $C$L33,1          ; |274| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 275,column 17,is_stmt,isa 0
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$245, DW_AT_TI_call
   [ B0]   CALL    .S1     VLIB_compare_mem  ; |275| 
   [ B0]   LDW     .D2T2   *+SP(120),B4      ; |275| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 274,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L33}        ; |274| 
$C$DW$L$VLIB_hysteresisThresholding_d$83$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$84$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 275	-----------------------    status_nat_vs_ref = VLIB_compare_mem((void *)C$1, (void *)pBufOut_cn, (int)bufferSize);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 275,column 17,is_stmt,isa 0
           MV      .L1X    B0,A4             ; |275| 

           MV      .L1X    B11,A6            ; |275| 
||         ADDKPC  .S2     $C$RL47,B3,0      ; |275| 

$C$RL47:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |275| 
$C$DW$L$VLIB_hysteresisThresholding_d$84$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$85$B:
;          EXCLUSIVE CPU CYCLES: 1
           STW     .D2T1   A4,*+SP(92)       ; |275| 
$C$DW$L$VLIB_hysteresisThresholding_d$85$E:
;** --------------------------------------------------------------------------*
$C$L33:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 274,column 13,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$86$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g48:
;** 281	-----------------------    est_test = 1;
;** 284	-----------------------    sprintf(K$169, (const char *)"%s generated input | Opt results compared to NatC results | width=%d, height=%d", K$46, (int)new_width, (int)new_height);
;** 286	-----------------------    VLIB_formula_add_test((int)_mpyu(new_width, new_height), 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$169, 0);
;** 288	-----------------------    goto g50;
           MVKL    .S2     $C$SL10+0,B4

           MVKL    .S1     est_test,A4
||         MVKL    .S2     testPatternString,B5
||         STW     .D2T1   A14,*+SP(12)      ; |284| 

           MVKH    .S1     est_test,A4
||         MVK     .L1     1,A3              ; |281| 
||         MVKH    .S2     $C$SL10+0,B4
||         STW     .D2T1   A12,*+SP(16)      ; |284| 

           STW     .D1T1   A3,*A4            ; |281| 
||         MVKL    .S1     desc,A4
||         MVKH    .S2     testPatternString,B5
||         STW     .D2T2   B4,*+SP(4)        ; |284| 

$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("sprintf")
	.dwattr $C$DW$246, DW_AT_TI_call

           CALLP   .S2     sprintf,B3
||         MVKH    .S1     desc,A4
||         STW     .D2T2   B5,*+SP(8)        ; |284| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 284,column 13,is_stmt,isa 0
$C$RL48:   ; CALL OCCURS {sprintf} {0}       ; |284| 
$C$DW$L$VLIB_hysteresisThresholding_d$86$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$87$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 286,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(92),B4       ; |286| 
           CMPEQ   .L1     A10,0,A3          ; |286| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |286| 
           MPYU    .M1     A14,A12,A4        ; |286| 
           CMPEQ   .L2     B4,0,B4           ; |286| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x10)
	.dwattr $C$DW$247, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$247, DW_AT_TI_call

           OR      .L2X    B4,A3,B6          ; |286| 
||         ZERO    .D2     B4                ; |286| 
||         MVKH    .S1     desc,A8
||         ZERO    .L1     A6                ; |286| 
||         CALLP   .S2     VLIB_formula_add_test,B3

$C$RL49:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |286| 
$C$DW$L$VLIB_hysteresisThresholding_d$87$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$88$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 288,column 9,is_stmt,isa 0
           B       .S1     $C$L35            ; |288| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 296,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | free(pBufOut_cn);                                                      
;----------------------------------------------------------------------
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("free")
	.dwattr $C$DW$248, DW_AT_TI_call
           CALL    .S1     free              ; |296| 
           LDW     .D2T1   *+SP(120),A4      ; |296| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 288,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L35}          ; |288| 
$C$DW$L$VLIB_hysteresisThresholding_d$88$E:
;** --------------------------------------------------------------------------*
$C$L34:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 73,column 9,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$89$B:
;          EXCLUSIVE CPU CYCLES: 4
;**	-----------------------g49:
;** 290	-----------------------    sprintf(K$169, (const char *)"width=%d, height=%d", (int)(*U$13).width, (int)(*U$13).height);
;** 292	-----------------------    VLIB_skip_test(K$169);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 290,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(12)       ; |290| 
           STW     .D2T2   B5,*+SP(8)        ; |290| 
           MVKH    .S1     desc,A4

           ADDKPC  .S2     $C$RL50,B3,0      ; |290| 
||         STW     .D2T2   B6,*+SP(4)        ; |290| 

$C$RL50:   ; CALL OCCURS {sprintf} {0}       ; |290| 
$C$DW$L$VLIB_hysteresisThresholding_d$89$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$90$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$249, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 292,column 13,is_stmt,isa 0
$C$RL51:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |292| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 296,column 9,is_stmt,isa 0
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("free")
	.dwattr $C$DW$250, DW_AT_TI_call
           CALL    .S1     free              ; |296| 
           LDW     .D2T1   *+SP(120),A4      ; |296| 
           NOP             3
$C$DW$L$VLIB_hysteresisThresholding_d$90$E:
;** --------------------------------------------------------------------------*
$C$L35:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 288,column 9,is_stmt,isa 0
$C$DW$L$VLIB_hysteresisThresholding_d$91$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g50:
;** 296	-----------------------    free((void *)pBufOut_cn);
;** 297	-----------------------    VLIB_free((void *)pBufOut);
;** 298	-----------------------    VLIB_free((void *)pScratch);
;** 299	-----------------------    VLIB_free((void *)pBufMag);
;** 300	-----------------------    VLIB_free((void *)pBufGradY);
;** 301	-----------------------    VLIB_free((void *)pBufGradX);
;** 302	-----------------------    VLIB_free((void *)pInput);
;** 54	-----------------------    U$12 += 20;
;** 54	-----------------------    U$13 += 20;
;** 54	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 296,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL52,B3,0      ; |296| 
$C$RL52:   ; CALL OCCURS {free} {0}          ; |296| 
$C$DW$L$VLIB_hysteresisThresholding_d$91$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$92$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("VLIB_free")
	.dwattr $C$DW$251, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(116),A4      ; |297| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 297,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 297 | VLIB_free(pBufOut);                                                    
;----------------------------------------------------------------------
$C$RL53:   ; CALL OCCURS {VLIB_free} {0}     ; |297| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("VLIB_free")
	.dwattr $C$DW$252, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(112),A4      ; |298| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 298,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 298 | VLIB_free(pScratch);                                                   
;----------------------------------------------------------------------
$C$RL54:   ; CALL OCCURS {VLIB_free} {0}     ; |298| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("VLIB_free")
	.dwattr $C$DW$253, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(108),A4      ; |299| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 299,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 299 | VLIB_free(pBufMag);                                                    
;----------------------------------------------------------------------
$C$RL55:   ; CALL OCCURS {VLIB_free} {0}     ; |299| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("VLIB_free")
	.dwattr $C$DW$254, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(104),A4      ; |300| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 300,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | VLIB_free(pBufGradY);                                                  
;----------------------------------------------------------------------
$C$RL56:   ; CALL OCCURS {VLIB_free} {0}     ; |300| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("VLIB_free")
	.dwattr $C$DW$255, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(100),A4      ; |301| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 301,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | VLIB_free(pBufGradX);                                                  
;----------------------------------------------------------------------
$C$RL57:   ; CALL OCCURS {VLIB_free} {0}     ; |301| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("VLIB_free")
	.dwattr $C$DW$256, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(96),A4       ; |302| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 302,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | VLIB_free(pInput);                                                     
;----------------------------------------------------------------------
$C$RL58:   ; CALL OCCURS {VLIB_free} {0}     ; |302| 
$C$DW$L$VLIB_hysteresisThresholding_d$92$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_hysteresisThresholding_d$93$B:
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     test_cases,A3
||         LDW     .D2T2   *+SP(80),B4       ; |54| 

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |54| 
           ADDK    .S2     20,B12            ; |54| 
           ADD     .L1     1,A11,A11         ; |54| 
           ADDK    .S2     20,B4             ; |54| 
           STW     .D2T2   B4,*+SP(80)       ; |54| 
           CMPGT   .L1     A3,A11,A0         ; |54| 

   [ A0]   BNOP    .S1     $C$L1,2           ; |54| 
|| [ A0]   LDHU    .D2T2   *+B12(12),B5      ; |61| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 61,column 19,is_stmt,isa 0
   [ A0]   LDHU    .D2T2   *+B12(14),B4      ; |61| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 54,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |54| 
$C$DW$L$VLIB_hysteresisThresholding_d$93$E:
;** --------------------------------------------------------------------------*
$C$L36:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g51:
;** 306	-----------------------    VLIB_profile_cycle_report(1, NULL, "width * height");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [20]
;** 168	-----------------------    VLIB_stack_memory();  // [20]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL12+0,A6
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$257, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL12+0,A6
||         MVK     .L1     0x1,A4            ; |306| 
||         ZERO    .L2     B4                ; |306| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 306,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 306 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 307 |                           NULL,                                        
; 308 |                           "width * height");                           
; 311 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL59:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |306| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL13+0,B4
           MVKH    .S2     $C$SL13+0,B4
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_name("printf")
	.dwattr $C$DW$258, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL60:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$259, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL61:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c",line 312,column 1,is_stmt,isa 0
           ADDK    .S2     136,SP            ; |312| 
	.dwcfi	cfa_offset, 56
           LDW     .D2T2   *++SP(8),B3
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |312| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$261	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$261, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L1:1:1443280258")
	.dwattr $C$DW$261, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$261, DW_AT_TI_begin_line(0x36)
	.dwattr $C$DW$261, DW_AT_TI_end_line(0x12f)
$C$DW$262	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$262, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$5$B)
	.dwattr $C$DW$262, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$5$E)
$C$DW$263	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$263, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$89$B)
	.dwattr $C$DW$263, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$89$E)
$C$DW$264	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$264, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$84$B)
	.dwattr $C$DW$264, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$84$E)
$C$DW$265	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$265, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$70$B)
	.dwattr $C$DW$265, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$70$E)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$68$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$68$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$69$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$69$E)
$C$DW$268	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$268, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$63$B)
	.dwattr $C$DW$268, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$63$E)
$C$DW$269	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$269, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$49$B)
	.dwattr $C$DW$269, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$49$E)
$C$DW$270	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$270, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$35$B)
	.dwattr $C$DW$270, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$35$E)
$C$DW$271	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$271, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$21$B)
	.dwattr $C$DW$271, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$21$E)
$C$DW$272	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$272, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$6$B)
	.dwattr $C$DW$272, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$6$E)
$C$DW$273	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$273, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$7$B)
	.dwattr $C$DW$273, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$7$E)
$C$DW$274	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$274, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$8$B)
	.dwattr $C$DW$274, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$8$E)
$C$DW$275	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$275, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$9$B)
	.dwattr $C$DW$275, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$9$E)
$C$DW$276	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$276, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$10$B)
	.dwattr $C$DW$276, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$10$E)
$C$DW$277	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$277, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$11$B)
	.dwattr $C$DW$277, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$11$E)
$C$DW$278	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$278, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$12$B)
	.dwattr $C$DW$278, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$12$E)
$C$DW$279	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$279, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$13$B)
	.dwattr $C$DW$279, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$13$E)
$C$DW$280	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$280, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$20$B)
	.dwattr $C$DW$280, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$20$E)
$C$DW$281	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$281, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$22$B)
	.dwattr $C$DW$281, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$22$E)
$C$DW$282	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$282, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$23$B)
	.dwattr $C$DW$282, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$23$E)
$C$DW$283	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$283, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$24$B)
	.dwattr $C$DW$283, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$24$E)
$C$DW$284	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$284, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$25$B)
	.dwattr $C$DW$284, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$25$E)
$C$DW$285	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$285, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$26$B)
	.dwattr $C$DW$285, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$26$E)
$C$DW$286	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$286, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$27$B)
	.dwattr $C$DW$286, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$27$E)
$C$DW$287	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$287, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$34$B)
	.dwattr $C$DW$287, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$34$E)
$C$DW$288	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$288, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$36$B)
	.dwattr $C$DW$288, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$36$E)
$C$DW$289	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$289, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$37$B)
	.dwattr $C$DW$289, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$37$E)
$C$DW$290	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$290, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$38$B)
	.dwattr $C$DW$290, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$38$E)
$C$DW$291	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$291, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$39$B)
	.dwattr $C$DW$291, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$39$E)
$C$DW$292	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$292, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$40$B)
	.dwattr $C$DW$292, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$40$E)
$C$DW$293	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$293, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$41$B)
	.dwattr $C$DW$293, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$41$E)
$C$DW$294	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$294, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$48$B)
	.dwattr $C$DW$294, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$48$E)
$C$DW$295	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$295, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$50$B)
	.dwattr $C$DW$295, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$50$E)
$C$DW$296	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$296, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$51$B)
	.dwattr $C$DW$296, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$51$E)
$C$DW$297	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$297, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$52$B)
	.dwattr $C$DW$297, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$52$E)
$C$DW$298	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$298, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$53$B)
	.dwattr $C$DW$298, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$53$E)
$C$DW$299	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$299, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$54$B)
	.dwattr $C$DW$299, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$54$E)
$C$DW$300	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$300, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$55$B)
	.dwattr $C$DW$300, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$55$E)
$C$DW$301	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$301, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$62$B)
	.dwattr $C$DW$301, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$62$E)
$C$DW$302	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$302, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$64$B)
	.dwattr $C$DW$302, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$64$E)
$C$DW$303	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$303, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$65$B)
	.dwattr $C$DW$303, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$65$E)
$C$DW$304	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$304, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$66$B)
	.dwattr $C$DW$304, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$66$E)
$C$DW$305	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$305, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$67$B)
	.dwattr $C$DW$305, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$67$E)
$C$DW$306	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$306, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$81$B)
	.dwattr $C$DW$306, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$81$E)
$C$DW$307	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$307, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$82$B)
	.dwattr $C$DW$307, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$82$E)
$C$DW$308	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$308, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$83$B)
	.dwattr $C$DW$308, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$83$E)
$C$DW$309	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$309, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$85$B)
	.dwattr $C$DW$309, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$85$E)
$C$DW$310	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$310, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$86$B)
	.dwattr $C$DW$310, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$86$E)
$C$DW$311	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$311, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$87$B)
	.dwattr $C$DW$311, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$87$E)
$C$DW$312	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$312, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$88$B)
	.dwattr $C$DW$312, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$88$E)
$C$DW$313	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$313, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$90$B)
	.dwattr $C$DW$313, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$90$E)
$C$DW$314	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$314, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$91$B)
	.dwattr $C$DW$314, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$91$E)
$C$DW$315	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$315, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$92$B)
	.dwattr $C$DW$315, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$92$E)
$C$DW$316	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$316, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$93$B)
	.dwattr $C$DW$316, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$93$E)

$C$DW$317	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$317, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L26:2:1443280258")
	.dwattr $C$DW$317, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$317, DW_AT_TI_begin_line(0x102)
	.dwattr $C$DW$317, DW_AT_TI_end_line(0x10b)
$C$DW$318	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$318, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$71$B)
	.dwattr $C$DW$318, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$71$E)
$C$DW$319	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$319, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$72$B)
	.dwattr $C$DW$319, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$72$E)
$C$DW$320	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$320, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$73$B)
	.dwattr $C$DW$320, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$73$E)
$C$DW$321	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$321, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$79$B)
	.dwattr $C$DW$321, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$79$E)
$C$DW$322	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$322, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$80$B)
	.dwattr $C$DW$322, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$80$E)

$C$DW$323	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$323, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L27:3:1443280258")
	.dwattr $C$DW$323, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$323, DW_AT_TI_begin_line(0x103)
	.dwattr $C$DW$323, DW_AT_TI_end_line(0x109)
$C$DW$324	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$324, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$74$B)
	.dwattr $C$DW$324, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$74$E)
$C$DW$325	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$325, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$75$B)
	.dwattr $C$DW$325, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$75$E)
$C$DW$326	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$326, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$76$B)
	.dwattr $C$DW$326, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$76$E)
$C$DW$327	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$327, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$77$B)
	.dwattr $C$DW$327, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$77$E)
$C$DW$328	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$328, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$78$B)
	.dwattr $C$DW$328, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$78$E)
	.dwendtag $C$DW$323

	.dwendtag $C$DW$317


$C$DW$329	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$329, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L2:2:1443280258")
	.dwattr $C$DW$329, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$329, DW_AT_TI_begin_line(0x73)
	.dwattr $C$DW$329, DW_AT_TI_end_line(0x78)
$C$DW$330	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$330, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$14$B)
	.dwattr $C$DW$330, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$14$E)
$C$DW$331	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$331, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$15$B)
	.dwattr $C$DW$331, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$15$E)
$C$DW$332	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$332, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$18$B)
	.dwattr $C$DW$332, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$18$E)
$C$DW$333	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$333, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$19$B)
	.dwattr $C$DW$333, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$19$E)

$C$DW$334	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$334, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L3:3:1443280258")
	.dwattr $C$DW$334, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$334, DW_AT_TI_begin_line(0x74)
	.dwattr $C$DW$334, DW_AT_TI_end_line(0x76)
$C$DW$335	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$335, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$16$B)
	.dwattr $C$DW$335, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$16$E)
$C$DW$336	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$336, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$17$B)
	.dwattr $C$DW$336, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$17$E)
	.dwendtag $C$DW$334

	.dwendtag $C$DW$329


$C$DW$337	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$337, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L8:2:1443280258")
	.dwattr $C$DW$337, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$337, DW_AT_TI_begin_line(0x89)
	.dwattr $C$DW$337, DW_AT_TI_end_line(0x8e)
$C$DW$338	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$338, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$28$B)
	.dwattr $C$DW$338, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$28$E)
$C$DW$339	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$339, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$29$B)
	.dwattr $C$DW$339, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$29$E)
$C$DW$340	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$340, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$32$B)
	.dwattr $C$DW$340, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$32$E)
$C$DW$341	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$341, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$33$B)
	.dwattr $C$DW$341, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$33$E)

$C$DW$342	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$342, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L9:3:1443280258")
	.dwattr $C$DW$342, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$342, DW_AT_TI_begin_line(0x8a)
	.dwattr $C$DW$342, DW_AT_TI_end_line(0x8c)
$C$DW$343	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$343, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$30$B)
	.dwattr $C$DW$343, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$30$E)
$C$DW$344	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$344, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$31$B)
	.dwattr $C$DW$344, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$31$E)
	.dwendtag $C$DW$342

	.dwendtag $C$DW$337


$C$DW$345	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$345, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L14:2:1443280258")
	.dwattr $C$DW$345, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$345, DW_AT_TI_begin_line(0xa6)
	.dwattr $C$DW$345, DW_AT_TI_end_line(0xab)
$C$DW$346	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$346, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$42$B)
	.dwattr $C$DW$346, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$42$E)
$C$DW$347	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$347, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$43$B)
	.dwattr $C$DW$347, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$43$E)
$C$DW$348	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$348, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$46$B)
	.dwattr $C$DW$348, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$46$E)
$C$DW$349	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$349, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$47$B)
	.dwattr $C$DW$349, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$47$E)

$C$DW$350	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$350, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L15:3:1443280258")
	.dwattr $C$DW$350, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$350, DW_AT_TI_begin_line(0xa7)
	.dwattr $C$DW$350, DW_AT_TI_end_line(0xa9)
$C$DW$351	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$351, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$44$B)
	.dwattr $C$DW$351, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$44$E)
$C$DW$352	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$352, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$45$B)
	.dwattr $C$DW$352, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$45$E)
	.dwendtag $C$DW$350

	.dwendtag $C$DW$345


$C$DW$353	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$353, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L20:2:1443280258")
	.dwattr $C$DW$353, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$353, DW_AT_TI_begin_line(0xc1)
	.dwattr $C$DW$353, DW_AT_TI_end_line(0xc6)
$C$DW$354	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$354, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$56$B)
	.dwattr $C$DW$354, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$56$E)
$C$DW$355	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$355, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$57$B)
	.dwattr $C$DW$355, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$57$E)
$C$DW$356	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$356, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$60$B)
	.dwattr $C$DW$356, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$60$E)
$C$DW$357	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$357, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$61$B)
	.dwattr $C$DW$357, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$61$E)

$C$DW$358	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$358, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.se66:$C$L21:3:1443280258")
	.dwattr $C$DW$358, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$358, DW_AT_TI_begin_line(0xc2)
	.dwattr $C$DW$358, DW_AT_TI_end_line(0xc4)
$C$DW$359	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$359, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$58$B)
	.dwattr $C$DW$359, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$58$E)
$C$DW$360	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$360, DW_AT_low_pc($C$DW$L$VLIB_hysteresisThresholding_d$59$B)
	.dwattr $C$DW$360, DW_AT_high_pc($C$DW$L$VLIB_hysteresisThresholding_d$59$E)
	.dwendtag $C$DW$358

	.dwendtag $C$DW$353

	.dwendtag $C$DW$261

	.dwattr $C$DW$116, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_hysteresisThresholding/VLIB_hysteresisThresholding_d.c")
	.dwattr $C$DW$116, DW_AT_TI_end_line(0x138)
	.dwattr $C$DW$116, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$116

;; Inlined function references:
;; [ 16] VLIB_profile_start
;; [ 17] VLIB_profile_stop
;; [ 20] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_hysteresisThresholding",0
$C$SL2:	.string	10,"Display the original 8-bit input image:",10,10,0
$C$SL3:	.string	"%3d",0
$C$SL4:	.string	10,0
$C$SL5:	.string	10,"Display the smoothed 8-bit input image:",10,10,0
$C$SL6:	.string	10,"Display the 16-bit Gradient Magnitude image:",10,10,0
$C$SL7:	.string	10,"Display the edge map after Non-Maximum Suppression:",10,10
	.string	0
$C$SL8:	.string	10,"Display the final edge map after Hysteresis:",10,10,0
$C$SL9:	.string	"***",0
$C$SL10:	.string	"%s generated input | Opt results compared to NatC results |"
	.string	" width=%d, height=%d",0
$C$SL11:	.string	"width=%d, height=%d",0
$C$SL12:	.string	"width * height",0
$C$SL13:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_compare_mem
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_hysteresisThresholding
	.global	VLIB_hysteresisThresholding_cn
	.global	hysteresis_getTestParams
	.global	VLIB_conv_7x7_i8_c8s_cn
	.global	VLIB_nonMaximumSuppressionCanny_cn
	.global	VLIB_xyGradientsAndMagnitude_cn
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles
	.global	memcpy

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$36	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x04)
$C$DW$361	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$361, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$361, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$361, DW_AT_decl_column(0x05)
$C$DW$362	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$362, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$362, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$362, DW_AT_decl_column(0x05)
$C$DW$363	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$363, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$363, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$363, DW_AT_decl_column(0x05)
$C$DW$364	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$364, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$364, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$364, DW_AT_decl_column(0x05)
$C$DW$365	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$365, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$365, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$365, DW_AT_decl_column(0x05)
$C$DW$366	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$366, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$366, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$366, DW_AT_decl_column(0x05)
$C$DW$367	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$367, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$367, DW_AT_decl_line(0x80)
	.dwattr $C$DW$367, DW_AT_decl_column(0x05)
$C$DW$368	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$368, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$368, DW_AT_decl_line(0x81)
	.dwattr $C$DW$368, DW_AT_decl_column(0x05)
$C$DW$369	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$369, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$369, DW_AT_decl_line(0x82)
	.dwattr $C$DW$369, DW_AT_decl_column(0x05)
$C$DW$370	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$370, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$370, DW_AT_decl_line(0x83)
	.dwattr $C$DW$370, DW_AT_decl_column(0x05)
$C$DW$371	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$371, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$371, DW_AT_decl_line(0x84)
	.dwattr $C$DW$371, DW_AT_decl_column(0x05)
$C$DW$372	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$372, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$372, DW_AT_decl_line(0x85)
	.dwattr $C$DW$372, DW_AT_decl_column(0x05)
$C$DW$373	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$373, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$373, DW_AT_decl_line(0x86)
	.dwattr $C$DW$373, DW_AT_decl_column(0x05)
$C$DW$374	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$374, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$374, DW_AT_decl_line(0x87)
	.dwattr $C$DW$374, DW_AT_decl_column(0x05)
$C$DW$375	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$375, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$375, DW_AT_decl_line(0x88)
	.dwattr $C$DW$375, DW_AT_decl_column(0x05)
$C$DW$376	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$376, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$376, DW_AT_decl_line(0x89)
	.dwattr $C$DW$376, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x0e)
$C$DW$T$37	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x03)

$C$DW$T$38	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x04)
$C$DW$377	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$377, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$377, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$377, DW_AT_decl_column(0x05)
$C$DW$378	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$378, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$378, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$378, DW_AT_decl_column(0x05)
$C$DW$379	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$379, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$379, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$379, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x06)

$C$DW$T$39	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x04)
$C$DW$380	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$380, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$380, DW_AT_decl_line(0x72)
	.dwattr $C$DW$380, DW_AT_decl_column(0x05)
$C$DW$381	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$381, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$381, DW_AT_decl_line(0x73)
	.dwattr $C$DW$381, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\../common/VLIB_test.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x06)

$C$DW$T$22	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x14)
$C$DW$382	.dwtag  DW_TAG_member
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$382, DW_AT_name("testPattern")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$382, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$382, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$382, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$382, DW_AT_decl_line(0x24)
	.dwattr $C$DW$382, DW_AT_decl_column(0x0e)
$C$DW$383	.dwtag  DW_TAG_member
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$383, DW_AT_name("input")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("input")
	.dwattr $C$DW$383, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$383, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$383, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$383, DW_AT_decl_line(0x25)
	.dwattr $C$DW$383, DW_AT_decl_column(0x0e)
$C$DW$384	.dwtag  DW_TAG_member
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$384, DW_AT_name("refOutput")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("refOutput")
	.dwattr $C$DW$384, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$384, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$384, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$384, DW_AT_decl_line(0x26)
	.dwattr $C$DW$384, DW_AT_decl_column(0x0e)
$C$DW$385	.dwtag  DW_TAG_member
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$385, DW_AT_name("width")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$385, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$385, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$385, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$385, DW_AT_decl_line(0x27)
	.dwattr $C$DW$385, DW_AT_decl_column(0x0e)
$C$DW$386	.dwtag  DW_TAG_member
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$386, DW_AT_name("height")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$386, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$386, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$386, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$386, DW_AT_decl_line(0x28)
	.dwattr $C$DW$386, DW_AT_decl_column(0x0e)
$C$DW$387	.dwtag  DW_TAG_member
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$387, DW_AT_name("loThresh")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("loThresh")
	.dwattr $C$DW$387, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$387, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$387, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$387, DW_AT_decl_line(0x29)
	.dwattr $C$DW$387, DW_AT_decl_column(0x0d)
$C$DW$388	.dwtag  DW_TAG_member
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$388, DW_AT_name("hiThreshold")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("hiThreshold")
	.dwattr $C$DW$388, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$388, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$388, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$388, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$388, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$22

	.dwattr $C$DW$T$22, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x10)
$C$DW$T$40	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$40, DW_AT_address_class(0x20)
$C$DW$T$42	.dwtag  DW_TAG_typedef, DW_AT_name("hysteresis_testParams_t")
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$42, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\VLIB_hysteresisThresholding_idat.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x03)
$C$DW$T$43	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$T$43, DW_AT_address_class(0x20)
$C$DW$T$44	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$44, DW_AT_address_class(0x20)

$C$DW$T$24	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$24, DW_AT_byte_size(0x18)
$C$DW$389	.dwtag  DW_TAG_member
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$389, DW_AT_name("fd")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$389, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$389, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$389, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$389, DW_AT_decl_line(0x49)
	.dwattr $C$DW$389, DW_AT_decl_column(0x0b)
$C$DW$390	.dwtag  DW_TAG_member
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$390, DW_AT_name("buf")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$390, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$390, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$390, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$390, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$390, DW_AT_decl_column(0x16)
$C$DW$391	.dwtag  DW_TAG_member
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$391, DW_AT_name("pos")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$391, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$391, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$391, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$391, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$391, DW_AT_decl_column(0x16)
$C$DW$392	.dwtag  DW_TAG_member
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$392, DW_AT_name("bufend")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$392, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$392, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$392, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$392, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$392, DW_AT_decl_column(0x16)
$C$DW$393	.dwtag  DW_TAG_member
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$393, DW_AT_name("buff_stop")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$393, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$393, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$393, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$393, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$393, DW_AT_decl_column(0x16)
$C$DW$394	.dwtag  DW_TAG_member
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$394, DW_AT_name("flags")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$394, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$394, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$394, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$394, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$394, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$24

	.dwattr $C$DW$T$24, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$24, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$24, DW_AT_decl_column(0x10)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x03)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x08)
$C$DW$395	.dwtag  DW_TAG_member
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$395, DW_AT_name("quot")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$395, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$395, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$395, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$395, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$395, DW_AT_decl_column(0x16)
$C$DW$396	.dwtag  DW_TAG_member
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$396, DW_AT_name("rem")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$396, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$396, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$396, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$396, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$396, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x23)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x08)
$C$DW$397	.dwtag  DW_TAG_member
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$397, DW_AT_name("quot")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$397, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$397, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$397, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$397, DW_AT_decl_line(0x40)
	.dwattr $C$DW$397, DW_AT_decl_column(0x17)
$C$DW$398	.dwtag  DW_TAG_member
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$398, DW_AT_name("rem")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$398, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$398, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$398, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$398, DW_AT_decl_line(0x40)
	.dwattr $C$DW$398, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x24)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x10)
$C$DW$399	.dwtag  DW_TAG_member
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$399, DW_AT_name("quot")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$399, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$399, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$399, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$399, DW_AT_decl_line(0x43)
	.dwattr $C$DW$399, DW_AT_decl_column(0x1c)
$C$DW$400	.dwtag  DW_TAG_member
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$400, DW_AT_name("rem")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$400, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$400, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$400, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$400, DW_AT_decl_line(0x43)
	.dwattr $C$DW$400, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x29)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x24)
$C$DW$401	.dwtag  DW_TAG_member
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$401, DW_AT_name("area")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$401, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$401, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$401, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$401, DW_AT_decl_line(0x69)
	.dwattr $C$DW$401, DW_AT_decl_column(0x0d)
$C$DW$402	.dwtag  DW_TAG_member
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$402, DW_AT_name("xsum")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$402, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$402, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$402, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$402, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$402, DW_AT_decl_column(0x0d)
$C$DW$403	.dwtag  DW_TAG_member
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$403, DW_AT_name("ysum")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$403, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$403, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$403, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$403, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$403, DW_AT_decl_column(0x0d)
$C$DW$404	.dwtag  DW_TAG_member
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$404, DW_AT_name("xmin")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$404, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$404, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$404, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$404, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$404, DW_AT_decl_column(0x0d)
$C$DW$405	.dwtag  DW_TAG_member
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$405, DW_AT_name("ymin")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$405, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$405, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$405, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$405, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$405, DW_AT_decl_column(0x0d)
$C$DW$406	.dwtag  DW_TAG_member
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$406, DW_AT_name("xmax")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$406, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$406, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$406, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$406, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$406, DW_AT_decl_column(0x0d)
$C$DW$407	.dwtag  DW_TAG_member
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$407, DW_AT_name("ymax")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$407, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$407, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$407, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$407, DW_AT_decl_line(0x70)
	.dwattr $C$DW$407, DW_AT_decl_column(0x0d)
$C$DW$408	.dwtag  DW_TAG_member
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$408, DW_AT_name("seedx")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$408, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$408, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$408, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$408, DW_AT_decl_line(0x72)
	.dwattr $C$DW$408, DW_AT_decl_column(0x0d)
$C$DW$409	.dwtag  DW_TAG_member
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$409, DW_AT_name("seedy")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$409, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$409, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$409, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$409, DW_AT_decl_line(0x73)
	.dwattr $C$DW$409, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x03)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x10)
$C$DW$410	.dwtag  DW_TAG_member
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$410, DW_AT_name("daylight")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$410, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$410, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$410, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$410, DW_AT_decl_line(0x52)
	.dwattr $C$DW$410, DW_AT_decl_column(0x0b)
$C$DW$411	.dwtag  DW_TAG_member
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_name("timezone")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$411, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$411, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$411, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$411, DW_AT_decl_line(0x53)
	.dwattr $C$DW$411, DW_AT_decl_column(0x0b)
$C$DW$412	.dwtag  DW_TAG_member
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$412, DW_AT_name("tzname")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$412, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$412, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$412, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$412, DW_AT_decl_line(0x54)
	.dwattr $C$DW$412, DW_AT_decl_column(0x0b)
$C$DW$413	.dwtag  DW_TAG_member
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$413, DW_AT_name("dstname")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$413, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$413, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$413, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$413, DW_AT_decl_line(0x55)
	.dwattr $C$DW$413, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x01)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x19)
$C$DW$T$52	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$2)
$C$DW$T$53	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$T$53, DW_AT_address_class(0x20)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$94	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$94, DW_AT_address_class(0x20)
$C$DW$T$87	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$87, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$87, DW_AT_decl_column(0x1d)
$C$DW$T$88	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$87)
$C$DW$T$89	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$89, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$T$89, DW_AT_address_class(0x20)
$C$DW$T$90	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$89)

$C$DW$T$115	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$115, DW_AT_byte_size(0x31)
$C$DW$414	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$414, DW_AT_upper_bound(0x30)
	.dwendtag $C$DW$T$115

$C$DW$T$116	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$T$116, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$116, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$116, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$116, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$23	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$23, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$85	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$20)
$C$DW$T$82	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$19)
$C$DW$T$83	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$83, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$T$83, DW_AT_address_class(0x20)
$C$DW$T$84	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$83)
$C$DW$T$118	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$118, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$118, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$118, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$118, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$119	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$119, DW_AT_address_class(0x20)
$C$DW$T$86	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$86, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$86, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$86, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$86, DW_AT_decl_column(0x1d)
$C$DW$T$121	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$121, DW_AT_address_class(0x20)
$C$DW$T$122	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
$C$DW$T$123	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$123, DW_AT_type(*$C$DW$T$86)
$C$DW$T$124	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$123)
	.dwattr $C$DW$T$124, DW_AT_address_class(0x20)
$C$DW$T$125	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$124)
$C$DW$T$126	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$126, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$126, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$126, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$126, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$126, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1c)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x16)
$C$DW$T$127	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$127, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$127, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$127, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x0d)
$C$DW$T$28	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$28, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$28, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x1d)
$C$DW$T$148	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$148, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$148, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$148, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$148, DW_AT_decl_column(0x11)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x10)
$C$DW$415	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$415, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$33

$C$DW$T$79	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$79, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$79, DW_AT_address_class(0x20)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x17)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x17)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x17)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x17)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x17)
$C$DW$T$171	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$171, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$171, DW_AT_decl_column(0x16)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x19)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x16)
$C$DW$T$71	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$71, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$71, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$71, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$71, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$71, DW_AT_decl_column(0x1c)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x16)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x16)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x16)
$C$DW$T$169	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$169, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$169, DW_AT_decl_column(0x16)
$C$DW$T$170	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$170, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$170, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$170, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x21)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x17)
$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x20)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x16)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$179	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$179, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$179, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$179, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$179, DW_AT_decl_column(0x21)
$C$DW$T$180	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$180, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$180, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$180, DW_AT_decl_column(0x17)
$C$DW$T$181	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$181, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$181, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$181, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$181, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$181, DW_AT_decl_column(0x17)
$C$DW$T$182	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$182, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$182, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$182, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$182, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$182, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$184	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$184, DW_AT_address_class(0x20)
$C$DW$T$185	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$185, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$185, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$185, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$185, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$185, DW_AT_decl_column(0x20)

$C$DW$T$186	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$186, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$T$186, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$186, DW_AT_byte_size(0x10)
$C$DW$416	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$416, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$186

$C$DW$T$187	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$187, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$T$187, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$187, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$187, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$187, DW_AT_decl_column(0x16)
$C$DW$T$188	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$188, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$T$188, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$188, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$188, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$188, DW_AT_decl_column(0x16)
$C$DW$T$189	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$189, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$189, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$189, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$189, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$189, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$190	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$190, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$190, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$190, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$190, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$190, DW_AT_decl_column(0x0f)
$C$DW$T$191	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$191, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$191, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$191, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$191, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$191, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$192	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$192, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$192, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$192, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_hysteresisThresholding\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$192, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$192, DW_AT_decl_column(0x10)
$C$DW$T$193	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$193, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$193, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$193, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$193, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$193, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$30	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$30, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$30, DW_AT_name("signed char")
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x01)

$C$DW$T$31	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x04)
$C$DW$417	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$417, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$31

$C$DW$T$62	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$62, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$62, DW_AT_address_class(0x20)
$C$DW$T$194	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$194, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$T$194, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$194, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$194, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$194, DW_AT_decl_column(0x12)
$C$DW$T$129	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$30)
$C$DW$T$130	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$129)
	.dwattr $C$DW$T$130, DW_AT_address_class(0x20)

$C$DW$T$195	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$195, DW_AT_language(DW_LANG_C)
$C$DW$418	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$195


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$419	.dwtag  DW_TAG_member
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$419, DW_AT_name("_v")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$419, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$419, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$419, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$419, DW_AT_decl_line(0x44)
	.dwattr $C$DW$419, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x01)
$C$DW$T$196	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$196, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$196, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$196, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$196, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$196, DW_AT_decl_column(0x01)
$C$DW$T$197	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$T$196)
	.dwattr $C$DW$T$197, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$197, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$197, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$197, DW_AT_decl_column(0x13)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("tm")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x24)
$C$DW$420	.dwtag  DW_TAG_member
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_name("tm_sec")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$420, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$420, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$420, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$420, DW_AT_decl_line(0x41)
	.dwattr $C$DW$420, DW_AT_decl_column(0x09)
$C$DW$421	.dwtag  DW_TAG_member
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_name("tm_min")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$421, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$421, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$421, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$421, DW_AT_decl_line(0x42)
	.dwattr $C$DW$421, DW_AT_decl_column(0x09)
$C$DW$422	.dwtag  DW_TAG_member
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_name("tm_hour")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$422, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$422, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$422, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$422, DW_AT_decl_line(0x43)
	.dwattr $C$DW$422, DW_AT_decl_column(0x09)
$C$DW$423	.dwtag  DW_TAG_member
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_name("tm_mday")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$423, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$423, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$423, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$423, DW_AT_decl_line(0x44)
	.dwattr $C$DW$423, DW_AT_decl_column(0x09)
$C$DW$424	.dwtag  DW_TAG_member
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_name("tm_mon")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$424, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$424, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$424, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$424, DW_AT_decl_line(0x45)
	.dwattr $C$DW$424, DW_AT_decl_column(0x09)
$C$DW$425	.dwtag  DW_TAG_member
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_name("tm_year")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$425, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$425, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$425, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$425, DW_AT_decl_line(0x46)
	.dwattr $C$DW$425, DW_AT_decl_column(0x09)
$C$DW$426	.dwtag  DW_TAG_member
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_name("tm_wday")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$426, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$426, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$426, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$426, DW_AT_decl_line(0x47)
	.dwattr $C$DW$426, DW_AT_decl_column(0x09)
$C$DW$427	.dwtag  DW_TAG_member
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_name("tm_yday")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$427, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$427, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$427, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$427, DW_AT_decl_line(0x48)
	.dwattr $C$DW$427, DW_AT_decl_column(0x09)
$C$DW$428	.dwtag  DW_TAG_member
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_name("tm_isdst")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$428, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$428, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$428, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$428, DW_AT_decl_line(0x49)
	.dwattr $C$DW$428, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

