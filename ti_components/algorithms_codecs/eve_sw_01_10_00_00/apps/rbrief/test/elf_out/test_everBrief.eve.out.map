******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Wed Oct 07 00:49:06 2015

OUTPUT FILE NAME:   <.\elf_out\test_everBrief.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  0000fec4  0001013c  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00007531  00000acf  RWIX
  WMEM                  40040000   00007fe0  00007e00  000001e0  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  0080f154  017f0eac  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00007314     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    00000364                       : divf.obj (.text:__arp32abi_divf)
                  80002098    000002d8                       : strtoll.obj (.text:strtoll)
                  80002370    000002a0                       : _printfi.obj (.text:_setfield)
                  80002610    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002878    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002ad8    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  80002d34    0000025c                       : _printfi.obj (.text:ecvt)
                  80002f90    00000258                       : _printfi.obj (.text:fcvt)
                  800031e8    0000024c                       : strtoull.obj (.text:strtoull)
                  80003434    0000022c                       : _printfi.obj (.text:_printfi)
                  80003660    00000220                       : _printfi.obj (.text:_pconv_e)
                  80003880    0000021c                       : fwrite.obj (.text:fwrite)
                  80003a9c    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003ca4    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003ea4    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80004088    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80004254    000001cc                       : strtol.obj (.text:strtol)
                  80004420    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  800045e8    000001c8                       : fgets.obj (.text:_dofgets)
                  800047b0    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004968    000001a0                       : strtoul.obj (.text:strtoul)
                  80004b08    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004c94    00000170                       : fputs.obj (.text:fputs)
                  80004e04    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004f6c    00000160                       : frcaddd.obj (.text:_frcaddd)
                  800050cc    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80005228    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  80005380    00000144                       : fread.obj (.text:fread)
                  800054c4    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  80005604    00000140                       : _scanfi.obj (.text:_sget_conv)
                  80005744    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  80005880    0000012c                       : fopen.obj (.text:_openfile)
                  800059ac    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005ac4    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005bd8    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005ccc    000000ec                       : lowlev.obj (.text:open)
                  80005db8    000000e8                       : fputc.obj (.text:fputc)
                  80005ea0    000000dc                       : memcpy.obj (.text:memcpy)
                  80005f7c    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80006048    000000c4                       : memory.obj (.text:mem_alloc)
                  8000610c    000000bc                       : _printfi.obj (.text:_ltostr)
                  800061c8    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80006284    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80006338    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  800063ec    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006498    000000a8                       : fopen.obj (.text:_search_fp)
                  80006540    000000a8                       : memset.obj (.text:memset)
                  800065e8    000000a0                       : lowlev.obj (.text:getdevice)
                  80006688    0000009c                       : _bufread.obj (.text:_buff_read)
                  80006724    0000009c                       : _printfi.obj (.text:_mcpy)
                  800067c0    00000098                       : trgdrv.obj (.text:HOSTopen)
                  80006858    00000098                       : vcop_memory.obj (.text:vcop_free)
                  800068f0    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006984    00000094                       : memory.obj (.text:mem_free)
                  80006a18    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006aa8    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  80006b38    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006bc8    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  80006c58    00000090                       : fseek.obj (.text:fseek)
                  80006ce8    00000090                       : ftell.obj (.text:ftell)
                  80006d78    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006e04    00000088                       : lowlev.obj (.text:close)
                  80006e8c    00000084                       : _printfi.obj (.text:_ecpy)
                  80006f10    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006f90    00000080                       : fltulld.obj (.text:__arp32abi_fltulld)
                  80007010    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80007090    00000080                       : printf.obj (.text:printf)
                  80007110    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  8000718c    0000007c                       : fltullf.obj (.text:__arp32abi_fltullf)
                  80007208    0000007c                       : fclose.obj (.text:_closefile)
                  80007284    0000007c                       : atoi.obj (.text:atoi)
                  80007300    0000007c                       : fflush.obj (.text:fflush)
                  8000737c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  800073f4    00000078                       : _printfi.obj (.text:_div)
                  8000746c    00000078                       : _printfi.obj (.text:_pconv_f)
                  800074e4    00000078                       : memory.obj (.text:minit)
                  8000755c    00000074                       : trgdrv.obj (.text:HOSTclose)
                  800075d0    00000074                       : fprintf.obj (.text:fprintf)
                  80007644    00000070                       : autoinit.obj (.text:_auto_init)
                  800076b4    00000070                       : vfprintf.obj (.text:vfprintf)
                  80007724    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007790    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  800077f8    00000068                       : boot.obj (.text:_c_int00)
                  80007860    00000068                       : lowlev.obj (.text:lseek)
                  800078c8    00000068                       : lowlev.obj (.text:read)
                  80007930    00000068                       : lowlev.obj (.text:write)
                  80007998    00000064                       : imath64.obj (.text:_subcull)
                  800079fc    00000064                       : ltoa.obj (.text:ltoa)
                  80007a60    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  80007ac0    00000060                       : fflush.obj (.text:_doflush)
                  80007b20    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  80007b7c    0000005c                       : lowlev.obj (.text:tabinit)
                  80007bd8    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  80007c34    00000054                       : _printfi.obj (.text:_fcpy)
                  80007c88    00000054                       : renormd.obj (.text:_renormd)
                  80007cdc    00000054                       : exit.obj (.text:exit)
                  80007d30    00000050                       : fopen.obj (.text:_cleanup)
                  80007d80    00000050                       : lowlev.obj (.text:finddevice)
                  80007dd0    00000050                       : rand.obj (.text:rand)
                  80007e20    0000004c                       : memory.obj (.text:malloc)
                  80007e6c    00000048                       : frcmpyf_div.obj (.text:__arp32abi_frcmpyf_div)
                  80007eb4    00000048                       : trgmsg.obj (.text:readmsg)
                  80007efc    00000048                       : lowlev.obj (.text:unlink)
                  80007f44    00000048                       : trgmsg.obj (.text:writemsg)
                  80007f8c    00000040                       : args_main.obj (.text:_args_main)
                  80007fcc    00000040                       : sprintf.obj (.text:sprintf)
                  8000800c    0000003c                       : fltuf.obj (.text:__arp32abi_fltuf)
                  80008048    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80008084    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  800080c0    0000003c                       : fopen.obj (.text:fopen)
                  800080fc    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80008134    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  8000816c    00000038                       : sscanf.obj (.text:sscanf)
                  800081a4    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  800081d8    00000030                       : fclose.obj (.text:fclose)
                  80008208    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80008234    00000028                       : negd.obj (.text:__arp32abi_negd)
                  8000825c    00000028                       : mult.obj (.text:_mpyl)
                  80008284    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  800082a8    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  800082cc    00000020                       : memccpy.obj (.text:memccpy)
                  800082ec    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80008308    0000001c                       : sprintf.obj (.text:_outs)
                  80008324    00000018                       : fgets.obj (.text:fgets)
                  8000833c    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80008350    00000014                       : memory.obj (.text:free)
                  80008364    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80008374    00000010                       : sscanf.obj (.text:_inpchar)
                  80008384    00000010                       : sprintf.obj (.text:_outc)
                  80008394    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  800083a4    0000000c                       : fprintf.obj (.text:_outc)
                  800083b0    0000000c                       : printf.obj (.text:_outc)
                  800083bc    0000000c                       : vfprintf.obj (.text:_outc)
                  800083c8    0000000c                       : fprintf.obj (.text:_outs)
                  800083d4    0000000c                       : printf.obj (.text:_outs)
                  800083e0    0000000c                       : vfprintf.obj (.text:_outs)
                  800083ec    0000000c                       : sscanf.obj (.text:_uninpchar)
                  800083f8    0000000c                       : remove.obj (.text:remove)
                  80008404    00000008                       : exit.obj (.text:abort)
                  8000840c    00000004                       : _lock.obj (.text:_nop)
                  80008410    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80008414    00003304     
                  80008414    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  800091a0    00000bd0     rbrief_tb.obj (.text:rbriefTest)
                  80009d70    000003e8     configparser.obj (.text:ParseContent)
                  8000a158    00000394     libevenatckernels.eve.lib : vcop_compute_rBrief_cn.obj (.text:compute_OrbDescriptor)
                  8000a4ec    00000308     configparser.obj (.text:printparams)
                  8000a7f4    0000029c     libevenatckernels.eve.lib : vcop_compute_rBrief_cn.obj (.text:compute_Orb)
                  8000aa90    00000234     rbrief_tb.obj (.text:main)
                  8000acc4    00000234     eve_profile.obj (.text:profiler_end)
                  8000aef8    0000017c     rbrief_tb.obj (.text:ComputeRBriefDesc)
                  8000b074    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000b1c8    0000014c     rbrief_tb.obj (.text:TestApp_readXyLevelList)
                  8000b314    000000d8     configparser.obj (.text:readparamfile)
                  8000b3ec    000000c4     eve_profile.obj (.text:profiler_init)
                  8000b4b0    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000b520    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000b58c    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000b5e4    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000b634    00000048     eve_profile.obj (.text:profiler_start)
                  8000b67c    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000b6b4    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000b6e4    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000b6fc    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000b70c    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)

.bam_text 
*          0    8000b718    000030cc     
                  8000b718    00000810     libevealgframework.eve.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000bf28    00000788                                : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000c6b0    00000544                                : bam_execute.obj (.text:BAM_execute)
                  8000cbf4    0000047c                                : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000d070    00000414                                : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000d484    00000378                                : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000d7fc    000001cc                                : bam_construct.obj (.text:BAM_createGraph)
                  8000d9c8    00000158                                : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000db20    00000150                                : bam_memory.obj (.text:bam_mem_alloc)
                  8000dc70    00000140                                : bam_memory.obj (.text:bam_getMemPacket)
                  8000ddb0    00000130                                : bam_execute.obj (.text:BAM_process)
                  8000dee0    00000120                                : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000e000    0000010c                                : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000e10c    000000e8                                : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000e1f4    000000e8                                : bam_memory.obj (.text:bam_mem_free)
                  8000e2dc    000000ac                                : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000e388    000000a8                                : bam_memory.obj (.text:bam_minit)
                  8000e430    00000098                                : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000e4c8    00000090                                : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000e558    0000008c                                : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000e5e4    00000074                                : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000e658    00000068                                : bam_memory.obj (.text:bam_mcheck)
                  8000e6c0    0000004c                                : bam_construct.obj (.text:BAM_initKernelDB)
                  8000e70c    0000003c                                : bam_execute.obj (.text:BAM_controlNode)
                  8000e748    00000038                                : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000e780    00000024                                : alg_osal.obj (.text:PRINTF)
                  8000e7a4    00000024                                : alg_osal.obj (.text:TEST_PRINTF)
                  8000e7c8    00000018                                : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000e7e0    00000004                                : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    8000e7e4    000018d4     
                  8000e7e4    00000670     libevekernels.eve.lib : vcop_compute_rBrief_kernel.obj (.text:vcop_compute_rBrief_init)
                  8000ee54    000002d4                           : bam_rBrief_exec_funcs.obj (.text:BAM_rBrief_initFrame)
                  8000f128    000002ac                           : vcop_compute_rBrief_kernel.obj (.text:vcop_compute_rBrief_vloops)
                  8000f3d4    000000d0                           : bam_rBrief_helper_funcs.obj (.text:BAM_rBrief_getMemRecFunc)
                  8000f4a4    00000018                           : bam_rBrief_exec_funcs.obj (.text:VCOP_SET_MEM_VIEW)
                  8000f4bc    00000008                           : vcop_compute_rBrief_kernel.obj (.text:vcop_compute_rBrief_param_count)
                  8000f4c4    00000174     libeveRbrief.eve.lib : rbrief_alg.obj (.text:RBRIEF_TI_process)
                  8000f638    0000016c                          : rbrief_graph.obj (.text:RBRIEF_TI_graphCreate)
                  8000f7a4    00000154                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_SCATTERGATHER_frameInitChannel)
                  8000f8f8    000000f8                          : rbrief_alg.obj (.text:RBRIEF_TI_alloc)
                  8000f9f0    000000e8                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_SCATTERGATHER_updateDDRptr)
                  8000fad8    000000cc                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_AUTOINCREMENT_1D_updateDDRptr)
                  8000fba4    000000c0                          : rbrief_alg.obj (.text:RBRIEF_TI_init)
                  8000fc64    000000b8                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_SCATTERGATHER_wait)
                  8000fd1c    00000084                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_SCATTERGATHER_getMemRecFunc)
                  8000fda0    0000005c                          : rbrief_alg.obj (.text:RBRIEF_TI_activate)
                  8000fdfc    0000005c                          : rbrief_alg.obj (.text:RBRIEF_TI_deactivate)
                  8000fe58    00000058                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_AUTOINCREMENT_1D_getMemRecFunc)
                  8000feb0    00000058                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_SCATTERGATHER_setMemRecFunc)
                  8000ff08    00000054                          : rbrief_graph.obj (.text:RBRIEF_TI_initKernelsArgs)
                  8000ff5c    0000004c                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_AUTOINCREMENT_1D_setMemRecFunc)
                  8000ffa8    00000040                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_AUTOINCREMENT_1D_frameInitChannel)
                  8000ffe8    0000003c                          : rbrief_graph.obj (.text:RBRIEF_TI_graphDmaControl)
                  80010024    00000020                          : rbrief_graph.obj (.text:RBRIEF_TI_execute)
                  80010044    0000001c                          : rbrief_graph.obj (.text:RBRIEF_TI_getGraphMemReq)
                  80010060    00000018                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_SCATTERGATHER_trigger)
                  80010078    00000018                          : rbrief_alg.obj (.text:RBRIEF_TI_free)
                  80010090    00000010                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_AUTOINCREMENT_1D_trigger)
                  800100a0    00000010                          : bam_dma_custom_rbrief_node.obj (.text:BAM_DMA_CUSTOM_RBRIEF_AUTOINCREMENT_1D_wait)
                  800100b0    00000004                          : rbrief_alg.obj (.text:RBRIEF_TI_control)
                  800100b4    00000004                          : rbrief_alg.obj (.text:RBRIEF_TI_numAlloc)

.starterware_text 
*          0    800100b8    00000f0c     
                  800100b8    000004c4     libevestarterware_eve.lib : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_configure)
                  8001057c    000001c4                               : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  80010740    00000178                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  800108b8    00000178                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_init)
                  80010a30    000000cc                               : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  80010afc    000000b8                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_init)
                  80010bb4    00000090                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  80010c44    00000080                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_updateNtrigger)
                  80010cc4    00000074                               : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  80010d38    00000048                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_waitOutChannel)
                  80010d80    00000048                               : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  80010dc8    00000040                               : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  80010e08    00000040                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  80010e48    0000002c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  80010e74    0000002c                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_triggerOutChannel)
                  80010ea0    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  80010ecc    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  80010ef8    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  80010f24    00000020                               : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  80010f44    0000001c                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_wait)
                  80010f60    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  80010f78    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  80010f90    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)
                  80010fa4    00000010                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_configure)
                  80010fb4    0000000c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  80010fc0    00000004                               : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.dmemSect 
*          1    40020000    00003c00     UNINITIALIZED
                  40020000    00003c00     rbrief_tb.obj (.dmemSect)

.stack     1    40023c00    00002000     UNINITIALIZED
                  40023c00    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40023c04    00001ffc     --HOLE--

.algo_neardata 
*          1    40025c00    000011fc     
                  40025c00    0000044b     libeveRbrief.eve.lib : bam_dma_custom_rbrief_node.obj (.const:.string)
                  4002604b    000001bb                          : rbrief_graph.obj (.const:.string)
                  40026206    00000098                          : rbrief_alg.obj (.const:.string)
                  4002629e    00000002     --HOLE-- [fill = 0]
                  400262a0    00000054                          : rbrief_alg.obj (.const)
                  400262f4    00000030                          : rbrief_graph.obj (.const:$P$T0$1)
                  40026324    0000000c                          : rbrief_graph.obj (.const:$P$T1$2)
                  40026330    00000400     libevekernels.eve.lib : bam_rBrief_helper_funcs.obj (.const:.string:BAM_RBRIEF_TI_MOMENTS_COL_MASK)
                  40026730    00000400                           : bam_rBrief_helper_funcs.obj (.const:.string:BAM_RBRIEF_TI_MOMENTS_ROW_MASK)
                  40026b30    00000212                           : bam_rBrief_exec_funcs.obj (.const:.string:BAM_RBRIEF_ZERO_TABLE)
                  40026d42    00000042                           : bam_rBrief_helper_funcs.obj (.const:BAM_RBRIEF_TI_COSQ14_2)
                  40026d84    00000042                           : bam_rBrief_helper_funcs.obj (.const:BAM_RBRIEF_TI_SINQ14_2)
                  40026dc6    00000010                           : bam_rBrief_helper_funcs.obj (.const:BAM_RBRIEF_TI_ARCTAN_XTHR)
                  40026dd6    00000010                           : bam_rBrief_helper_funcs.obj (.const:BAM_RBRIEF_TI_TRAN_OFFSET)
                  40026de6    00000002     --HOLE-- [fill = 0]
                  40026de8    00000014                           : bam_rBrief_exec_funcs.obj (.rodata)

.rts_neardata 
*          1    40026dfc    00000270     
                  40026dfc    00000101     rtsarp32_v200.lib : ctype.obj (.const:.string:_ctypes_)
                  40026efd    00000003                       : assert.obj (.const:.string)
                  40026f00    00000008                       : divf.obj (.const:.string:initial_approx$1)
                  40026f08    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  40026f0f    00000001     --HOLE-- [fill = 0]
                  40026f10    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  40026f16    00000023                       : _printfi.obj (.const:.string)
                  40026f39    00000003     --HOLE-- [fill = 0]
                  40026f3c    00000050                       : strtod.obj (.const:digits)
                  40026f8c    00000048                       : strtod.obj (.const:powerof10)
                  40026fd4    00000050                       : strtold.obj (.const:digits)
                  40027024    00000048                       : strtold.obj (.const:powerof10)

.bam_neardata 
*          1    4002706c    000001e5     
                  4002706c    00000018     libevealgframework.eve.lib : bam_memory.obj (.bss) [fill = 0]
                  40027084    00000005                                : bam_memory.obj (.data)
                  40027089    00000003     --HOLE-- [fill = 0]
                  4002708c    00000008                                : bam_construct_int.obj (.rodata)
                  40027094    00000004                                : bam_execute.obj (.rodata)
                  40027098    00000004                                : bam_memory.obj (.rodata)
                  4002709c    00000121                                : bam_construct_int.obj (.const:.string)
                  400271bd    00000090                                : bam_execute.obj (.const:.string)
                  4002724d    00000001     --HOLE-- [fill = 0]
                  4002724e    00000003                                : bam_construct_int.obj (.const:.string:$P$T0$1)

.cio       1    40027254    00000120     UNINITIALIZED
                  40027254    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.starterware_neardata 
*          1    40027374    00000118     
                  40027374    000000a8     libevestarterware_eve.lib : dma_resource_allocator.obj (.bss) [fill = 0]
                  4002741c    00000060                               : edma_utils_state.obj (.bss) [fill = 0]
                  4002747c    00000004                               : dma_resource_allocator.obj (.data)
                  40027480    00000004                               : edma_utils.obj (.data)
                  40027484    00000004                               : edma_utils_memcpy.obj (.rodata)
                  40027488    00000004                               : edma_utils_scatterGather.obj (.rodata)

.bss       1    4002748c    0000004c     UNINITIALIZED
                  4002748c    00000048     eve_profile.obj (.bss)
                  400274d4    00000004     rbrief_config.obj (.bss)

.data      1    400274d8    00000024     
                  400274d8    00000020     boot_arp32.obj (.data)
                  400274f8    00000004     eve_profile.obj (.data)

.rodata    1    400274fc    00000038     
                  400274fc    00000028     ti_stats_collector.obj (.rodata)
                  40027524    00000008     eve_profile.obj (.rodata)
                  4002752c    00000008     rbrief_tb.obj (.rodata)

.wmem      1    40040000    00007e00     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00007df8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    00800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    007ffff8     --HOLE--

.far       1    80830000    0000b728     UNINITIALIZED
                  80830000    0000b6d0     rbrief_config.obj (.far)
                  8083b6d0    00000028     ti_stats_collector.obj (.far)
                  8083b6f8    00000020     eve_profile.obj (.far)
                  8083b718    00000010     rbrief_tb.obj (.far)

.const     1    8083b728    00001b40     
                  8083b728    0000042e     rbrief_tb.obj (.const:.string)
                  8083bb56    00000410     rbrief_tb.obj (.const:.string:orbPattern)
                  8083bf66    00000400     rbrief_tb.obj (.const:.string:RBRIEF_TB_TI_MOMENTS_COL_MASK)
                  8083c366    00000400     rbrief_tb.obj (.const:.string:RBRIEF_TB_TI_MOMENTS_ROW_MASK)
                  8083c766    000003d2     eve_profile.obj (.const:.string)
                  8083cb38    00000252     configparser.obj (.const:.string)
                  8083cd8a    00000160     rbrief_config.obj (.const:.string)
                  8083ceea    00000002     --HOLE-- [fill = 0]
                  8083ceec    00000128     ti_stats_collector.obj (.const:.switchtab)
                  8083d014    000000fd     report_utils.obj (.const:.string)
                  8083d111    00000053     ti_mem_manager.obj (.const:.string)
                  8083d164    00000043     ti_stats_collector.obj (.const:.string)
                  8083d1a7    00000001     --HOLE-- [fill = 0]
                  8083d1a8    00000042     rbrief_tb.obj (.const:RBRIEF_TB_TI_COSQ14_2)
                  8083d1ea    00000042     rbrief_tb.obj (.const:RBRIEF_TB_TI_SINQ14_2)
                  8083d22c    00000018     rbrief_tb.obj (.const:.string:__FUNCTION__$1)
                  8083d244    00000010     rbrief_tb.obj (.const:RBRIEF_TB_TI_ARCTAN_XTHR)
                  8083d254    0000000b     rbrief_tb.obj (.const:.string:__FUNCTION__$2)
                  8083d25f    00000001     --HOLE-- [fill = 0]
                  8083d260    00000008     configparser.obj (.const:.string:$P$T0$1)

.fardata   1    8083d268    00001800     
                  8083d268    00001800     rbrief_config.obj (.fardata:gsTokenMap_rbrief)

.rts_fardata 
*          1    8083ea68    00000300     
                  8083ea68    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  8083eb08    0000000c                       : memory.obj (.far) [fill = 0]
                  8083eb14    00000008                       : boot.obj (.far) [fill = 0]
                  8083eb1c    00000008                       : trgdrv.obj (.far) [fill = 0]
                  8083eb24    000000f0                       : defs.obj (.fardata:_ftable)
                  8083ec14    00000078                       : lowlev.obj (.fardata:_device)
                  8083ec8c    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  8083ecf0    00000050                       : lowlev.obj (.fardata:_stream)
                  8083ed40    00000008                       : _lock.obj (.fardata)
                  8083ed48    00000005                       : vcop_memory.obj (.fardata)
                  8083ed4d    00000003     --HOLE-- [fill = 0]
                  8083ed50    00000004                       : defs.obj (.fardata)
                  8083ed54    00000004                       : errno.obj (.fardata)
                  8083ed58    00000004                       : fopen.obj (.fardata)
                  8083ed5c    00000004                       : lowlev.obj (.fardata)
                  8083ed60    00000004                       : memory.obj (.fardata)
                  8083ed64    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    8083ed68    000001f4     
                  8083ed68    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    8083ef5c    00000108     
                  8083ef5c    00000068     libeveRbrief.eve.lib : bam_dma_custom_rbrief_node.obj (.fardata)
                  8083efc4    00000030                          : rbrief_graph.obj (.fardata:bamRbriefCornerDetectKernelExecFuncDB)
                  8083eff4    00000030                          : rbrief_graph.obj (.fardata:bamRbriefCornerDetectKernelHostDB)
                  8083f024    0000000c                          : rbrief_graph.obj (.fardata)
                  8083f030    0000001c     libevekernels.eve.lib : bam_rBrief_helper_funcs.obj (.fardata)
                  8083f04c    00000018                           : bam_rBrief_exec_funcs.obj (.fardata)

.bam_fardata 
*          1    8083f064    000000f0     
                  8083f064    00000078     libevealgframework.eve.lib : bam_memory.obj (.far) [fill = 0]
                  8083f0dc    0000000c                                : bam_execute.obj (.far) [fill = 0]
                  8083f0e8    00000008                                : bam_construct.obj (.far) [fill = 0]
                  8083f0f0    00000064                                : bam_memory.obj (.fardata:vcop_mem)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000e430   BAM_ARP32_computeWrapper
40026dc6   BAM_RBRIEF_TI_ARCTAN_XTHR
40026d42   BAM_RBRIEF_TI_COSQ14_2
40026330   BAM_RBRIEF_TI_MOMENTS_COL_MASK
40026730   BAM_RBRIEF_TI_MOMENTS_ROW_MASK
40026d84   BAM_RBRIEF_TI_SINQ14_2
40026dd6   BAM_RBRIEF_TI_TRAN_OFFSET
8000e70c   BAM_controlNode
8000e2dc   BAM_copyIntMemRec2ExtMem
8000e558   BAM_copyNodeList
8000d7fc   BAM_createGraph
8000e7e0   BAM_dummyKernelFunc
8000e10c   BAM_fillKernelInfo
8000e000   BAM_getGraphMemSize
8000e748   BAM_getMemPacket
8000b718   BAM_initGraph
8000e5e4   BAM_initGraphInstance
8000e6c0   BAM_initKernelDB
8000d070   BAM_optimizeGraph
8000ddb0   BAM_process
8000d9c8   BAM_updateNodes
80008404   C$$EXIT
80007f84   C$$IO$$
8083ed68   CRED_instVirtAddr
8000aef8   ComputeRBriefDesc
8001057c   DMA_funcs_hardwareRegSetup
80010cc4   DMA_funcs_writeTransferParams
80010740   DMA_resourceAllocator_allocateResources
80010e48   DMA_resourceAllocator_initResources
80010fb4   DMA_resourceAllocator_setEdma3RmHandle
80010f24   DMA_utils_resetStateStruct
80010a30   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
80010fc0   EDMA3LLD_SUPPORT_requestResources
800100b8   EDMA_UTILS_autoIncrement1D_configure
80010afc   EDMA_UTILS_autoIncrement1D_init
80010e74   EDMA_UTILS_autoIncrement1D_triggerOutChannel
80010d38   EDMA_UTILS_autoIncrement1D_waitOutChannel
80010dc8   EDMA_UTILS_globalReset
80010bb4   EDMA_UTILS_memcpy2D
80010fa4   EDMA_UTILS_scattherGather_configure
800108b8   EDMA_UTILS_scattherGather_init
80010c44   EDMA_UTILS_scattherGather_updateNtrigger
80010f44   EDMA_UTILS_scattherGather_wait
80010d80   EVE_SCTM_CounterConfig
80010f60   EVE_SCTM_CounterRead
80010ea0   EVE_SCTM_CounterTimerEnable
80010f90   EVE_SCTM_Enable
80010ecc   EVE_SCTM_InpEvtSelect
80010f78   EVE_SCTM_OverflowCheck
80010ef8   EVE_SCTM_SamplingSelect
8000755c   HOSTclose
80006284   HOSTlseek
800067c0   HOSTopen
80006a18   HOSTread
800063ec   HOSTrename
8000737c   HOSTunlink
80006d78   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000e780   PRINTF
8083d244   RBRIEF_TB_TI_ARCTAN_XTHR
8083d1a8   RBRIEF_TB_TI_COSQ14_2
8083bf66   RBRIEF_TB_TI_MOMENTS_COL_MASK
8083c366   RBRIEF_TB_TI_MOMENTS_ROW_MASK
8083d1ea   RBRIEF_TB_TI_SINQ14_2
400262cc   RBRIEF_TI_IRES
400262a0   RBRIEF_TI_VISION_FXNS
8000fda0   RBRIEF_TI_activate
8000f8f8   RBRIEF_TI_alloc
800100b0   RBRIEF_TI_control
8000fdfc   RBRIEF_TI_deactivate
80010024   RBRIEF_TI_execute
80010078   RBRIEF_TI_free
80010044   RBRIEF_TI_getGraphMemReq
8000f638   RBRIEF_TI_graphCreate
8000ffe8   RBRIEF_TI_graphDmaControl
8000fba4   RBRIEF_TI_init
800100b4   RBRIEF_TI_numAlloc
8000f4c4   RBRIEF_TI_process
8000e7a4   TEST_PRINTF
8000b70c   TI_CreateMemoryHandle
8000b58c   TI_GetMemoryChunk
8000b1c8   TestApp_readXyLevelList
00007e00   WMEM_SIZE
40027254   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40025c00   __TI_STACK_END
00002000   __TI_STACK_SIZE
40025c00   __TI_STATIC_BASE
00800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
800080fc   __arp32abi_abort_msg
800047b0   __arp32abi_addd
800082ec   __arp32abi_addll
80005f7c   __arp32abi_cmpd
80008284   __arp32abi_cmplls
800082a8   __arp32abi_cmpllu
80006aa8   __arp32abi_cvtdf
80006f10   __arp32abi_cvtfd
80003ea4   __arp32abi_divd
80001d34   __arp32abi_divf
80004088   __arp32abi_divull
80007110   __arp32abi_fixdi
80007790   __arp32abi_fltid
8000800c   __arp32abi_fltuf
80006f90   __arp32abi_fltulld
8000718c   __arp32abi_fltullf
80007e6c   __arp32abi_frcmpyf_div
80007b20   __arp32abi_isinf
80007a60   __arp32abi_llshl
800081a4   __arp32abi_llshru
80004420   __arp32abi_mpyd
80005228   __arp32abi_mpyll
80008234   __arp32abi_negd
80008364   __arp32abi_negll
80008134   __arp32abi_remull
80008084   __arp32abi_strasgi
80008208   __arp32abi_subd
8000833c   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000108   _algo_fardata_size
000011fc   _algo_neardata_size
000018d4   _algo_text_size
80007f8c   _args_main
80007644   _auto_init
000000f0   _bam_fardata_size
000001e5   _bam_neardata_size
000030cc   _bam_text_size
80006688   _buff_read
800077f8   _c_int00
80007d30   _cleanup
8083eb14   _cleanup_ptr
80007208   _closefile
40026dfc   _ctypes_
80007ac0   _doflush
8083eb18   _dtors_ptr
80000120   _dummy_handler
80004f6c   _frcaddd
80003ca4   _frcdivd
800054c4   _frcmpyd
8083ed50   _ft_end
8083eb24   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
8083ed40   _lock
8000825c   _mpyl
400274d8   _my_stack
8000840c   _nop
80003434   _printfi
80007724   _rd_ok
80007c88   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000270   _rts_neardata_size
00007314   _rts_text_size
80001100   _scanfi
40023c00   _stack
000001f4   _starterware_fardata_size
00000118   _starterware_neardata_size
00000f0c   _starterware_text_size
80030000   _sys_memory
80008410   _system_pre_init
00003304   _text_size
8083ea68   _tmpnams
8083ed44   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006bc8   _wrt_ok
80008404   abort
80007284   atoi
8000dc70   bam_getMemPacket
8000e658   bam_mcheck
8000db20   bam_mem_alloc
8000e1f4   bam_mem_free
8000e388   bam_minit
8000e4c8   bam_releaseMemPacket
40027078   bam_stat_num_packets
ffffffff   binit
80006e04   close
8000a7f4   compute_Orb
8083ed54   errno
80007cdc   exit
800081d8   fclose
80007300   fflush
80008324   fgets
800080c0   fopen
800075d0   fprintf
80005db8   fputc
80004c94   fputs
80005380   fread
80008350   free
80006c58   fseek
80006ce8   ftell
80003880   fwrite
8083ef5c   gBAM_TI_dmaCustomRbriefNodeReadKernel
8083ef78   gBAM_TI_dmaCustomRbriefNodeReadKernelExecFunc
8083ef70   gBAM_TI_dmaCustomRbriefNodeReadKernelHelperFunc
8083ef90   gBAM_TI_dmaCustomRbriefNodeWriteKernel
8083efac   gBAM_TI_dmaCustomRbriefNodeWriteKernelExecFunc
8083efa4   gBAM_TI_dmaCustomRbriefNodeWriteKernelHelperFunc
8083f04c   gBAM_TI_rBriefExecFunc
8083f044   gBAM_TI_rBriefHelperFunc
8083f030   gBAM_TI_rBriefKernel
80830000   gConfig_rbrief
4002741c   gDmaUtilsStateStruct
40027480   gEdmaCc
8083b708   gTest_TI_profileSctm
400274b8   gTest_TI_profileTsc
8083d268   gsTokenMap_rbrief
80007860   lseek
800079fc   ltoa
8000aa90   main
80007e20   malloc
8083b718   memObj_DMEM
80006048   mem_alloc
80006984   mem_free
800082cc   memccpy
80005ea0   memcpy
80006540   memset
800074e4   minit
80005ccc   open
8083bb56   orbPattern
80007090   printf
8000a4ec   printparams
8000acc4   profiler_end
8000b6fc   profiler_end_print
8000b6e4   profiler_getSP
8000b520   profiler_getStackDepth
8000b3ec   profiler_init
8000b6b4   profiler_initStack
8000b67c   profiler_printStatus
8000b634   profiler_start
8000b5e4   profiler_testCaseInfo
80007dd0   rand
800091a0   rbriefTest
400274d4   rbrief_numTestCases
800078c8   read
80007eb4   readmsg
8000b314   readparamfile
800083f8   remove
8000b074   report_printAppletInfo
800059ac   setvbuf
80007fcc   sprintf
8000816c   sscanf
80008414   statCollectorControl
8000b4b0   statCollectorInit
800015f8   strtod
80004254   strtol
80001998   strtold
80002098   strtoll
80004968   strtoul
800031e8   strtoull
40027494   test_module_cyles
80007efc   unlink
8000e7e4   vcop_compute_rBrief_init
8000f4bc   vcop_compute_rBrief_param_count
8000f128   vcop_compute_rBrief_vloops
80006858   vcop_free
80008394   vcop_malloc
80004e04   vcop_memalign
80007bd8   vcop_minit
800076b4   vfprintf
80007930   write
80007f44   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000001   __TI_args_main
00000001   __TI_exit
000000f0   _bam_fardata_size
00000108   _algo_fardata_size
00000118   _starterware_neardata_size
000001e5   _bam_neardata_size
000001f4   _starterware_fardata_size
00000270   _rts_neardata_size
00000300   _rts_fardata_size
00000f0c   _starterware_text_size
000011fc   _algo_neardata_size
000018d4   _algo_text_size
00002000   __TI_STACK_SIZE
000030cc   _bam_text_size
00003304   _text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00007314   _rts_text_size
00007e00   WMEM_SIZE
00800000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40023c00   _stack
40025c00   __TI_STACK_END
40025c00   __TI_STATIC_BASE
400262a0   RBRIEF_TI_VISION_FXNS
400262cc   RBRIEF_TI_IRES
40026330   BAM_RBRIEF_TI_MOMENTS_COL_MASK
40026730   BAM_RBRIEF_TI_MOMENTS_ROW_MASK
40026d42   BAM_RBRIEF_TI_COSQ14_2
40026d84   BAM_RBRIEF_TI_SINQ14_2
40026dc6   BAM_RBRIEF_TI_ARCTAN_XTHR
40026dd6   BAM_RBRIEF_TI_TRAN_OFFSET
40026dfc   _ctypes_
40027078   bam_stat_num_packets
40027254   __CIOBUF_
4002741c   gDmaUtilsStateStruct
40027480   gEdmaCc
40027494   test_module_cyles
400274b8   gTest_TI_profileTsc
400274d4   rbrief_numTestCases
400274d8   _my_stack
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   __arp32abi_divf
80002098   strtoll
800031e8   strtoull
80003434   _printfi
80003880   fwrite
80003ca4   _frcdivd
80003ea4   __arp32abi_divd
80004088   __arp32abi_divull
80004254   strtol
80004420   __arp32abi_mpyd
800047b0   __arp32abi_addd
80004968   strtoul
80004c94   fputs
80004e04   vcop_memalign
80004f6c   _frcaddd
80005228   __arp32abi_mpyll
80005380   fread
800054c4   _frcmpyd
800059ac   setvbuf
80005ccc   open
80005db8   fputc
80005ea0   memcpy
80005f7c   __arp32abi_cmpd
80006048   mem_alloc
80006284   HOSTlseek
800063ec   HOSTrename
80006540   memset
80006688   _buff_read
800067c0   HOSTopen
80006858   vcop_free
80006984   mem_free
80006a18   HOSTread
80006aa8   __arp32abi_cvtdf
80006bc8   _wrt_ok
80006c58   fseek
80006ce8   ftell
80006d78   HOSTwrite
80006e04   close
80006f10   __arp32abi_cvtfd
80006f90   __arp32abi_fltulld
80007090   printf
80007110   __arp32abi_fixdi
8000718c   __arp32abi_fltullf
80007208   _closefile
80007284   atoi
80007300   fflush
8000737c   HOSTunlink
800074e4   minit
8000755c   HOSTclose
800075d0   fprintf
80007644   _auto_init
800076b4   vfprintf
80007724   _rd_ok
80007790   __arp32abi_fltid
800077f8   _c_int00
80007860   lseek
800078c8   read
80007930   write
800079fc   ltoa
80007a60   __arp32abi_llshl
80007ac0   _doflush
80007b20   __arp32abi_isinf
80007bd8   vcop_minit
80007c88   _renormd
80007cdc   exit
80007d30   _cleanup
80007dd0   rand
80007e20   malloc
80007e6c   __arp32abi_frcmpyf_div
80007eb4   readmsg
80007efc   unlink
80007f44   writemsg
80007f84   C$$IO$$
80007f8c   _args_main
80007fcc   sprintf
8000800c   __arp32abi_fltuf
80008084   __arp32abi_strasgi
800080c0   fopen
800080fc   __arp32abi_abort_msg
80008134   __arp32abi_remull
8000816c   sscanf
800081a4   __arp32abi_llshru
800081d8   fclose
80008208   __arp32abi_subd
80008234   __arp32abi_negd
8000825c   _mpyl
80008284   __arp32abi_cmplls
800082a8   __arp32abi_cmpllu
800082cc   memccpy
800082ec   __arp32abi_addll
80008324   fgets
8000833c   __arp32abi_subll
80008350   free
80008364   __arp32abi_negll
80008394   vcop_malloc
800083f8   remove
80008404   C$$EXIT
80008404   abort
8000840c   _nop
80008410   _system_pre_init
80008414   statCollectorControl
800091a0   rbriefTest
8000a4ec   printparams
8000a7f4   compute_Orb
8000aa90   main
8000acc4   profiler_end
8000aef8   ComputeRBriefDesc
8000b074   report_printAppletInfo
8000b1c8   TestApp_readXyLevelList
8000b314   readparamfile
8000b3ec   profiler_init
8000b4b0   statCollectorInit
8000b520   profiler_getStackDepth
8000b58c   TI_GetMemoryChunk
8000b5e4   profiler_testCaseInfo
8000b634   profiler_start
8000b67c   profiler_printStatus
8000b6b4   profiler_initStack
8000b6e4   profiler_getSP
8000b6fc   profiler_end_print
8000b70c   TI_CreateMemoryHandle
8000b718   BAM_initGraph
8000d070   BAM_optimizeGraph
8000d7fc   BAM_createGraph
8000d9c8   BAM_updateNodes
8000db20   bam_mem_alloc
8000dc70   bam_getMemPacket
8000ddb0   BAM_process
8000e000   BAM_getGraphMemSize
8000e10c   BAM_fillKernelInfo
8000e1f4   bam_mem_free
8000e2dc   BAM_copyIntMemRec2ExtMem
8000e388   bam_minit
8000e430   BAM_ARP32_computeWrapper
8000e4c8   bam_releaseMemPacket
8000e558   BAM_copyNodeList
8000e5e4   BAM_initGraphInstance
8000e658   bam_mcheck
8000e6c0   BAM_initKernelDB
8000e70c   BAM_controlNode
8000e748   BAM_getMemPacket
8000e780   PRINTF
8000e7a4   TEST_PRINTF
8000e7e0   BAM_dummyKernelFunc
8000e7e4   vcop_compute_rBrief_init
8000f128   vcop_compute_rBrief_vloops
8000f4bc   vcop_compute_rBrief_param_count
8000f4c4   RBRIEF_TI_process
8000f638   RBRIEF_TI_graphCreate
8000f8f8   RBRIEF_TI_alloc
8000fba4   RBRIEF_TI_init
8000fda0   RBRIEF_TI_activate
8000fdfc   RBRIEF_TI_deactivate
8000ffe8   RBRIEF_TI_graphDmaControl
80010024   RBRIEF_TI_execute
80010044   RBRIEF_TI_getGraphMemReq
80010078   RBRIEF_TI_free
800100b0   RBRIEF_TI_control
800100b4   RBRIEF_TI_numAlloc
800100b8   EDMA_UTILS_autoIncrement1D_configure
8001057c   DMA_funcs_hardwareRegSetup
80010740   DMA_resourceAllocator_allocateResources
800108b8   EDMA_UTILS_scattherGather_init
80010a30   DMA_utils_updateStateStruct
80010afc   EDMA_UTILS_autoIncrement1D_init
80010bb4   EDMA_UTILS_memcpy2D
80010c44   EDMA_UTILS_scattherGather_updateNtrigger
80010cc4   DMA_funcs_writeTransferParams
80010d38   EDMA_UTILS_autoIncrement1D_waitOutChannel
80010d80   EVE_SCTM_CounterConfig
80010dc8   EDMA_UTILS_globalReset
80010e48   DMA_resourceAllocator_initResources
80010e74   EDMA_UTILS_autoIncrement1D_triggerOutChannel
80010ea0   EVE_SCTM_CounterTimerEnable
80010ecc   EVE_SCTM_InpEvtSelect
80010ef8   EVE_SCTM_SamplingSelect
80010f24   DMA_utils_resetStateStruct
80010f44   EDMA_UTILS_scattherGather_wait
80010f60   EVE_SCTM_CounterRead
80010f78   EVE_SCTM_OverflowCheck
80010f90   EVE_SCTM_Enable
80010fa4   EDMA_UTILS_scattherGather_configure
80010fb4   DMA_resourceAllocator_setEdma3RmHandle
80010fc0   EDMA3LLD_SUPPORT_requestResources
80030000   _sys_memory
80830000   gConfig_rbrief
8083b708   gTest_TI_profileSctm
8083b718   memObj_DMEM
8083bb56   orbPattern
8083bf66   RBRIEF_TB_TI_MOMENTS_COL_MASK
8083c366   RBRIEF_TB_TI_MOMENTS_ROW_MASK
8083d1a8   RBRIEF_TB_TI_COSQ14_2
8083d1ea   RBRIEF_TB_TI_SINQ14_2
8083d244   RBRIEF_TB_TI_ARCTAN_XTHR
8083d268   gsTokenMap_rbrief
8083ea68   _tmpnams
8083eb14   _cleanup_ptr
8083eb18   _dtors_ptr
8083eb24   _ftable
8083ed40   _lock
8083ed44   _unlock
8083ed50   _ft_end
8083ed54   errno
8083ed68   CRED_instVirtAddr
8083ef5c   gBAM_TI_dmaCustomRbriefNodeReadKernel
8083ef70   gBAM_TI_dmaCustomRbriefNodeReadKernelHelperFunc
8083ef78   gBAM_TI_dmaCustomRbriefNodeReadKernelExecFunc
8083ef90   gBAM_TI_dmaCustomRbriefNodeWriteKernel
8083efa4   gBAM_TI_dmaCustomRbriefNodeWriteKernelHelperFunc
8083efac   gBAM_TI_dmaCustomRbriefNodeWriteKernelExecFunc
8083f030   gBAM_TI_rBriefKernel
8083f044   gBAM_TI_rBriefHelperFunc
8083f04c   gBAM_TI_rBriefExecFunc
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[274 symbols]
