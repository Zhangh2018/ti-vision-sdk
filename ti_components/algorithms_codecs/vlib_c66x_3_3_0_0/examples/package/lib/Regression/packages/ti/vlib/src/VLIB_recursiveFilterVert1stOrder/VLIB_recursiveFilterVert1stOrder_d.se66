;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:13:17 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("memcpy")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("memcpy")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0x56)
	.dwattr $C$DW$1, DW_AT_decl_column(0x16)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$3)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$53)
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$1


$C$DW$5	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwattr $C$DW$5, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$5, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$5, DW_AT_decl_column(0x0b)
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$11)
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$5


$C$DW$8	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
	.dwattr $C$DW$8, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$8, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$8, DW_AT_decl_column(0x19)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$103)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$8


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$60)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$103)
$C$DW$14	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x82)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x86)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x58)
	.dwattr $C$DW$19, DW_AT_decl_column(0x05)

$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$20, DW_AT_decl_column(0x06)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$20


$C$DW$23	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwattr $C$DW$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$23, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$23, DW_AT_decl_column(0x06)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$60)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$23


$C$DW$30	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwattr $C$DW$30, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$30, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$30, DW_AT_decl_column(0x06)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$30


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$10)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$60)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$32


$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x80)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$69)
	.dwendtag $C$DW$36


$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x81)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)

$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x82)
	.dwattr $C$DW$39, DW_AT_decl_column(0x0a)

$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x83)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)

$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("VLIB_compare_mem")
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_memory.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x72)
	.dwattr $C$DW$41, DW_AT_decl_column(0x11)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$51)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$51)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$41


$C$DW$45	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwattr $C$DW$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_memory.h")
	.dwattr $C$DW$45, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$45, DW_AT_decl_column(0x06)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$19)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$19)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$3)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$3)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$75)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$75)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$75)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$19)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$45


$C$DW$55	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwattr $C$DW$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_memory.h")
	.dwattr $C$DW$55, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$55, DW_AT_decl_column(0x07)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwattr $C$DW$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_memory.h")
	.dwattr $C$DW$57, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$57, DW_AT_decl_column(0x07)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$57


$C$DW$59	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_recursiveFilterVert1stOrder")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("VLIB_recursiveFilterVert1stOrder")
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwattr $C$DW$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\c66/VLIB_recursiveFilterVert1stOrder.h")
	.dwattr $C$DW$59, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$59, DW_AT_decl_column(0x09)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$20)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$96)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$112)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$112)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$98)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$96)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$96)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$59


$C$DW$68	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_recursiveFilterVert1stOrder_cn")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("VLIB_recursiveFilterVert1stOrder_cn")
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
	.dwattr $C$DW$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_cn.h")
	.dwattr $C$DW$68, DW_AT_decl_line(0x20)
	.dwattr $C$DW$68, DW_AT_decl_column(0x09)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$20)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$96)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$112)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$112)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$98)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$96)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$96)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$68


$C$DW$77	.dwtag  DW_TAG_subprogram, DW_AT_name("recursiveFilterVert1stOrder_getTestParams")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("recursiveFilterVert1stOrder_getTestParams")
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
	.dwattr $C$DW$77, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$77, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$77, DW_AT_decl_column(0x06)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$44)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$78)
	.dwendtag $C$DW$77

$C$DW$80	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
	.dwattr $C$DW$80, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$80, DW_AT_decl_line(0x60)
	.dwattr $C$DW$80, DW_AT_decl_column(0x13)
$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x62)
	.dwattr $C$DW$81, DW_AT_decl_column(0x13)
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$160)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x63)
	.dwattr $C$DW$82, DW_AT_decl_column(0x13)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$160)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x64)
	.dwattr $C$DW$83, DW_AT_decl_column(0x13)
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x75)
	.dwattr $C$DW$84, DW_AT_decl_column(0x14)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x76)
	.dwattr $C$DW$85, DW_AT_decl_column(0x14)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x77)
	.dwattr $C$DW$86, DW_AT_decl_column(0x14)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x78)
	.dwattr $C$DW$87, DW_AT_decl_column(0x14)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x79)
	.dwattr $C$DW$88, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\010448 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\0104410 
	.sect	".text"
	.clink
	.global	VLIB_recursiveFilterVert1stOrder_d

$C$DW$89	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_recursiveFilterVert1stOrder_d")
	.dwattr $C$DW$89, DW_AT_low_pc(VLIB_recursiveFilterVert1stOrder_d)
	.dwattr $C$DW$89, DW_AT_high_pc(0x00)
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("VLIB_recursiveFilterVert1stOrder_d")
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c")
	.dwattr $C$DW$89, DW_AT_TI_begin_line(0x35)
	.dwattr $C$DW$89, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$89, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c")
	.dwattr $C$DW$89, DW_AT_decl_line(0x35)
	.dwattr $C$DW$89, DW_AT_decl_column(0x06)
	.dwattr $C$DW$89, DW_AT_TI_max_frame_size(0x68)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 54,column 1,is_stmt,address VLIB_recursiveFilterVert1stOrder_d,isa 0

	.dwfde $C$DW$CIE, VLIB_recursiveFilterVert1stOrder_d
$C$DW$90	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$90, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  53 | void VLIB_recursiveFilterVert1stOrder_d (uint8_t LevelOfFeedback)      
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_recursiveFilterVert1stOrder_d                          *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 16 Args + 32 Auto + 56 Save = 104 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_recursiveFilterVert1stOrder_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 60	-----------------------    recursiveFilterVert1stOrder_getTestParams(&prm, &test_cases);
;** 63	-----------------------    VLIB_profile_init(3, "VLIB_recursiveFilterVert1stOrder");
;** 66	-----------------------    if ( test_cases <= 0 ) goto g18;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  55 | int32_t    tpi;  /* test parameter index */                            
;  58 | recursiveFilterVert1stOrder_testParams_t   *prm;                       
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |54| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |54| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |54| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |54| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |54| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |54| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(56)      ; |54| 
	.dwcfi	cfa_offset, 104
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("$O$C2")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("$O$C2")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg20]
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_reg3]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg16]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg3]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg3]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg16]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg16]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg20]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg22]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg21]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg27]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$K43")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$K43")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg12]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$K49")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$K49")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg20]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$K70")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$K70")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg8]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$U73")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$U73")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg7]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$U11")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$U11")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg28]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$U80")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$U80")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg20]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$K99")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$K99")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg11]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$K116")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$K116")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg8]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg3]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg13]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_breg31 20]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg11]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_breg31 24]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("in")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("in")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_breg31 28]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("out")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("out")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_breg31 32]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("out_cn")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("out_cn")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_breg31 36]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("scratch")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("scratch")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_breg31 40]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("boundaryTop")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("boundaryTop")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_breg31 44]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("boundaryBottom")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("boundaryBottom")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_breg31 48]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("pBoundaryTop")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("pBoundaryTop")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg29]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("pBoundaryBottom")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("pBoundaryBottom")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg10]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg9]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("w")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("w")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg22]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg21]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg10]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg24]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg24]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$129, DW_AT_name("recursiveFilterVert1stOrder_getTestParams")
	.dwattr $C$DW$129, DW_AT_TI_call

           CALLP   .S2     recursiveFilterVert1stOrder_getTestParams,B3
||         ADDAW   .D1X    SP,5,A4           ; |60| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 60,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  60 | recursiveFilterVert1stOrder_getTestParams(&prm, &test_cases);          
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {recursiveFilterVert1stOrder_getTestParams} {0}  ; |60| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$130, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$130, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x3,A4            ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 63,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | VLIB_profile_init(3, "VLIB_recursiveFilterVert1stOrder");              
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |63| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |66| 
           LDW     .D2T2   *+SP(20),B11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  70 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;----------------------------------------------------------------------
           ZERO    .L2     B12               ; |66| 
           ZERO    .L1     A13               ; |66| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |66| 

   [!A0]   BNOP    .S1     $C$L9,2           ; |66| 
|| [ A0]   LDW     .D2T1   *+B11(24),A3      ; |73| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 73,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  73 | uint8_t   *in      = (uint8_t *) VLIB_malloc(prm[tpi].width * prm[tpi].
;     | height * sizeof(uint8_t));                                             
;----------------------------------------------------------------------
   [ A0]   LDW     .D2T2   *+B11(20),B4      ; |73| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |66| 
;** --------------------------------------------------------------------------*
;**  	-----------------------    K$43 = &testPatternString[0];
;**  	-----------------------    K$49 = 255;
;**  	-----------------------    K$116 = &desc[0];
;**  	-----------------------    U$12 = prm;
;**  	-----------------------    U$11 = 0;
;** 66	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 10,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$5$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 73	-----------------------    in = VLIB_malloc((unsigned)((*U$12).width*(*U$12).height));
;** 74	-----------------------    out = VLIB_malloc((unsigned)((*U$12).width*(*U$12).height));
;** 75	-----------------------    out_cn = malloc((unsigned)((*U$12).width*(*U$12).height));
;** 76	-----------------------    scratch = VLIB_malloc((unsigned)((*U$12).height<<3));
;** 77	-----------------------    boundaryTop = VLIB_malloc((unsigned)(*U$12).width);
;** 78	-----------------------    boundaryBottom = VLIB_malloc((unsigned)(*U$12).width);
;** 81	-----------------------    if ( !((in != NULL)&(out != NULL)&(out_cn != NULL)&(scratch != NULL)&(boundaryTop != NULL)&(boundaryBottom != NULL)) ) goto g16;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 73,column 20,is_stmt,isa 0
$C$DW$131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$131, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$131, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |73| 
           ADDKPC  .S2     $C$RL2,B3,0       ; |73| 
           MPY32   .M1X    A3,B4,A4          ; |73| 
           NOP             3
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |73| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$6$B:
;          EXCLUSIVE CPU CYCLES: 49
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 74,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  74 | uint8_t   *out     = (uint8_t *) VLIB_malloc(prm[tpi].width * prm[tpi].
;     | height * sizeof(uint8_t));                                             
;----------------------------------------------------------------------
           LDW     .D2T1   *+B11(24),A3      ; |74| 
           LDW     .D2T2   *+B11(20),B4      ; |74| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 73,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(28)       ; |73| 
           NOP             3
$C$DW$132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$132, DW_AT_low_pc(0x04)
	.dwattr $C$DW$132, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$132, DW_AT_TI_call

           MPY32   .M1X    A3,B4,A4          ; |74| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 74,column 20,is_stmt,isa 0
$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |74| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 75,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  75 | uint8_t   *out_cn  = (uint8_t *) malloc(prm[tpi].width * prm[tpi].heigh
;     | t * sizeof(uint8_t));                                                  
;----------------------------------------------------------------------
           LDW     .D2T1   *+B11(24),A3      ; |75| 
           LDW     .D2T2   *+B11(20),B4      ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 74,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(32)       ; |74| 
           NOP             3
$C$DW$133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$133, DW_AT_low_pc(0x04)
	.dwattr $C$DW$133, DW_AT_name("malloc")
	.dwattr $C$DW$133, DW_AT_TI_call

           MPY32   .M1X    A3,B4,A4          ; |75| 
||         CALLP   .S2     malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 75,column 20,is_stmt,isa 0
$C$RL4:    ; CALL OCCURS {malloc} {0}        ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 76,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | uint8_t   *scratch = (uint8_t *) VLIB_malloc(8 * prm[tpi].height * size
;     | of(uint8_t));                                                          
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(24),B4      ; |76| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 75,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(36)       ; |75| 
           NOP             3
$C$DW$134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$134, DW_AT_low_pc(0x04)
	.dwattr $C$DW$134, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$134, DW_AT_TI_call

           SHL     .S1X    B4,3,A4           ; |76| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 76,column 20,is_stmt,isa 0
$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |76| 
           STW     .D2T1   A4,*+SP(40)       ; |76| 
$C$DW$135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$135, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$135, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         LDW     .D2T1   *+B11(20),A4      ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 77,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  77 | uint8_t   *boundaryTop    = (uint8_t *) VLIB_malloc(prm[tpi].width * si
;     | zeof(uint8_t));                                                        
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |77| 
           STW     .D2T1   A4,*+SP(44)       ; |77| 
$C$DW$136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$136, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$136, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         LDW     .D2T1   *+B11(20),A4      ; |78| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 78,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  78 | uint8_t   *boundaryBottom = (uint8_t *) VLIB_malloc(prm[tpi].width * si
;     | zeof(uint8_t));                                                        
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {VLIB_malloc} {0}   ; |78| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$7$B:
;          EXCLUSIVE CPU CYCLES: 20

           LDW     .D2T1   *+SP(28),A2       ; |81| 
||         ZERO    .L2     B4                ; |81| 
||         ZERO    .L1     A3                ; |81| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 81,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  81 | if( in && out && out_cn && scratch && boundaryTop && boundaryBottom ) {
;  83 |     int32_t    fail;                                                   
;  84 |     uint8_t   *pBoundaryTop = NULL, *pBoundaryBottom = NULL;           
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(32),A0       ; |81| 
           LDW     .D2T2   *+SP(36),B0       ; |81| 

           STW     .D2T1   A4,*+SP(48)       ; |78| 
||         ZERO    .L1     A4                ; |81| 

           LDW     .D2T1   *+SP(40),A1       ; |81| 

           LDW     .D2T2   *+SP(44),B2       ; |81| 
|| [ A2]   MVK     .L2     0x1,B4            ; |81| 

           LDW     .D2T1   *+SP(48),A2       ; |81| 
|| [ A0]   MVK     .L1     0x1,A4            ; |81| 

   [ B0]   MVK     .L1     0x1,A3            ; |81| 

           AND     .L2X    A4,B4,B5          ; |81| 
||         ZERO    .S2     B4                ; |81| 
||         ZERO    .L1     A4                ; |81| 

   [ A1]   MVK     .L2     0x1,B4            ; |81| 
||         AND     .S2X    A3,B5,B5          ; |81| 
||         ZERO    .L1     A3                ; |81| 

   [ B2]   MVK     .L1     0x1,A4            ; |81| 
||         AND     .L2     B4,B5,B4          ; |81| 

   [ A2]   MVK     .L1     0x1,A3            ; |81| 
           AND     .L2X    A4,B4,B4          ; |81| 
           AND     .L2X    A3,B4,B0          ; |81| 

   [ B0]   MVK     .S2     0xff,B4
|| [!B0]   B       .S1     $C$L7             ; |81| 
|| [ B0]   LDHU    .D2T2   *+B11(20),B5      ; |87| 

   [ B0]   MVKL    .S1     testPatternString,A12
|| [ B0]   LDBU    .D2T1   *B11,A4           ; |87| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 87,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  87 | VLIB_fillBuffer(prm[tpi].testPattern, (uint8_t)255,                    
;  88 |                 in, prm[tpi].staticIn,                                 
;  89 |                 prm[tpi].width, prm[tpi].height, prm[tpi].width * sizeo
;     | f(in[0]),                                                              
;  90 |                 sizeof(in[0]), testPatternString);                     
;  92 | if( prm[tpi].testPattern == CUSTOM ) {                                 
;  94 |     CreatePattern1(in, prm[tpi].width, prm[tpi].height);               
;  97 | if( prm[tpi].boundaryTop ) {                                           
;  98 |     memcpy(boundaryTop, prm[tpi].boundaryTop, prm[tpi].width);         
;  99 |     pBoundaryTop = boundaryTop;                                        
; 101 | if( prm[tpi].boundaryBottom ) {                                        
; 102 |     memcpy(boundaryBottom, prm[tpi].boundaryBottom, prm[tpi].width);   
; 103 |     pBoundaryBottom = boundaryBottom;                                  
; 107 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 108 | VLIB_recursiveFilterVert1stOrder(out, in, prm[tpi].width, prm[tpi].heig
;     | ht, prm[tpi].weight,                                                   
; 109 |                                  pBoundaryTop, pBoundaryBottom, scratch
;     | );                                                                     
; 110 | VLIB_profile_stop();                                                   
; 113 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 114 | VLIB_recursiveFilterVert1stOrder_cn(out_cn, in, prm[tpi].width, prm[tpi
;     | ].height, prm[tpi].weight,                                             
; 115 |                                     pBoundaryTop, pBoundaryBottom, scra
;     | tch);                                                                  
; 116 | VLIB_profile_stop();                                                   
; 119 | status_nat_vs_int = VLIB_compare_mem((void *) out, (void *)out_cn, prm[
;     | tpi].width * prm[tpi].height * sizeof(out_cn[0]));                     
; 122 | if( prm[tpi].staticOut != NULL ) {                                     
; 123 |     status_nat_vs_ref = VLIB_compare_mem((void *) prm[tpi].staticOut, (
;     | void *)out_cn, prm[tpi].width * prm[tpi].height * sizeof(out_cn[0]));  
; 127 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_ref =
;     | = vlib_KERNEL_FAIL)) ? 1 : 0;                                          
; 129 | est_test=1;                                                            
; 132 | sprintf(desc, "%s generated input | Opt results compared to NatC result
;     | s | width=%d, height=%d",                                              
; 133 |         testPatternString, prm[tpi].width, prm[tpi].height);           
; 134 | VLIB_formula_add_test(prm[tpi].width * prm[tpi].height, prm[tpi].height
;     | , NULL, fail, desc, NULL);                                             
; 136 | } else {                                                               
;----------------------------------------------------------------------
   [ B0]   LDHU    .D2T2   *+B11(24),B8      ; |87| 
$C$DW$137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$137, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$137, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |87| 
|| [ B0]   LDW     .D2T2   *+B11(4),B6       ; |87| 

   [ B0]   LDW     .D2T1   *+SP(28),A6       ; |87| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 138,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 138 | sprintf(desc, "width=%d, height=%d",                                   
; 139 |         prm[tpi].width, prm[tpi].height);                              
;----------------------------------------------------------------------
   [!B0]   LDW     .D2T2   *+B11(20),B5      ; |138| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 81,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L7}         ; |81| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$8$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 87	-----------------------    C$11 = (unsigned short)(*U$12).width;
;** 87	-----------------------    VLIB_fillBuffer((*U$12).testPattern, (unsigned char)K$49, (void *)in, (*U$12).staticIn, C$11, (unsigned short)(*U$12).height, C$11, 1u, K$43);
;** 92	-----------------------    v$1 = prm;
;**  	-----------------------    K$99 = &cycles[0];
;** 70	-----------------------    status_nat_vs_ref = 1;
;** 84	-----------------------    pBoundaryBottom = pBoundaryTop = NULL;
;** 92	-----------------------    if ( (*U$12).testPattern != 5 ) goto g9;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 87,column 13,is_stmt,isa 0
           MV      .L1X    B5,A8             ; |87| 
           EXTU    .S2     B4,24,24,B4       ; |87| 

           MVK     .L2     0x1,B10           ; |87| 
||         MVKH    .S1     testPatternString,A12
||         MV      .L1X    B5,A10            ; |87| 
||         ADDKPC  .S2     $C$RL8,B3,0       ; |87| 

$C$RL8:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |87| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$9$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 92,column 13,is_stmt,isa 0
           LDBU    .D2T2   *B11,B5           ; |92| 
           MV      .L2     B10,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 70,column 20,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(24)       ; |70| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 84,column 46,is_stmt,isa 0
           ZERO    .L2     B13               ; |84| 
           ZERO    .L1     A10               ; |84| 

           CMPEQ   .L2     B5,5,B0           ; |92| 
||         LDW     .D2T2   *+SP(20),B5       ; |92| 

   [!B0]   B       .S1     $C$L3             ; |92| 
|| [ B0]   LDW     .D2T2   *+B11(20),B6      ; |94| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 44,column 17,is_stmt,isa 0
   [ B0]   LDW     .D2T2   *+B11(24),B4      ; |44| 
           MVKL    .S1     cycles,A11
           MVKH    .S1     cycles,A11
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 92,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |92| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$10$B:
;          EXCLUSIVE CPU CYCLES: 9
;** 94	-----------------------    C$10 = (*U$12).width;
;** 94	-----------------------    w = C$10;
;** 44	-----------------------    if ( (C$9 = _mpy(C$10, (*U$12).height)) <= 0 ) goto g9;  // [25]
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 44,column 17,is_stmt,isa 0
           MPY     .M2     B6,B4,B4          ; |44| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 94,column 17,is_stmt,isa 0
           EXT     .S2     B6,16,16,B6       ; |94| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 44,column 17,is_stmt,isa 0
           CMPGT   .L2     B4,0,B0           ; |44| 

   [!B0]   BNOP    .S2     $C$L3,5           ; |44| 
|| [ B0]   MV      .L1X    B4,A3             ; |45| 
|| [ B0]   LDW     .D2T1   *+SP(28),A7       ; |45| 
|| [ B0]   MVK     .S1     0x7f,A8
|| [ B0]   MV      .D1     A10,A9

           ; BRANCHCC OCCURS {$C$L3}         ; |44| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$11$B:
;**  	-----------------------    K$70 = 127;
;**  	-----------------------    U$73 = in;
;** 45	-----------------------    L$1 = C$9;  // [25]
;** 44	-----------------------    i = 0;  // [25]
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$11$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 44,column 10,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$12$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g7:
;** 48	-----------------------    *U$73++ = _mpy(i%w|i/w, 12)+K$70;  // [25]
;** 44	-----------------------    ++i;  // [25]
;** 44	-----------------------    if ( L$1 = L$1-1 ) goto g7;  // [25]
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 48,column 9,is_stmt,isa 0
$C$DW$138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$138, DW_AT_name("__c6xabi_remi")
	.dwattr $C$DW$138, DW_AT_TI_call
           CALL    .S1     __c6xabi_remi     ; |48| 
           ADDKPC  .S2     $C$RL10,B3,3      ; |48| 

           MV      .L1     A9,A4             ; |48| 
||         MV      .L2     B6,B4             ; |48| 

$C$RL10:   ; CALL OCCURS {__c6xabi_remi} {0}  ; |48| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$13$B:
;          EXCLUSIVE CPU CYCLES: 6
$C$DW$139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$139, DW_AT_name("__c6xabi_divi")
	.dwattr $C$DW$139, DW_AT_TI_call

           CALLP   .S2     __c6xabi_divi,B3
||         MV      .L2     B6,B4             ; |48| 
||         MV      .L1     A4,A5             ; |48| 
||         MV      .S1     A9,A4             ; |48| 

$C$RL9:    ; CALL OCCURS {__c6xabi_divi} {0}  ; |48| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$14$B:
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1     A3,1,A0           ; |44| 
||         OR      .S1     A4,A5,A4          ; |48| 
||         SUB     .D1     A3,1,A3           ; |44| 

   [ A0]   BNOP    .S1     $C$L2,3           ; |44| 
||         MPY     .M1     A4,12,A4          ; |48| 
||         ADD     .L1     1,A9,A9           ; |44| 

           ADD     .L1     A8,A4,A4          ; |48| 
           STB     .D1T1   A4,*A7++          ; |48| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 44,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L2}         ; |44| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$15$B:
;**  	-----------------------    v$1 = prm;
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$16$B:
;          EXCLUSIVE CPU CYCLES: 5
           LDW     .D2T2   *+SP(20),B5
           NOP             4
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$16$E:
;** --------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 92,column 13,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$17$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g9:
;** 97	-----------------------    U$80 = U$11+v$1;
;** 97	-----------------------    C$8 = (*U$80).boundaryTop;
;** 97	-----------------------    if ( C$8 == NULL ) goto g11;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 97,column 13,is_stmt,isa 0
           ADD     .L2     B5,B12,B4         ; |97| 
           LDW     .D2T2   *+B4(12),B0       ; |97| 
           NOP             4

   [!B0]   B       .S1     $C$L4             ; |97| 
|| [ B0]   LDW     .D2T1   *+B4(20),A6       ; |98| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 98,column 17,is_stmt,isa 0
$C$DW$140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$140, DW_AT_name("memcpy")
	.dwattr $C$DW$140, DW_AT_TI_call
   [ B0]   CALL    .S1     memcpy            ; |98| 
   [ B0]   LDW     .D2T1   *+SP(44),A4       ; |98| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 97,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |97| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$18$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 98	-----------------------    memcpy((void *)boundaryTop, (const void *)C$8, (unsigned)(*U$80).width);
;** 99	-----------------------    pBoundaryTop = boundaryTop;
;**  	-----------------------    U$80 = prm+U$11;

           MV      .L2     B0,B4             ; |98| 
||         ADDKPC  .S2     $C$RL11,B3,0      ; |98| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 98,column 17,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {memcpy} {0}        ; |98| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$19$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(20),B4
           LDW     .D2T2   *+SP(44),B13
           NOP             3
           ADD     .L2     B12,B4,B4
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$19$E:
;** --------------------------------------------------------------------------*
$C$L4:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 97,column 13,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$20$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g11:
;** 101	-----------------------    C$7 = (*U$80).boundaryBottom;
;** 101	-----------------------    if ( C$7 == NULL ) goto g13;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 101,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B4(16),B0       ; |101| 
           NOP             4

   [!B0]   B       .S1     $C$L5             ; |101| 
|| [ B0]   LDW     .D2T1   *+SP(48),A4       ; |102| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 102,column 17,is_stmt,isa 0
$C$DW$141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$141, DW_AT_name("memcpy")
	.dwattr $C$DW$141, DW_AT_TI_call
   [ B0]   CALL    .S1     memcpy            ; |102| 
   [ B0]   LDW     .D2T1   *+B4(20),A6       ; |102| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 101,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |101| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$21$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 102	-----------------------    memcpy((void *)boundaryBottom, (const void *)C$7, (unsigned)(*U$80).width);
;** 103	-----------------------    pBoundaryBottom = boundaryBottom;

           MV      .L2     B0,B4             ; |102| 
||         ADDKPC  .S2     $C$RL12,B3,0      ; |102| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 102,column 17,is_stmt,isa 0
$C$RL12:   ; CALL OCCURS {memcpy} {0}        ; |102| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$21$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$22$B:
;          EXCLUSIVE CPU CYCLES: 1
           LDW     .D2T1   *+SP(48),A10      ; |102| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$22$E:
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 101,column 13,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$23$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g13:
;** 137	-----------------------    act_kernel = 0;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 108	-----------------------    VLIB_recursiveFilterVert1stOrder(out, in, (*U$12).width, (*U$12).height, (*U$12).weight, pBoundaryTop, pBoundaryBottom, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$6 = act_kernel;  // [16]
;** 156	-----------------------    *((C$6<<3)+K$99) = *((C$6<<3)+K$99)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 137	-----------------------    act_kernel = 1;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 114	-----------------------    VLIB_recursiveFilterVert1stOrder_cn(out_cn, in, (*U$12).width, (*U$12).height, (*U$12).weight, pBoundaryTop, pBoundaryBottom, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$5 = act_kernel;  // [16]
;** 156	-----------------------    *((C$5<<3)+K$99) = *((C$5<<3)+K$99)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 119	-----------------------    status_nat_vs_int = VLIB_compare_mem((void *)out, (void *)out_cn, (*U$12).width*(*U$12).height);
           MVKL    .S1     act_kernel,A12

           MVKH    .S1     act_kernel,A12
||         ZERO    .L1     A3                ; |137| 

$C$DW$142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$142, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$142, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A12           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 140 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
$C$RL13:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$24$B:
;          EXCLUSIVE CPU CYCLES: 115
$C$DW$143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$143, DW_AT_name("getSP")
	.dwattr $C$DW$143, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 144 | VLIB_free(boundaryBottom);                                             
; 145 | VLIB_free(boundaryTop);                                                
;----------------------------------------------------------------------
$C$RL14:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$144, DW_AT_name("initStack")
	.dwattr $C$DW$144, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL15:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 146 | VLIB_free(scratch);                                                    
; 147 | free(out_cn);                                                          
; 148 | VLIB_free(out);                                                        
; 149 | VLIB_free(in);                                                         
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B8           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 108,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(24),B6      ; |108| 
           LDW     .D2T1   *+B11(20),A6      ; |108| 
           LDW     .D2T2   *+SP(40),B10      ; |108| 

           LDH     .D2T1   *+B11(28),A8      ; |108| 
||         MVKL    .S1     beg_count,A14

           MV      .L2     B4,B9             ; |146| 
||         LDW     .D2T2   *+SP(28),B4       ; |108| 
||         MVKH    .S1     beg_count,A14

$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$145, DW_AT_name("VLIB_recursiveFilterVert1stOrder")
	.dwattr $C$DW$145, DW_AT_TI_call

           CALLP   .S2     VLIB_recursiveFilterVert1stOrder,B3
||         LDW     .D2T1   *+SP(32),A4       ; |108| 
||         STDW    .D1T2   B9:B8,*A14        ; |146| 
||         MV      .L2     B13,B8            ; |108| 

$C$RL16:   ; CALL OCCURS {VLIB_recursiveFilterVert1stOrder} {0}  ; |108| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 153 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 154 |                           "N = width * height; M = height",            
; 155 |                           "width * height");                           
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B8           ; |153| 
           MVC     .S2     TSCH,B6           ; |153| 
           MVKL    .S2     overhead,B4

           MVKH    .S2     overhead,B4
||         LDW     .D1T1   *A12,A3           ; |156| 

           LDDW    .D2T2   *B4,B5:B4         ; |156| 
||         LDDW    .D1T1   *A14,A7:A6        ; |156| 

           MVKL    .S1     end_count,A15
           MVKH    .S1     end_count,A15
           MV      .L2     B6,B9             ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 158 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
           LDDW    .D1T1   *+A11[A3],A9:A8   ; |156| 
           ADDU    .L1X    B4,A6,A5:A4       ; |156| 
           ADD     .L1X    A5,B5,A5          ; |156| 
           ADD     .L1     A5,A7,A6          ; |156| 
           SUBU    .L1X    B8,A4,A5:A4       ; |156| 
           SUB     .L2X    B6,A6,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1X    B4,A31,A6         ; |156| 
||         ADD     .S1     A5,A9,A5          ; |156| 

           ADD     .L1     A5,A6,A5          ; |156| 
||         STDW    .D1T2   B9:B8,*A15        ; |153| 

$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("setStackDepth")
	.dwattr $C$DW$146, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A11[A3]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL17:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           MVK     .L1     1,A3              ; |137| 
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$147, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A12           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL18:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("getSP")
	.dwattr $C$DW$148, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("initStack")
	.dwattr $C$DW$149, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL20:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 114,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(36),A4       ; |114| 
           LDW     .D2T1   *+B11(20),A6      ; |114| 
           LDW     .D2T2   *+B11(24),B6      ; |114| 

           MV      .L2     B4,B9             ; |146| 
||         LDW     .D2T2   *+SP(28),B4       ; |114| 

$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$150, DW_AT_name("VLIB_recursiveFilterVert1stOrder_cn")
	.dwattr $C$DW$150, DW_AT_TI_call

           CALLP   .S2     VLIB_recursiveFilterVert1stOrder_cn,B3
||         LDH     .D2T1   *+B11(28),A8      ; |114| 
||         STDW    .D1T2   B9:B8,*A14        ; |146| 
||         MV      .L2     B13,B8            ; |114| 

$C$RL21:   ; CALL OCCURS {VLIB_recursiveFilterVert1stOrder_cn} {0}  ; |114| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |153| 
           MVC     .S2     TSCH,B4           ; |153| 
           MVKL    .S1     overhead,A3
           MVKH    .S1     overhead,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *A14,A7:A6        ; |156| 

           MV      .L2X    A3,B5             ; |156| 
||         LDW     .D1T1   *A12,A3           ; |156| 

           LDDW    .D2T2   *B5,B7:B6         ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MV      .L2     B4,B9             ; |153| 
           NOP             2
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A11[A3],A5:A4   ; |156| 
           ADDU    .L2X    B6,A6,B5:B4       ; |156| 
           ADD     .L2     B5,B7,B5          ; |156| 

           MV      .L2     B4,B6             ; |156| 
||         MV      .S2X    A15,B4

           SUBU    .L2     B8,B6,B7:B6       ; |156| 
||         ADD     .S2X    B5,A7,B5          ; |156| 

           EXT     .S2     B7,24,24,B16      ; |156| 
||         ADDU    .L2X    A4,B6,B7:B6       ; |156| 
||         SUB     .D2     B9,B5,B5          ; |156| 

           ADD     .L2X    B7,A5,B5          ; |156| 
||         ADD     .S2     B5,B16,B7         ; |156| 

           ADD     .L2     B5,B7,B7          ; |156| 
||         STDW    .D2T2   B9:B8,*B4         ; |153| 

$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("setStackDepth")
	.dwattr $C$DW$151, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B7:B6,*+A11[A3]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL22:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 119,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(20),B4      ; |119| 
           LDW     .D2T1   *+B11(24),A3      ; |119| 
           LDW     .D2T1   *+SP(32),A4       ; |119| 
           NOP             3
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$152, DW_AT_TI_call

           CALLP   .S2     VLIB_compare_mem,B3
||         MPY32   .M1X    A3,B4,A6          ; |119| 
||         LDW     .D2T2   *+SP(36),B4       ; |119| 

$C$RL23:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |119| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$25$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 122	-----------------------    v$1 = prm;
;** 122	-----------------------    C$4 = (*U$12).staticOut;
;** 122	-----------------------    if ( C$4 == NULL ) goto g15;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 122,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(8),B0       ; |122| 
           LDW     .D2T1   *+SP(20),A10      ; |122| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 119,column 13,is_stmt,isa 0
           MV      .L1     A4,A11            ; |119| 
           NOP             2

   [!B0]   B       .S1     $C$L6             ; |122| 
|| [ B0]   LDW     .D2T2   *+B11(24),B5      ; |123| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 123,column 17,is_stmt,isa 0
   [ B0]   LDW     .D2T2   *+B11(20),B4      ; |123| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 122,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |122| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$26$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 123	-----------------------    status_nat_vs_ref = VLIB_compare_mem((void *)C$4, (void *)out_cn, (*U$12).width*(*U$12).height);
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALL    .S1     VLIB_compare_mem  ; |123| 
||         MPY32   .M2     B5,B4,B5          ; |123| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 123,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(36),B4       ; |123| 
           MV      .L1X    B0,A4             ; |123| 
           ADDKPC  .S2     $C$RL24,B3,1      ; |123| 
           MV      .L1X    B5,A6             ; |123| 
$C$RL24:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |123| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$27$B:
;          EXCLUSIVE CPU CYCLES: 1
           STW     .D2T1   A4,*+SP(24)       ; |123| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$27$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 122,column 13,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$28$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g15:
;** 129	-----------------------    est_test = 1;
;** 132	-----------------------    C$3 = U$11+v$1;
;** 132	-----------------------    sprintf(K$116, (const char *)"%s generated input | Opt results compared to NatC results | width=%d, height=%d", K$43, (*C$3).width, (*C$3).height);
;** 134	-----------------------    C$2 = (*U$12).height;
;** 134	-----------------------    VLIB_formula_add_test((*U$12).width*C$2, C$2, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$116, 0);
;** 136	-----------------------    goto g17;
           MVKL    .S2     $C$SL2+0,B5

           ADD     .L1X    A10,B12,A3        ; |132| 
||         MVKL    .S2     testPatternString,B4

           LDW     .D1T1   *+A3(24),A4       ; |132| 
||         MVKL    .S2     est_test,B6

           LDW     .D1T1   *+A3(20),A3       ; |132| 
||         MVKH    .S2     $C$SL2+0,B5

           MVKH    .S2     testPatternString,B4
||         STW     .D2T2   B5,*+SP(4)        ; |132| 

           MVKH    .S2     est_test,B6
||         MVK     .L1     1,A5              ; |129| 
||         STW     .D2T2   B4,*+SP(8)        ; |132| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 129,column 13,is_stmt,isa 0
           STW     .D2T1   A5,*B6            ; |129| 

           STW     .D2T1   A4,*+SP(16)       ; |132| 
||         MVKL    .S1     desc,A4

$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("sprintf")
	.dwattr $C$DW$154, DW_AT_TI_call

           CALLP   .S2     sprintf,B3
||         MVKH    .S1     desc,A4
||         STW     .D2T1   A3,*+SP(12)       ; |132| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 132,column 13,is_stmt,isa 0
$C$RL25:   ; CALL OCCURS {sprintf} {0}       ; |132| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$28$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$29$B:
;          EXCLUSIVE CPU CYCLES: 18
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 134,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(24),B5       ; |134| 
           LDW     .D2T2   *+B11(20),B6      ; |134| 
           LDW     .D2T2   *+B11(24),B4      ; |134| 
           CMPEQ   .L1     A11,0,A3          ; |134| 
           MVKL    .S1     desc,A8
           CMPEQ   .L2     B5,0,B5           ; |134| 
           MVKH    .S1     desc,A8

           MPY32   .M2     B4,B6,B5          ; |134| 
||         OR      .L2X    B5,A3,B6          ; |134| 

           ZERO    .L1     A6                ; |134| 
           ZERO    .L2     B8                ; |134| 
           NOP             2
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$155, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MV      .L1X    B5,A4             ; |134| 

$C$RL26:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |134| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$30$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 136,column 9,is_stmt,isa 0
           B       .S1     $C$L8             ; |136| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 144,column 9,is_stmt,isa 0
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("VLIB_free")
	.dwattr $C$DW$156, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |144| 
           LDW     .D2T1   *+SP(48),A4       ; |144| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 136,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L8}           ; |136| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$30$E:
;** --------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 81,column 9,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$31$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g16:
;** 138	-----------------------    sprintf(K$116, (const char *)"width=%d, height=%d", (*U$12).width, (*U$12).height);
;** 140	-----------------------    VLIB_skip_test(K$116);
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x04)
	.dwattr $C$DW$157, DW_AT_name("sprintf")
	.dwattr $C$DW$157, DW_AT_TI_call

           LDW     .D2T2   *+B11(24),B4      ; |138| 
||         CALL    .S1     sprintf           ; |138| 
||         MVKL    .S2     $C$SL3+0,B6

           MVKH    .S2     $C$SL3+0,B6
||         MVKL    .S1     desc,A4

           MVKH    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 138,column 13,is_stmt,isa 0
           STW     .D2T2   B6,*+SP(4)        ; |138| 
           STW     .D2T2   B5,*+SP(8)        ; |138| 

           STW     .D2T2   B4,*+SP(12)       ; |138| 
||         ADDKPC  .S2     $C$RL27,B3,0      ; |138| 

$C$RL27:   ; CALL OCCURS {sprintf} {0}       ; |138| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$31$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$32$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 140,column 13,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |140| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 144,column 9,is_stmt,isa 0
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("VLIB_free")
	.dwattr $C$DW$159, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |144| 
           LDW     .D2T1   *+SP(48),A4       ; |144| 
           NOP             3
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$32$E:
;** --------------------------------------------------------------------------*
$C$L8:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 136,column 9,is_stmt,isa 0
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$33$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g17:
;** 144	-----------------------    VLIB_free((void *)boundaryBottom);
;** 145	-----------------------    VLIB_free((void *)boundaryTop);
;** 146	-----------------------    VLIB_free((void *)scratch);
;** 147	-----------------------    free((void *)out_cn);
;** 148	-----------------------    VLIB_free((void *)out);
;** 149	-----------------------    VLIB_free((void *)in);
;** 66	-----------------------    U$11 += 32;
;** 66	-----------------------    U$12 += 32;
;** 66	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 144,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL29,B3,0      ; |144| 
$C$RL29:   ; CALL OCCURS {VLIB_free} {0}     ; |144| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$34$B:
;          EXCLUSIVE CPU CYCLES: 30
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("VLIB_free")
	.dwattr $C$DW$160, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(44),A4       ; |145| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 145,column 9,is_stmt,isa 0
$C$RL30:   ; CALL OCCURS {VLIB_free} {0}     ; |145| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_free")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(40),A4       ; |146| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 146,column 9,is_stmt,isa 0
$C$RL31:   ; CALL OCCURS {VLIB_free} {0}     ; |146| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("free")
	.dwattr $C$DW$162, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(36),A4       ; |147| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 147,column 9,is_stmt,isa 0
$C$RL32:   ; CALL OCCURS {free} {0}          ; |147| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("VLIB_free")
	.dwattr $C$DW$163, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(32),A4       ; |148| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 148,column 9,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {VLIB_free} {0}     ; |148| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("VLIB_free")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(28),A4       ; |149| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 149,column 9,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {VLIB_free} {0}     ; |149| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$35$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |66| 
           ADDK    .S2     32,B11            ; |66| 
           ADD     .L1     1,A13,A13         ; |66| 
           ADDK    .S2     32,B12            ; |66| 
           NOP             1
           CMPGT   .L1     A3,A13,A0         ; |66| 

   [ A0]   BNOP    .S1     $C$L1,2           ; |66| 
|| [ A0]   LDW     .D2T1   *+B11(24),A3      ; |73| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 73,column 20,is_stmt,isa 0
   [ A0]   LDW     .D2T2   *+B11(20),B4      ; |73| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 66,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |66| 
$C$DW$L$VLIB_recursiveFilterVert1stOrder_d$35$E:
;** --------------------------------------------------------------------------*
$C$L9:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g18:
;** 153	-----------------------    VLIB_profile_cycle_report(2, "N = width * height; M = height", "width * height");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [19]
;** 168	-----------------------    VLIB_stack_memory();  // [19]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL5+0,B4

           MVKL    .S1     $C$SL4+0,A6
||         MVKH    .S2     $C$SL5+0,B4

$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL4+0,A6
||         MVK     .L1     0x2,A4            ; |153| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 153,column 5,is_stmt,isa 0
$C$RL35:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |153| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL6+0,B4
           MVKH    .S2     $C$SL6+0,B4
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("printf")
	.dwattr $C$DW$166, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 162 | #ifndef __ONESHOTTEST                                                  
; 164 | main() {                                                               
; 165 | if( VLIB_cache_init()) {                                               
; 166 |     VLIB_memError("VLIB_recursiveFilterVert1stOrder");                 
; 167 | } else {                                                               
;----------------------------------------------------------------------
$C$RL36:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$167, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL37:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c",line 159,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(56),B3      ; |159| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |159| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$169	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$169, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.se66:$C$L1:1:1443280398")
	.dwattr $C$DW$169, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c")
	.dwattr $C$DW$169, DW_AT_TI_begin_line(0x42)
	.dwattr $C$DW$169, DW_AT_TI_end_line(0x96)
$C$DW$170	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$170, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$5$B)
	.dwattr $C$DW$170, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$5$E)
$C$DW$171	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$171, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$31$B)
	.dwattr $C$DW$171, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$31$E)
$C$DW$172	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$172, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$26$B)
	.dwattr $C$DW$172, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$26$E)
$C$DW$173	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$173, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$21$B)
	.dwattr $C$DW$173, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$21$E)
$C$DW$174	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$174, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$18$B)
	.dwattr $C$DW$174, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$18$E)
$C$DW$175	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$175, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$11$B)
	.dwattr $C$DW$175, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$11$E)
$C$DW$176	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$176, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$15$B)
	.dwattr $C$DW$176, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$15$E)
$C$DW$177	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$177, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$6$B)
	.dwattr $C$DW$177, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$6$E)
$C$DW$178	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$178, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$7$B)
	.dwattr $C$DW$178, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$7$E)
$C$DW$179	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$179, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$8$B)
	.dwattr $C$DW$179, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$8$E)
$C$DW$180	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$180, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$9$B)
	.dwattr $C$DW$180, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$9$E)
$C$DW$181	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$181, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$10$B)
	.dwattr $C$DW$181, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$10$E)
$C$DW$182	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$182, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$16$B)
	.dwattr $C$DW$182, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$16$E)
$C$DW$183	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$183, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$17$B)
	.dwattr $C$DW$183, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$17$E)
$C$DW$184	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$184, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$19$B)
	.dwattr $C$DW$184, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$19$E)
$C$DW$185	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$185, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$20$B)
	.dwattr $C$DW$185, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$20$E)
$C$DW$186	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$186, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$22$B)
	.dwattr $C$DW$186, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$22$E)
$C$DW$187	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$187, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$23$B)
	.dwattr $C$DW$187, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$23$E)
$C$DW$188	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$188, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$24$B)
	.dwattr $C$DW$188, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$24$E)
$C$DW$189	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$189, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$25$B)
	.dwattr $C$DW$189, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$25$E)
$C$DW$190	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$190, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$27$B)
	.dwattr $C$DW$190, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$27$E)
$C$DW$191	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$191, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$28$B)
	.dwattr $C$DW$191, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$28$E)
$C$DW$192	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$192, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$29$B)
	.dwattr $C$DW$192, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$29$E)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$30$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$30$E)
$C$DW$194	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$194, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$32$B)
	.dwattr $C$DW$194, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$32$E)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$33$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$33$E)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$34$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$34$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$35$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$35$E)

$C$DW$198	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$198, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.se66:$C$L2:2:1443280398")
	.dwattr $C$DW$198, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c")
	.dwattr $C$DW$198, DW_AT_TI_begin_line(0x2c)
	.dwattr $C$DW$198, DW_AT_TI_end_line(0x31)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$12$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$12$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$13$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$13$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$14$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_recursiveFilterVert1stOrder_d$14$E)
	.dwendtag $C$DW$198

	.dwendtag $C$DW$169

	.dwattr $C$DW$89, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_recursiveFilterVert1stOrder/VLIB_recursiveFilterVert1stOrder_d.c")
	.dwattr $C$DW$89, DW_AT_TI_end_line(0x9f)
	.dwattr $C$DW$89, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$89

;; Inlined function references:
;; [ 15] VLIB_profile_start
;; [ 16] VLIB_profile_stop
;; [ 19] VLIB_kernel_memory
;; [ 25] CreatePattern1
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_recursiveFilterVert1stOrder",0
$C$SL2:	.string	"%s generated input | Opt results compared to NatC results |"
	.string	" width=%d, height=%d",0
$C$SL3:	.string	"width=%d, height=%d",0
$C$SL4:	.string	"width * height",0
$C$SL5:	.string	"N = width * height; M = height",0
$C$SL6:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_compare_mem
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_recursiveFilterVert1stOrder
	.global	VLIB_recursiveFilterVert1stOrder_cn
	.global	recursiveFilterVert1stOrder_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles
	.global	__c6xabi_remi
	.global	__c6xabi_divi
	.global	memcpy

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$36	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x04)
$C$DW$202	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$202, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$202, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$202, DW_AT_decl_column(0x05)
$C$DW$203	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$203, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$203, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$203, DW_AT_decl_column(0x05)
$C$DW$204	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$204, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$204, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$204, DW_AT_decl_column(0x05)
$C$DW$205	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$205, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$205, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$205, DW_AT_decl_column(0x05)
$C$DW$206	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$206, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$206, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$206, DW_AT_decl_column(0x05)
$C$DW$207	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$207, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$207, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$207, DW_AT_decl_column(0x05)
$C$DW$208	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$208, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$208, DW_AT_decl_line(0x80)
	.dwattr $C$DW$208, DW_AT_decl_column(0x05)
$C$DW$209	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$209, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$209, DW_AT_decl_line(0x81)
	.dwattr $C$DW$209, DW_AT_decl_column(0x05)
$C$DW$210	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$210, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$210, DW_AT_decl_line(0x82)
	.dwattr $C$DW$210, DW_AT_decl_column(0x05)
$C$DW$211	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$211, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$211, DW_AT_decl_line(0x83)
	.dwattr $C$DW$211, DW_AT_decl_column(0x05)
$C$DW$212	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$212, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$212, DW_AT_decl_line(0x84)
	.dwattr $C$DW$212, DW_AT_decl_column(0x05)
$C$DW$213	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$213, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$213, DW_AT_decl_line(0x85)
	.dwattr $C$DW$213, DW_AT_decl_column(0x05)
$C$DW$214	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$214, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$214, DW_AT_decl_line(0x86)
	.dwattr $C$DW$214, DW_AT_decl_column(0x05)
$C$DW$215	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$215, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$215, DW_AT_decl_line(0x87)
	.dwattr $C$DW$215, DW_AT_decl_column(0x05)
$C$DW$216	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$216, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$216, DW_AT_decl_line(0x88)
	.dwattr $C$DW$216, DW_AT_decl_column(0x05)
$C$DW$217	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$217, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$217, DW_AT_decl_line(0x89)
	.dwattr $C$DW$217, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x0e)
$C$DW$T$37	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x03)

$C$DW$T$38	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x04)
$C$DW$218	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$218, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$218, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$218, DW_AT_decl_column(0x05)
$C$DW$219	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$219, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$219, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$219, DW_AT_decl_column(0x05)
$C$DW$220	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$220, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$220, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$220, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x06)

$C$DW$T$39	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x04)
$C$DW$221	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$221, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$221, DW_AT_decl_line(0x72)
	.dwattr $C$DW$221, DW_AT_decl_column(0x05)
$C$DW$222	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$222, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$222, DW_AT_decl_line(0x73)
	.dwattr $C$DW$222, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\../common/VLIB_test.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x06)

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x20)
$C$DW$223	.dwtag  DW_TAG_member
	.dwattr $C$DW$223, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$223, DW_AT_name("testPattern")
	.dwattr $C$DW$223, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$223, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$223, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$223, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$223, DW_AT_decl_line(0x24)
	.dwattr $C$DW$223, DW_AT_decl_column(0x0e)
$C$DW$224	.dwtag  DW_TAG_member
	.dwattr $C$DW$224, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$224, DW_AT_name("staticIn")
	.dwattr $C$DW$224, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$224, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$224, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$224, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$224, DW_AT_decl_line(0x25)
	.dwattr $C$DW$224, DW_AT_decl_column(0x0e)
$C$DW$225	.dwtag  DW_TAG_member
	.dwattr $C$DW$225, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$225, DW_AT_name("staticOut")
	.dwattr $C$DW$225, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$225, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$225, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$225, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$225, DW_AT_decl_line(0x26)
	.dwattr $C$DW$225, DW_AT_decl_column(0x0e)
$C$DW$226	.dwtag  DW_TAG_member
	.dwattr $C$DW$226, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$226, DW_AT_name("boundaryTop")
	.dwattr $C$DW$226, DW_AT_TI_symbol_name("boundaryTop")
	.dwattr $C$DW$226, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$226, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$226, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$226, DW_AT_decl_line(0x27)
	.dwattr $C$DW$226, DW_AT_decl_column(0x0e)
$C$DW$227	.dwtag  DW_TAG_member
	.dwattr $C$DW$227, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$227, DW_AT_name("boundaryBottom")
	.dwattr $C$DW$227, DW_AT_TI_symbol_name("boundaryBottom")
	.dwattr $C$DW$227, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$227, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$227, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$227, DW_AT_decl_line(0x28)
	.dwattr $C$DW$227, DW_AT_decl_column(0x0e)
$C$DW$228	.dwtag  DW_TAG_member
	.dwattr $C$DW$228, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$228, DW_AT_name("width")
	.dwattr $C$DW$228, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$228, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$228, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$228, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$228, DW_AT_decl_line(0x29)
	.dwattr $C$DW$228, DW_AT_decl_column(0x0e)
$C$DW$229	.dwtag  DW_TAG_member
	.dwattr $C$DW$229, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$229, DW_AT_name("height")
	.dwattr $C$DW$229, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$229, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$229, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$229, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$229, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$229, DW_AT_decl_column(0x0e)
$C$DW$230	.dwtag  DW_TAG_member
	.dwattr $C$DW$230, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$230, DW_AT_name("weight")
	.dwattr $C$DW$230, DW_AT_TI_symbol_name("weight")
	.dwattr $C$DW$230, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$230, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$230, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$230, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$230, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$23

	.dwattr $C$DW$T$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x10)
$C$DW$T$40	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$40, DW_AT_address_class(0x20)
$C$DW$T$42	.dwtag  DW_TAG_typedef, DW_AT_name("recursiveFilterVert1stOrder_testParams_t")
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$42, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\VLIB_recursiveFilterVert1stOrder_idat.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x03)
$C$DW$T$43	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$T$43, DW_AT_address_class(0x20)
$C$DW$T$44	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$44, DW_AT_address_class(0x20)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x18)
$C$DW$231	.dwtag  DW_TAG_member
	.dwattr $C$DW$231, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$231, DW_AT_name("fd")
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$231, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$231, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$231, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$231, DW_AT_decl_line(0x49)
	.dwattr $C$DW$231, DW_AT_decl_column(0x0b)
$C$DW$232	.dwtag  DW_TAG_member
	.dwattr $C$DW$232, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$232, DW_AT_name("buf")
	.dwattr $C$DW$232, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$232, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$232, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$232, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$232, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$232, DW_AT_decl_column(0x16)
$C$DW$233	.dwtag  DW_TAG_member
	.dwattr $C$DW$233, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$233, DW_AT_name("pos")
	.dwattr $C$DW$233, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$233, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$233, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$233, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$233, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$233, DW_AT_decl_column(0x16)
$C$DW$234	.dwtag  DW_TAG_member
	.dwattr $C$DW$234, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$234, DW_AT_name("bufend")
	.dwattr $C$DW$234, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$234, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$234, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$234, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$234, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$234, DW_AT_decl_column(0x16)
$C$DW$235	.dwtag  DW_TAG_member
	.dwattr $C$DW$235, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$235, DW_AT_name("buff_stop")
	.dwattr $C$DW$235, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$235, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$235, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$235, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$235, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$235, DW_AT_decl_column(0x16)
$C$DW$236	.dwtag  DW_TAG_member
	.dwattr $C$DW$236, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$236, DW_AT_name("flags")
	.dwattr $C$DW$236, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$236, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$236, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$236, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$236, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$236, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x03)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x08)
$C$DW$237	.dwtag  DW_TAG_member
	.dwattr $C$DW$237, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$237, DW_AT_name("quot")
	.dwattr $C$DW$237, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$237, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$237, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$237, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$237, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$237, DW_AT_decl_column(0x16)
$C$DW$238	.dwtag  DW_TAG_member
	.dwattr $C$DW$238, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$238, DW_AT_name("rem")
	.dwattr $C$DW$238, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$238, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$238, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$238, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$238, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$238, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x23)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x08)
$C$DW$239	.dwtag  DW_TAG_member
	.dwattr $C$DW$239, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$239, DW_AT_name("quot")
	.dwattr $C$DW$239, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$239, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$239, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$239, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$239, DW_AT_decl_line(0x40)
	.dwattr $C$DW$239, DW_AT_decl_column(0x17)
$C$DW$240	.dwtag  DW_TAG_member
	.dwattr $C$DW$240, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$240, DW_AT_name("rem")
	.dwattr $C$DW$240, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$240, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$240, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$240, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$240, DW_AT_decl_line(0x40)
	.dwattr $C$DW$240, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x24)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x10)
$C$DW$241	.dwtag  DW_TAG_member
	.dwattr $C$DW$241, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$241, DW_AT_name("quot")
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$241, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$241, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$241, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x43)
	.dwattr $C$DW$241, DW_AT_decl_column(0x1c)
$C$DW$242	.dwtag  DW_TAG_member
	.dwattr $C$DW$242, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$242, DW_AT_name("rem")
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$242, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$242, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$242, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x43)
	.dwattr $C$DW$242, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x29)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x24)
$C$DW$243	.dwtag  DW_TAG_member
	.dwattr $C$DW$243, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$243, DW_AT_name("area")
	.dwattr $C$DW$243, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$243, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$243, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x69)
	.dwattr $C$DW$243, DW_AT_decl_column(0x0d)
$C$DW$244	.dwtag  DW_TAG_member
	.dwattr $C$DW$244, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$244, DW_AT_name("xsum")
	.dwattr $C$DW$244, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$244, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$244, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$244, DW_AT_decl_column(0x0d)
$C$DW$245	.dwtag  DW_TAG_member
	.dwattr $C$DW$245, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$245, DW_AT_name("ysum")
	.dwattr $C$DW$245, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$245, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$245, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$245, DW_AT_decl_column(0x0d)
$C$DW$246	.dwtag  DW_TAG_member
	.dwattr $C$DW$246, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$246, DW_AT_name("xmin")
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$246, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$246, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$246, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$246, DW_AT_decl_column(0x0d)
$C$DW$247	.dwtag  DW_TAG_member
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$247, DW_AT_name("ymin")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$247, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$247, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$247, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$247, DW_AT_decl_column(0x0d)
$C$DW$248	.dwtag  DW_TAG_member
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$248, DW_AT_name("xmax")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$248, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$248, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$248, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$248, DW_AT_decl_column(0x0d)
$C$DW$249	.dwtag  DW_TAG_member
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$249, DW_AT_name("ymax")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$249, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$249, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$249, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x70)
	.dwattr $C$DW$249, DW_AT_decl_column(0x0d)
$C$DW$250	.dwtag  DW_TAG_member
	.dwattr $C$DW$250, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$250, DW_AT_name("seedx")
	.dwattr $C$DW$250, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$250, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$250, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$250, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x72)
	.dwattr $C$DW$250, DW_AT_decl_column(0x0d)
$C$DW$251	.dwtag  DW_TAG_member
	.dwattr $C$DW$251, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$251, DW_AT_name("seedy")
	.dwattr $C$DW$251, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$251, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$251, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$251, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x73)
	.dwattr $C$DW$251, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x03)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x10)
$C$DW$252	.dwtag  DW_TAG_member
	.dwattr $C$DW$252, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$252, DW_AT_name("daylight")
	.dwattr $C$DW$252, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$252, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$252, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$252, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x52)
	.dwattr $C$DW$252, DW_AT_decl_column(0x0b)
$C$DW$253	.dwtag  DW_TAG_member
	.dwattr $C$DW$253, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$253, DW_AT_name("timezone")
	.dwattr $C$DW$253, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$253, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$253, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$253, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x53)
	.dwattr $C$DW$253, DW_AT_decl_column(0x0b)
$C$DW$254	.dwtag  DW_TAG_member
	.dwattr $C$DW$254, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$254, DW_AT_name("tzname")
	.dwattr $C$DW$254, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$254, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$254, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$254, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x54)
	.dwattr $C$DW$254, DW_AT_decl_column(0x0b)
$C$DW$255	.dwtag  DW_TAG_member
	.dwattr $C$DW$255, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$255, DW_AT_name("dstname")
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$255, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$255, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$255, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x55)
	.dwattr $C$DW$255, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x01)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x19)
$C$DW$T$52	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$2)
$C$DW$T$53	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$T$53, DW_AT_address_class(0x20)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$83	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$83, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$83, DW_AT_address_class(0x20)
$C$DW$T$93	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$93, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$93, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$93, DW_AT_decl_column(0x1d)
$C$DW$T$94	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$94, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$94, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$95	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$19)
$C$DW$T$96	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_address_class(0x20)
$C$DW$T$97	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$97, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$97, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$97, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$22	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x1d)
$C$DW$T$98	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$22)
$C$DW$T$99	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$99, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$99, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$99, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$75	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$75, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$75, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$75, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$75, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$75, DW_AT_decl_column(0x1c)
$C$DW$T$101	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$101, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$101, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$101, DW_AT_decl_column(0x16)
$C$DW$T$100	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$100, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$100, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$124	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$124, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$124, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$124, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$124, DW_AT_decl_column(0x0d)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1d)
$C$DW$T$116	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$116, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$116, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$116, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$116, DW_AT_decl_column(0x11)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x10)
$C$DW$256	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$256, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$33

$C$DW$T$78	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$78, DW_AT_address_class(0x20)
$C$DW$T$112	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$21)
$C$DW$T$119	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$119, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$119, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$119, DW_AT_decl_column(0x17)
$C$DW$T$120	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$120, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$120, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$120, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$120, DW_AT_decl_column(0x17)
$C$DW$T$121	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$121, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$121, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$121, DW_AT_decl_column(0x17)
$C$DW$T$122	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$122, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$122, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$122, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$122, DW_AT_decl_column(0x17)
$C$DW$T$123	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$123, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$123, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$123, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$123, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$123, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$125	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$125, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$125, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$125, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$125, DW_AT_decl_column(0x17)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x16)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x19)
$C$DW$T$129	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$129, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$129, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$129, DW_AT_decl_column(0x16)
$C$DW$T$69	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$69, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$69, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$69, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$69, DW_AT_decl_column(0x1c)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x16)
$C$DW$T$132	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$132, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$132, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$132, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$132, DW_AT_decl_column(0x16)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x16)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x16)
$C$DW$T$135	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$135, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$135, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$135, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$135, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x21)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$137)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x17)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$137)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x20)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$140)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x16)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$140)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x21)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$144)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x17)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$144)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x17)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$149	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$149, DW_AT_address_class(0x20)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x20)

$C$DW$T$151	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_byte_size(0x10)
$C$DW$257	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$257, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x16)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$150)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x16)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x0f)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_recursiveFilterVert1stOrder\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x10)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$30	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$30, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$30, DW_AT_name("signed char")
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x01)

$C$DW$T$31	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x04)
$C$DW$258	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$258, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$31

$C$DW$T$60	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$60, DW_AT_address_class(0x20)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x12)
$C$DW$T$102	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$30)
$C$DW$T$103	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$T$103, DW_AT_address_class(0x20)

$C$DW$T$160	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
$C$DW$259	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$160


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$260	.dwtag  DW_TAG_member
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$260, DW_AT_name("_v")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$260, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$260, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$260, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0x44)
	.dwattr $C$DW$260, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x01)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x01)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x13)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("tm")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x24)
$C$DW$261	.dwtag  DW_TAG_member
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$261, DW_AT_name("tm_sec")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$261, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$261, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$261, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x41)
	.dwattr $C$DW$261, DW_AT_decl_column(0x09)
$C$DW$262	.dwtag  DW_TAG_member
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$262, DW_AT_name("tm_min")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$262, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x42)
	.dwattr $C$DW$262, DW_AT_decl_column(0x09)
$C$DW$263	.dwtag  DW_TAG_member
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$263, DW_AT_name("tm_hour")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$263, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x43)
	.dwattr $C$DW$263, DW_AT_decl_column(0x09)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$264, DW_AT_name("tm_mday")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x44)
	.dwattr $C$DW$264, DW_AT_decl_column(0x09)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$265, DW_AT_name("tm_mon")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x45)
	.dwattr $C$DW$265, DW_AT_decl_column(0x09)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$266, DW_AT_name("tm_year")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x46)
	.dwattr $C$DW$266, DW_AT_decl_column(0x09)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$267, DW_AT_name("tm_wday")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x47)
	.dwattr $C$DW$267, DW_AT_decl_column(0x09)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$268, DW_AT_name("tm_yday")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x48)
	.dwattr $C$DW$268, DW_AT_decl_column(0x09)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$269, DW_AT_name("tm_isdst")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x49)
	.dwattr $C$DW$269, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

