;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:12:32 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$146)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$32)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$146)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x82)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$96)
	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x86)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("memalign")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("memalign")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x87)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$96)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$96)
	.dwendtag $C$DW$15


$C$DW$18	.dwtag  DW_TAG_subprogram, DW_AT_name("modf")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("modf")
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwattr $C$DW$18, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h")
	.dwattr $C$DW$18, DW_AT_decl_line(0x63)
	.dwattr $C$DW$18, DW_AT_decl_column(0x11)
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$17)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$209)
	.dwendtag $C$DW$18


$C$DW$21	.dwtag  DW_TAG_subprogram, DW_AT_name("__c6xabi_nround")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("__c6xabi_nround")
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwattr $C$DW$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h")
	.dwattr $C$DW$21, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$21, DW_AT_decl_column(0x11)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$17)
	.dwendtag $C$DW$21


$C$DW$23	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwattr $C$DW$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$23, DW_AT_decl_line(0x58)
	.dwattr $C$DW$23, DW_AT_decl_column(0x05)

$C$DW$24	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwattr $C$DW$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$24, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$24, DW_AT_decl_column(0x06)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$32)
	.dwendtag $C$DW$24


$C$DW$27	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwattr $C$DW$27, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$27, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$27, DW_AT_decl_column(0x06)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$10)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$10)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$32)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$27


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$32)
	.dwendtag $C$DW$34


$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$10)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$32)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$32)
	.dwendtag $C$DW$36


$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x80)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$25)
	.dwendtag $C$DW$40


$C$DW$42	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwattr $C$DW$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$42, DW_AT_decl_line(0x81)
	.dwattr $C$DW$42, DW_AT_decl_column(0x06)

$C$DW$43	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwattr $C$DW$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$43, DW_AT_decl_line(0x82)
	.dwattr $C$DW$43, DW_AT_decl_column(0x0a)

$C$DW$44	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwattr $C$DW$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$44, DW_AT_decl_line(0x83)
	.dwattr $C$DW$44, DW_AT_decl_column(0x06)

$C$DW$45	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwattr $C$DW$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_memory.h")
	.dwattr $C$DW$45, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$45, DW_AT_decl_column(0x06)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$22)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$22)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$3)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$3)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$23)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$23)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$23)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$22)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$32)
	.dwendtag $C$DW$45


$C$DW$55	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwattr $C$DW$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_memory.h")
	.dwattr $C$DW$55, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$55, DW_AT_decl_column(0x07)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$96)
	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwattr $C$DW$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_memory.h")
	.dwattr $C$DW$57, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$57, DW_AT_decl_column(0x07)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$57


$C$DW$59	.dwtag  DW_TAG_subprogram, DW_AT_name("getRotationMatrix")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("getRotationMatrix")
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwattr $C$DW$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$59, DW_AT_decl_line(0x52)
	.dwattr $C$DW$59, DW_AT_decl_column(0x10)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$59


$C$DW$61	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_ORB_computeRBrief")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("VLIB_ORB_computeRBrief")
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwattr $C$DW$61, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\c66/VLIB_ORB_computeRBrief.h")
	.dwattr $C$DW$61, DW_AT_decl_line(0x83)
	.dwattr $C$DW$61, DW_AT_decl_column(0x0d)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$172)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$23)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$23)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$23)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$172)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$139)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$25)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$158)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$136)
	.dwendtag $C$DW$61


$C$DW$71	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_ORB_computeRBrief_cn")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("VLIB_ORB_computeRBrief_cn")
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$71, DW_AT_declaration
	.dwattr $C$DW$71, DW_AT_external
	.dwattr $C$DW$71, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_cn.h")
	.dwattr $C$DW$71, DW_AT_decl_line(0x23)
	.dwattr $C$DW$71, DW_AT_decl_column(0x0a)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$26)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$23)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$23)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$23)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$26)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$28)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$25)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$118)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$28)
	.dwendtag $C$DW$71


$C$DW$81	.dwtag  DW_TAG_subprogram, DW_AT_name("orb_computeRBrief_getTestParams")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("orb_computeRBrief_getTestParams")
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x30)
	.dwattr $C$DW$81, DW_AT_decl_column(0x06)
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$85)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$118)
	.dwendtag $C$DW$81

$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x60)
	.dwattr $C$DW$84, DW_AT_decl_column(0x13)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x62)
	.dwattr $C$DW$85, DW_AT_decl_column(0x13)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$218)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x63)
	.dwattr $C$DW$86, DW_AT_decl_column(0x13)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$218)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x64)
	.dwattr $C$DW$87, DW_AT_decl_column(0x13)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x75)
	.dwattr $C$DW$88, DW_AT_decl_column(0x14)
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$89, DW_AT_decl_line(0x76)
	.dwattr $C$DW$89, DW_AT_decl_column(0x14)
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$90, DW_AT_decl_line(0x77)
	.dwattr $C$DW$90, DW_AT_decl_column(0x14)
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
	.dwattr $C$DW$91, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$91, DW_AT_decl_line(0x78)
	.dwattr $C$DW$91, DW_AT_decl_column(0x14)
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$201)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external
	.dwattr $C$DW$92, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h")
	.dwattr $C$DW$92, DW_AT_decl_line(0x79)
	.dwattr $C$DW$92, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\005882 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\005884 
	.sect	".text"
	.clink
	.global	VLIB_ORB_computeRBrief_d

$C$DW$93	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_ORB_computeRBrief_d")
	.dwattr $C$DW$93, DW_AT_low_pc(VLIB_ORB_computeRBrief_d)
	.dwattr $C$DW$93, DW_AT_high_pc(0x00)
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("VLIB_ORB_computeRBrief_d")
	.dwattr $C$DW$93, DW_AT_external
	.dwattr $C$DW$93, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$93, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$93, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$93, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$93, DW_AT_decl_line(0x26)
	.dwattr $C$DW$93, DW_AT_decl_column(0x06)
	.dwattr $C$DW$93, DW_AT_TI_max_frame_size(0xb0)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 39,column 1,is_stmt,address VLIB_ORB_computeRBrief_d,isa 0

	.dwfde $C$DW$CIE, VLIB_ORB_computeRBrief_d
$C$DW$94	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_ORB_computeRBrief_d(uint8_t LevelOfFeedback)                 
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_ORB_computeRBrief_d                                    *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 16 Args + 104 Auto + 56 Save = 176 byte              *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_ORB_computeRBrief_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 45	-----------------------    orb_computeRBrief_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(2, "VLIB_ORB_computeRBrief");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g60;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | orb_computeRBrief_testParams_t   *prm;                                 
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(8)       ; |39| 
	.dwcfi	cfa_offset, 56
	.dwcfi	save_reg_to_mem, 19, -48
           ADDK    .S2     -120,SP           ; |39| 
	.dwcfi	cfa_offset, 176
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg8]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg20]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_regx 0x25]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg6]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg8]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg22]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg6]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_regx 0x27]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_regx 0x39]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg22]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C18")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C18")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg24]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$C19")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$C19")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_regx 0x25]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$C20")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$C20")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_regx 0x3b]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$C21")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$C21")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg8]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$C22")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$C22")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg5]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$C23")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$C23")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg4]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$C24")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$C24")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_regx 0x37]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$C25")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$C25")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg6]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$C26")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$C26")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg8]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$C27")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$C27")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg3]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$C28")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$C28")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg26]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$C29")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$C29")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg10]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg28]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$K27")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$K27")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg20]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg13]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$K108")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$K108")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg14]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$U204")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$U204")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$154)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_regx 0x2a]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$K229")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$K229")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg12]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$K235")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$K235")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg20]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$K244")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$K244")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$199)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg3]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$U256")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$U256")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg3]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$U275")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$U275")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg3]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$K284")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$K284")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg8]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$U201")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$U201")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg10]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$U274")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$U274")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg27]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg15]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg15]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg17]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("$O$L5")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("$O$L5")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_reg12]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$L6")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$L6")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_reg14]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("y")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_breg31 24]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("y")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_breg31 32]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("nstep")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("nstep")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg6]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("x2p")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("x2p")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$156)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg5]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("y2")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("y2")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$208)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_regx 0x25]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("x2")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("x2")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$208)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_regx 0x35]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("pointY")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("pointY")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_reg14]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("pointX")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("pointX")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg12]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_regx 0x29]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("cnt")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("cnt")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg11]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("intgrlImg")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("intgrlImg")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_breg31 80]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("relative_patterns")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("relative_patterns")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$118)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_breg31 84]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("validAngles")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("validAngles")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$205)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_breg31 88]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("validFeaturePoints")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("validFeaturePoints")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 92]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("featWedges")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("featWedges")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_breg31 96]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("outDesc_cn")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("outDesc_cn")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_breg31 100]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("outDesc")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("outDesc")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_breg31 104]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("nfeatures")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("nfeatures")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg26]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_breg31 108]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_breg31 112]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_breg31 40]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_breg31 116]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("$O$S1")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("$O$S1")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_reg20]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$137)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_breg31 120]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("$O$U58")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("$O$U58")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_reg4]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("$O$U58")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("$O$U58")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_reg3]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("$O$U57")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("$O$U57")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_reg15]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("$O$U109")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("$O$U109")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_reg10]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("$O$U109")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("$O$U109")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg10]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("$O$U126")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("$O$U126")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg12]
$C$DW$165	.dwtag  DW_TAG_variable, DW_AT_name("$O$U126")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("$O$U126")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg12]
$C$DW$166	.dwtag  DW_TAG_variable, DW_AT_name("$O$U254")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("$O$U254")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_reg20]
$C$DW$167	.dwtag  DW_TAG_variable, DW_AT_name("$O$U254")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("$O$U254")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_reg20]
$C$DW$168	.dwtag  DW_TAG_variable, DW_AT_name("$O$U252")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("$O$U252")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_reg26]
$C$DW$169	.dwtag  DW_TAG_variable, DW_AT_name("$O$U252")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("$O$U252")
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$169, DW_AT_location[DW_OP_reg26]
$C$DW$170	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_reg4]
$C$DW$171	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_reg4]
$C$DW$172	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_reg10]
$C$DW$173	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg26]
$C$DW$174	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg10]
$C$DW$175	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg10]
$C$DW$176	.dwtag  DW_TAG_variable, DW_AT_name("$O$R7")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("$O$R7")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg20]
$C$DW$177	.dwtag  DW_TAG_variable, DW_AT_name("$O$R7")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("$O$R7")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_reg20]
$C$DW$178	.dwtag  DW_TAG_variable, DW_AT_name("$O$R6")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("$O$R6")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_reg4]
$C$DW$179	.dwtag  DW_TAG_variable, DW_AT_name("$O$R6")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("$O$R6")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_reg4]
$C$DW$180	.dwtag  DW_TAG_variable, DW_AT_name("$O$S5")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("$O$S5")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_reg3]
$C$DW$181	.dwtag  DW_TAG_variable, DW_AT_name("$O$S5")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("$O$S5")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_reg3]
$C$DW$182	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_reg20]
$C$DW$183	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$183, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$183, DW_AT_location[DW_OP_reg12]
$C$DW$184	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$184, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$184, DW_AT_location[DW_OP_reg22]
$C$DW$185	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_reg22]
$C$DW$186	.dwtag  DW_TAG_variable, DW_AT_name("rMat")
	.dwattr $C$DW$186, DW_AT_TI_symbol_name("rMat")
	.dwattr $C$DW$186, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$186, DW_AT_location[DW_OP_breg31 48]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("orb_computeRBrief_getTestParams")
	.dwattr $C$DW$187, DW_AT_TI_call

           CALLP   .S2     orb_computeRBrief_getTestParams,B3
||         STW     .D2T1   A4,*+SP(120)      ; |39| 
||         ADDAW   .D1X    SP,10,A4          ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | orb_computeRBrief_getTestParams(&prm, &test_cases);                    
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {orb_computeRBrief_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$188, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(2, "VLIB_ORB_computeRBrief");                        
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$284 = &desc[0];
;**  	-----------------------    U$13 = prm-36;
;**  	-----------------------    K$27 = 61440u;
;**  	-----------------------    U$12 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           MVKL    .S1     test_cases,A3
||         LDW     .D2T2   *+SP(40),B5
||         ZERO    .L1     A13               ; |51| 

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  54 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  55 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;  57 | VLIB_F32    scale;                                                     
;----------------------------------------------------------------------
           ZERO    .L1     A3                ; |51| 
           STW     .D2T1   A3,*+SP(116)
           SUBAW   .D2     B5,9,B12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 58,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  58 | uint32_t    nfeatures = prm[tpi].true_num_features;                    
;----------------------------------------------------------------------
           ADDK    .S2     36,B12            ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |51| 

   [!A0]   BNOP    .S1     $C$L31,4          ; |51| 
|| [ A0]   LDW     .D2T2   *+B12(28),B10     ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 60,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  60 | uint8_t    *outDesc             = (uint8_t *)VLIB_malloc(nfeatures * 32
;     | );                                                                     
;----------------------------------------------------------------------
           SHL     .S1X    B10,5,A10         ; |60| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L31}        ; |51| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 58	-----------------------    nfeatures = (*(U$13 += 36)).true_num_features;
;** 60	-----------------------    C$29 = nfeatures<<5;
;** 60	-----------------------    outDesc = VLIB_malloc(C$29);
;** 61	-----------------------    outDesc_cn = malloc(C$29);
;** 62	-----------------------    featWedges = VLIB_malloc(nfeatures);
;** 63	-----------------------    C$28 = nfeatures*4u;
;** 63	-----------------------    validFeaturePoints = VLIB_malloc(C$28);
;** 64	-----------------------    validAngles = VLIB_malloc(C$28);
;** 65	-----------------------    relative_patterns = memalign(8u, K$27);
;** 66	-----------------------    intgrlImg = VLIB_malloc((unsigned)((*U$13).imageWidth*(*U$13).imageHeight*4));
;** 69	-----------------------    if ( !((outDesc != NULL)&(outDesc_cn != NULL)&(featWedges != NULL)&(validFeaturePoints != NULL)&(validAngles != NULL)&(relative_patterns != NULL)&(intgrlImg != NULL)) ) goto g58;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 60,column 21,is_stmt,isa 0
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$189, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |60| 
           ADDKPC  .S2     $C$RL2,B3,3       ; |60| 
           MV      .L1     A10,A4            ; |60| 
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |60| 
$C$DW$L$VLIB_ORB_computeRBrief_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$5$B:
;          EXCLUSIVE CPU CYCLES: 49
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("malloc")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(104)      ; |60| 
||         MV      .L1     A10,A4            ; |61| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 61,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint8_t    *outDesc_cn          = (uint8_t *)malloc(nfeatures * 32);   
;----------------------------------------------------------------------
$C$RL3:    ; CALL OCCURS {malloc} {0}        ; |61| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$191, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(100)      ; |61| 
||         MV      .L1X    B10,A4            ; |62| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 62,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  62 | uint8_t    *featWedges          = (uint8_t *)VLIB_malloc(nfeatures);   
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {VLIB_malloc} {0}   ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | uint32_t   *validFeaturePoints  = (uint32_t *)VLIB_malloc(nfeatures * s
;     | izeof(uint32_t));                                                      
;----------------------------------------------------------------------
           SHL     .S2     B10,2,B10         ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 62,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(96)       ; |62| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x04)
	.dwattr $C$DW$192, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$192, DW_AT_TI_call

           MV      .L1X    B10,A4            ; |63| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 63,column 21,is_stmt,isa 0
$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |63| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$193, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(92)       ; |63| 
||         MV      .L1X    B10,A4            ; |64| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | VLIB_F32   *validAngles         = (VLIB_F32 *)VLIB_malloc(nfeatures * s
;     | izeof(VLIB_F32));                                                      
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |64| 
           ZERO    .L2     B4
           SET     .S2     B4,0xc,0xf,B4
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("memalign")
	.dwattr $C$DW$194, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         STW     .D2T1   A4,*+SP(88)       ; |64| 
||         MVK     .L1     0x8,A4            ; |65| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 65,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | int32_t    *relative_patterns   = (int32_t *)memalign(8, CORB_NUM_ORIEN
;     | TATIONS * CORB_NUM_PATTERNS * 2 * sizeof(int32_t));                    
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {memalign} {0}      ; |65| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 66,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | uint32_t   *intgrlImg           = (uint32_t *)VLIB_malloc(prm[tpi].imag
;     | eWidth * prm[tpi].imageHeight * sizeof(uint32_t));                     
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B12(24),B4      ; |66| 
           LDHU    .D2T2   *+B12(26),B5      ; |66| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 65,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(84)       ; |65| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 66,column 21,is_stmt,isa 0
           MPYU    .M2     B5,B4,B4          ; |66| 
           NOP             2
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x04)
	.dwattr $C$DW$195, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$195, DW_AT_TI_call

           SHL     .S1X    B4,2,A4           ; |66| 
||         CALLP   .S2     VLIB_malloc,B3

$C$RL8:    ; CALL OCCURS {VLIB_malloc} {0}   ; |66| 
$C$DW$L$VLIB_ORB_computeRBrief_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$6$B:
;          EXCLUSIVE CPU CYCLES: 22

           LDW     .D2T1   *+SP(100),A0      ; |69| 
||         ZERO    .L2     B4                ; |69| 
||         ZERO    .L1     A3                ; |69| 
||         ZERO    .S1     A5                ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 69,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | if( outDesc && outDesc_cn && featWedges && validFeaturePoints && validA
;     | ngles && relative_patterns && intgrlImg ) {                            
;  71 |     int32_t    fail;                                                   
;  72 |     int32_t    i, cnt, k, j;                                           
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(104),A2      ; |69| 
           LDW     .D2T1   *+SP(92),A1       ; |69| 

           STW     .D2T1   A4,*+SP(80)       ; |66| 
||         ZERO    .L1     A4                ; |69| 

           LDW     .D2T2   *+SP(96),B0       ; |69| 

   [ A0]   MVK     .L1     0x1,A4            ; |69| 
||         LDW     .D2T2   *+SP(88),B2       ; |69| 

   [ A2]   MVK     .L2     0x1,B4            ; |69| 
||         LDW     .D2T1   *+SP(84),A2       ; |69| 

           AND     .L2X    A4,B4,B5          ; |69| 
||         ZERO    .S2     B4                ; |69| 
||         ZERO    .L1     A4                ; |69| 

   [ A1]   MVK     .L2     0x1,B4            ; |69| 
||         LDW     .D2T1   *+SP(80),A1       ; |69| 

   [ B0]   MVK     .L1     0x1,A3            ; |69| 
   [ B2]   MVK     .L1     0x1,A5            ; |69| 

           AND     .L2X    A3,B5,B5          ; |69| 
|| [ A2]   MVK     .L1     0x1,A4            ; |69| 
||         ZERO    .S1     A3                ; |69| 

           AND     .L2     B4,B5,B4          ; |69| 

   [ A1]   MVK     .L1     0x1,A3            ; |69| 
||         AND     .L2X    A5,B4,B4          ; |69| 

           AND     .L2X    A4,B4,B4          ; |69| 
           AND     .L2X    A3,B4,B0          ; |69| 

   [!B0]   BNOP    .S1     $C$L29,2          ; |69| 
||         MV      .L2     B0,B1             ; guard predicate rewrite
|| [ B0]   LDW     .D2T2   *+B12(28),B0      ; |75| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 18,is_stmt,isa 0
;----------------------------------------------------------------------
;  75 | for( i=0, cnt=0; i < prm[tpi].true_num_features; i++ ) {               
;----------------------------------------------------------------------
   [ B1]   ZERO    .L1     A11               ; |75| 
   [!B1]   MVK     .L2     0x1,B0            ; |75| nullify predicate
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 30,is_stmt,isa 0
   [!B0]   B       .S1     $C$L3             ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 69,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L29}        ; |69| 
$C$DW$L$VLIB_ORB_computeRBrief_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$7$B:
;          EXCLUSIVE CPU CYCLES: 5
;**  	-----------------------    K$235 = 128;
;** 75	-----------------------    cnt = 0;
;** 75	-----------------------    if ( !(*U$13).true_num_features ) goto g12;
   [ B0]   LDW     .D2T2   *+SP(40),B4
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 30,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |75| 
$C$DW$L$VLIB_ORB_computeRBrief_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$8$B:
;          EXCLUSIVE CPU CYCLES: 4
;**  	-----------------------    U$58 = prm+U$12;
;**  	-----------------------    U$57 = 0;
;** 75	-----------------------    i = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           ADD     .L1X    A13,B4,A4
||         MVKL    .S1     0x40354ccc,A5
||         MV      .D1     A11,A10

           LDW     .D1T1   *+A4(4),A3        ; |76| 
||         MVKL    .S1     0xcccccccd,A4
||         MV      .L1     A11,A15

           MVKH    .S1     0xcccccccd,A4
           MVKH    .S1     0x40354ccc,A5
$C$DW$L$VLIB_ORB_computeRBrief_d$8$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 18,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$9$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g6:
;** 76	-----------------------    C$27 = (*U$58).staticInFeatures+U$57;
;** 76	-----------------------    pointX = *C$27;
;** 77	-----------------------    pointY = C$27[1];
;** 78	-----------------------    range = (int)__c6xabi_nround(21.3);
;** 81	-----------------------    if ( !((pointX >= range)&(pointY >= range)) ) goto g10;
;** 81	-----------------------    v$1 = prm;
;** 81	-----------------------    if ( (*U$13).imageWidth-pointX < range ) goto g11;
;** 81	-----------------------    if ( (*U$13).imageHeight-pointY < range ) goto g11;
;** 85	-----------------------    validFeaturePoints[cnt] = (unsigned)((int)pointY<<16)|(unsigned)pointX;
;** 86	-----------------------    validAngles[cnt] = *(i*4+(*U$13).staticInAngle);
;** 87	-----------------------    ++cnt;
;** 87	-----------------------    goto g11;
;**	-----------------------g10:
;**  	-----------------------    v$1 = prm;
;**	-----------------------g11:
;** 75	-----------------------    U$57 += 4;
;** 75	-----------------------    U$58 = U$12+v$1;
;** 75	-----------------------    if ( (unsigned)(++i) < (*U$58).true_num_features ) goto g6;
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 76,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | int    pointX = prm[tpi].staticInFeatures[2 * i];                      
;----------------------------------------------------------------------
           ADD     .L1     A15,A3,A3         ; |76| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("__c6xabi_nround")
	.dwattr $C$DW$196, DW_AT_TI_call

           CALL    .S1     __c6xabi_nround   ; |78| 
||         LDHU    .D1T1   *A3,A12           ; |76| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 77,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  77 | int    pointY = prm[tpi].staticInFeatures[2 * i + 1];                  
;----------------------------------------------------------------------
           LDHU    .D1T1   *+A3(2),A14       ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 78,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  78 | int    range = round(CORB_HALF_PATCH_SIZE * 1.42);                     
;----------------------------------------------------------------------
           ADDKPC  .S2     $C$RL9,B3,3       ; |78| 
$C$RL9:    ; CALL OCCURS {__c6xabi_nround} {0}  ; |78| 
$C$DW$L$VLIB_ORB_computeRBrief_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$10$B:
;          EXCLUSIVE CPU CYCLES: 36
           DPTRUNC .L1     A5:A4,A3          ; |78| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 30,is_stmt,isa 0
           ADD     .L1     4,A15,A15         ; |75| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 81,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  81 | if(((pointX >= range) &&                                               
;  82 |     (pointY >= range) &&                                               
;  83 |     (prm[tpi].imageWidth - pointX >= range) &&                         
;  84 |     (prm[tpi].imageHeight - pointY >= range))) {                       
;----------------------------------------------------------------------
           CMPLT   .L1     A12,A3,A4         ; |81| 
           CMPLT   .L1     A14,A3,A5         ; |81| 
           OR      .L1     A4,A5,A0
   [!A0]   LDHU    .D2T2   *+B12(24),B4      ; |81| 
   [ A0]   MVK     .L1     0x1,A1            ; |81| 
   [ A0]   LDW     .D2T2   *+SP(40),B4
           NOP             2
   [!A0]   SUB     .L1X    B4,A12,A4         ; |81| 
   [!A0]   CMPLT   .L1     A4,A3,A1          ; |81| 
   [!A1]   LDHU    .D2T2   *+B12(26),B5      ; |81| 
   [!A0]   LDW     .D2T2   *+SP(40),B4       ; |81| 
   [ A1]   MVK     .L2     0x1,B0
           NOP             2
   [!A1]   SUB     .L2X    B5,A14,B5         ; |81| 
   [!A1]   CMPLT   .L2X    B5,A3,B0          ; |81| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 85,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  85 | validFeaturePoints[cnt] = ((pointY << 0x10U) | pointX);                
;----------------------------------------------------------------------
   [!B0]   LDW     .D2T1   *+SP(92),A3       ; |85| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 30,is_stmt,isa 0
           ADD     .L1X    B4,A13,A4         ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 86,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  86 | validAngles[cnt]        = prm[tpi].staticInAngle[i];                   
;  87 | cnt++;                                                                 
;  91 | for( i=0; i < cnt; i++ ) {                                             
;  92 | scale = ((VLIB_F32)CORB_NUM_ORIENTATIONS) / 360.0f;                    
;----------------------------------------------------------------------
   [!B0]   LDW     .D2T1   *+B12(12),A6      ; |86| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 30,is_stmt,isa 0
           LDW     .D1T1   *+A4(28),A5       ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 85,column 21,is_stmt,isa 0
   [!B0]   PACK2   .L1     A14,A12,A7        ; |85| 
   [!B0]   STW     .D1T1   A7,*+A3[A11]      ; |85| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 75,column 30,is_stmt,isa 0
   [!B0]   LDW     .D2T1   *+SP(88),A3       ; |75| 

   [!B0]   LDW     .D1T1   *+A6[A10],A6      ; |86| 
||         ADD     .L1     1,A10,A10         ; |75| 

           CMPLTU  .L1     A10,A5,A0         ; |75| 

   [ A0]   BNOP    .S2     $C$L2,1           ; |75| 
|| [ A0]   MVKL    .S1     0x40354ccc,A5

   [ A0]   MVKH    .S1     0x40354ccc,A5

   [!B0]   STW     .D1T1   A6,*+A3[A11]      ; |86| 
|| [!B0]   ADD     .L1     1,A11,A11         ; |87| 

   [ A0]   LDW     .D1T1   *+A4(4),A3        ; |76| 
|| [ A0]   MVKL    .S1     0xcccccccd,A4

   [ A0]   MVKH    .S1     0xcccccccd,A4
           ; BRANCHCC OCCURS {$C$L2}         ; |75| 
$C$DW$L$VLIB_ORB_computeRBrief_d$10$E:
;** --------------------------------------------------------------------------*
$C$L3:    
$C$DW$L$VLIB_ORB_computeRBrief_d$11$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g12:
;** 54	-----------------------    status_nat_vs_int = 1;
;** 55	-----------------------    status_nat_vs_ref = 1;
;**  	-----------------------    K$244 = &cycles[0];
;**  	-----------------------    K$229 = &testPatternString[0];
;** 91	-----------------------    if ( cnt <= 0 ) goto g36;

           CMPGT   .L1     A11,0,A0          ; |91| 
||         LDW     .D2T1   *+SP(88),A3
||         MVK     .L2     0x1,B5            ; |54| 

   [!A0]   B       .S2     $C$L11            ; |91| 
||         LDW     .D2T1   *+SP(96),A4
||         MV      .L1     A0,A2             ; |91| branch predicate copy
|| [ A0]   MVKL    .S1     0x3daaaaab,A14
||         MV      .L2     B5,B4             ; |54| 

   [!A2]   ZERO    .L2     B10
||         STW     .D2T2   B4,*+SP(108)      ; |54| 

   [!A2]   ZERO    .L1     A10
   [ A0]   MVKH    .S1     0x3daaaaab,A14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 54,column 20,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(112)      ; |54| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  93 | featWedges[i] = MIN((int32_t)(floor((VLIB_D64)validAngles[i] *\        
;----------------------------------------------------------------------
           CMPLTU  .L1     A4,A3,A0          ; |93| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |91| 
$C$DW$L$VLIB_ORB_computeRBrief_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$12$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    K$108 = 0.083333F;
;** 93	-----------------------    if ( featWedges < validAngles ) goto g25;

   [ A0]   BNOP    .S2     $C$L7,2           ; |93| 
|| [!A0]   SUB     .L1     A3,4,A10
|| [!A0]   MV      .S1     A4,A12
|| [!A0]   MV      .D1     A11,A15

   [ A0]   SUB     .L1     A3,4,A10
   [ A0]   MV      .L1     A4,A12
   [ A0]   MV      .L1     A11,A15
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  94 | (VLIB_D64)scale)), CORB_NUM_ORIENTATIONS - 1);                         
;  97 | for( i = 0; i < CORB_NUM_ORIENTATIONS; i++ ) {                         
;  98 | const RotationMatrix    rMat = getRotationMatrix(i);                   
; 100 | for( j = 0; j < CORB_NUM_PATTERNS; j++ ) {                             
; 101 | const VLIB_D64    x1 = (VLIB_D64) prm[tpi].orbPattern[j * 4];          
; 102 | const VLIB_D64    y1 = (VLIB_D64) prm[tpi].orbPattern[j * 4 + 1];      
; 103 | const VLIB_D64    x2 = (VLIB_D64) prm[tpi].orbPattern[j * 4 + 2];      
; 104 | const VLIB_D64    y2 = (VLIB_D64) prm[tpi].orbPattern[j * 4 + 3];      
; 106 | const int32_t    x1p = ROUND_DOUBLE(rMat.val[0][0] * x1 + rMat.val[0][1
;     | ] * y1);                                                               
; 107 | const int32_t    y1p = ROUND_DOUBLE(rMat.val[1][0] * x1 + rMat.val[1][1
;     | ] * y1);                                                               
; 108 | const int32_t    x2p = ROUND_DOUBLE(rMat.val[0][0] * x2 + rMat.val[0][1
;     | ] * y2);                                                               
; 109 | const int32_t    y2p = ROUND_DOUBLE(rMat.val[1][0] * x2 + rMat.val[1][1
;     | ] * y2);                                                               
; 110 | const int32_t    nstep = (int)prm[tpi].imageWidth;                     
; 111 | int32_t          center;                                               
; 113 | center  = (int32_t)(x1p + prm[tpi].imageWidth * y1p);                  
; 115 | relative_patterns[i * CORB_NUM_PATTERNS * 2 + j * 2] =                 
; 116 | 4 * (center - CORB_PATCH_KERNEL_HALF_WIDTH - CORB_PATCH_KERNEL_HALF_WID
;     | TH * nstep - 1 - nstep);                                               
; 119 | center  = (int32_t)(x2p + prm[tpi].imageWidth * y2p);                  
; 121 | relative_patterns[i * CORB_NUM_PATTERNS * 2 + j * 2 + 1] =             
; 122 | 4 * (center - CORB_PATCH_KERNEL_HALF_WIDTH - CORB_PATCH_KERNEL_HALF_WID
;     | TH * nstep - 1 - nstep);                                               
; 127 | VLIB_fillBuffer(prm[tpi].testPattern, 128, intgrlImg, prm[tpi].staticIn
;     | Integral,                                                              
; 128 | prm[tpi].imageWidth, prm[tpi].imageHeight, sizeof(uint32_t) * prm[tpi].
;     | imageWidth,                                                            
; 129 | sizeof(uint32_t), testPatternString);                                  
; 133 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 134 | VLIB_ORB_computeRBrief(intgrlImg,                                      
; 135 | prm[tpi].imageWidth,                                                   
; 136 | prm[tpi].imageWidth,                                                   
; 137 | prm[tpi].imageHeight,                                                  
; 138 | validFeaturePoints,                                                    
; 139 | featWedges,                                                            
; 140 | cnt,                                                                   
; 141 | relative_patterns,                                                     
; 142 | outDesc);                                                              
; 143 | VLIB_profile_stop();                                                   
; 145 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 146 | VLIB_ORB_computeRBrief_cn(intgrlImg,                                   
; 147 | prm[tpi].imageWidth,                                                   
; 148 | prm[tpi].imageWidth,                                                   
; 149 | prm[tpi].imageHeight,                                                  
; 150 | validFeaturePoints,                                                    
; 151 | featWedges,                                                            
; 152 | cnt,                                                                   
; 153 | relative_patterns,                                                     
; 154 | outDesc_cn);                                                           
; 155 | VLIB_profile_stop();                                                   
; 158 | for( i=0; i < cnt; i++ ) {                                             
; 159 | for( k=0; k < (CORB_NUM_PATTERNS / 8); k++ ) {                         
; 160 | if((outDesc_cn[i * 32 + k] != outDesc[i * 32 + k])) {                  
; 161 | status_nat_vs_int = vlib_KERNEL_FAIL;                                  
; 162 | if( LevelOfFeedback > 0 ) {                                            
; 163 | printf(" Mismatch in Index = %u %u \n", i, k);                         
; 165 | break;                                                                 
; 171 | if((prm[tpi].testPattern == STATIC) && (prm[tpi].staticOut != NULL)) { 
; 172 | for( i=0; i < cnt; i++ ) {                                             
; 173 | for( k=0; k < (CORB_NUM_PATTERNS / 8); k++ ) {                         
; 174 | if((outDesc_cn[i * 32 + k] != prm[tpi].staticOut[i * 32 + k])) {       
; 175 | status_nat_vs_ref = vlib_KERNEL_FAIL;                                  
; 176 | if( LevelOfFeedback > 0 ) {                                            
; 177 | printf(" Mismatch in Index = %u %u \n", i, k);                         
; 179 | break;                                                                 
; 186 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) ||                     
; 187 | (status_nat_vs_ref == vlib_KERNEL_FAIL)) ? 1 : 0;                      
; 189 | est_test=1;                                                            
; 192 | sprintf(desc, "%s generated input | Opt and NatC results compared | out
;     | put->n_features= %d, %s",                                              
; 193 | testPatternString, cnt, prm[tpi].desc);                                
; 195 | VLIB_formula_add_test(cnt, NULL, NULL, fail, desc, NULL);              
; 197 | } else {                                                               
; 199 | sprintf(desc, "Total Features= %d", prm[tpi].true_num_features);       
; 200 | VLIB_skip_test(desc);                                                  
; 204 | free(outDesc_cn);                                                      
; 205 | VLIB_free(outDesc);                                                    
; 206 | VLIB_free(featWedges);                                                 
; 207 | VLIB_free(validFeaturePoints);                                         
; 208 | VLIB_free(validAngles);                                                
; 209 | align_free(relative_patterns);                                         
; 210 | VLIB_free(intgrlImg);                                                  
; 214 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
;----------------------------------------------------------------------
           ; BRANCHCC OCCURS {$C$L7}         ; |93| 
$C$DW$L$VLIB_ORB_computeRBrief_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$13$B:
;**  	-----------------------    U$109 = &validAngles[-1];
;**  	-----------------------    U$126 = featWedges;
;**  	-----------------------    L$1 = cnt;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5128u)
$C$DW$L$VLIB_ORB_computeRBrief_d$13$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L4:    
$C$DW$L$VLIB_ORB_computeRBrief_d$14$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g15:
;** 215	-----------------------    if ( modf(_mpysp2dp(*(++U$109), K$108), &y) < 0.0 ) goto g17;  // [8]
;** 215	-----------------------    R$7 = y;  // [8]
;** 215	-----------------------    goto g18;  // [8]
;**	-----------------------g17:
;** 215	-----------------------    R$7 = y-1.0;  // [8]
;**	-----------------------g18:
;** 93	-----------------------    if ( (int)R$7 >= 29 ) goto g23;
	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 215 | NULL,                                                                  
;----------------------------------------------------------------------
           LDW     .D1T1   *++A10,A3         ; |215| 
           ADDAD   .D2     SP,3,B4
           NOP             2
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("modf")
	.dwattr $C$DW$197, DW_AT_TI_call
           CALL    .S1     modf              ; |215| 
           MPYSP2DP .M1    A3,A14,A5:A4      ; |215| 
           ADDKPC  .S2     $C$RL10,B3,3      ; |215| 
$C$RL10:   ; CALL OCCURS {modf} {0}          ; |215| 
$C$DW$L$VLIB_ORB_computeRBrief_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$15$B:
;          EXCLUSIVE CPU CYCLES: 20

           ZERO    .L1     A7:A6             ; |215| 
||         LDDW    .D2T2   *+SP(24),B5:B4    ; |215| 

           CMPLTDP .S1     A5:A4,A7:A6,A0    ; |215| 
           ZERO    .L1     A4                ; |215| 
   [ A0]   ZERO    .L1     A5
   [ A0]   SET     .S1     A5,0x14,0x1d,A5
           ZERO    .L2     B11:B10           ; |215| 
   [ A0]   FSUBDP  .L2X    B5:B4,A5:A4,B5:B4 ; |215| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
           MVK     .S2     29,B6             ; |93| 
           NOP             1
           DPTRUNC .L2     B5:B4,B5          ; |93| 
           ADDAD   .D2     SP,4,B4
           NOP             2
           CMPLT   .L2     B5,B6,B0          ; |93| 

   [!B0]   BNOP    .S1     $C$L5,3           ; |93| 
|| [ B0]   LDW     .D1T1   *A10,A3           ; |215| 

	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | "Total Number of Features(numFeatures)");                              
; 219 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("modf")
	.dwattr $C$DW$198, DW_AT_TI_call
   [ B0]   CALL    .S1     modf              ; |215| 

           MPYSP2DP .M1    A3,A14,A5:A4      ; |215| 
|| [!B0]   MVK     .S1     0x1d,A3           ; |93| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |93| 
$C$DW$L$VLIB_ORB_computeRBrief_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$16$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 215	-----------------------    if ( modf(_mpysp2dp(*U$109, K$108), &y) < 0.0 ) goto g21;  // [8]
;** 215	-----------------------    R$6 = y;  // [8]
;** 215	-----------------------    goto g22;  // [8]
;**	-----------------------g21:
;** 215	-----------------------    R$6 = y-1.0;  // [8]
;**	-----------------------g22:
;** 93	-----------------------    S$5 = (int)R$6;
;** 93	-----------------------    goto g24;
	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
           ADDKPC  .S2     $C$RL11,B3,3      ; |215| 
$C$RL11:   ; CALL OCCURS {modf} {0}          ; |215| 
$C$DW$L$VLIB_ORB_computeRBrief_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$17$B:
;          EXCLUSIVE CPU CYCLES: 13

           CMPLTDP .S2X    A5:A4,B11:B10,B0  ; |215| 
||         LDDW    .D2T1   *+SP(32),A5:A4    ; |215| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           SUB     .L1     A15,1,A0          ; |91| 
	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
           ZERO    .L1     A6                ; |215| 
   [ B0]   ZERO    .L1     A7
   [ B0]   SET     .S1     A7,0x14,0x1d,A7
   [ B0]   FSUBDP  .L1     A5:A4,A7:A6,A5:A4 ; |215| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           SUB     .L1     A15,1,A15         ; |91| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
           B       .S1     $C$L6             ; |93| 

   [ A0]   BNOP    .S1     $C$L4,3           ; |91| 
||         DPTRUNC .L1     A5:A4,A3          ; |93| 

           EXTU    .S1     A3,24,24,A3       ; |93| 
           ; BRANCH OCCURS {$C$L6}           ; |93| 
$C$DW$L$VLIB_ORB_computeRBrief_d$17$E:
;** --------------------------------------------------------------------------*
$C$L5:    
$C$DW$L$VLIB_ORB_computeRBrief_d$18$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g23:
;** 93	-----------------------    S$5 = 29u;

           SUB     .L1     A15,1,A0          ; |91| 
||         SUB     .S1     A15,1,A15         ; |91| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L4,4           ; |91| 
$C$DW$L$VLIB_ORB_computeRBrief_d$18$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$19$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g24:
;** 93	-----------------------    *U$126++ = S$5;
;** 91	-----------------------    if ( L$1 = L$1-1 ) goto g15;
           STB     .D1T1   A3,*A12++         ; |93| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |91| 
$C$DW$L$VLIB_ORB_computeRBrief_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$20$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 91	-----------------------    goto g36;

           BNOP    .S1     $C$L11,5          ; |91| 
||         ZERO    .L1     A10
||         ZERO    .L2     B10

           ; BRANCH OCCURS {$C$L11}          ; |91| 
$C$DW$L$VLIB_ORB_computeRBrief_d$20$E:
;** --------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$21$B:
;**	-----------------------g25:
;**  	-----------------------    U$109 = &validAngles[-1];
;**  	-----------------------    U$126 = featWedges;
;**  	-----------------------    L$2 = cnt;
;**  	-----------------------    #pragma[60] (featWedges <= validAngles;)
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5184u)
$C$DW$L$VLIB_ORB_computeRBrief_d$21$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L8:    
$C$DW$L$VLIB_ORB_computeRBrief_d$22$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g26:
;** 215	-----------------------    if ( modf(_mpysp2dp(*(++U$109), K$108), &y) < 0.0 ) goto g28;  // [8]
;** 215	-----------------------    R$7 = y;  // [8]
;** 215	-----------------------    goto g29;  // [8]
;**	-----------------------g28:
;** 215	-----------------------    R$7 = y-1.0;  // [8]
;**	-----------------------g29:
;** 93	-----------------------    if ( (int)R$7 >= 29 ) goto g34;
	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
           LDW     .D1T1   *++A10,A3         ; |215| 
           ADDAD   .D2     SP,3,B4
           NOP             2
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("modf")
	.dwattr $C$DW$199, DW_AT_TI_call
           CALL    .S1     modf              ; |215| 
           MPYSP2DP .M1    A3,A14,A5:A4      ; |215| 
           ADDKPC  .S2     $C$RL12,B3,3      ; |215| 
$C$RL12:   ; CALL OCCURS {modf} {0}          ; |215| 
$C$DW$L$VLIB_ORB_computeRBrief_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$23$B:
;          EXCLUSIVE CPU CYCLES: 20

           ZERO    .L1     A7:A6             ; |215| 
||         LDDW    .D2T2   *+SP(24),B5:B4    ; |215| 

           CMPLTDP .S1     A5:A4,A7:A6,A0    ; |215| 
           ZERO    .L1     A4                ; |215| 
   [ A0]   ZERO    .L1     A5
   [ A0]   SET     .S1     A5,0x14,0x1d,A5
           ZERO    .L2     B11:B10           ; |215| 
   [ A0]   FSUBDP  .L2X    B5:B4,A5:A4,B5:B4 ; |215| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
           MVK     .S2     29,B6             ; |93| 
           NOP             1
           DPTRUNC .L2     B5:B4,B5          ; |93| 
           ADDAD   .D2     SP,4,B4
           NOP             2
           CMPLT   .L2     B5,B6,B0          ; |93| 

   [!B0]   BNOP    .S1     $C$L9,3           ; |93| 
|| [ B0]   LDW     .D1T1   *A10,A3           ; |215| 

	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("modf")
	.dwattr $C$DW$200, DW_AT_TI_call
   [ B0]   CALL    .S1     modf              ; |215| 

           MPYSP2DP .M1    A3,A14,A5:A4      ; |215| 
|| [!B0]   MVK     .S1     0x1d,A3           ; |93| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |93| 
$C$DW$L$VLIB_ORB_computeRBrief_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$24$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 215	-----------------------    if ( modf(_mpysp2dp(*U$109, K$108), &y) < 0.0 ) goto g32;  // [8]
;** 215	-----------------------    R$6 = y;  // [8]
;** 215	-----------------------    goto g33;  // [8]
;**	-----------------------g32:
;** 215	-----------------------    R$6 = y-1.0;  // [8]
;**	-----------------------g33:
;** 93	-----------------------    S$5 = (int)R$6;
;** 93	-----------------------    goto g35;
	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
           ADDKPC  .S2     $C$RL13,B3,3      ; |215| 
$C$RL13:   ; CALL OCCURS {modf} {0}          ; |215| 
$C$DW$L$VLIB_ORB_computeRBrief_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$25$B:
;          EXCLUSIVE CPU CYCLES: 13

           CMPLTDP .S2X    A5:A4,B11:B10,B0  ; |215| 
||         LDDW    .D2T1   *+SP(32),A5:A4    ; |215| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           SUB     .L1     A15,1,A0          ; |91| 
	.dwpsn	file "C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h",line 215,column 4,is_stmt,isa 0
           ZERO    .L1     A6                ; |215| 
   [ B0]   ZERO    .L1     A7
   [ B0]   SET     .S1     A7,0x14,0x1d,A7
   [ B0]   FSUBDP  .L1     A5:A4,A7:A6,A5:A4 ; |215| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           SUB     .L1     A15,1,A15         ; |91| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
           B       .S1     $C$L10            ; |93| 

   [ A0]   BNOP    .S1     $C$L8,3           ; |91| 
||         DPTRUNC .L1     A5:A4,A3          ; |93| 

           EXTU    .S1     A3,24,24,A3       ; |93| 
           ; BRANCH OCCURS {$C$L10}          ; |93| 
$C$DW$L$VLIB_ORB_computeRBrief_d$25$E:
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_ORB_computeRBrief_d$26$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g34:
;** 93	-----------------------    S$5 = 29u;

           SUB     .L1     A15,1,A0          ; |91| 
||         SUB     .S1     A15,1,A15         ; |91| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L8,4           ; |91| 
$C$DW$L$VLIB_ORB_computeRBrief_d$26$E:
;** --------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 93,column 17,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$27$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g35:
;** 93	-----------------------    *U$126++ = S$5;
;** 91	-----------------------    if ( L$2 = L$2-1 ) goto g26;

           STB     .D1T1   A3,*A12++         ; |93| 
|| [!A0]   ZERO    .L2     B10
|| [!A0]   ZERO    .L1     A10

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 91,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L8}         ; |91| 
$C$DW$L$VLIB_ORB_computeRBrief_d$27$E:
;** --------------------------------------------------------------------------*
$C$L11:    
$C$DW$L$VLIB_ORB_computeRBrief_d$28$B:
;**	-----------------------g36:
;**  	-----------------------    U$201 = 0;
;** 97	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(30, 30, 30)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_ORB_computeRBrief_d$28$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L12
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_ORB_computeRBrief_d$29$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g37:
;** 98	-----------------------    rMat = getRotationMatrix(i);
;**  	-----------------------    U$58 = prm+U$12;
;**  	-----------------------    U$204 = relative_patterns+U$201-8;
;**  	-----------------------    L$4 = 256;
;** 100	-----------------------    j = 0;
;**  	-----------------------    #pragma MUST_ITERATE(256, 256, 256)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g38:
;** 103	-----------------------    C$23 = j*4;
;** 103	-----------------------    C$22 = (*U$58).orbPattern;
;** 103	-----------------------    C$25 = &C$22[C$23];
;** 103	-----------------------    x2 = (double)C$25[2];
;** 104	-----------------------    y2 = (double)C$25[3];
;** 108	-----------------------    C$24 = *(&rMat+8);
;** 108	-----------------------    C$21 = *&rMat;
;** 108	-----------------------    C$26 = C$21*x2+C$24*y2;
;** 108	-----------------------    x2p = (int)(C$26+((C$26 < 0.0) ? -0.5 : 0.5));
;** 109	-----------------------    C$18 = *(&rMat+24);
;** 109	-----------------------    C$16 = *(&rMat+16);
;** 109	-----------------------    C$13 = C$16*x2+C$18*y2;
;** 109	-----------------------    (C$13 < 0.0) ? (S$1 = -0.5) : (S$1 = 0.5);
;** 110	-----------------------    nstep = (*U$58).imageWidth;
;** 115	-----------------------    C$14 = _mpyus(nstep, 3)*4;
;** 115	-----------------------    C$19 = (double)C$25[1];
;** 115	-----------------------    C$17 = (double)C$22[C$23];
;** 115	-----------------------    C$20 = C$21*C$17+C$24*C$19;
;** 115	-----------------------    C$15 = C$16*C$17+C$18*C$19;
;** 115	-----------------------    *(U$204 += 2) = ((int)(C$15+((C$15 < 0.0) ? -0.5 : 0.5))*nstep+(int)(C$20+((C$20 < 0.0) ? -0.5 : 0.5)))*4-C$14-12;
;** 121	-----------------------    U$204[1] = ((*U$58).imageWidth*(int)(C$13+S$1)+x2p)*4-C$14-12;
;** 100	-----------------------    ++j;
;** 100	-----------------------    if ( L$4 = L$4-1 ) goto g38;
;** 97	-----------------------    ++i;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 98,column 41,is_stmt,isa 0
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("getRotationMatrix")
	.dwattr $C$DW$201, DW_AT_TI_call
           CALL    .S1     getRotationMatrix ; |98| 
           MV      .L1X    B10,A4            ; |98| 
           ADDKPC  .S2     $C$RL14,B3,2      ; |98| 
           ADDAW   .D1X    SP,12,A3          ; |98| 
$C$RL14:   ; CALL OCCURS {getRotationMatrix} {0}  ; |98| 
$C$DW$L$VLIB_ORB_computeRBrief_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$30$B:
;          EXCLUSIVE CPU CYCLES: 7
           LDW     .D2T1   *+SP(84),A3
           LDW     .D2T2   *+SP(40),B4
           MVK     .S2     0x100,B1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 100,column 22,is_stmt,isa 0
           ZERO    .L1     A20               ; |100| 
           NOP             1
           ADD     .L1     A10,A3,A3

           SUB     .L1     A3,8,A21
||         ADD     .S1X    A13,B4,A3

$C$DW$L$VLIB_ORB_computeRBrief_d$30$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c
;*      Loop source line                 : 100
;*      Loop opening brace source line   : 100
;*      Loop closing brace source line   : 123
;*      Known Minimum Trip Count         : 256                    
;*      Known Maximum Trip Count         : 256                    
;*      Known Max Trip Count Factor      : 256
;*      Loop Carried Dependency Bound(^) : 57
;*      Unpartitioned Resource Bound     : 14
;*      Partitioned Resource Bound(*)    : 16
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     7        9     
;*      .S units                    10       11     
;*      .D units                     9        4     
;*      .M units                     7        4     
;*      .X cross paths               7        7     
;*      .T address paths            10        3     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           4        4     (.L or .S unit)
;*      Addition ops (.LSD)         16        9     (.L or .S or .D unit)
;*      Bound(.L .S .LS)            11       12     
;*      Bound(.L .S .D .LS .LSD)    16*      13     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 57 Did not find schedule
;*         ii = 58 Schedule found with 1 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   *                **          | *             *                |
;*       1: |   * *              **          | *             *                |
;*       2: |   * *              **          | *             *                |
;*       3: |   * *              **          | *             *                |
;*       4: |   * *              **          | *             *                |
;*       5: |   ***              **          | *             *                |
;*       6: |   * **             **          | *             *                |
;*       7: |   ****             **          | *             *                |
;*       8: |   ****             **          | *             *                |
;*       9: |   ****             **          | *             *                |
;*      10: |   ****             **          | *             *                |
;*      11: |   ** *             **          | *    **       *    **          |
;*      12: |   *  *         **  **          | *    ****     *    **          |
;*      13: |   *  *         **  **          | *    ****     *    **          |
;*      14: |   *  * **      **  **          | *    ****     *    **          |
;*      15: |   *  * **      **  **          | *    ****     *  ****          |
;*      16: |   *  * **      *** **          | *  ******     *  ****          |
;*      17: |   **** **      *** **          | *  ******     *  ****          |
;*      18: |   ***  **      *** ***         | *  ******     *  ****          |
;*      19: |   *******      *** ***         | *  **  **     *  ****          |
;*      20: |   *******        * ***         | *  ******     *  ****          |
;*      21: |   *  ****        *****         | *    ****     *******          |
;*      22: |   *******        *****         | *    ****     *******          |
;*      23: |   *******      ******          | *  ******     *******          |
;*      24: |*  ***  **      ******          | *  **  **     *********        |
;*      25: |*  *    **      ******          | *  **  **     *********        |
;*      26: |*  * *  **      ******          | *  **  **     *********        |
;*      27: |*  * *  **      ******          |**  **  **     *********        |
;*      28: |   ***  **      ******          |**      **     *********        |
;*      29: |   ***  **      **  **          |**   *  **     *********        |
;*      30: |   ***  **      **  **          |**   ***       *********        |
;*      31: |   **** **      **  **          | *  ****       *********        |
;*      32: |   *  ****      **  **          | *  ****       *******          |
;*      33: |   *******          **          | *  ******     ***  **          |
;*      34: |   *******          **          | *  ******     *                |
;*      35: |   *******          **          | *  * ****     *                |
;*      36: |   *******          **          | *  * ****     *                |
;*      37: |   *******          **          |**  * ****     *                |
;*      38: |   **  ***          **          |**  * **       *                |
;*      39: |   **  ***          **          |**  ****       *                |
;*      40: |   ** * **          **          |**   *****     *                |
;*      41: |   ** * **          **          | *  ******     *                |
;*      42: |   ** * **          **          |**  **  **     *                |
;*      43: |   ** * **          **          |**  **         *                |
;*      44: |   * ** **          **          |**  **         *                |
;*      45: |   * *****          **          |**  *          *                |
;*      46: |   *******          **          | *  *          *                |
;*      47: |   *****            **          | *  *          *                |
;*      48: |   *****            **          | *  *          *                |
;*      49: |   *****            **          | *  *          *                |
;*      50: |   ****             **          | *             *                |
;*      51: |   ****             **          | *             *                |
;*      52: |   ****             **          | *             *                |
;*      53: |   ****             **          | *             *                |
;*      54: |   ** *             **          | *             *                |
;*      55: |   ** *             **          | *             *                |
;*      56: |   **               **          | *             *                |
;*      57: |   **               **          | *             *                |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop is interruptible
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*
;*      Minimum safe trip count       : 1
;*
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 0 + min_trip_cnt * 58 = 14848        
;*----------------------------------------------------------------------------*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C148:
;*   0              LDW     .D1T1   *+A3(20),A5       ; |103|  ^ 
;*   1              NOP             3
;*   4              SHL     .S1     A20,2,A4          ; |103| 
;*   5              ADD     .L1     A4,A5,A6          ; |103|  ^ 
;*     ||           LDB     .D1T1   *+A4[A5],A5       ; |115|  ^ 
;*   6              LDB     .D1T1   *+A6(1),A4        ; |115|  ^ 
;*   7              NOP             3
;*  10              LDDW    .D2T2   *+SP(64),B21:B20  ; |109| 
;*     ||           INTDP   .L2X    A5,B7:B6          ; |115|  ^ 
;*  11              LDDW    .D2T2   *+SP(72),B9:B8    ; |109| 
;*     ||           INTDP   .L1     A4,A17:A16        ; |115|  ^ 
;*  12              NOP             1
;*  13              LDDW    .D2T1   *+SP(48),A9:A8    ; |108| 
;*  14              LDDW    .D2T2   *+SP(56),B19:B18  ; |108| 
;*  15              LDB     .D1T1   *+A6(2),A18       ; |103| 
;*     ||           FMPYDP  .M2     B7:B6,B21:B20,B5:B4 ; |115|  ^ 
;*  16              FMPYDP  .M1X    A17:A16,B9:B8,A5:A4 ; |115|  ^ 
;*  17              LDB     .D1T1   *+A6(3),A22       ; |104| 
;*  18              FMPYDP  .M1X    B7:B6,A9:A8,A7:A6 ; |115| 
;*  19              FMPYDP  .M2X    A17:A16,B19:B18,B7:B6 ; |115| 
;*  20              INTDP   .L2X    A18,B17:B16       ; |103| 
;*     ||           FADDDP  .L1X    A5:A4,B5:B4,A19:A18 ; |115|  ^ 
;*  21              ZERO    .L1     A5:A4             ; |115| 
;*  22              INTDP   .L1     A22,A17:A16       ; |104| 
;*     ||           ZERO    .L2     B5:B4             ; |115| 
;*  23              FADDDP  .L2X    B7:B6,A7:A6,B23:B22 ; |115| 
;*     ||           CMPLTDP .S1     A19:A18,A5:A4,A0  ; |115|  ^ 
;*  24              NOP             1
;*  25      [!A0]   ZERO    .S1     A5                ;  ^ 
;*  26      [ A0]   ZERO    .D1     A5                ;  ^ 
;*     ||   [!A0]   SET     .S1     A5,0x15,0x1d,A5   ;  ^ 
;*     ||           CMPLTDP .S2     B23:B22,B5:B4,B0  ; |115| 
;*  27      [ A0]   ZERO    .L1     A4                ; |115| 
;*     ||   [ A0]   MVKH    .S1     0xbfe00000,A5     ;  ^ 
;*     ||   [!A0]   ZERO    .D1     A4                ; |115| 
;*  28              FMPYDP  .M2     B17:B16,B21:B20,B21:B20 ; |109| 
;*     ||           FADDDP  .L1     A5:A4,A19:A18,A5:A4 ; |115|  ^ 
;*     ||   [ B0]   ZERO    .L2     B5
;*  29              FMPYDP  .M2X    A17:A16,B9:B8,B7:B6 ; |109| 
;*     ||   [ B0]   MVKH    .S2     0xbfe00000,B5
;*     ||   [!B0]   ZERO    .L2     B5
;*  30              LDHU    .D1T1   *+A3(24),A6       ; |110| 
;*     ||   [ B0]   ZERO    .L2     B4                ; |115| 
;*     ||   [!B0]   ZERO    .D2     B4                ; |115| 
;*     ||   [!B0]   SET     .S2     B5,0x15,0x1d,B5
;*  31              DPTRUNC .L1     A5:A4,A7          ; |115|  ^ 
;*     ||           FADDDP  .L2     B5:B4,B23:B22,B5:B4 ; |115| 
;*  32              FMPYDP  .M1X    A17:A16,B19:B18,A5:A4 ; |108| 
;*     ||           ZERO    .L2     B9:B8             ; |109| 
;*  33              FMPYDP  .M1X    B17:B16,A9:A8,A9:A8 ; |108| 
;*     ||           FADDDP  .L2     B7:B6,B21:B20,B7:B6 ; |109| 
;*  34              DPTRUNC .L2     B5:B4,B4          ; |115| 
;*  35              MPY32   .M1     A6,A7,A7          ; |115|  ^ 
;*  36              CMPLTDP .S2     B7:B6,B9:B8,B0    ; |109| 
;*  37              FADDDP  .L1     A5:A4,A9:A8,A9:A8 ; |108| 
;*     ||           MPYSU   .M1     3,A6,A4           ; |115| 
;*  38      [ B0]   ZERO    .L2     B5
;*  39              ZERO    .L2     B9:B8             ; |108| 
;*     ||   [ B0]   MVKH    .S2     0xbfe00000,B5
;*     ||   [!B0]   ZERO    .D2     B5
;*     ||           SHL     .S1     A4,2,A6           ; |115| 
;*     ||           ADD     .D1X    B4,A7,A4          ; |115|  ^ 
;*  40      [ B0]   ZERO    .D2     B4                ; |109| 
;*     ||   [!B0]   ZERO    .L2     B4                ; |109| 
;*     ||   [!B0]   SET     .S2     B5,0x15,0x1d,B5
;*     ||           SHL     .S1     A4,2,A4           ; |115|  ^ 
;*  41              CMPLTDP .S2X    A9:A8,B9:B8,B0    ; |108| 
;*     ||           SUB     .L1     A4,A6,A4          ; |115|  ^ 
;*     ||           FADDDP  .L2     B5:B4,B7:B6,B5:B4 ; |121| 
;*  42              SUB     .L1     A4,12,A4          ; |115|  ^ 
;*  43      [!B0]   ZERO    .L1     A5
;*     ||           STW     .D1T1   A4,*++A21(8)      ; |115|  ^ 
;*  44      [ B0]   ZERO    .L1     A5
;*     ||   [!B0]   SET     .S1     A5,0x15,0x1d,A5
;*     ||           DPTRUNC .L2     B5:B4,B4          ; |121| 
;*     ||           LDHU    .D1T1   *+A3(24),A7       ; |121|  ^ 
;*  45      [ B0]   ZERO    .D1     A4                ; |108| 
;*     ||   [ B0]   MVKH    .S1     0xbfe00000,A5
;*     ||   [!B0]   ZERO    .L1     A4                ; |108| 
;*  46              FADDDP  .L1     A5:A4,A9:A8,A5:A4 ; |108| 
;*  47              NOP             2
;*  49              DPTRUNC .L1     A5:A4,A5          ; |108| 
;*     ||           MPY32   .M1X    B4,A7,A4          ; |121|  ^ 
;*  50              NOP             1
;*  51      [ B1]   SUB     .L2     B1,1,B1           ; |100| 
;*  52      [ B1]   B       .S2     $C$C148           ; |100| 
;*  53              ADD     .L1     A5,A4,A4          ; |121|  ^ 
;*  54              SHL     .S1     A4,2,A4           ; |121|  ^ 
;*  55              SUB     .L1     A4,A6,A4          ; |121|  ^ 
;*  56              SUB     .L1     A4,12,A4          ; |121|  ^ 
;*  57              STW     .D1T1   A4,*+A21(4)       ; |121|  ^ 
;*     ||           ADD     .L1     1,A20,A20         ; |100| Define a twin register
;*  58              ; BRANCHCC OCCURS {$C$C148}       ; |100| 
;*----------------------------------------------------------------------------*
$C$L13:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L14:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_ORB_computeRBrief_d$32$B:
;          EXCLUSIVE CPU CYCLES: 58
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 103,column 39,is_stmt,isa 0
           LDW     .D1T1   *+A3(20),A5       ; |103| <0,0>  ^ 
           NOP             3
           SHL     .S1     A20,2,A4          ; |103| <0,4> 

           ADD     .L1     A4,A5,A6          ; |103| <0,5>  ^ 
||         LDB     .D1T1   *+A4[A5],A5       ; |115| <0,5>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 115,column 21,is_stmt,isa 0
           LDB     .D1T1   *+A6(1),A4        ; |115| <0,6>  ^ 
           NOP             3

           LDDW    .D2T2   *+SP(64),B21:B20  ; |109| <0,10> 
||         INTDP   .L2X    A5,B7:B6          ; |115| <0,10>  ^ 

           LDDW    .D2T2   *+SP(72),B9:B8    ; |109| <0,11> 
||         INTDP   .L1     A4,A17:A16        ; |115| <0,11>  ^ 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 108,column 38,is_stmt,isa 0
           LDDW    .D2T1   *+SP(48),A9:A8    ; |108| <0,13> 
           LDDW    .D2T2   *+SP(56),B19:B18  ; |108| <0,14> 

           LDB     .D1T1   *+A6(2),A18       ; |103| <0,15> 
||         FMPYDP  .M2     B7:B6,B21:B20,B5:B4 ; |115| <0,15>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 115,column 21,is_stmt,isa 0
           FMPYDP  .M1X    A17:A16,B9:B8,A5:A4 ; |115| <0,16>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 104,column 39,is_stmt,isa 0
           LDB     .D1T1   *+A6(3),A22       ; |104| <0,17> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 115,column 21,is_stmt,isa 0
           FMPYDP  .M1X    B7:B6,A9:A8,A7:A6 ; |115| <0,18> 
           FMPYDP  .M2X    A17:A16,B19:B18,B7:B6 ; |115| <0,19> 

           INTDP   .L2X    A18,B17:B16       ; |103| <0,20> 
||         FADDDP  .L1X    A5:A4,B5:B4,A19:A18 ; |115| <0,20>  ^ 

           ZERO    .L1     A5:A4             ; |115| <0,21> 

           ZERO    .L2     B5:B4             ; |115| <0,22> 
||         INTDP   .L1     A22,A17:A16       ; |104| <0,22> 

           FADDDP  .L2X    B7:B6,A7:A6,B23:B22 ; |115| <0,23> 
||         CMPLTDP .S1     A19:A18,A5:A4,A0  ; |115| <0,23>  ^ 

           NOP             1
   [!A0]   ZERO    .S1     A5                ; <0,25>  ^ 

           CMPLTDP .S2     B23:B22,B5:B4,B0  ; |115| <0,26> 
|| [ A0]   ZERO    .D1     A5                ; <0,26>  ^ 
|| [!A0]   SET     .S1     A5,0x15,0x1d,A5   ; <0,26>  ^ 

   [ A0]   ZERO    .L1     A4                ; |115| <0,27> 
|| [!A0]   ZERO    .D1     A4                ; |115| <0,27> 
|| [ A0]   MVKH    .S1     0xbfe00000,A5     ; <0,27>  ^ 

           FMPYDP  .M2     B17:B16,B21:B20,B21:B20 ; |109| <0,28> 
|| [ B0]   ZERO    .L2     B5                ; <0,28> 
||         FADDDP  .L1     A5:A4,A19:A18,A5:A4 ; |115| <0,28>  ^ 

           FMPYDP  .M2X    A17:A16,B9:B8,B7:B6 ; |109| <0,29> 
|| [!B0]   ZERO    .L2     B5                ; <0,29> 
|| [ B0]   MVKH    .S2     0xbfe00000,B5     ; <0,29> 

           LDHU    .D1T1   *+A3(24),A6       ; |110| <0,30> 
|| [ B0]   ZERO    .L2     B4                ; |115| <0,30> 
|| [!B0]   ZERO    .D2     B4                ; |115| <0,30> 
|| [!B0]   SET     .S2     B5,0x15,0x1d,B5   ; <0,30> 

           FADDDP  .L2     B5:B4,B23:B22,B5:B4 ; |115| <0,31> 
||         DPTRUNC .L1     A5:A4,A7          ; |115| <0,31>  ^ 

           ZERO    .L2     B9:B8             ; |109| <0,32> 
||         FMPYDP  .M1X    A17:A16,B19:B18,A5:A4 ; |108| <0,32> 

           FMPYDP  .M1X    B17:B16,A9:A8,A9:A8 ; |108| <0,33> 
||         FADDDP  .L2     B7:B6,B21:B20,B7:B6 ; |109| <0,33> 

           DPTRUNC .L2     B5:B4,B4          ; |115| <0,34> 
           MPY32   .M1     A6,A7,A7          ; |115| <0,35>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 109,column 38,is_stmt,isa 0
           CMPLTDP .S2     B7:B6,B9:B8,B0    ; |109| <0,36> 

           MPYSU   .M1     3,A6,A4           ; |115| <0,37> 
||         FADDDP  .L1     A5:A4,A9:A8,A9:A8 ; |108| <0,37> 

   [ B0]   ZERO    .L2     B5                ; <0,38> 

           ZERO    .L2     B9:B8             ; |108| <0,39> 
||         SHL     .S1     A4,2,A6           ; |115| <0,39> 
|| [!B0]   ZERO    .D2     B5                ; <0,39> 
|| [ B0]   MVKH    .S2     0xbfe00000,B5     ; <0,39> 
||         ADD     .D1X    B4,A7,A4          ; |115| <0,39>  ^ 

   [!B0]   ZERO    .L2     B4                ; |109| <0,40> 
|| [ B0]   ZERO    .D2     B4                ; |109| <0,40> 
|| [!B0]   SET     .S2     B5,0x15,0x1d,B5   ; <0,40> 
||         SHL     .S1     A4,2,A4           ; |115| <0,40>  ^ 

           CMPLTDP .S2X    A9:A8,B9:B8,B0    ; |108| <0,41> 
||         FADDDP  .L2     B5:B4,B7:B6,B5:B4 ; |121| <0,41> 
||         SUB     .L1     A4,A6,A4          ; |115| <0,41>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 115,column 21,is_stmt,isa 0
           SUB     .L1     A4,12,A4          ; |115| <0,42>  ^ 

   [!B0]   ZERO    .L1     A5                ; <0,43> 
||         STW     .D1T1   A4,*++A21(8)      ; |115| <0,43>  ^ 

   [ B0]   ZERO    .L1     A5                ; <0,44> 
|| [!B0]   SET     .S1     A5,0x15,0x1d,A5   ; <0,44> 
||         DPTRUNC .L2     B5:B4,B4          ; |121| <0,44> 
||         LDHU    .D1T1   *+A3(24),A7       ; |121| <0,44>  ^ 

   [!B0]   ZERO    .L1     A4                ; |108| <0,45> 
|| [ B0]   ZERO    .D1     A4                ; |108| <0,45> 
|| [ B0]   MVKH    .S1     0xbfe00000,A5     ; <0,45> 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 108,column 38,is_stmt,isa 0
           FADDDP  .L1     A5:A4,A9:A8,A5:A4 ; |108| <0,46> 
           NOP             2

           DPTRUNC .L1     A5:A4,A5          ; |108| <0,49> 
||         MPY32   .M1X    B4,A7,A4          ; |121| <0,49>  ^ 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 100,column 29,is_stmt,isa 0
   [ B1]   SUB     .L2     B1,1,B1           ; |100| <0,51> 
   [ B1]   B       .S2     $C$L14            ; |100| <0,52> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 121,column 21,is_stmt,isa 0
           ADD     .L1     A5,A4,A4          ; |121| <0,53>  ^ 
           SHL     .S1     A4,2,A4           ; |121| <0,54>  ^ 
           SUB     .L1     A4,A6,A4          ; |121| <0,55>  ^ 
           SUB     .L1     A4,12,A4          ; |121| <0,56>  ^ 

           ADD     .L1     1,A20,A20         ; |100| <0,57> Define a twin register
||         STW     .D1T1   A4,*+A21(4)       ; |121| <0,57>  ^ 

$C$DW$L$VLIB_ORB_computeRBrief_d$32$E:
;** --------------------------------------------------------------------------*
$C$L15:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$34$B:
;          EXCLUSIVE CPU CYCLES: 9
;** 97	-----------------------    if ( (U$201 += 2048) < 61440 ) goto g37;
;** 127	-----------------------    C$12 = (*U$58).imageWidth;

           ZERO    .L1     A4
||         ADDK    .S1     2048,A10          ; |97| 
||         ADD     .L2     1,B10,B10         ; |97| 

           SET     .S1     A4,0xc,0xf,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 97,column 25,is_stmt,isa 0
           CMPLT   .L1     A10,A4,A0         ; |97| 
   [ A0]   BNOP    .S1     $C$L12,5          ; |97| 
           ; BRANCHCC OCCURS {$C$L12}        ; |97| 
$C$DW$L$VLIB_ORB_computeRBrief_d$34$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 127,column 13,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$35$B:
;          EXCLUSIVE CPU CYCLES: 8
;** 127	-----------------------    VLIB_fillBuffer((*U$58).testPattern, (unsigned char)K$235, (void *)intgrlImg, (*U$58).staticInIntegral, C$12, (*U$58).imageHeight, (unsigned short)(C$12*4), 4u, K$229);
;** 137	-----------------------    act_kernel = 0;  // [18]
;** 140	-----------------------    VLIB_cache_inval();  // [18]
;** 143	-----------------------    initStack(getSP());  // [18]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [18]
;** 134	-----------------------    C$11 = (*U$13).imageWidth;
;** 134	-----------------------    VLIB_ORB_computeRBrief(intgrlImg, C$11, C$11, (*U$13).imageHeight, validFeaturePoints, featWedges, (unsigned)cnt, relative_patterns, outDesc);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [19]
;** 153	-----------------------    end_count = v$2;  // [19]
;** 156	-----------------------    C$10 = act_kernel;  // [19]
;** 156	-----------------------    *((C$10<<3)+K$244) = *((C$10<<3)+K$244)+(v$2-(beg_count+overhead));  // [19]
;** 159	-----------------------    setStackDepth();  // [19]
;** 137	-----------------------    act_kernel = 1;  // [18]
;** 140	-----------------------    VLIB_cache_inval();  // [18]
;** 143	-----------------------    initStack(getSP());  // [18]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [18]
;** 146	-----------------------    C$9 = (*U$13).imageWidth;
;** 146	-----------------------    VLIB_ORB_computeRBrief_cn(intgrlImg, C$9, C$9, (*U$13).imageHeight, validFeaturePoints, featWedges, (unsigned)cnt, relative_patterns, outDesc_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [19]
;** 153	-----------------------    end_count = v$2;  // [19]
;** 156	-----------------------    C$8 = act_kernel;  // [19]
;** 156	-----------------------    *((C$8<<3)+K$244) = *((C$8<<3)+K$244)+(v$2-(beg_count+overhead));  // [19]
;** 159	-----------------------    setStackDepth();  // [19]

           LDHU    .D1T1   *+A3(24),A8       ; |127| 
||         MVKL    .S1     testPatternString,A12
||         MVK     .S2     0x80,B4

           LDW     .D1T2   *+A3(8),B6        ; |127| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$202, DW_AT_TI_call

           CALL    .S1     VLIB_fillBuffer   ; |127| 
||         LDW     .D2T1   *+SP(80),A6       ; |127| 
||         LDHU    .D1T2   *+A3(26),B8       ; |127| 

           LDBU    .D1T1   *A3,A4            ; |127| 
           EXTU    .S2     B4,24,24,B4       ; |127| 
           MVKH    .S1     testPatternString,A12
           EXTU    .S1     A8,18,16,A10      ; |127| 

           ADDKPC  .S2     $C$RL15,B3,0      ; |127| 
||         MVK     .L2     0x4,B10           ; |127| 

$C$RL15:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |127| 
$C$DW$L$VLIB_ORB_computeRBrief_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$36$B:
;          EXCLUSIVE CPU CYCLES: 111
           MVKL    .S1     act_kernel,A15

           MVKH    .S1     act_kernel,A15
||         ZERO    .L1     A3                ; |137| 

$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$203, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A15           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("getSP")
	.dwattr $C$DW$204, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL17:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("initStack")
	.dwattr $C$DW$205, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL18:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 134,column 13,is_stmt,isa 0
           LDHU    .D2T1   *+B12(24),A6      ; |134| 
           LDW     .D2T1   *+SP(80),A4       ; |134| 
           LDW     .D2T2   *+SP(84),B10      ; |134| 

           MVKL    .S1     beg_count,A14
||         LDHU    .D2T2   *+B12(26),B6      ; |134| 

           MVKH    .S1     beg_count,A14
||         MV      .L2     B4,B9             ; |146| 
||         LDW     .D2T1   *+SP(92),A8       ; |134| 

           STDW    .D1T2   B9:B8,*A14        ; |146| 
||         LDW     .D2T1   *+SP(104),A12     ; |134| 

$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("VLIB_ORB_computeRBrief")
	.dwattr $C$DW$206, DW_AT_TI_call

           CALLP   .S2     VLIB_ORB_computeRBrief,B3
||         LDW     .D2T2   *+SP(96),B8       ; |134| 
||         MV      .L2X    A6,B4             ; |134| 
||         MV      .L1     A11,A10           ; |134| 

$C$RL19:   ; CALL OCCURS {VLIB_ORB_computeRBrief} {0}  ; |134| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S2     overhead,B11

           MVKH    .S2     overhead,B11
||         LDW     .D1T1   *A15,A16          ; |156| 

           LDDW    .D2T2   *B11,B5:B4        ; |156| 
||         LDDW    .D1T1   *A14,A7:A6        ; |156| 

           MVKL    .S1     cycles,A3
           MVKH    .S1     cycles,A3
           MVKL    .S2     end_count,B13
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A3[A16],A9:A8   ; |156| 
           ADDU    .L1X    B4,A6,A5:A4       ; |156| 
           ADD     .L1X    A5,B5,A3          ; |156| 
           ADD     .L1     A3,A7,A3          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 
           SUB     .L2X    B7,A3,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1     A5,A9,A3          ; |156| 
||         ADD     .S1X    B4,A31,A5         ; |156| 

           ADD     .L1     A3,A5,A5          ; |156| 
||         MVKL    .S1     cycles,A3

           MVKH    .S1     cycles,A3
||         MVKH    .S2     end_count,B13

$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("setStackDepth")
	.dwattr $C$DW$207, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A3[A16]   ; |156| 
||         STDW    .D2T2   B7:B6,*B13        ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           MVK     .L2     1,B4              ; |137| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$208, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A15           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("getSP")
	.dwattr $C$DW$209, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL22:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("initStack")
	.dwattr $C$DW$210, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL23:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |146| 
           MVC     .S2     TSCH,B9           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 146,column 13,is_stmt,isa 0
           LDHU    .D2T2   *+B12(24),B4      ; |146| 
           LDW     .D2T1   *+SP(80),A4       ; |146| 

           STDW    .D1T2   B9:B8,*A14        ; |146| 
||         LDW     .D2T1   *+SP(92),A8       ; |146| 

           LDHU    .D2T2   *+B12(26),B6      ; |146| 
           LDW     .D2T2   *+SP(96),B8       ; |146| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("VLIB_ORB_computeRBrief_cn")
	.dwattr $C$DW$211, DW_AT_TI_call

           CALLP   .S2     VLIB_ORB_computeRBrief_cn,B3
||         LDW     .D2T1   *+SP(100),A12     ; |146| 
||         MV      .L1X    B4,A6             ; |146| 

$C$RL24:   ; CALL OCCURS {VLIB_ORB_computeRBrief_cn} {0}  ; |146| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A15,A8           ; |156| 
           LDDW    .D1T1   *A14,A5:A4        ; |156| 
           LDDW    .D2T2   *B11,B9:B8        ; |156| 
           MVKL    .S1     cycles,A3
           MVKH    .S1     cycles,A3
           LDDW    .D1T1   *+A3[A8],A7:A6    ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           STDW    .D2T2   B7:B6,*B13        ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B8,A4,B5:B4       ; |156| 
           ADD     .L2     B5,B9,B8          ; |156| 

           ADD     .S2X    B8,A5,B8          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           EXT     .S2     B5,24,24,B9       ; |156| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |156| 
||         SUB     .D2     B7,B8,B8          ; |156| 

           ADD     .L2X    B5,A7,B5          ; |156| 
||         ADD     .S2     B8,B9,B8          ; |156| 

           ADD     .L2     B5,B8,B5          ; |156| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("setStackDepth")
	.dwattr $C$DW$212, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B5:B4,*+A3[A8]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL25:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_ORB_computeRBrief_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$37$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 158	-----------------------    if ( cnt <= 0 ) goto g48;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 158,column 23,is_stmt,isa 0
           CMPGT   .L1     A11,0,A0          ; |158| 

   [!A0]   BNOP    .S1     $C$L21,5          ; |158| 
|| [ A0]   ZERO    .L2     B10
|| [ A0]   ZERO    .L1     A10
|| [ A0]   MV      .D1     A11,A12           ; |159| 

           ; BRANCHCC OCCURS {$C$L21}        ; |158| 
$C$DW$L$VLIB_ORB_computeRBrief_d$37$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$38$B:
;** 159	-----------------------    L$5 = cnt;
;**  	-----------------------    U$252 = 0;
;** 158	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_ORB_computeRBrief_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$39$B:
;          EXCLUSIVE CPU CYCLES: 5
           LDW     .D2T2   *+SP(104),B4
           LDW     .D2T2   *+SP(100),B31
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 22,is_stmt,isa 0
           ZERO    .L1     A4                ; |159| 
           NOP             2
$C$DW$L$VLIB_ORB_computeRBrief_d$39$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L16
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 158,column 18,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$40$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g42:
;**  	-----------------------    U$254 = &outDesc_cn[U$252-1];
;**  	-----------------------    U$256 = &outDesc[U$252-1];
;** 159	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 32, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
           ADD     .L2     B10,B4,B5
           ADD     .L2     B10,B31,B4

           SUB     .L1X    B5,1,A3
||         SUB     .L2     B4,1,B4

$C$DW$L$VLIB_ORB_computeRBrief_d$40$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 22,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$41$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g43:
;** 160	-----------------------    if ( *(++U$254) != *(++U$256) ) goto g45;

           LDBU    .D2T2   *++B4,B5          ; |160| 
||         LDBU    .D1T1   *++A3,A5          ; |160| 

           NOP             4

           CMPEQ   .L1X    B5,A5,A0          ; |160| 
||         MVK     .S1     32,A5             ; |159| 

   [!A0]   B       .S1     $C$L18            ; |160| 
|| [ A0]   ADD     .L1     1,A4,A4           ; |159| 
||         MV      .D1     A0,A1             ; guard predicate rewrite

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 27,is_stmt,isa 0
           CMPLT   .L1     A4,A5,A0          ; |159| 
   [!A1]   ZERO    .L1     A0                ; |159| nullify predicate
   [ A0]   BNOP    .S1     $C$L17,2          ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 160,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |160| 
$C$DW$L$VLIB_ORB_computeRBrief_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$42$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 159	-----------------------    if ( (++k) < 32 ) goto g43;
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |159| 
$C$DW$L$VLIB_ORB_computeRBrief_d$42$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$43$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 159	-----------------------    goto g47;

           BNOP    .S2     $C$L19,4          ; |159| 
||         SUB     .L1     A12,1,A0          ; |158| 
||         SUB     .S1     A12,1,A12         ; |158| 
||         ADD     .D1     1,A10,A10         ; |158| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 158,column 23,is_stmt,isa 0
           ADDK    .S2     32,B10            ; |158| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 27,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L19}          ; |159| 
$C$DW$L$VLIB_ORB_computeRBrief_d$43$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 160,column 21,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$44$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g45:
;** 161	-----------------------    status_nat_vs_int = 0;
;** 162	-----------------------    if ( !LevelOfFeedback ) goto g47;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 161,column 25,is_stmt,isa 0
           LDW     .D2T1   *+SP(120),A0      ; |161| 
           ZERO    .L2     B4                ; |161| 
           STW     .D2T2   B4,*+SP(112)      ; |161| 
           NOP             2

   [!A0]   B       .S1     $C$L20            ; |162| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   MVKL    .S2     $C$SL2+0,B4

   [ A0]   MVKH    .S2     $C$SL2+0,B4
|| [!A1]   ADD     .L1     1,A10,A10         ; |158| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 158,column 23,is_stmt,isa 0
   [!A1]   ADDK    .S2     32,B10            ; |158| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("printf")
	.dwattr $C$DW$213, DW_AT_TI_call

   [ A0]   CALL    .S1     printf            ; |163| 
|| [!A0]   SUB     .L1     A12,1,A0          ; |158| 
|| [!A1]   SUB     .D1     A12,1,A12         ; |158| 

   [ A1]   ZERO    .L1     A0                ; |158| nullify predicate
   [ A0]   B       .S1     $C$L16            ; |158| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 162,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L20}        ; |162| 
$C$DW$L$VLIB_ORB_computeRBrief_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$45$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 163	-----------------------    printf((const char *)" Mismatch in Index = %u %u \n", i, k);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 163,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |163| 
           STW     .D2T1   A4,*+SP(12)       ; |163| 

           ADDKPC  .S2     $C$RL26,B3,0      ; |163| 
||         STW     .D2T1   A10,*+SP(8)       ; |163| 

$C$RL26:   ; CALL OCCURS {printf} {0}        ; |163| 

           SUB     .L1     A12,1,A0          ; |158| 
||         ADD     .S1     1,A10,A10         ; |158| 
||         ADDK    .S2     32,B10            ; |158| 
||         SUB     .D1     A12,1,A12         ; |158| 

$C$DW$L$VLIB_ORB_computeRBrief_d$45$E:
;** --------------------------------------------------------------------------*
$C$L19:    
$C$DW$L$VLIB_ORB_computeRBrief_d$46$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 158,column 23,is_stmt,isa 0
   [ A0]   B       .S1     $C$L16            ; |158| 
$C$DW$L$VLIB_ORB_computeRBrief_d$46$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 27,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$47$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g47:
;** 158	-----------------------    U$252 += 32;
;** 158	-----------------------    ++i;
;** 158	-----------------------    if ( L$5 = L$5-1 ) goto g42;
   [ A0]   LDW     .D2T2   *+SP(104),B4
   [ A0]   LDW     .D2T2   *+SP(100),B31
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 159,column 22,is_stmt,isa 0
   [ A0]   ZERO    .L1     A4                ; |159| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 158,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |158| 
$C$DW$L$VLIB_ORB_computeRBrief_d$47$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_ORB_computeRBrief_d$48$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g48:
;** 171	-----------------------    v$1 = prm;
;** 171	-----------------------    if ( !(((*U$13).testPattern == 4)&((*U$13).staticOut != NULL)) ) goto g57;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 171,column 13,is_stmt,isa 0
           LDBU    .D2T2   *B12,B5           ; |171| 
           LDW     .D2T2   *+B12(16),B0      ; |171| 
           LDW     .D2T1   *+SP(40),A12      ; |171| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 27,is_stmt,isa 0
           CMPGT   .L1     A11,0,A0          ; |172| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 171,column 13,is_stmt,isa 0
           ZERO    .L2     B4                ; |171| 
           CMPEQ   .L2     B5,4,B5           ; |171| 
   [ B0]   MVK     .L2     0x1,B4            ; |171| 

           AND     .L2     B4,B5,B0          ; |171| 
||         ADD     .L1     A12,A13,A3        ; |192| 

   [!B0]   LDW     .D1T1   *+A3(32),A4       ; |192| 
|| [!B0]   B       .S1     $C$L28            ; |171| 
|| [!B0]   MVK     .L1     0x1,A0            ; |172| nullify predicate
|| [!B0]   MVKL    .S2     $C$SL3+0,B4

   [!A0]   B       .S1     $C$L27            ; |172| 
|| [!B0]   MVKH    .S2     $C$SL3+0,B4

$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("sprintf")
	.dwattr $C$DW$214, DW_AT_TI_call

   [!B0]   CALL    .S2     sprintf           ; |192| 
|| [!B0]   MVKL    .S1     testPatternString,A3
|| [!B0]   STW     .D2T2   B4,*+SP(4)        ; |192| 
|| [!B0]   MVK     .L2     1,B4              ; |189| 

   [!B0]   MVKL    .S1     est_test,A5
   [!B0]   MVKH    .S1     testPatternString,A3

   [!B0]   STW     .D2T1   A4,*+SP(16)       ; |192| 
||         MVKL    .S1     desc,A4

           ; BRANCHCC OCCURS {$C$L28}        ; |171| 
$C$DW$L$VLIB_ORB_computeRBrief_d$48$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$49$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 172	-----------------------    if ( cnt <= 0 ) goto g57;
   [ A0]   LDW     .D2T1   *+SP(116),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L27}        ; |172| 
$C$DW$L$VLIB_ORB_computeRBrief_d$49$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$50$B:
;          EXCLUSIVE CPU CYCLES: 8
;**  	-----------------------    U$274 = (v$1[tpi]).staticOut;
;** 173	-----------------------    L$6 = cnt;
;**  	-----------------------    U$252 = 0;
;** 172	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 26,is_stmt,isa 0
           MV      .L1     A11,A14           ; |173| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 22,is_stmt,isa 0
           ZERO    .L1     A10               ; |172| 
           ZERO    .L2     B10               ; |172| 
           NOP             1
           SHL     .S1     A3,5,A4
           ADDAW   .D1     A4,A3,A3
           ADD     .L1     A12,A3,A3
           LDW     .D1T2   *+A3(16),B11
$C$DW$L$VLIB_ORB_computeRBrief_d$50$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$51$B:
;          EXCLUSIVE CPU CYCLES: 7
           LDW     .D2T2   *+SP(100),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 26,is_stmt,isa 0
           ZERO    .L1     A4                ; |173| 
           NOP             2
           ADD     .L2     B10,B11,B5
           NOP             1
           SUB     .L1X    B5,1,A3
$C$DW$L$VLIB_ORB_computeRBrief_d$51$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L22
;** --------------------------------------------------------------------------*
$C$L22:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 22,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$52$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g51:
;**  	-----------------------    U$254 = &outDesc_cn[U$252-1];
;**  	-----------------------    U$275 = &U$274[U$252-1];
;** 173	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 32, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
           ADD     .L2     B10,B4,B4
           SUB     .L2     B4,1,B4
$C$DW$L$VLIB_ORB_computeRBrief_d$52$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 26,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$53$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g52:
;** 174	-----------------------    if ( *(++U$254) != *(++U$275) ) goto g54;

           LDBU    .D1T1   *++A3,A5          ; |174| 
||         LDBU    .D2T2   *++B4,B5          ; |174| 

           NOP             4

           CMPEQ   .L1X    B5,A5,A0          ; |174| 
||         MVK     .S1     32,A5             ; |173| 

   [!A0]   B       .S1     $C$L24            ; |174| 
|| [ A0]   ADD     .L1     1,A4,A4           ; |173| 
||         MV      .D1     A0,A1             ; guard predicate rewrite

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 31,is_stmt,isa 0
           CMPLT   .L1     A4,A5,A0          ; |173| 
   [!A1]   ZERO    .L1     A0                ; |173| nullify predicate
   [ A0]   BNOP    .S1     $C$L23,2          ; |173| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 174,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L24}        ; |174| 
$C$DW$L$VLIB_ORB_computeRBrief_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$54$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 173	-----------------------    if ( (++k) < 32 ) goto g52;
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |173| 
$C$DW$L$VLIB_ORB_computeRBrief_d$54$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$55$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 173	-----------------------    goto g56;

           BNOP    .S2     $C$L25,4          ; |173| 
||         SUB     .L1     A14,1,A0          ; |172| 
||         SUB     .S1     A14,1,A14         ; |172| 
||         ADD     .D1     1,A10,A10         ; |172| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 27,is_stmt,isa 0
           ADDK    .S2     32,B10            ; |172| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 31,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L25}          ; |173| 
$C$DW$L$VLIB_ORB_computeRBrief_d$55$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 174,column 25,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$56$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g54:
;** 175	-----------------------    status_nat_vs_ref = 0;
;** 176	-----------------------    if ( !LevelOfFeedback ) goto g56;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 175,column 29,is_stmt,isa 0
           LDW     .D2T1   *+SP(120),A0      ; |175| 
           ZERO    .L2     B4                ; |175| 
           STW     .D2T2   B4,*+SP(108)      ; |175| 
           NOP             2

   [!A0]   B       .S1     $C$L26            ; |176| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   MVKL    .S2     $C$SL2+0,B4

   [ A0]   MVKH    .S2     $C$SL2+0,B4
|| [!A1]   ADD     .L1     1,A10,A10         ; |172| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 27,is_stmt,isa 0
   [!A1]   ADDK    .S2     32,B10            ; |172| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("printf")
	.dwattr $C$DW$215, DW_AT_TI_call

   [ A0]   CALL    .S1     printf            ; |177| 
|| [!A0]   SUB     .L1     A14,1,A0          ; |172| 
|| [!A1]   SUB     .D1     A14,1,A14         ; |172| 

   [ A1]   ZERO    .L1     A0                ; |172| nullify predicate
   [ A0]   B       .S1     $C$L22            ; |172| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 176,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L26}        ; |176| 
$C$DW$L$VLIB_ORB_computeRBrief_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$57$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 177	-----------------------    printf((const char *)" Mismatch in Index = %u %u \n", i, k);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 177,column 33,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |177| 
           STW     .D2T1   A4,*+SP(12)       ; |177| 

           ADDKPC  .S2     $C$RL27,B3,0      ; |177| 
||         STW     .D2T1   A10,*+SP(8)       ; |177| 

$C$RL27:   ; CALL OCCURS {printf} {0}        ; |177| 

           SUB     .L1     A14,1,A0          ; |172| 
||         ADD     .S1     1,A10,A10         ; |172| 
||         ADDK    .S2     32,B10            ; |172| 
||         SUB     .D1     A14,1,A14         ; |172| 

$C$DW$L$VLIB_ORB_computeRBrief_d$57$E:
;** --------------------------------------------------------------------------*
$C$L25:    
$C$DW$L$VLIB_ORB_computeRBrief_d$58$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 27,is_stmt,isa 0
   [ A0]   B       .S1     $C$L22            ; |172| 
$C$DW$L$VLIB_ORB_computeRBrief_d$58$E:
;** --------------------------------------------------------------------------*
$C$L26:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 31,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$59$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g56:
;** 172	-----------------------    U$252 += 32;
;** 172	-----------------------    ++i;
;** 172	-----------------------    if ( L$6 = L$6-1 ) goto g51;
   [ A0]   LDW     .D2T2   *+SP(100),B4
   [ A0]   ADD     .L2     B10,B11,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 173,column 26,is_stmt,isa 0
   [ A0]   ZERO    .L1     A4                ; |173| 
   [ A0]   SUB     .L1X    B5,1,A3
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 172,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L22}        ; |172| 
$C$DW$L$VLIB_ORB_computeRBrief_d$59$E:
;** --------------------------------------------------------------------------*
$C$L27:    
$C$DW$L$VLIB_ORB_computeRBrief_d$60$B:
;          EXCLUSIVE CPU CYCLES: 7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 192,column 13,is_stmt,isa 0
           ADD     .L1     A12,A13,A3        ; |192| 
           LDW     .D1T1   *+A3(32),A4       ; |192| 
           MVKL    .S2     $C$SL3+0,B4
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

           CALL    .S2     sprintf           ; |192| 
||         MVKL    .S1     est_test,A5

           MVKL    .S1     testPatternString,A3
||         MVKH    .S2     $C$SL3+0,B4

           MVKH    .S1     testPatternString,A3
||         STW     .D2T2   B4,*+SP(4)        ; |192| 

           MVKL    .S1     desc,A4
||         STW     .D2T1   A4,*+SP(16)       ; |192| 
||         MVK     .L2     1,B4              ; |189| 

$C$DW$L$VLIB_ORB_computeRBrief_d$60$E:
;** --------------------------------------------------------------------------*
$C$L28:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 171,column 13,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$61$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g57:
;** 189	-----------------------    est_test = 1;
;** 192	-----------------------    sprintf(K$284, (const char *)"%s generated input | Opt and NatC results compared | output->n_features= %d, %s", K$229, cnt, (*(U$12+v$1)).desc);
;** 195	-----------------------    VLIB_formula_add_test(cnt, 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$284, 0);
;** 197	-----------------------    goto g59;

           MVKH    .S1     est_test,A5
||         STW     .D2T1   A3,*+SP(8)        ; |192| 

           STW     .D1T2   B4,*A5            ; |189| 
||         STW     .D2T1   A11,*+SP(12)      ; |192| 
||         ADDKPC  .S2     $C$RL28,B3,0      ; |192| 
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 192,column 13,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {sprintf} {0}       ; |192| 
$C$DW$L$VLIB_ORB_computeRBrief_d$61$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$62$B:
;          EXCLUSIVE CPU CYCLES: 13
           LDW     .D2T1   *+SP(108),A3      ; |192| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 195,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(112),B4      ; |195| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |195| 
           MVKH    .S1     desc,A8
           CMPEQ   .L1     A3,0,A3           ; |195| 
           CMPEQ   .L2     B4,0,B4           ; |195| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x08)
	.dwattr $C$DW$217, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$217, DW_AT_TI_call

           MV      .L1     A11,A4            ; |195| 
||         ZERO    .S1     A6                ; |195| 
||         CALLP   .S2     VLIB_formula_add_test,B3
||         OR      .L2X    A3,B4,B6          ; |195| 
||         ZERO    .D2     B4                ; |195| 

$C$RL29:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |195| 
$C$DW$L$VLIB_ORB_computeRBrief_d$62$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$63$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 197,column 9,is_stmt,isa 0
           B       .S1     $C$L30            ; |197| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 204,column 9,is_stmt,isa 0
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("free")
	.dwattr $C$DW$218, DW_AT_TI_call
           CALL    .S1     free              ; |204| 
           LDW     .D2T1   *+SP(100),A4      ; |204| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 197,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L30}          ; |197| 
$C$DW$L$VLIB_ORB_computeRBrief_d$63$E:
;** --------------------------------------------------------------------------*
$C$L29:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 69,column 9,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$64$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g58:
;** 199	-----------------------    sprintf(K$284, (const char *)"Total Features= %d", (*U$13).true_num_features);
;** 200	-----------------------    VLIB_skip_test(K$284);
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x04)
	.dwattr $C$DW$219, DW_AT_name("sprintf")
	.dwattr $C$DW$219, DW_AT_TI_call

           LDW     .D2T2   *+B12(28),B4      ; |199| 
||         CALL    .S1     sprintf           ; |199| 
||         MVKL    .S2     $C$SL4+0,B5

           MVKL    .S1     desc,A4
           MVKH    .S2     $C$SL4+0,B5
           MVKH    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 199,column 13,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |199| 

           STW     .D2T2   B4,*+SP(8)        ; |199| 
||         ADDKPC  .S2     $C$RL30,B3,0      ; |199| 

$C$RL30:   ; CALL OCCURS {sprintf} {0}       ; |199| 
$C$DW$L$VLIB_ORB_computeRBrief_d$64$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$65$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$220, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 200,column 13,is_stmt,isa 0
$C$RL31:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |200| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 204,column 9,is_stmt,isa 0
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("free")
	.dwattr $C$DW$221, DW_AT_TI_call
           CALL    .S1     free              ; |204| 
           LDW     .D2T1   *+SP(100),A4      ; |204| 
           NOP             3
$C$DW$L$VLIB_ORB_computeRBrief_d$65$E:
;** --------------------------------------------------------------------------*
$C$L30:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 197,column 9,is_stmt,isa 0
$C$DW$L$VLIB_ORB_computeRBrief_d$66$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g59:
;** 204	-----------------------    free((void *)outDesc_cn);
;** 205	-----------------------    VLIB_free((void *)outDesc);
;** 206	-----------------------    VLIB_free((void *)featWedges);
;** 207	-----------------------    VLIB_free((void *)validFeaturePoints);
;** 208	-----------------------    VLIB_free((void *)validAngles);
;** 209	-----------------------    free((void *)relative_patterns);
;** 210	-----------------------    VLIB_free((void *)intgrlImg);
;** 51	-----------------------    U$12 += 36;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 204,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL32,B3,0      ; |204| 
$C$RL32:   ; CALL OCCURS {free} {0}          ; |204| 
$C$DW$L$VLIB_ORB_computeRBrief_d$66$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$67$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("VLIB_free")
	.dwattr $C$DW$222, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(104),A4      ; |205| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 205,column 9,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {VLIB_free} {0}     ; |205| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("VLIB_free")
	.dwattr $C$DW$223, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(96),A4       ; |206| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 206,column 9,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {VLIB_free} {0}     ; |206| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("VLIB_free")
	.dwattr $C$DW$224, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(92),A4       ; |207| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 207,column 9,is_stmt,isa 0
$C$RL35:   ; CALL OCCURS {VLIB_free} {0}     ; |207| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("VLIB_free")
	.dwattr $C$DW$225, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(88),A4       ; |208| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 208,column 9,is_stmt,isa 0
$C$RL36:   ; CALL OCCURS {VLIB_free} {0}     ; |208| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("free")
	.dwattr $C$DW$226, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(84),A4       ; |209| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 209,column 9,is_stmt,isa 0
$C$RL37:   ; CALL OCCURS {free} {0}          ; |209| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("VLIB_free")
	.dwattr $C$DW$227, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(80),A4       ; |210| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 210,column 9,is_stmt,isa 0
$C$RL38:   ; CALL OCCURS {VLIB_free} {0}     ; |210| 
$C$DW$L$VLIB_ORB_computeRBrief_d$67$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_ORB_computeRBrief_d$68$B:
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(116),A31

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A4            ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 58,column 21,is_stmt,isa 0
           ADDK    .S2     36,B12            ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 17,is_stmt,isa 0
           ADDK    .S1     36,A13            ; |51| 
           ADD     .L1     1,A31,A3          ; |51| 
           STW     .D2T1   A3,*+SP(116)      ; |51| 
           CMPGT   .L1     A4,A3,A0          ; |51| 

   [ A0]   BNOP    .S1     $C$L1,4           ; |51| 
|| [ A0]   LDW     .D2T2   *+B12(28),B10     ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 60,column 21,is_stmt,isa 0
           SHL     .S1X    B10,5,A10         ; |60| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_ORB_computeRBrief_d$68$E:
;** --------------------------------------------------------------------------*
$C$L31:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g60:
;** 214	-----------------------    VLIB_profile_cycle_report(1, NULL, "Total Number of Features(numFeatures)");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [21]
;** 168	-----------------------    VLIB_stack_memory();  // [21]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL5+0,A6
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$228, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL5+0,A6
||         MVK     .L1     0x1,A4            ; |214| 
||         ZERO    .L2     B4                ; |214| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 214,column 5,is_stmt,isa 0
$C$RL39:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |214| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL6+0,B4
           MVKH    .S2     $C$SL6+0,B4
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("printf")
	.dwattr $C$DW$229, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL40:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$230, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL41:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c",line 220,column 1,is_stmt,isa 0
           ADDK    .S2     120,SP            ; |220| 
	.dwcfi	cfa_offset, 56
           LDW     .D2T2   *++SP(8),B3
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |220| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$232	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$232, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L1:1:1443280354")
	.dwattr $C$DW$232, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$232, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$232, DW_AT_TI_end_line(0xd3)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$4$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$4$E)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$64$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$64$E)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$50$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$50$E)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$51$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$51$E)
$C$DW$237	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$237, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$49$B)
	.dwattr $C$DW$237, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$49$E)
$C$DW$238	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$238, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$38$B)
	.dwattr $C$DW$238, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$38$E)
$C$DW$239	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$239, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$39$B)
	.dwattr $C$DW$239, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$39$E)
$C$DW$240	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$240, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$21$B)
	.dwattr $C$DW$240, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$21$E)
$C$DW$241	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$241, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$12$B)
	.dwattr $C$DW$241, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$12$E)
$C$DW$242	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$242, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$13$B)
	.dwattr $C$DW$242, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$13$E)
$C$DW$243	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$243, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$8$B)
	.dwattr $C$DW$243, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$8$E)
$C$DW$244	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$244, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$5$B)
	.dwattr $C$DW$244, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$5$E)
$C$DW$245	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$245, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$6$B)
	.dwattr $C$DW$245, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$6$E)
$C$DW$246	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$246, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$7$B)
	.dwattr $C$DW$246, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$7$E)
$C$DW$247	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$247, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$11$B)
	.dwattr $C$DW$247, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$11$E)
$C$DW$248	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$248, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$20$B)
	.dwattr $C$DW$248, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$20$E)
$C$DW$249	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$249, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$28$B)
	.dwattr $C$DW$249, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$28$E)
$C$DW$250	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$250, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$35$B)
	.dwattr $C$DW$250, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$35$E)
$C$DW$251	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$251, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$36$B)
	.dwattr $C$DW$251, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$36$E)
$C$DW$252	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$252, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$37$B)
	.dwattr $C$DW$252, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$37$E)
$C$DW$253	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$253, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$48$B)
	.dwattr $C$DW$253, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$48$E)
$C$DW$254	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$254, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$60$B)
	.dwattr $C$DW$254, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$60$E)
$C$DW$255	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$255, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$61$B)
	.dwattr $C$DW$255, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$61$E)
$C$DW$256	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$256, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$62$B)
	.dwattr $C$DW$256, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$62$E)
$C$DW$257	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$257, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$63$B)
	.dwattr $C$DW$257, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$63$E)
$C$DW$258	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$258, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$65$B)
	.dwattr $C$DW$258, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$65$E)
$C$DW$259	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$259, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$66$B)
	.dwattr $C$DW$259, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$66$E)
$C$DW$260	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$260, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$67$B)
	.dwattr $C$DW$260, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$67$E)
$C$DW$261	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$261, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$68$B)
	.dwattr $C$DW$261, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$68$E)

$C$DW$262	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$262, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L22:2:1443280354")
	.dwattr $C$DW$262, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$262, DW_AT_TI_begin_line(0xac)
	.dwattr $C$DW$262, DW_AT_TI_end_line(0xb6)
$C$DW$263	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$263, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$52$B)
	.dwattr $C$DW$263, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$52$E)
$C$DW$264	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$264, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$55$B)
	.dwattr $C$DW$264, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$55$E)
$C$DW$265	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$265, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$57$B)
	.dwattr $C$DW$265, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$57$E)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$56$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$56$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$58$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$58$E)
$C$DW$268	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$268, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$59$B)
	.dwattr $C$DW$268, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$59$E)

$C$DW$269	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$269, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L23:3:1443280354")
	.dwattr $C$DW$269, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$269, DW_AT_TI_begin_line(0xad)
	.dwattr $C$DW$269, DW_AT_TI_end_line(0xb5)
$C$DW$270	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$270, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$53$B)
	.dwattr $C$DW$270, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$53$E)
$C$DW$271	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$271, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$54$B)
	.dwattr $C$DW$271, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$54$E)
	.dwendtag $C$DW$269

	.dwendtag $C$DW$262


$C$DW$272	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$272, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L4:2:1443280354")
	.dwattr $C$DW$272, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$272, DW_AT_TI_begin_line(0x5b)
	.dwattr $C$DW$272, DW_AT_TI_end_line(0x5f)
$C$DW$273	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$273, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$14$B)
	.dwattr $C$DW$273, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$14$E)
$C$DW$274	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$274, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$15$B)
	.dwattr $C$DW$274, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$15$E)
$C$DW$275	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$275, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$16$B)
	.dwattr $C$DW$275, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$16$E)
$C$DW$276	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$276, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$17$B)
	.dwattr $C$DW$276, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$17$E)
$C$DW$277	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$277, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$18$B)
	.dwattr $C$DW$277, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$18$E)
$C$DW$278	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$278, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$19$B)
	.dwattr $C$DW$278, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$19$E)
	.dwendtag $C$DW$272


$C$DW$279	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$279, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L2:2:1443280354")
	.dwattr $C$DW$279, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$279, DW_AT_TI_begin_line(0x4b)
	.dwattr $C$DW$279, DW_AT_TI_end_line(0x59)
$C$DW$280	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$280, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$9$B)
	.dwattr $C$DW$280, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$9$E)
$C$DW$281	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$281, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$10$B)
	.dwattr $C$DW$281, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$10$E)
	.dwendtag $C$DW$279


$C$DW$282	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$282, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L8:2:1443280354")
	.dwattr $C$DW$282, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$282, DW_AT_TI_begin_line(0x5b)
	.dwattr $C$DW$282, DW_AT_TI_end_line(0x5f)
$C$DW$283	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$283, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$22$B)
	.dwattr $C$DW$283, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$22$E)
$C$DW$284	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$284, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$23$B)
	.dwattr $C$DW$284, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$23$E)
$C$DW$285	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$285, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$24$B)
	.dwattr $C$DW$285, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$24$E)
$C$DW$286	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$286, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$25$B)
	.dwattr $C$DW$286, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$25$E)
$C$DW$287	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$287, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$26$B)
	.dwattr $C$DW$287, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$26$E)
$C$DW$288	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$288, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$27$B)
	.dwattr $C$DW$288, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$27$E)
	.dwendtag $C$DW$282


$C$DW$289	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$289, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L12:2:1443280354")
	.dwattr $C$DW$289, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$289, DW_AT_TI_begin_line(0x61)
	.dwattr $C$DW$289, DW_AT_TI_end_line(0x64)
$C$DW$290	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$290, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$29$B)
	.dwattr $C$DW$290, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$29$E)
$C$DW$291	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$291, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$30$B)
	.dwattr $C$DW$291, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$30$E)
$C$DW$292	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$292, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$34$B)
	.dwattr $C$DW$292, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$34$E)

$C$DW$293	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$293, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L14:3:1443280354")
	.dwattr $C$DW$293, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$293, DW_AT_TI_begin_line(0x64)
	.dwattr $C$DW$293, DW_AT_TI_end_line(0x7b)
$C$DW$294	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$294, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$32$B)
	.dwattr $C$DW$294, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$32$E)
	.dwendtag $C$DW$293

	.dwendtag $C$DW$289


$C$DW$295	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$295, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L16:2:1443280354")
	.dwattr $C$DW$295, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$295, DW_AT_TI_begin_line(0x9e)
	.dwattr $C$DW$295, DW_AT_TI_end_line(0xa8)
$C$DW$296	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$296, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$40$B)
	.dwattr $C$DW$296, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$40$E)
$C$DW$297	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$297, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$43$B)
	.dwattr $C$DW$297, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$43$E)
$C$DW$298	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$298, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$45$B)
	.dwattr $C$DW$298, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$45$E)
$C$DW$299	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$299, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$44$B)
	.dwattr $C$DW$299, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$44$E)
$C$DW$300	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$300, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$46$B)
	.dwattr $C$DW$300, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$46$E)
$C$DW$301	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$301, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$47$B)
	.dwattr $C$DW$301, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$47$E)

$C$DW$302	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$302, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.se66:$C$L17:3:1443280354")
	.dwattr $C$DW$302, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$302, DW_AT_TI_begin_line(0x9f)
	.dwattr $C$DW$302, DW_AT_TI_end_line(0xa7)
$C$DW$303	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$303, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$41$B)
	.dwattr $C$DW$303, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$41$E)
$C$DW$304	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$304, DW_AT_low_pc($C$DW$L$VLIB_ORB_computeRBrief_d$42$B)
	.dwattr $C$DW$304, DW_AT_high_pc($C$DW$L$VLIB_ORB_computeRBrief_d$42$E)
	.dwendtag $C$DW$302

	.dwendtag $C$DW$295

	.dwendtag $C$DW$232

	.dwattr $C$DW$93, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_ORB_computeRBrief/VLIB_ORB_computeRBrief_d.c")
	.dwattr $C$DW$93, DW_AT_TI_end_line(0xdc)
	.dwattr $C$DW$93, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$93

;; Inlined function references:
;; [  8] floor
;; [ 18] VLIB_profile_start
;; [ 19] VLIB_profile_stop
;; [ 21] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_ORB_computeRBrief",0
$C$SL2:	.string	" Mismatch in Index = %u %u ",10,0
$C$SL3:	.string	"%s generated input | Opt and NatC results compared | output"
	.string	"->n_features= %d, %s",0
$C$SL4:	.string	"Total Features= %d",0
$C$SL5:	.string	"Total Number of Features(numFeatures)",0
$C$SL6:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	memalign
	.global	modf
	.global	__c6xabi_nround
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	getRotationMatrix
	.global	VLIB_ORB_computeRBrief
	.global	VLIB_ORB_computeRBrief_cn
	.global	orb_computeRBrief_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$66	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x04)
$C$DW$305	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$305, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$305, DW_AT_decl_column(0x05)
$C$DW$306	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$306, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$306, DW_AT_decl_column(0x05)
$C$DW$307	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$307, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$307, DW_AT_decl_column(0x05)
$C$DW$308	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$308, DW_AT_decl_column(0x05)
$C$DW$309	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$309, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$309, DW_AT_decl_column(0x05)
$C$DW$310	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$310, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$310, DW_AT_decl_column(0x05)
$C$DW$311	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$311, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x80)
	.dwattr $C$DW$311, DW_AT_decl_column(0x05)
$C$DW$312	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$312, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x81)
	.dwattr $C$DW$312, DW_AT_decl_column(0x05)
$C$DW$313	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$313, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x82)
	.dwattr $C$DW$313, DW_AT_decl_column(0x05)
$C$DW$314	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$314, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x83)
	.dwattr $C$DW$314, DW_AT_decl_column(0x05)
$C$DW$315	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$315, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x84)
	.dwattr $C$DW$315, DW_AT_decl_column(0x05)
$C$DW$316	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$316, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x85)
	.dwattr $C$DW$316, DW_AT_decl_column(0x05)
$C$DW$317	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$317, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x86)
	.dwattr $C$DW$317, DW_AT_decl_column(0x05)
$C$DW$318	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$318, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x87)
	.dwattr $C$DW$318, DW_AT_decl_column(0x05)
$C$DW$319	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$319, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x88)
	.dwattr $C$DW$319, DW_AT_decl_column(0x05)
$C$DW$320	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$320, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x89)
	.dwattr $C$DW$320, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$66

	.dwattr $C$DW$T$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$66, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$66, DW_AT_decl_column(0x0e)
$C$DW$T$67	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$67, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$T$67, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$67, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$67, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$67, DW_AT_decl_column(0x03)

$C$DW$T$68	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x04)
$C$DW$321	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$321, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$321, DW_AT_decl_column(0x05)
$C$DW$322	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$322, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$322, DW_AT_decl_column(0x05)
$C$DW$323	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$323, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$323, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$68

	.dwattr $C$DW$T$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$T$68, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$68, DW_AT_decl_column(0x06)

$C$DW$T$69	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x04)
$C$DW$324	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$324, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x72)
	.dwattr $C$DW$324, DW_AT_decl_column(0x05)
$C$DW$325	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$325, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x73)
	.dwattr $C$DW$325, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$69

	.dwattr $C$DW$T$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_test.h")
	.dwattr $C$DW$T$69, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$69, DW_AT_decl_column(0x06)

$C$DW$T$70	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x04)
$C$DW$326	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_FALSE"), DW_AT_const_value(0x00)
	.dwattr $C$DW$326, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$326, DW_AT_decl_line(0x8f)
	.dwattr $C$DW$326, DW_AT_decl_column(0x05)
$C$DW$327	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_TRUE"), DW_AT_const_value(0x01)
	.dwattr $C$DW$327, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$327, DW_AT_decl_line(0x90)
	.dwattr $C$DW$327, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$70

	.dwattr $C$DW$T$70, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$70, DW_AT_decl_line(0x8e)
	.dwattr $C$DW$T$70, DW_AT_decl_column(0x0e)
$C$DW$T$71	.dwtag  DW_TAG_typedef, DW_AT_name("CORB_Bool")
	.dwattr $C$DW$T$71, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$71, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$71, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$71, DW_AT_decl_line(0x91)
	.dwattr $C$DW$T$71, DW_AT_decl_column(0x02)

$C$DW$T$72	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x04)
$C$DW$328	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_OK"), DW_AT_const_value(0x00)
	.dwattr $C$DW$328, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$328, DW_AT_decl_line(0xa2)
	.dwattr $C$DW$328, DW_AT_decl_column(0x05)
$C$DW$329	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_FAIL"), DW_AT_const_value(-1)
	.dwattr $C$DW$329, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$329, DW_AT_decl_line(0xa3)
	.dwattr $C$DW$329, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$72

	.dwattr $C$DW$T$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$72, DW_AT_decl_line(0xa1)
	.dwattr $C$DW$T$72, DW_AT_decl_column(0x0e)
$C$DW$T$73	.dwtag  DW_TAG_typedef, DW_AT_name("CORBResult")
	.dwattr $C$DW$T$73, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$T$73, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$73, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$73, DW_AT_decl_line(0xa4)
	.dwattr $C$DW$T$73, DW_AT_decl_column(0x02)

$C$DW$T$21	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$21, DW_AT_byte_size(0x20)
$C$DW$330	.dwtag  DW_TAG_member
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$330, DW_AT_name("val")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("val")
	.dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$330, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$330, DW_AT_decl_line(0x25)
	.dwattr $C$DW$330, DW_AT_decl_column(0x0c)
	.dwendtag $C$DW$T$21

	.dwattr $C$DW$T$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x10)
$C$DW$T$78	.dwtag  DW_TAG_typedef, DW_AT_name("RotationMatrix")
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$78, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$T$78, DW_AT_decl_line(0x26)
	.dwattr $C$DW$T$78, DW_AT_decl_column(0x02)
$C$DW$T$80	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$78)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x24)
$C$DW$331	.dwtag  DW_TAG_member
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$331, DW_AT_name("testPattern")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$331, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$331, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$331, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$331, DW_AT_decl_line(0x24)
	.dwattr $C$DW$331, DW_AT_decl_column(0x0f)
$C$DW$332	.dwtag  DW_TAG_member
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$332, DW_AT_name("staticInFeatures")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("staticInFeatures")
	.dwattr $C$DW$332, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$332, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$332, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$332, DW_AT_decl_line(0x25)
	.dwattr $C$DW$332, DW_AT_decl_column(0x0f)
$C$DW$333	.dwtag  DW_TAG_member
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$333, DW_AT_name("staticInIntegral")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("staticInIntegral")
	.dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$333, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$333, DW_AT_decl_line(0x26)
	.dwattr $C$DW$333, DW_AT_decl_column(0x0f)
$C$DW$334	.dwtag  DW_TAG_member
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$334, DW_AT_name("staticInAngle")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("staticInAngle")
	.dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$334, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$334, DW_AT_decl_line(0x27)
	.dwattr $C$DW$334, DW_AT_decl_column(0x0f)
$C$DW$335	.dwtag  DW_TAG_member
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$335, DW_AT_name("staticOut")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$335, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$335, DW_AT_decl_line(0x28)
	.dwattr $C$DW$335, DW_AT_decl_column(0x0f)
$C$DW$336	.dwtag  DW_TAG_member
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$336, DW_AT_name("orbPattern")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("orbPattern")
	.dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$336, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$336, DW_AT_decl_line(0x29)
	.dwattr $C$DW$336, DW_AT_decl_column(0x0f)
$C$DW$337	.dwtag  DW_TAG_member
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$337, DW_AT_name("imageWidth")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$337, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$337, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$337, DW_AT_decl_column(0x0f)
$C$DW$338	.dwtag  DW_TAG_member
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$338, DW_AT_name("imageHeight")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$338, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$338, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$338, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$338, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$338, DW_AT_decl_column(0x0f)
$C$DW$339	.dwtag  DW_TAG_member
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$339, DW_AT_name("true_num_features")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("true_num_features")
	.dwattr $C$DW$339, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$339, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$339, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$339, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$339, DW_AT_decl_column(0x0f)
$C$DW$340	.dwtag  DW_TAG_member
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$340, DW_AT_name("desc")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$340, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$340, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$340, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$340, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$340, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x10)
$C$DW$T$81	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$81, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$81, DW_AT_address_class(0x20)
$C$DW$T$83	.dwtag  DW_TAG_typedef, DW_AT_name("orb_computeRBrief_testParams_t")
	.dwattr $C$DW$T$83, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$83, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\VLIB_ORB_computeRBrief_idat.h")
	.dwattr $C$DW$T$83, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$83, DW_AT_decl_column(0x03)
$C$DW$T$84	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$T$84, DW_AT_address_class(0x20)
$C$DW$T$85	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$T$85, DW_AT_address_class(0x20)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x18)
$C$DW$341	.dwtag  DW_TAG_member
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$341, DW_AT_name("fd")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$341, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$341, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$341, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$341, DW_AT_decl_line(0x49)
	.dwattr $C$DW$341, DW_AT_decl_column(0x0b)
$C$DW$342	.dwtag  DW_TAG_member
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$342, DW_AT_name("buf")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$342, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$342, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$342, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$342, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$342, DW_AT_decl_column(0x16)
$C$DW$343	.dwtag  DW_TAG_member
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$343, DW_AT_name("pos")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$343, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$343, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$343, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$343, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$343, DW_AT_decl_column(0x16)
$C$DW$344	.dwtag  DW_TAG_member
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$344, DW_AT_name("bufend")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$344, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$344, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$344, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$344, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$344, DW_AT_decl_column(0x16)
$C$DW$345	.dwtag  DW_TAG_member
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$345, DW_AT_name("buff_stop")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$345, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$345, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$345, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$345, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$345, DW_AT_decl_column(0x16)
$C$DW$346	.dwtag  DW_TAG_member
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$346, DW_AT_name("flags")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$346, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$346, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$346, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$346, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$346, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x10)
$C$DW$T$86	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$86, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$86, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$86, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$86, DW_AT_decl_column(0x03)

$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x08)
$C$DW$347	.dwtag  DW_TAG_member
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$347, DW_AT_name("quot")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$347, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$347, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$347, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$347, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$347, DW_AT_decl_column(0x16)
$C$DW$348	.dwtag  DW_TAG_member
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$348, DW_AT_name("rem")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$348, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$348, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$348, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$348, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$348, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x10)
$C$DW$T$87	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$87, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$87, DW_AT_decl_column(0x23)

$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x08)
$C$DW$349	.dwtag  DW_TAG_member
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$349, DW_AT_name("quot")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$349, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$349, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$349, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$349, DW_AT_decl_line(0x40)
	.dwattr $C$DW$349, DW_AT_decl_column(0x17)
$C$DW$350	.dwtag  DW_TAG_member
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$350, DW_AT_name("rem")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$350, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$350, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$350, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$350, DW_AT_decl_line(0x40)
	.dwattr $C$DW$350, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x10)
$C$DW$T$88	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$88, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$88, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$88, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$88, DW_AT_decl_column(0x24)

$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x10)
$C$DW$351	.dwtag  DW_TAG_member
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$351, DW_AT_name("quot")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$351, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$351, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$351, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$351, DW_AT_decl_line(0x43)
	.dwattr $C$DW$351, DW_AT_decl_column(0x1c)
$C$DW$352	.dwtag  DW_TAG_member
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$352, DW_AT_name("rem")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$352, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$352, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$352, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$352, DW_AT_decl_line(0x43)
	.dwattr $C$DW$352, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x10)
$C$DW$T$89	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$89, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$89, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$89, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$89, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$89, DW_AT_decl_column(0x29)

$C$DW$T$40	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x24)
$C$DW$353	.dwtag  DW_TAG_member
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$353, DW_AT_name("area")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$353, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$353, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$353, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$353, DW_AT_decl_line(0x69)
	.dwattr $C$DW$353, DW_AT_decl_column(0x0d)
$C$DW$354	.dwtag  DW_TAG_member
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$354, DW_AT_name("xsum")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$354, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$354, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$354, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$354, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$354, DW_AT_decl_column(0x0d)
$C$DW$355	.dwtag  DW_TAG_member
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$355, DW_AT_name("ysum")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$355, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$355, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$355, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$355, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$355, DW_AT_decl_column(0x0d)
$C$DW$356	.dwtag  DW_TAG_member
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$356, DW_AT_name("xmin")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$356, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$356, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$356, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$356, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$356, DW_AT_decl_column(0x0d)
$C$DW$357	.dwtag  DW_TAG_member
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$357, DW_AT_name("ymin")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$357, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$357, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$357, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$357, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$357, DW_AT_decl_column(0x0d)
$C$DW$358	.dwtag  DW_TAG_member
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$358, DW_AT_name("xmax")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$358, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$358, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$358, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$358, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$358, DW_AT_decl_column(0x0d)
$C$DW$359	.dwtag  DW_TAG_member
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$359, DW_AT_name("ymax")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$359, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$359, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$359, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$359, DW_AT_decl_line(0x70)
	.dwattr $C$DW$359, DW_AT_decl_column(0x0d)
$C$DW$360	.dwtag  DW_TAG_member
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$360, DW_AT_name("seedx")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$360, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$360, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$360, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$360, DW_AT_decl_line(0x72)
	.dwattr $C$DW$360, DW_AT_decl_column(0x0d)
$C$DW$361	.dwtag  DW_TAG_member
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$361, DW_AT_name("seedy")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$361, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$361, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$361, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$361, DW_AT_decl_line(0x73)
	.dwattr $C$DW$361, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x10)
$C$DW$T$90	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$90, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$90, DW_AT_decl_column(0x03)

$C$DW$T$42	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x10)
$C$DW$362	.dwtag  DW_TAG_member
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$362, DW_AT_name("daylight")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$362, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$362, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$362, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$362, DW_AT_decl_line(0x52)
	.dwattr $C$DW$362, DW_AT_decl_column(0x0b)
$C$DW$363	.dwtag  DW_TAG_member
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$363, DW_AT_name("timezone")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$363, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$363, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$363, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$363, DW_AT_decl_line(0x53)
	.dwattr $C$DW$363, DW_AT_decl_column(0x0b)
$C$DW$364	.dwtag  DW_TAG_member
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$364, DW_AT_name("tzname")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$364, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$364, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$364, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$364, DW_AT_decl_line(0x54)
	.dwattr $C$DW$364, DW_AT_decl_column(0x0b)
$C$DW$365	.dwtag  DW_TAG_member
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$365, DW_AT_name("dstname")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$365, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$365, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$365, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$365, DW_AT_decl_line(0x55)
	.dwattr $C$DW$365, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x01)
$C$DW$T$91	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$91, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$T$91, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$91, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$91, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$91, DW_AT_decl_column(0x03)

$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x14)
$C$DW$366	.dwtag  DW_TAG_member
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$366, DW_AT_name("width")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$366, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$366, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$366, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$366, DW_AT_decl_line(0xaa)
	.dwattr $C$DW$366, DW_AT_decl_column(0x0d)
$C$DW$367	.dwtag  DW_TAG_member
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$367, DW_AT_name("height")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$367, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$367, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$367, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$367, DW_AT_decl_line(0xab)
	.dwattr $C$DW$367, DW_AT_decl_column(0x0d)
$C$DW$368	.dwtag  DW_TAG_member
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$368, DW_AT_name("marginPixels")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("marginPixels")
	.dwattr $C$DW$368, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$368, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$368, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$368, DW_AT_decl_line(0xac)
	.dwattr $C$DW$368, DW_AT_decl_column(0x0d)
$C$DW$369	.dwtag  DW_TAG_member
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$369, DW_AT_name("fastDifferenceThreshold")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("fastDifferenceThreshold")
	.dwattr $C$DW$369, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$369, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$369, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$369, DW_AT_decl_line(0xae)
	.dwattr $C$DW$369, DW_AT_decl_column(0x0d)
$C$DW$370	.dwtag  DW_TAG_member
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$370, DW_AT_name("n_features_desired")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("n_features_desired")
	.dwattr $C$DW$370, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$370, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$370, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$370, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$370, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0xa9)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x10)
$C$DW$T$92	.dwtag  DW_TAG_typedef, DW_AT_name("CORBParameters")
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$92, DW_AT_decl_line(0xb3)
	.dwattr $C$DW$T$92, DW_AT_decl_column(0x02)

$C$DW$T$48	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x5a008)
$C$DW$371	.dwtag  DW_TAG_member
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$371, DW_AT_name("octave")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$371, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$371, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$371, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$371, DW_AT_decl_line(0xb9)
	.dwattr $C$DW$371, DW_AT_decl_column(0x0d)
$C$DW$372	.dwtag  DW_TAG_member
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$372, DW_AT_name("relative_patterns")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("relative_patterns")
	.dwattr $C$DW$372, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$372, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$372, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$372, DW_AT_decl_line(0xbb)
	.dwattr $C$DW$372, DW_AT_decl_column(0x0d)
$C$DW$373	.dwtag  DW_TAG_member
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$373, DW_AT_name("rotated_patterns")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("rotated_patterns")
	.dwattr $C$DW$373, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c004]
	.dwattr $C$DW$373, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$373, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$373, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$373, DW_AT_decl_column(0x0d)
$C$DW$374	.dwtag  DW_TAG_member
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$374, DW_AT_name("integralImageWidth")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("integralImageWidth")
	.dwattr $C$DW$374, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a004]
	.dwattr $C$DW$374, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$374, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$374, DW_AT_decl_line(0xbd)
	.dwattr $C$DW$374, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$48

	.dwattr $C$DW$T$48, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x10)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("CORBPatterns")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0xbe)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x02)

$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x400)
$C$DW$375	.dwtag  DW_TAG_member
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$375, DW_AT_name("orientation_horizontal_offsets")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("orientation_horizontal_offsets")
	.dwattr $C$DW$375, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$375, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$375, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$375, DW_AT_decl_line(0xc4)
	.dwattr $C$DW$375, DW_AT_decl_column(0x0d)
$C$DW$376	.dwtag  DW_TAG_member
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$376, DW_AT_name("orientation_vertical_offsets")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("orientation_vertical_offsets")
	.dwattr $C$DW$376, DW_AT_data_member_location[DW_OP_plus_uconst 0x1e0]
	.dwattr $C$DW$376, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$376, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$376, DW_AT_decl_line(0xc5)
	.dwattr $C$DW$376, DW_AT_decl_column(0x0d)
$C$DW$377	.dwtag  DW_TAG_member
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$377, DW_AT_name("u_max")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("u_max")
	.dwattr $C$DW$377, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c0]
	.dwattr $C$DW$377, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$377, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$377, DW_AT_decl_line(0xc6)
	.dwattr $C$DW$377, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$51

	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0xc3)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x10)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOrientationOffsets")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0xc7)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x02)

$C$DW$T$56	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x5a420)
$C$DW$378	.dwtag  DW_TAG_member
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$378, DW_AT_name("patterns")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("patterns")
	.dwattr $C$DW$378, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$378, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$378, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$378, DW_AT_decl_line(0xcd)
	.dwattr $C$DW$378, DW_AT_decl_column(0x1c)
$C$DW$379	.dwtag  DW_TAG_member
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$379, DW_AT_name("offsets")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("offsets")
	.dwattr $C$DW$379, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a008]
	.dwattr $C$DW$379, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$379, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$379, DW_AT_decl_line(0xce)
	.dwattr $C$DW$379, DW_AT_decl_column(0x1c)
$C$DW$380	.dwtag  DW_TAG_member
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$380, DW_AT_name("image")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("image")
	.dwattr $C$DW$380, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a408]
	.dwattr $C$DW$380, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$380, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$380, DW_AT_decl_line(0xcf)
	.dwattr $C$DW$380, DW_AT_decl_column(0x1c)
$C$DW$381	.dwtag  DW_TAG_member
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$381, DW_AT_name("prefimage")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("prefimage")
	.dwattr $C$DW$381, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a40c]
	.dwattr $C$DW$381, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$381, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$381, DW_AT_decl_line(0xd0)
	.dwattr $C$DW$381, DW_AT_decl_column(0x1c)
$C$DW$382	.dwtag  DW_TAG_member
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$382, DW_AT_name("harrisImage")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("harrisImage")
	.dwattr $C$DW$382, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a410]
	.dwattr $C$DW$382, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$382, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$382, DW_AT_decl_line(0xd1)
	.dwattr $C$DW$382, DW_AT_decl_column(0x1c)
$C$DW$383	.dwtag  DW_TAG_member
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$383, DW_AT_name("integralImage")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("integralImage")
	.dwattr $C$DW$383, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a414]
	.dwattr $C$DW$383, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$383, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$383, DW_AT_decl_line(0xd2)
	.dwattr $C$DW$383, DW_AT_decl_column(0x1c)
$C$DW$384	.dwtag  DW_TAG_member
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$384, DW_AT_name("scratchBuffer")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("scratchBuffer")
	.dwattr $C$DW$384, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a418]
	.dwattr $C$DW$384, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$384, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$384, DW_AT_decl_line(0xd3)
	.dwattr $C$DW$384, DW_AT_decl_column(0x1c)
$C$DW$385	.dwtag  DW_TAG_member
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$385, DW_AT_name("orbPattern31")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("orbPattern31")
	.dwattr $C$DW$385, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a41c]
	.dwattr $C$DW$385, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$385, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$385, DW_AT_decl_line(0xd4)
	.dwattr $C$DW$385, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$56

	.dwattr $C$DW$T$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0xcc)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x10)
$C$DW$T$93	.dwtag  DW_TAG_typedef, DW_AT_name("CORBInput")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$93, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$93, DW_AT_decl_line(0xd5)
	.dwattr $C$DW$T$93, DW_AT_decl_column(0x02)

$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x38)
$C$DW$386	.dwtag  DW_TAG_member
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$386, DW_AT_name("x")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$386, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$386, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$386, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$386, DW_AT_decl_line(0xdc)
	.dwattr $C$DW$386, DW_AT_decl_column(0x0d)
$C$DW$387	.dwtag  DW_TAG_member
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$387, DW_AT_name("y")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$387, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$387, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$387, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$387, DW_AT_decl_line(0xde)
	.dwattr $C$DW$387, DW_AT_decl_column(0x0d)
$C$DW$388	.dwtag  DW_TAG_member
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$388, DW_AT_name("octave")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$388, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$388, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$388, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$388, DW_AT_decl_line(0xe0)
	.dwattr $C$DW$388, DW_AT_decl_column(0x0d)
$C$DW$389	.dwtag  DW_TAG_member
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$389, DW_AT_name("angle")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("angle")
	.dwattr $C$DW$389, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$389, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$389, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$389, DW_AT_decl_line(0xe3)
	.dwattr $C$DW$389, DW_AT_decl_column(0x0e)
$C$DW$390	.dwtag  DW_TAG_member
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$390, DW_AT_name("fastResponse")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("fastResponse")
	.dwattr $C$DW$390, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$390, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$390, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$390, DW_AT_decl_line(0xe4)
	.dwattr $C$DW$390, DW_AT_decl_column(0x0e)
$C$DW$391	.dwtag  DW_TAG_member
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$391, DW_AT_name("harrisResponse")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("harrisResponse")
	.dwattr $C$DW$391, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$391, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$391, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$391, DW_AT_decl_line(0xe5)
	.dwattr $C$DW$391, DW_AT_decl_column(0x0e)
$C$DW$392	.dwtag  DW_TAG_member
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$392, DW_AT_name("descriptor")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("descriptor")
	.dwattr $C$DW$392, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$392, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$392, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$392, DW_AT_decl_line(0xe6)
	.dwattr $C$DW$392, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$59

	.dwattr $C$DW$T$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$59, DW_AT_decl_line(0xdb)
	.dwattr $C$DW$T$59, DW_AT_decl_column(0x10)
$C$DW$T$60	.dwtag  DW_TAG_typedef, DW_AT_name("CORBFeature")
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$T$60, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$60, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$60, DW_AT_decl_line(0xe7)
	.dwattr $C$DW$T$60, DW_AT_decl_column(0x02)
$C$DW$T$61	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$61, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$61, DW_AT_address_class(0x20)

$C$DW$T$62	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x08)
$C$DW$393	.dwtag  DW_TAG_member
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$393, DW_AT_name("features")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("features")
	.dwattr $C$DW$393, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$393, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$393, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$393, DW_AT_decl_line(0xed)
	.dwattr $C$DW$393, DW_AT_decl_column(0x12)
$C$DW$394	.dwtag  DW_TAG_member
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$394, DW_AT_name("n_features")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("n_features")
	.dwattr $C$DW$394, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$394, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$394, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$394, DW_AT_decl_line(0xee)
	.dwattr $C$DW$394, DW_AT_decl_column(0x12)
	.dwendtag $C$DW$T$62

	.dwattr $C$DW$T$62, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$62, DW_AT_decl_line(0xec)
	.dwattr $C$DW$T$62, DW_AT_decl_column(0x10)
$C$DW$T$94	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOutput")
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$94, DW_AT_decl_line(0xef)
	.dwattr $C$DW$T$94, DW_AT_decl_column(0x02)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$95	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$95, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$95, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)
$C$DW$T$29	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$29, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$29, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x1d)
$C$DW$T$30	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$30, DW_AT_address_class(0x20)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$34	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$34, DW_AT_address_class(0x20)
$C$DW$T$22	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x1c)
$C$DW$T$28	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$28, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$28, DW_AT_address_class(0x20)
$C$DW$T$136	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$28)

$C$DW$T$58	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$58, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$58, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x20)
$C$DW$395	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$395, DW_AT_upper_bound(0x1f)
	.dwendtag $C$DW$T$58

$C$DW$T$137	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$22)
$C$DW$T$138	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$137)
	.dwattr $C$DW$T$138, DW_AT_address_class(0x20)
$C$DW$T$139	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$138)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x1d)
$C$DW$T$55	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$T$55, DW_AT_address_class(0x20)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$142	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$142, DW_AT_address_class(0x20)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1c)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x16)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$154	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$154, DW_AT_address_class(0x20)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x0d)
$C$DW$T$39	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$39, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x1d)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x11)

$C$DW$T$44	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x2000)
$C$DW$396	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$396, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x3c000)
$C$DW$397	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$397, DW_AT_upper_bound(0x1d)
$C$DW$398	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$398, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x1000)
$C$DW$399	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$399, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x1e000)
$C$DW$400	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$400, DW_AT_upper_bound(0x1d)
$C$DW$401	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$401, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$47


$C$DW$T$49	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x1e0)
$C$DW$402	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$402, DW_AT_upper_bound(0x77)
	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x40)
$C$DW$403	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$403, DW_AT_upper_bound(0x0f)
	.dwendtag $C$DW$T$50


$C$DW$T$63	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$63, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$63, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x10)
$C$DW$404	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$404, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$63

$C$DW$T$118	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$118, DW_AT_address_class(0x20)
$C$DW$T$156	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$39)
$C$DW$T$157	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$156)
	.dwattr $C$DW$T$157, DW_AT_address_class(0x20)
$C$DW$T$158	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$157)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x17)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x17)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x17)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x17)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x17)
$C$DW$T$186	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$186, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$186, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$186, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$186, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$186, DW_AT_decl_column(0x16)
$C$DW$T$96	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$96, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$96, DW_AT_decl_column(0x19)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x16)
$C$DW$T$25	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$25, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x1c)
$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)
$C$DW$T$170	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$25)
$C$DW$T$171	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$170)
	.dwattr $C$DW$T$171, DW_AT_address_class(0x20)
$C$DW$T$172	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$171)
$C$DW$T$181	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$181, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$181, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$181, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$181, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$181, DW_AT_decl_column(0x16)
$C$DW$T$182	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$182, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$182, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$182, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$182, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$182, DW_AT_decl_column(0x16)
$C$DW$T$183	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$183, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$183, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$183, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$183, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$183, DW_AT_decl_column(0x16)
$C$DW$T$184	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$184, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$184, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$184, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$184, DW_AT_decl_column(0x16)
$C$DW$T$185	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$185, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$185, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$185, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$185, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$185, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$187	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$187, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$187, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$187, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$187, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$187, DW_AT_decl_column(0x21)
$C$DW$T$188	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$188, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$188, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$188, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$188, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$188, DW_AT_decl_column(0x17)
$C$DW$T$189	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$189, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$189, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$189, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$189, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$189, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$190	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$190, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$190, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$190, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$190, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$190, DW_AT_decl_column(0x20)
$C$DW$T$191	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$191, DW_AT_type(*$C$DW$T$190)
	.dwattr $C$DW$T$191, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$191, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$191, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$191, DW_AT_decl_column(0x16)
$C$DW$T$192	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$192, DW_AT_type(*$C$DW$T$190)
	.dwattr $C$DW$T$192, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$192, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$192, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$192, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$194	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$194, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$194, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$194, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$194, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$194, DW_AT_decl_column(0x21)
$C$DW$T$195	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$T$195, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$195, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$195, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$195, DW_AT_decl_column(0x17)
$C$DW$T$196	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$196, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$T$196, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$196, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$196, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$196, DW_AT_decl_column(0x17)
$C$DW$T$197	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$197, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$197, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$197, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$197, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$199	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$199, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$199, DW_AT_address_class(0x20)
$C$DW$T$200	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$200, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$200, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$200, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$200, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$200, DW_AT_decl_column(0x20)

$C$DW$T$201	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$201, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$T$201, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$201, DW_AT_byte_size(0x10)
$C$DW$405	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$405, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$201

$C$DW$T$202	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$202, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$T$202, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$202, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$202, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$202, DW_AT_decl_column(0x16)
$C$DW$T$203	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$203, DW_AT_type(*$C$DW$T$200)
	.dwattr $C$DW$T$203, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$203, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$203, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$203, DW_AT_decl_column(0x16)
$C$DW$T$204	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$204, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$204, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$204, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$204, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$204, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$57	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$57, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$57, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$57, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$57, DW_AT_decl_column(0x0f)
$C$DW$T$205	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$205, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$T$205, DW_AT_address_class(0x20)
$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)
$C$DW$T$206	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$206, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$206, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$206, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$206, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$206, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$207	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$207, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$207, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$207, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_ORB_computeRBrief\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$207, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$207, DW_AT_decl_column(0x10)
$C$DW$T$208	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$208, DW_AT_type(*$C$DW$T$207)

$C$DW$T$19	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_byte_size(0x10)
$C$DW$406	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$406, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$19


$C$DW$T$20	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$20, DW_AT_byte_size(0x20)
$C$DW$407	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$407, DW_AT_upper_bound(0x01)
$C$DW$408	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$408, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$20

$C$DW$T$209	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$209, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$209, DW_AT_address_class(0x20)
$C$DW$T$216	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$216, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$216, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$216, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$216, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$216, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$31	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$31, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$31, DW_AT_name("signed char")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x01)
$C$DW$T$32	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$32, DW_AT_address_class(0x20)
$C$DW$T$217	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$217, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$217, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$217, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$217, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$217, DW_AT_decl_column(0x12)

$C$DW$T$41	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x04)
$C$DW$409	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$409, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$41

$C$DW$T$145	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$31)
$C$DW$T$146	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$146, DW_AT_address_class(0x20)

$C$DW$T$218	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$218, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$218, DW_AT_language(DW_LANG_C)
$C$DW$410	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$218


$C$DW$T$64	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$64, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x10)
$C$DW$411	.dwtag  DW_TAG_member
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$411, DW_AT_name("_v")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$411, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$411, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$411, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$411, DW_AT_decl_line(0x44)
	.dwattr $C$DW$411, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$64

	.dwattr $C$DW$T$64, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$64, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$64, DW_AT_decl_column(0x01)
$C$DW$T$219	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$219, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$T$219, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$219, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$219, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$219, DW_AT_decl_column(0x01)
$C$DW$T$220	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$220, DW_AT_type(*$C$DW$T$219)
	.dwattr $C$DW$T$220, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$220, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$220, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$220, DW_AT_decl_column(0x13)

$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("tm")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x24)
$C$DW$412	.dwtag  DW_TAG_member
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_name("tm_sec")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$412, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$412, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$412, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$412, DW_AT_decl_line(0x41)
	.dwattr $C$DW$412, DW_AT_decl_column(0x09)
$C$DW$413	.dwtag  DW_TAG_member
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_name("tm_min")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$413, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$413, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$413, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$413, DW_AT_decl_line(0x42)
	.dwattr $C$DW$413, DW_AT_decl_column(0x09)
$C$DW$414	.dwtag  DW_TAG_member
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_name("tm_hour")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$414, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$414, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$414, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$414, DW_AT_decl_line(0x43)
	.dwattr $C$DW$414, DW_AT_decl_column(0x09)
$C$DW$415	.dwtag  DW_TAG_member
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_name("tm_mday")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$415, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$415, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$415, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$415, DW_AT_decl_line(0x44)
	.dwattr $C$DW$415, DW_AT_decl_column(0x09)
$C$DW$416	.dwtag  DW_TAG_member
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_name("tm_mon")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$416, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$416, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$416, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$416, DW_AT_decl_line(0x45)
	.dwattr $C$DW$416, DW_AT_decl_column(0x09)
$C$DW$417	.dwtag  DW_TAG_member
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_name("tm_year")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$417, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$417, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$417, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$417, DW_AT_decl_line(0x46)
	.dwattr $C$DW$417, DW_AT_decl_column(0x09)
$C$DW$418	.dwtag  DW_TAG_member
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_name("tm_wday")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$418, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$418, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$418, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$418, DW_AT_decl_line(0x47)
	.dwattr $C$DW$418, DW_AT_decl_column(0x09)
$C$DW$419	.dwtag  DW_TAG_member
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_name("tm_yday")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$419, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$419, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$419, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$419, DW_AT_decl_line(0x48)
	.dwattr $C$DW$419, DW_AT_decl_column(0x09)
$C$DW$420	.dwtag  DW_TAG_member
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_name("tm_isdst")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$420, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$420, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$420, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$420, DW_AT_decl_line(0x49)
	.dwattr $C$DW$420, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$65

	.dwattr $C$DW$T$65, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$65, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$65, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

