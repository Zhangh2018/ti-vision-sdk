;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:08:57 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$110)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$60)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$110)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x86)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("memalign")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("memalign")
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x87)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$55)
$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$55)
	.dwendtag $C$DW$13


$C$DW$16	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwattr $C$DW$16, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$16, DW_AT_decl_line(0x58)
	.dwattr $C$DW$16, DW_AT_decl_column(0x05)

$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$17, DW_AT_decl_column(0x06)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$10)
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$17


$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$20, DW_AT_decl_column(0x06)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$60)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$20


$C$DW$27	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwattr $C$DW$27, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$27, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$27, DW_AT_decl_column(0x06)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$27


$C$DW$29	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwattr $C$DW$29, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$29, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$29, DW_AT_decl_column(0x06)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$10)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$60)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$29


$C$DW$33	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external
	.dwattr $C$DW$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$33, DW_AT_decl_line(0x80)
	.dwattr $C$DW$33, DW_AT_decl_column(0x06)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$33


$C$DW$35	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwattr $C$DW$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$35, DW_AT_decl_line(0x81)
	.dwattr $C$DW$35, DW_AT_decl_column(0x06)

$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x82)
	.dwattr $C$DW$36, DW_AT_decl_column(0x0a)

$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x83)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)

$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_memory.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$19)
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$19)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$3)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$3)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$21)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$21)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$21)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$19)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$38


$C$DW$48	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("VLIB_memalign")
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwattr $C$DW$48, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_memory.h")
	.dwattr $C$DW$48, DW_AT_decl_line(0xb1)
	.dwattr $C$DW$48, DW_AT_decl_column(0x07)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$55)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$55)
	.dwendtag $C$DW$48


$C$DW$51	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("VLIB_align_free")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
	.dwattr $C$DW$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_memory.h")
	.dwattr $C$DW$51, DW_AT_decl_line(0xb6)
	.dwattr $C$DW$51, DW_AT_decl_column(0x07)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$51


$C$DW$53	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_blockStatistics")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("VLIB_blockStatistics")
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwattr $C$DW$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\c66/VLIB_blockStatistics.h")
	.dwattr $C$DW$53, DW_AT_decl_line(0x97)
	.dwattr $C$DW$53, DW_AT_decl_column(0x0d)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$101)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$21)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$21)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$21)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$19)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$19)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$98)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$98)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$107)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$130)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$98)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$19)
	.dwendtag $C$DW$53


$C$DW$66	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_blockStatistics_cn")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("VLIB_blockStatistics_cn")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
	.dwattr $C$DW$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_cn.h")
	.dwattr $C$DW$66, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$66, DW_AT_decl_column(0x06)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$20)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$21)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$21)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$21)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$21)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$21)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$20)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$20)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$22)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$24)
	.dwendtag $C$DW$66


$C$DW$77	.dwtag  DW_TAG_subprogram, DW_AT_name("blockStatistics_getTestParams")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("blockStatistics_getTestParams")
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
	.dwattr $C$DW$77, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$77, DW_AT_decl_line(0x32)
	.dwattr $C$DW$77, DW_AT_decl_column(0x06)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$47)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$78)
	.dwendtag $C$DW$77

$C$DW$80	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
	.dwattr $C$DW$80, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$80, DW_AT_decl_line(0x60)
	.dwattr $C$DW$80, DW_AT_decl_column(0x13)
$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x62)
	.dwattr $C$DW$81, DW_AT_decl_column(0x13)
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x63)
	.dwattr $C$DW$82, DW_AT_decl_column(0x13)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x64)
	.dwattr $C$DW$83, DW_AT_decl_column(0x13)
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x75)
	.dwattr $C$DW$84, DW_AT_decl_column(0x14)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x76)
	.dwattr $C$DW$85, DW_AT_decl_column(0x14)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x77)
	.dwattr $C$DW$86, DW_AT_decl_column(0x14)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x78)
	.dwattr $C$DW$87, DW_AT_decl_column(0x14)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$156)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x79)
	.dwattr $C$DW$88, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\025122 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\025124 
	.sect	".text"
	.clink
	.global	VLIB_blockStatistics_d

$C$DW$89	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_blockStatistics_d")
	.dwattr $C$DW$89, DW_AT_low_pc(VLIB_blockStatistics_d)
	.dwattr $C$DW$89, DW_AT_high_pc(0x00)
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("VLIB_blockStatistics_d")
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$89, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$89, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$89, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$89, DW_AT_decl_line(0x26)
	.dwattr $C$DW$89, DW_AT_decl_column(0x06)
	.dwattr $C$DW$89, DW_AT_TI_max_frame_size(0xc0)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 39,column 1,is_stmt,address VLIB_blockStatistics_d,isa 0

	.dwfde $C$DW$CIE, VLIB_blockStatistics_d
$C$DW$90	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$90, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_blockStatistics_d(uint8_t LevelOfFeedback)                   
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_blockStatistics_d                                      *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 32 Args + 100 Auto + 56 Save = 188 byte              *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_blockStatistics_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 45	-----------------------    blockStatistics_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(2, "VLIB_blockStatistics");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g36;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;                      /* test parameter index */        
;  43 | blockStatistics_testParams_t   *prm;                                   
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(8)       ; |39| 
	.dwcfi	cfa_offset, 56
	.dwcfi	save_reg_to_mem, 19, -48
           ADDK    .S2     -136,SP           ; |39| 
	.dwcfi	cfa_offset, 192
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("$O$A30")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("$O$A30")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg18]
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$A31")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$A31")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_regx 0x44]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$A32")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$A32")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_regx 0x43]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$A33")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$A33")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_regx 0x42]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$A34")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$A34")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_regx 0x2f]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$A35")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$A35")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_regx 0x41]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$A36")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$A36")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_regx 0x44]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$A37")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$A37")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_regx 0x43]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$A38")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$A38")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_regx 0x42]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$A39")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$A39")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_regx 0x41]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$A40")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$A40")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_regx 0x30]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$A41")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$A41")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_regx 0x2f]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg6]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg3]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg6]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg16]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg5]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg17]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_regx 0x36]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$C18")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$C18")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg4]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$C19")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$C19")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg16]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$C20")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$C20")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg3]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$C21")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$C21")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg17]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$C22")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$C22")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg20]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$C23")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$C23")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg3]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$C24")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$C24")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$154)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg22]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$C25")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$C25")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg12]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$C26")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$C26")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg15]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$C27")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$C27")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg10]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$C28")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$C28")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg12]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$C29")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$C29")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg22]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$f3")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$f3")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg17]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$f4")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$f4")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg1]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$f5")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$f5")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg16]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$f6")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$f6")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg0]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$f7")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$f7")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg17]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$f8")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$f8")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg1]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$f9")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$f9")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg16]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$f10")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$f10")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg0]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg27]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$K52")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$K52")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg20]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$K98")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$K98")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$154)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg8]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("$O$U145")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("$O$U145")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 40]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$U136")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$U136")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 44]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$U127")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$U127")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_breg31 48]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$U121")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$U121")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_regx 0x40]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$U184")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$U184")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_regx 0x40]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("$O$U182")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("$O$U182")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_regx 0x2e]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("$O$U201")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("$O$U201")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_breg31 52]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("$O$U196")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("$O$U196")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_breg31 56]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("$O$U191")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("$O$U191")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_breg31 60]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$U186")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$U186")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_regx 0x3f]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("$O$U11")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("$O$U11")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg14]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("$O$K83")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("$O$K83")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg28]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("$O$K215")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("$O$K215")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg8]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_reg12]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_regx 0x3f]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_reg0]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_regx 0x3e]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_reg13]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_breg31 36]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg11]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg12]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("outWidth")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("outWidth")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_breg31 64]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("outHeight")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("outHeight")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_breg31 68]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("mode")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("mode")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_breg31 72]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("scratchBufSize")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("scratchBufSize")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_reg20]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("retVal")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("retVal")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_reg10]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("scratch")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("scratch")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_breg31 76]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("input")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("input")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_breg31 80]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("min_opt")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("min_opt")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_breg31 84]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("max_opt")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("max_opt")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_breg31 88]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("mean_opt")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("mean_opt")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_breg31 92]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("var_opt")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("var_opt")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_breg31 96]
$C$DW$165	.dwtag  DW_TAG_variable, DW_AT_name("min_cn")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("min_cn")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_breg31 100]
$C$DW$166	.dwtag  DW_TAG_variable, DW_AT_name("max_cn")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("max_cn")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_breg31 104]
$C$DW$167	.dwtag  DW_TAG_variable, DW_AT_name("mean_cn")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("mean_cn")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_breg31 108]
$C$DW$168	.dwtag  DW_TAG_variable, DW_AT_name("var_cn")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("var_cn")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_breg31 112]
$C$DW$169	.dwtag  DW_TAG_variable, DW_AT_name("$O$U118")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("$O$U118")
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$169, DW_AT_location[DW_OP_regx 0x3a]
$C$DW$170	.dwtag  DW_TAG_variable, DW_AT_name("$O$U118")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("$O$U118")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_regx 0x3b]
$C$DW$171	.dwtag  DW_TAG_variable, DW_AT_name("$O$U117")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("$O$U117")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_regx 0x2a]
$C$DW$172	.dwtag  DW_TAG_variable, DW_AT_name("$O$U117")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("$O$U117")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_regx 0x2b]
$C$DW$173	.dwtag  DW_TAG_variable, DW_AT_name("$O$U147")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("$O$U147")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_breg31 116]
$C$DW$174	.dwtag  DW_TAG_variable, DW_AT_name("$O$U147")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("$O$U147")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg29]
$C$DW$175	.dwtag  DW_TAG_variable, DW_AT_name("$O$U138")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("$O$U138")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_breg31 120]
$C$DW$176	.dwtag  DW_TAG_variable, DW_AT_name("$O$U138")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("$O$U138")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_breg31 124]
$C$DW$177	.dwtag  DW_TAG_variable, DW_AT_name("$O$U129")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("$O$U129")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_breg31 128]
$C$DW$178	.dwtag  DW_TAG_variable, DW_AT_name("$O$U129")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("$O$U129")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_breg31 132]
$C$DW$179	.dwtag  DW_TAG_variable, DW_AT_name("$O$U123")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("$O$U123")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_regx 0x39]
$C$DW$180	.dwtag  DW_TAG_variable, DW_AT_name("$O$U123")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("$O$U123")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_regx 0x3a]
$C$DW$181	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_reg10]
$C$DW$182	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_reg10]
$C$DW$183	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$183, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$183, DW_AT_location[DW_OP_reg5]
$C$DW$184	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$184, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$184, DW_AT_location[DW_OP_reg7]
$C$DW$185	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_reg20]
$C$DW$186	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$186, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$186, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$186, DW_AT_location[DW_OP_reg15]
$C$DW$187	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$187, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$187, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$187, DW_AT_location[DW_OP_reg24]
$C$DW$188	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$188, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$188, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$188, DW_AT_location[DW_OP_reg22]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("blockStatistics_getTestParams")
	.dwattr $C$DW$189, DW_AT_TI_call

           CALLP   .S2     blockStatistics_getTestParams,B3
||         ADDAW   .D1X    SP,9,A4           ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | blockStatistics_getTestParams(&prm, &test_cases);                      
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {blockStatistics_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(2, "VLIB_blockStatistics");                          
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$52 = 64;
;**  	-----------------------    U$12 = prm;
;**  	-----------------------    K$215 = &desc[0];
;**  	-----------------------    U$11 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |51| 
           LDW     .D2T2   *+SP(36),B11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 51,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  54 | int32_t    status_nat_vs_int  = vlib_KERNEL_PASS; /* Test status : Natu
;     | ral c vs. Optimized */                                                 
;  55 | int32_t    status_nat_vs_ref  = vlib_KERNEL_PASS; /* Test status : Natu
;     | ral c vs. Static Reference */                                          
;----------------------------------------------------------------------
           ZERO    .L1     A14               ; |51| 
           ZERO    .L1     A13               ; |51| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 51,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |51| 
   [!A0]   BNOP    .S1     $C$L27,5          ; |51| 
           ; BRANCHCC OCCURS {$C$L27}        ; |51| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 58	-----------------------    outWidth = (*U$12).imageWidth/(*U$12).statBlockWidth;
;** 59	-----------------------    C$29 = (*U$12).imageHeight;
;** 59	-----------------------    outHeight = C$29/(*U$12).statBlockHeight;
;** 60	-----------------------    mode = (*U$12).mode;
;** 67	-----------------------    input = VLIB_memalign(8u, (unsigned)((*U$12).imagePitch*C$29));
;** 69	-----------------------    C$27 = outWidth*outHeight;
;** 69	-----------------------    C$28 = (unsigned)C$27+7u;
;** 69	-----------------------    min_opt = VLIB_memalign(8u, C$28);
;** 70	-----------------------    max_opt = VLIB_memalign(8u, C$28);
;** 71	-----------------------    C$26 = C$27*2;
;** 71	-----------------------    mean_opt = VLIB_memalign(8u, (unsigned)C$26+14u);
;** 72	-----------------------    C$25 = C$27*4;
;** 72	-----------------------    var_opt = VLIB_memalign(8u, (unsigned)C$25+28u);
;** 74	-----------------------    min_cn = memalign(8u, (unsigned)C$27);
;** 75	-----------------------    max_cn = memalign(8u, (unsigned)C$27);
;** 76	-----------------------    mean_cn = memalign(8u, (unsigned)C$26);
;** 77	-----------------------    var_cn = memalign(8u, (unsigned)C$25);
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("__c6xabi_divi")
	.dwattr $C$DW$191, DW_AT_TI_call

           CALL    .S1     __c6xabi_divi     ; |58| 
||         LDHU    .D2T1   *+B11(26),A4      ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 58,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  58 | uint16_t    outWidth           = prm[tpi].imageWidth  / prm[tpi].statBl
;     | ockWidth;                                                              
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(32),B4      ; |58| 
           ADDKPC  .S2     $C$RL2,B3,3       ; |58| 
$C$RL2:    ; CALL OCCURS {__c6xabi_divi} {0}  ; |58| 
$C$DW$L$VLIB_blockStatistics_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$5$B:
;          EXCLUSIVE CPU CYCLES: 80
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 59,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  59 | uint16_t    outHeight          = prm[tpi].imageHeight / prm[tpi].statBl
;     | ockHeight;                                                             
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(28),B6      ; |59| 
           LDHU    .D2T2   *+B11(34),B4      ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 58,column 21,is_stmt,isa 0
           MV      .L2X    A4,B10            ; |58| 
           NOP             2
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x04)
	.dwattr $C$DW$192, DW_AT_name("__c6xabi_divi")
	.dwattr $C$DW$192, DW_AT_TI_call

           MV      .L1X    B6,A4             ; |59| 
||         CALLP   .S2     __c6xabi_divi,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 59,column 21,is_stmt,isa 0
$C$RL3:    ; CALL OCCURS {__c6xabi_divi} {0}  ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 60,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  60 | uint8_t     mode               = prm[tpi].mode;                        
;  61 | int32_t     scratchBufSize;                                            
;  62 | uint32_t    retVal;                                                    
;  64 | uint8_t   *scratch;                                                    
;----------------------------------------------------------------------
           LDBU    .D2T2   *+B11(24),B5      ; |60| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 67,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | uint8_t   *input             = (uint8_t *) VLIB_memalign(8, prm[tpi].im
;     | agePitch * prm[tpi].imageHeight);                                      
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(30),B4      ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 59,column 21,is_stmt,isa 0
           MV      .L1     A4,A11            ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 67,column 20,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |67| 
           NOP             2
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$193, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MPYU    .M2     B6,B4,B4          ; |67| 
||         STW     .D2T2   B5,*+SP(72)       ; |67| 

$C$RL4:    ; CALL OCCURS {VLIB_memalign} {0}  ; |67| 
           MV      .L1X    B10,A3            ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 69,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | uint8_t    *min_opt           = (uint8_t *)  VLIB_memalign(8, (outWidth
;     |  * outHeight  + 7) * sizeof(uint8_t));                                 
;----------------------------------------------------------------------
           MPYU    .M1     A11,A3,A10        ; |69| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 67,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(80)       ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 69,column 21,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |69| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$194, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         ADD     .L2X    7,A10,B4          ; |69| 
||         ADD     .L1     7,A10,A12         ; |69| 

$C$RL5:    ; CALL OCCURS {VLIB_memalign} {0}  ; |69| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$195, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A12,B4            ; |70| 
||         STW     .D2T1   A4,*+SP(84)       ; |69| 
||         MVK     .L1     0x8,A4            ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 70,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | uint8_t    *max_opt           = (uint8_t *)  VLIB_memalign(8, (outWidth
;     |  * outHeight  + 7) * sizeof(uint8_t));                                 
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_memalign} {0}  ; |70| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 71,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  71 | uint16_t   *mean_opt          = (uint16_t *) VLIB_memalign(8, (outWidth
;     |  * outHeight  + 7) * sizeof(uint16_t));                                
;----------------------------------------------------------------------
           ADD     .L1     A10,A10,A15       ; |71| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 70,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(88)       ; |70| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x04)
	.dwattr $C$DW$196, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$196, DW_AT_TI_call

           MVK     .L1     0x8,A4            ; |71| 
||         CALLP   .S2     VLIB_memalign,B3
||         ADD     .L2X    14,A15,B4         ; |71| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 71,column 21,is_stmt,isa 0
$C$RL7:    ; CALL OCCURS {VLIB_memalign} {0}  ; |71| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 72,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  72 | uint32_t   *var_opt           = (uint32_t *) VLIB_memalign(8, (outWidth
;     |  * outHeight  + 7) * sizeof(uint32_t));                                
;----------------------------------------------------------------------
           SHL     .S1     A10,2,A12         ; |72| 
           ADD     .D1     A12,28,A3         ; |72| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 71,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(92)       ; |71| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x04)
	.dwattr $C$DW$197, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$197, DW_AT_TI_call

           MVK     .L1     0x8,A4            ; |72| 
||         CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A3,B4             ; |72| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 72,column 21,is_stmt,isa 0
$C$RL8:    ; CALL OCCURS {VLIB_memalign} {0}  ; |72| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("memalign")
	.dwattr $C$DW$198, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         MV      .L2X    A10,B4            ; |74| 
||         STW     .D2T1   A4,*+SP(96)       ; |72| 
||         MVK     .L1     0x8,A4            ; |74| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 74,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  74 | uint8_t    *min_cn            = (uint8_t *) memalign(8, outWidth * outH
;     | eight * sizeof(uint8_t));                                              
;----------------------------------------------------------------------
$C$RL9:    ; CALL OCCURS {memalign} {0}      ; |74| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("memalign")
	.dwattr $C$DW$199, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         MV      .L2X    A10,B4            ; |75| 
||         STW     .D2T1   A4,*+SP(100)      ; |74| 
||         MVK     .L1     0x8,A4            ; |75| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 75,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  75 | uint8_t    *max_cn            = (uint8_t *) memalign(8, outWidth * outH
;     | eight * sizeof(uint8_t));                                              
;----------------------------------------------------------------------
$C$RL10:   ; CALL OCCURS {memalign} {0}      ; |75| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("memalign")
	.dwattr $C$DW$200, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         MV      .L2X    A15,B4            ; |76| 
||         STW     .D2T1   A4,*+SP(104)      ; |75| 
||         MVK     .L1     0x8,A4            ; |76| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 76,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | uint16_t   *mean_cn           = (uint16_t *)memalign(8, outWidth * outH
;     | eight * sizeof(uint16_t));                                             
;----------------------------------------------------------------------
$C$RL11:   ; CALL OCCURS {memalign} {0}      ; |76| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("memalign")
	.dwattr $C$DW$201, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         MV      .L2X    A12,B4            ; |77| 
||         STW     .D2T1   A4,*+SP(108)      ; |76| 
||         MVK     .L1     0x8,A4            ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 77,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  77 | uint32_t   *var_cn            = (uint32_t *)memalign(8, outWidth * outH
;     | eight * sizeof(uint32_t));                                             
;----------------------------------------------------------------------
$C$RL12:   ; CALL OCCURS {memalign} {0}      ; |77| 
$C$DW$L$VLIB_blockStatistics_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$6$B:
;          EXCLUSIVE CPU CYCLES: 3

           EXTU    .S1     A11,16,16,A31     ; |59| 
||         MV      .L1X    B10,A3            ; |77| 

           STW     .D2T1   A31,*+SP(68)      ; |59| 
||         EXTU    .S1     A3,16,16,A3       ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 58,column 21,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(64)       ; |58| 
$C$DW$L$VLIB_blockStatistics_d$6$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 77,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  85 | if( mode == 0x0 ) {                                                    
;  86 |     scratchBufSize = 64;                                               
;  87 | } else {                                                               
;  88 |     scratchBufSize               = prm[tpi].imageWidth * prm[tpi].statB
;     | lockHeight + 64;                                                       
;----------------------------------------------------------------------
$C$DW$L$VLIB_blockStatistics_d$7$B:
;          EXCLUSIVE CPU CYCLES: 19
;** 88	-----------------------    mode ? (scratchBufSize = (int)_mpyu((*U$12).imageWidth, (*U$12).statBlockHeight)+K$52) : (scratchBufSize = K$52);
;** 90	-----------------------    scratch = VLIB_memalign(8u, (unsigned)scratchBufSize);
;** 93	-----------------------    v$1 = prm;
;** 93	-----------------------    if ( !((input != NULL)&(min_opt != NULL)&(max_opt != NULL)&(mean_opt != NULL)&(var_opt != NULL)&(scratch != NULL)&(min_cn != NULL)&(max_cn != NULL)&(mean_cn != NULL)&(var_cn != NULL)) ) goto g34;
           LDW     .D2T1   *+SP(72),A0       ; |77| 
           STW     .D2T1   A4,*+SP(112)      ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 90,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  90 | scratch           = (uint8_t *) VLIB_memalign(8, scratchBufSize);      
;----------------------------------------------------------------------
           MVK     .L1     0x8,A4            ; |90| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 88,column 13,is_stmt,isa 0
   [ A0]   LDHU    .D2T2   *+B11(34),B4      ; |88| 
   [ A0]   LDHU    .D2T2   *+B11(26),B5      ; |88| 
           NOP             4
   [ A0]   MPYU    .M2     B5,B4,B6          ; |88| 
           MVK     .S2     0x40,B4
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$202, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
|| [ A0]   ADDAD   .D2     B6,8,B4           ; |88| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 90,column 9,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {VLIB_memalign} {0}  ; |90| 
$C$DW$L$VLIB_blockStatistics_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$8$B:
;          EXCLUSIVE CPU CYCLES: 30

           LDW     .D2T1   *+SP(80),A2       ; |93| 
||         ZERO    .L1     A3                ; |93| 
||         ZERO    .L2     B4                ; |93| 
||         ZERO    .S2     B5                ; |93| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 93,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  93 | if( input && min_opt && max_opt && mean_opt && var_opt && scratch && mi
;     | n_cn && max_cn && mean_cn && var_cn ) {                                
;  94 |     uint32_t    i, j, fail;                                            
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(84),A0       ; |93| 
           LDW     .D2T1   *+SP(88),A1       ; |93| 

           STW     .D2T1   A4,*+SP(76)       ; |90| 
||         ZERO    .L1     A4                ; |93| 

           LDW     .D2T2   *+SP(96),B0       ; |93| 

   [ A2]   MVK     .L1     0x1,A3            ; |93| 
||         LDW     .D2T1   *+SP(92),A2       ; |93| 

   [ A0]   MVK     .L2     0x1,B4            ; |93| 

   [ A1]   MVK     .L1     0x1,A4            ; |93| 
||         LDW     .D2T1   *+SP(76),A1       ; |93| 

           AND     .L1X    B4,A3,A5          ; |93| 
||         ZERO    .S1     A3                ; |93| 
||         ZERO    .L2     B4                ; |93| 

           AND     .L1     A4,A5,A4          ; |93| 
|| [ B0]   MVK     .L2     0x1,B4            ; |93| 

   [ A2]   MVK     .L1     0x1,A3            ; |93| 
||         LDW     .D2T1   *+SP(100),A2      ; |93| 

           AND     .L1     A3,A4,A4          ; |93| 
||         ZERO    .S1     A3                ; |93| 

   [ A1]   MVK     .L1     0x1,A3            ; |93| 
||         LDW     .D2T1   *+SP(104),A1      ; |93| 
||         AND     .S1X    B4,A4,A4          ; |93| 

           ZERO    .L2     B4                ; |93| 
           AND     .L1     A3,A4,A3          ; |93| 

   [ A2]   MVK     .L2     0x1,B4            ; |93| 
||         LDW     .D2T1   *+SP(108),A2      ; |93| 

           ZERO    .L1     A3                ; |93| 
||         AND     .L2X    B4,A3,B6          ; |93| 

   [ A1]   MVK     .L2     0x1,B5            ; |93| 
||         LDW     .D2T1   *+SP(112),A1      ; |93| 

           ZERO    .L2     B4                ; |93| 
           AND     .L2     B5,B6,B5          ; |93| 
   [ A2]   MVK     .L2     0x1,B4            ; |93| 
           AND     .L2     B4,B5,B4          ; |93| 
   [ A1]   MVK     .L1     0x1,A3            ; |93| 

           AND     .L1X    A3,B4,A0          ; |93| 
||         LDW     .D2T2   *+SP(36),B4       ; |93| 

   [!A0]   B       .S2     $C$L25            ; |93| 
|| [ A0]   MVKL    .S1     testPatternString,A12
|| [ A0]   LDBU    .D2T1   *B11,A4           ; |97| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 97,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  97 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
;----------------------------------------------------------------------
   [ A0]   LDW     .D2T2   *+B11(4),B6       ; |97| 
   [ A0]   LDHU    .D2T2   *+B11(28),B8      ; |97| 
   [ A0]   LDHU    .D2T1   *+B11(26),A8      ; |97| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$203, DW_AT_TI_call

   [ A0]   CALL    .S1     VLIB_fillBuffer   ; |97| 
|| [!A0]   ADD     .L1X    B4,A14,A6         ; |203| 
|| [ A0]   LDHU    .D2T1   *+B11(30),A10     ; |97| 

   [ A0]   LDW     .D2T1   *+SP(80),A6       ; |97| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 93,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L25}        ; |93| 
$C$DW$L$VLIB_blockStatistics_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$9$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 97	-----------------------    VLIB_fillBuffer((*U$12).testPattern, 0xffu, (void *)input, (*U$12).staticIn, (*U$12).imageWidth, (*U$12).imageHeight, (*U$12).imagePitch, 1u, &testPatternString);
;** 137	-----------------------    act_kernel = 0;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 105	-----------------------    retVal = VLIB_blockStatistics(input, (*U$12).imagePitch, (*U$12).imageWidth, (*U$12).imageHeight, (unsigned char)(*U$12).statBlockWidth, (unsigned char)(*U$12).statBlockHeight, min_opt, max_opt, mean_opt, var_opt, scratch, mode);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    C$24 = (act_kernel<<3)+&cycles;  // [15]
;** 156	-----------------------    *C$24 = *C$24+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
;** 54	-----------------------    status_nat_vs_int = retVal != 0u;
;** 137	-----------------------    act_kernel = 1;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 125	-----------------------    VLIB_blockStatistics_cn(input, (*U$12).imagePitch, (*U$12).imageWidth, (*U$12).imageHeight, (*U$12).statBlockWidth, (*U$12).statBlockHeight, min_cn, max_cn, mean_cn, var_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    K$98 = &cycles[0];  // [15]
;** 156	-----------------------    C$23 = act_kernel;  // [15]
;** 156	-----------------------    *((C$23<<3)+K$98) = *((C$23<<3)+K$98)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 97,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  98 | (uint8_t)255,                                                          
;  99 | input, prm[tpi].staticIn,                                              
; 100 | prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].imagePitch,        
; 101 | sizeof(uint8_t), testPatternString);                                   
; 104 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 105 | retVal =  VLIB_blockStatistics(input,                                  
; 106 |                prm[tpi].imagePitch,                                    
; 107 |                prm[tpi].imageWidth,                                    
; 108 |                prm[tpi].imageHeight,                                   
; 109 |                prm[tpi].statBlockWidth,                                
; 110 |                prm[tpi].statBlockHeight,                               
; 111 |                min_opt,                                                
; 112 |                max_opt,                                                
; 113 |                mean_opt,                                               
; 114 |                var_opt,                                                
; 115 |                scratch,                                                
; 116 |                mode);                                                  
; 117 | VLIB_profile_stop();                                                   
; 119 | if( retVal == 0x0 ) {                                                  
; 120 | status_nat_vs_int = vlib_KERNEL_FAIL;                                  
; 124 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 125 | VLIB_blockStatistics_cn(input,                                         
; 126 |         prm[tpi].imagePitch,                                           
; 127 |         prm[tpi].imageWidth,                                           
; 128 |         prm[tpi].imageHeight,                                          
; 129 |         prm[tpi].statBlockWidth,                                       
; 130 |         prm[tpi].statBlockHeight,                                      
; 131 |         min_cn,                                                        
; 132 |         max_cn,                                                        
; 133 |         mean_cn,                                                       
; 134 |         var_cn);                                                       
; 135 | VLIB_profile_stop();                                                   
; 138 | for( i=0; i < (outHeight); i++ ) {                                     
; 139 | for( j=0; j < (outWidth); j++ ) {                                      
;----------------------------------------------------------------------
           MVK     .S2     0xff,B4           ; |97| 
           MVK     .L2     0x1,B10           ; |97| 
           MVKH    .S1     testPatternString,A12
           ADDKPC  .S2     $C$RL14,B3,0      ; |97| 
$C$RL14:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |97| 
$C$DW$L$VLIB_blockStatistics_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$10$B:
;          EXCLUSIVE CPU CYCLES: 130
           MVKL    .S1     act_kernel,A11

           MVKH    .S1     act_kernel,A11
||         ZERO    .L2     B4                ; |137| 

$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$204, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A11           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 140 | if((min_opt[i * outWidth + j] != min_cn[i * outWidth + j])) {          
; 141 |     status_nat_vs_int = vlib_KERNEL_FAIL;                              
; 142 |     printf("row:%d, col:%d, min_out:%u, min_EOut:%u \n", i, j, min_opt[
;     | i * outWidth + j], min_cn[i * outWidth + j]);                          
;----------------------------------------------------------------------
$C$RL15:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("getSP")
	.dwattr $C$DW$205, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 143 | break;                                                                 
; 145 | if((max_opt[i * outWidth + j] != max_cn[i * outWidth + j])) {          
;----------------------------------------------------------------------
$C$RL16:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("initStack")
	.dwattr $C$DW$206, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL17:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 146 | status_nat_vs_int = vlib_KERNEL_FAIL;                                  
; 147 | printf("row:%d, col:%d, max_out:%u, max_EOut:%u \n", i, j, max_opt[i *
;     | outWidth + j], max_cn[i * outWidth + j]);                              
; 148 | break;                                                                 
; 150 | if((mean_opt[i * outWidth + j] != mean_cn[i * outWidth + j])) {        
; 151 | status_nat_vs_int = vlib_KERNEL_FAIL;                                  
; 152 | printf("row:%d, col:%d, mean_out:%u, mean_EOut:%u \n", i, j, mean_opt[i
;     |  * outWidth + j], mean_cn[i * outWidth + j]);                          
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B16          ; |146| 
           MVC     .S2     TSCH,B17          ; |146| 
           LDW     .D2T2   *+SP(72),B4       ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 105,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(76),A3       ; |105| 
           LDW     .D2T1   *+SP(80),A4       ; |105| 
           LDW     .D2T2   *+SP(96),B12      ; |105| 
           LDW     .D2T1   *+SP(92),A12      ; |105| 
           LDW     .D2T2   *+SP(88),B10      ; |105| 
           LDHU    .D2T2   *+B11(28),B6      ; |105| 
           LDHU    .D2T1   *+B11(26),A6      ; |105| 
           LDW     .D2T1   *+SP(84),A10      ; |105| 
           STB     .D2T2   B4,*+SP(8)        ; |105| 
           STW     .D2T1   A3,*+SP(4)        ; |105| 

           MVK     .S2     34,B5             ; |105| 
||         LDHU    .D2T2   *+B11(30),B4      ; |105| 
||         MVKL    .S1     beg_count,A15

           LDBU    .D2T2   *+B5[B11],B8      ; |105| 
||         MVK     .S2     32,B5             ; |105| 
||         MVKH    .S1     beg_count,A15

$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("VLIB_blockStatistics")
	.dwattr $C$DW$207, DW_AT_TI_call

           CALLP   .S2     VLIB_blockStatistics,B3
||         LDBU    .D2T1   *+B5[B11],A8      ; |105| 
||         STDW    .D1T2   B17:B16,*A15      ; |146| 

$C$RL18:   ; CALL OCCURS {VLIB_blockStatistics} {0}  ; |105| 

           MV      .L1     A4,A10            ; |105| 
||         MVC     .S2     TSCL,B8           ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 153 | break;                                                                 
; 155 | if((var_opt[i * outWidth + j] != var_cn[i * outWidth + j])) {          
;----------------------------------------------------------------------
           MVC     .S2     TSCH,B9           ; |153| 
           MVKL    .S2     overhead,B5

           MVKH    .S2     overhead,B5
||         LDW     .D1T2   *A11,B4           ; |156| 

           LDDW    .D2T2   *B5,B7:B6         ; |156| 
||         LDDW    .D1T1   *A15,A7:A6        ; |156| 

           MVKL    .S2     cycles,B31
           MVKH    .S2     cycles,B31
           NOP             2

           ADDU    .L1X    B6,A6,A5:A4       ; |156| 
||         ADDAD   .D2     B31,B4,B6         ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 156 | status_nat_vs_int = vlib_KERNEL_FAIL;                                  
; 157 | printf("row:%d, col:%d, var_out:%u, var_EOut:%u \n", i, j, var_opt[i *
;     | outWidth + j], var_cn[i * outWidth + j]);                              
; 158 | break;                                                                 
;----------------------------------------------------------------------
           LDDW    .D2T2   *B6,B5:B4         ; |156| 
           ADD     .L1X    A5,B7,A3          ; |156| 
           ADD     .L1     A3,A7,A3          ; |156| 
           SUBU    .L1X    B8,A4,A5:A4       ; |156| 
           NOP             1

           SUB     .L2X    B9,A3,B4          ; |156| 
||         ADDU    .L1X    B4,A4,A5:A4       ; |156| 
||         EXT     .S1     A5,24,24,A3       ; |156| 

           ADD     .L1X    A5,B5,A5          ; |156| 
           ADD     .L1X    B4,A3,A3          ; |156| 
           ADD     .L1     A5,A3,A5          ; |156| 
           MVKL    .S1     end_count,A3
           MVKH    .S1     end_count,A3
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("setStackDepth")
	.dwattr $C$DW$208, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B9:B8,*A3         ; |153| 
||         STDW    .D2T1   A5:A4,*B6         ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 

           MV      .L1     A11,A3            ; |137| 
||         MVK     .L2     1,B4              ; |137| 

$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$209, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("getSP")
	.dwattr $C$DW$210, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("initStack")
	.dwattr $C$DW$211, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL22:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 54,column 20,is_stmt,isa 0
           CMPEQ   .L1     A10,0,A3          ; |54| 

           XOR     .L1     1,A3,A11          ; |54| 
||         MVC     .S2     TSCL,B16          ; |146| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B17          ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 125,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(80),A4       ; |125| 
           LDHU    .D2T2   *+B11(30),B4      ; |125| 
           LDHU    .D2T1   *+B11(26),A6      ; |125| 
           LDHU    .D2T2   *+B11(34),B8      ; |125| 
           LDHU    .D2T2   *+B11(28),B6      ; |125| 
           LDW     .D2T1   *+SP(100),A10     ; |125| 
           LDW     .D2T1   *+SP(108),A12     ; |125| 

           LDHU    .D2T1   *+B11(32),A8      ; |125| 
||         STDW    .D1T2   B17:B16,*A15      ; |146| 

           LDW     .D2T2   *+SP(104),B10     ; |125| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("VLIB_blockStatistics_cn")
	.dwattr $C$DW$212, DW_AT_TI_call

           CALLP   .S2     VLIB_blockStatistics_cn,B3
||         LDW     .D2T2   *+SP(112),B12     ; |125| 

$C$RL23:   ; CALL OCCURS {VLIB_blockStatistics_cn} {0}  ; |125| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKL    .S1     overhead,A4
           MVKH    .S1     act_kernel,A3
           MVKH    .S1     overhead,A4
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |156| 
           MV      .L2X    A4,B4             ; |156| 

           LDDW    .D2T2   *B4,B9:B8         ; |156| 
||         LDDW    .D1T1   *A15,A5:A4        ; |156| 

           MVKL    .S1     cycles,A8
           MVKH    .S1     cycles,A8
           LDDW    .D1T1   *+A8[A3],A7:A6    ; |156| 
           NOP             1
           ADDU    .L2X    B8,A4,B5:B4       ; |156| 
           ADD     .L2     B5,B9,B8          ; |156| 

           ADD     .S2X    B8,A5,B8          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           EXT     .S2     B5,24,24,B9       ; |156| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |156| 
||         SUB     .D2     B7,B8,B8          ; |156| 
||         MVKL    .S1     end_count,A4

           ADD     .L2     B8,B9,B8          ; |156| 
||         ADD     .S2X    B5,A7,B5          ; |156| 
||         MVKH    .S1     end_count,A4

           ADD     .L2     B5,B8,B5          ; |156| 
||         STDW    .D1T2   B7:B6,*A4         ; |153| 

$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("setStackDepth")
	.dwattr $C$DW$213, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B5:B4,*+A8[A3]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL24:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_blockStatistics_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$11$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 138	-----------------------    if ( !outHeight ) goto g18;
           LDW     .D2T1   *+SP(68),A0
           NOP             4

   [!A0]   BNOP    .S1     $C$L12,5          ; |138| 
|| [ A0]   MV      .L1     A0,A12            ; |138| 
|| [ A0]   ZERO    .D1     A10               ; |138| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 138,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |138| 
$C$DW$L$VLIB_blockStatistics_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$12$B:
;** 139	-----------------------    L$1 = (unsigned)outHeight;
;** 138	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_blockStatistics_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$13$B:
;          EXCLUSIVE CPU CYCLES: 1
           LDW     .D2T1   *+SP(64),A0
$C$DW$L$VLIB_blockStatistics_d$13$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L2
;** --------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 138,column 18,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$14$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g6:
;** 139	-----------------------    if ( !outWidth ) goto g17;
           NOP             4

   [!A0]   B       .S1     $C$L9             ; |139| 
||         MV      .L1     A0,A3
|| [ A0]   LDW     .D2T2   *+SP(100),B23
|| [ A0]   MVK     .D1     0xffffffff,A5     ; |139| 

   [ A0]   MPY32   .M1     A10,A3,A21
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 140,column 21,is_stmt,isa 0
   [ A0]   ADD     .L1     1,A5,A4           ; |140| 
   [ A0]   LDW     .D2T2   *+SP(84),B25
   [ A0]   LDW     .D2T2   *+SP(104),B22
   [ A0]   LDW     .D2T2   *+SP(88),B24
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 139,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |139| 
$C$DW$L$VLIB_blockStatistics_d$14$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 140,column 21,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$15$B:
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    U$117 = outWidth*i;
;**  	-----------------------    U$118 = U$117;
;** 140	-----------------------    L$2 = (unsigned)outWidth;
;** 139	-----------------------    j = 0xffffffffu;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g8:
;** 140	-----------------------    C$18 = j+1u;
;** 140	-----------------------    C$22 = (int)C$18+U$118;
;** 140	-----------------------    U$123 = min_cn[C$22];
;** 140	-----------------------    U$121 = min_opt[C$22];
;** 140	-----------------------    f$6 = (U$121 != U$123)-1;
;** 145	-----------------------    U$129 = (unsigned char)(A$30 = max_cn[C$22] , f$6 ? A$30 : U$129);
;** 145	-----------------------    U$127 = (unsigned char)(A$31 = max_opt[C$22] , f$6 ? A$31 : U$127);
;** 145	-----------------------    f$5 = (U$127 != U$129)-1;
;** 150	-----------------------    C$20 = (int)U$117+C$18;
;** 150	-----------------------    C$21 = f$5&f$6;
;** 150	-----------------------    U$138 = (unsigned short)(A$32 = mean_cn[C$20] , C$21 ? A$32 : U$138);
;** 150	-----------------------    U$136 = (unsigned short)(A$33 = mean_opt[C$20] , C$21 ? A$33 : U$136);
;** 150	-----------------------    f$4 = (U$136 != U$138)-1;
;** 155	-----------------------    C$19 = f$4&f$5&f$6;
;** 155	-----------------------    U$147 = (A$34 = var_cn[C$20] , C$19 ? A$34 : U$147);
;** 155	-----------------------    U$145 = (A$35 = var_opt[C$20] , C$19 ? A$35 : U$145);
;** 155	-----------------------    f$3 = (U$145 != U$147)-1;
;** 139	-----------------------    j = C$18;
;** 139	-----------------------    L$2 = L$2-1;
;** 139	-----------------------    if ( L$2&f$3&f$4&f$5&f$6 ) goto g8;
;**  	-----------------------    if ( !f$6 ) goto g16;

           MV      .L2X    A21,B21
||         MVK     .L1     0x1,A1
||         LDW     .D2T2   *+SP(128),B5

           ADD     .L2X    B21,A4,B4         ; |140| (P) <0,2> 
||         LDW     .D2T1   *+SP(108),A23

           LDBU    .D2T2   *+B4[B23],B20     ; |140| (P) <0,3>  ^ 
||         MV      .L2X    A0,B26            ; |139| 
||         MV      .L1     A1,A0

           LDBU    .D2T2   *+B4[B25],B27     ; |140| (P) <0,4>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 145,column 21,is_stmt,isa 0
   [ A1]   LDBU    .D2T2   *+B4[B24],B31     ; |145| (P) <0,5> 
   [ A1]   LDBU    .D2T2   *+B4[B22],B2      ; |145| (P) <0,6> 
           LDW     .D2T2   *+SP(48),B7
           LDW     .D2T1   *+SP(92),A25
           LDW     .D2T2   *+SP(44),B8
           LDW     .D2T2   *+SP(120),B6
           LDW     .D2T2   *+SP(40),B9
           LDW     .D2T2   *+SP(116),B16
           LDW     .D2T1   *+SP(112),A22
           LDW     .D2T1   *+SP(96),A24
$C$DW$L$VLIB_blockStatistics_d$15$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c
;*      Loop source line                 : 139
;*      Loop opening brace source line   : 139
;*      Loop closing brace source line   : 160
;*      Known Minimum Trip Count         : 1                    
;*      Known Maximum Trip Count         : 65535                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 26
;*      Unpartitioned Resource Bound     : 12
;*      Partitioned Resource Bound(*)    : 16
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     0        4     
;*      .S units                     1        8     
;*      .D units                     4        4     
;*      .M units                     0        0     
;*      .X cross paths               9        2     
;*      .T address paths             1        7     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)         16       30     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        6     
;*      Bound(.L .S .D .LS .LSD)     7       16*    
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 26 Did not find schedule
;*         ii = 27 Did not find schedule
;*         ii = 28 Did not find schedule
;*         ii = 29 Did not find schedule
;*         ii = 30 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |**  ******      ***********     |  *  *****      *  *************|
;*       1: |**  ******      ***********     |  * ******      *  *************|
;*       2: |** *******      ***********     |* *  *****      *  *************|
;*       3: |** *******      ***********     |* * ******      *  *************|
;*       4: |** *******      ***********     |* * ******      *  *************|
;*       5: |** *******      ***********     |* * ******      ** *************|
;*       6: |**  ******      ***********     |* * ******      ****************|
;*       7: |**  ******      ***********     |* ********      *  *************|
;*       8: |**  ******      ***********     |**********      *  *************|
;*       9: |**  ******      ***********     |**********      ** *************|
;*      10: |**  ******      ***********     |* ********      *  *************|
;*      11: |**  ******      ***********     |* ********      ** *************|
;*      12: |**  ******      ***********     |* ********      ****************|
;*      13: |**  ******      ***********     |* ********      * **************|
;*      14: |**  ******      ***********     |* ********      ****************|
;*      15: |**  ******      ***********     |* ********      * **************|
;*      16: |**  ******      ***********     |**********       ***************|
;*      17: |**  ******      ***********     | ********       ****************|
;*      18: |** *******      ***********     |  ********      ****************|
;*      19: |**  ******      ***********     |* ********      * **************|
;*      20: |**  ******      ***********     |* ********      ****************|
;*      21: | * * *****      ***********     |  ********      ** *************|
;*      22: | *  ******      ***********     |  * ******      ** *************|
;*      23: | *  ******      ***********     |* *  *****      *  *************|
;*      24: | *  ******      ***********     |  * ******      *  *************|
;*      25: | *  ******      ***********     |  * ******      *  *************|
;*      26: | *  ******      ***********     |  * ******      *  *************|
;*      27: | *  ******      ***********     |  * ******      *  *************|
;*      28: | *  ******      ***********     |  *  *****      *  *************|
;*      29: | *  ******      ***********     |  *  *****      *  *************|
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop is interruptible
;*      Collapsed epilog stages       : 1
;*      Prolog not removed
;*      Collapsed prolog stages       : 0
;*
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 2
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 9 + trip_cnt * 30        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A1
;*                  MV              A3,B16
;*                  MV              B17,B9
;*                  MV              B17,B8
;*                  MV              B17,B7
;*                  MV              B8,B6
;*                  MV              B7,B5
;*                  MV              A1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C288:
;*   0              ADD     .S1     1,A3,A4           ; |140| 
;*   1              NOP             1
;*   2              ADD     .L2X    B21,A4,B4         ; |140| 
;*   3      [ A1]   LDBU    .D2T2   *+B4[B23],B20     ; |140|  ^ 
;*   4      [ A1]   LDBU    .D2T2   *+B4[B25],B27     ; |140|  ^ 
;*   5      [ A1]   LDBU    .D2T2   *+B4[B24],B31     ; |145| 
;*   6      [ A1]   LDBU    .D2T2   *+B4[B22],B2      ; |145| 
;*   7              NOP             2
;*   9              CMPEQ   .L2     B27,B20,B4        ; |140|  ^ 
;*  10              EXT     .S2     B4,31,31,B0       ; |140|  ^ 
;*     ||           ADD     .L1     A4,A21,A3         ; |150| 
;*  11      [ B0]   MV      .D2     B2,B4             ; |145|  ^ 
;*     ||   [!B0]   MV      .S2     B5,B4             ; |145|  ^ 
;*     ||   [ B0]   MV      .L2     B31,B5            ; |145|  ^ 
;*     ||   [ A1]   LDHU    .D1T2   *+A23[A3],B30     ; |150| 
;*  12              MV      .L2     B0,B4             ; |140| Split a long life(pre-sched)
;*     ||           EXTU    .S2     B4,24,24,B7       ; |145|  ^ 
;*     ||   [!B0]   MV      .D2     B7,B5             ; |145|  ^ 
;*     ||   [ A1]   LDHU    .D1T2   *+A25[A3],B29     ; |150| 
;*     ||   [ A1]   MV      .L1X    B0,A17            ; |139| 
;*  13              MV      .L2     B7,B5             ; |145| Split a long life(pre-sched)
;*     ||           EXTU    .S2     B5,24,24,B17      ; |145|  ^ 
;*     ||   [ A1]   LDW     .D1T2   *+A24[A3],B28     ; |155| 
;*  14              MV      .S2     B17,B7            ; |145| Split a long life(pre-sched)
;*     ||           CMPEQ   .L2     B17,B7,B18        ; |145|  ^ 
;*     ||   [ A1]   LDW     .D1T1   *+A22[A3],A26     ; |155| 
;*     ||   [ A1]   MV      .L1X    B7,A6             ; |139| 
;*  15              EXT     .S2     B18,31,31,B3      ; |145|  ^ 
;*     ||   [ A1]   MV      .L1X    B17,A9            ; |139| 
;*  16              AND     .L2     B0,B3,B1          ; |150|  ^ 
;*  17      [ B1]   MV      .D2     B30,B17           ; |150|  ^ 
;*     ||   [!B1]   MV      .S2     B6,B17            ; |150|  ^ 
;*     ||   [ B1]   MV      .L2     B29,B6            ; |150|  ^ 
;*     ||   [ A1]   MV      .L1X    B3,A18            ; |139| 
;*  18              EXTU    .S2     B17,16,16,B8      ; |150|  ^ 
;*     ||   [!B1]   MV      .L2     B8,B6             ; |150|  ^ 
;*  19              MV      .L2     B8,B6             ; |150| Split a long life(pre-sched)
;*     ||           EXTU    .S2     B6,16,16,B17      ; |150|  ^ 
;*  20              MV      .S2     B17,B8            ; |150| Split a long life(pre-sched)
;*     ||           CMPEQ   .L2     B17,B8,B18        ; |150|  ^ 
;*     ||   [ A1]   MV      .L1X    B8,A7             ; |139| 
;*  21              EXT     .S2     B18,31,31,B18     ; |150|  ^ 
;*     ||   [ A1]   MV      .L1X    B17,A16           ; |139| 
;*  22              AND     .L2     B3,B18,B17        ; |155|  ^ 
;*  23              AND     .L2     B0,B17,B0         ; |155|  ^ 
;*     ||   [ A0]   MV      .L1X    B18,A19           ; |139| 
;*  24      [ B0]   MV      .D2X    A26,B1            ; |155|  ^ 
;*     ||   [!B0]   MV      .S2     B16,B1            ; |155|  ^ 
;*     ||   [ B0]   MV      .L2     B28,B17           ; |155|  ^ 
;*  25      [!B0]   MV      .S2     B9,B17            ; |155|  ^ 
;*     ||           MV      .L2     B1,B16            ; |155| Define a twin register
;*  26              MV      .L1X    B1,A3             ; |155| 
;*     ||           CMPEQ   .L2     B17,B1,B9         ; |155|  ^ 
;*     ||           SUB     .S2     B26,1,B26         ; |139| 
;*  27              MV      .L2     B17,B9            ; |155| Split a long life(pre-sched)
;*     ||           EXT     .S2     B9,31,31,B0       ; |155|  ^ 
;*     ||   [ A0]   MV      .L1     A3,A8             ; |139| 
;*     ||   [ A0]   MV      .D2     B17,B19           ; |139| 
;*  28              AND     .L2     B0,B26,B17        ; |139|  ^ 
;*  29              MV      .L1     A4,A3             ; |139| 
;*     ||           AND     .L2     B18,B17,B17       ; |139|  ^ 
;*     ||   [ A0]   MV      .S1X    B0,A20            ; |139| 
;*  30              AND     .L2     B3,B17,B17        ; |139|  ^ 
;*     ||   [ A1]   MV      .L1     A3,A5             ; |139| 
;*  31              AND     .L2     B4,B17,B0         ; |139|  ^ 
;*  32      [!B0]   ZERO    .L1     A1                ; |139|  ^ 
;*  33      [ A1]   B       .S1     $C$C288           ; |139| 
;*  34              NOP             4
;*  38              MV      .L1     A1,A0             ; |139| Split a long life(pre-sched)
;*  39              ; BRANCHCC OCCURS {$C$C288}       ; |139| 
;*
;*       RESTORE CODE
;*
;*                  MV              A5,A3
;*                  MV              A6,B7
;*                  MV              A7,B8
;*                  MV              A8,A3
;*                  MV              A9,B17
;*                  MV              A16,B17
;*                  MV              B19,B17
;*----------------------------------------------------------------------------*
$C$L3:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L4:    ; PIPED LOOP KERNEL
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 139,column 43,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$17$B:
;          EXCLUSIVE CPU CYCLES: 30
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 140,column 21,is_stmt,isa 0
           CMPEQ   .L2     B27,B20,B4        ; |140| <0,9>  ^ 

           ADD     .L1     A4,A21,A3         ; |150| <0,10> 
||         EXT     .S2     B4,31,31,B0       ; |140| <0,10>  ^ 

   [ A1]   LDHU    .D1T2   *+A23[A3],B30     ; |150| <0,11> 
|| [ B0]   MV      .L2     B31,B5            ; |145| <0,11>  ^ 
|| [!B0]   MV      .S2     B5,B4             ; |145| <0,11>  ^ 
|| [ B0]   MV      .D2     B2,B4             ; |145| <0,11>  ^ 

   [ A1]   MV      .L1X    B0,A17            ; |139| <0,12> 
||         MV      .L2     B0,B4             ; |140| <0,12> Split a long life(pre-sched)
|| [ A1]   LDHU    .D1T2   *+A25[A3],B29     ; |150| <0,12> 
||         EXTU    .S2     B4,24,24,B7       ; |145| <0,12>  ^ 
|| [!B0]   MV      .D2     B7,B5             ; |145| <0,12>  ^ 

           MV      .L2     B7,B5             ; |145| <0,13> Split a long life(pre-sched)
|| [ A1]   LDW     .D1T2   *+A24[A3],B28     ; |155| <0,13> 
||         EXTU    .S2     B5,24,24,B17      ; |145| <0,13>  ^ 

           MV      .S2     B17,B7            ; |145| <0,14> Split a long life(pre-sched)
|| [ A1]   MV      .L1X    B7,A6             ; |139| <0,14> 
|| [ A1]   LDW     .D1T1   *+A22[A3],A26     ; |155| <0,14> 
||         CMPEQ   .L2     B17,B7,B18        ; |145| <0,14>  ^ 

   [ A1]   MV      .L1X    B17,A9            ; |139| <0,15> 
||         EXT     .S2     B18,31,31,B3      ; |145| <0,15>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 150,column 21,is_stmt,isa 0
           AND     .L2     B0,B3,B1          ; |150| <0,16>  ^ 

   [ A1]   MV      .L1X    B3,A18            ; |139| <0,17> 
|| [ B1]   MV      .L2     B29,B6            ; |150| <0,17>  ^ 
|| [!B1]   MV      .S2     B6,B17            ; |150| <0,17>  ^ 
|| [ B1]   MV      .D2     B30,B17           ; |150| <0,17>  ^ 

           EXTU    .S2     B17,16,16,B8      ; |150| <0,18>  ^ 
|| [!B1]   MV      .L2     B8,B6             ; |150| <0,18>  ^ 

           MV      .L2     B8,B6             ; |150| <0,19> Split a long life(pre-sched)
||         EXTU    .S2     B6,16,16,B17      ; |150| <0,19>  ^ 

           MV      .S2     B17,B8            ; |150| <0,20> Split a long life(pre-sched)
|| [ A1]   MV      .L1X    B8,A7             ; |139| <0,20> 
||         CMPEQ   .L2     B17,B8,B18        ; |150| <0,20>  ^ 

   [ A1]   MV      .L1X    B17,A16           ; |139| <0,21> 
||         EXT     .S2     B18,31,31,B18     ; |150| <0,21>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 155,column 21,is_stmt,isa 0
           AND     .L2     B3,B18,B17        ; |155| <0,22>  ^ 

   [ A0]   MV      .L1X    B18,A19           ; |139| <0,23> 
||         AND     .L2     B0,B17,B0         ; |155| <0,23>  ^ 

   [ B0]   MV      .L2     B28,B17           ; |155| <0,24>  ^ 
|| [!B0]   MV      .S2     B16,B1            ; |155| <0,24>  ^ 
|| [ B0]   MV      .D2X    A26,B1            ; |155| <0,24>  ^ 

           MV      .L2     B1,B16            ; |155| <0,25> Define a twin register
|| [!B0]   MV      .S2     B9,B17            ; |155| <0,25>  ^ 

           SUB     .S2     B26,1,B26         ; |139| <0,26> 
||         MV      .L1X    B1,A3             ; |155| <0,26> 
||         CMPEQ   .L2     B17,B1,B9         ; |155| <0,26>  ^ 

           MV      .L2     B17,B9            ; |155| <0,27> Split a long life(pre-sched)
|| [ A0]   MV      .L1     A3,A8             ; |139| <0,27> 
|| [ A0]   MV      .D2     B17,B19           ; |139| <0,27> 
||         EXT     .S2     B9,31,31,B0       ; |155| <0,27>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 139,column 27,is_stmt,isa 0
           AND     .L2     B0,B26,B17        ; |139| <0,28>  ^ 

           MV      .L1     A4,A3             ; |139| <0,29> 
|| [ A0]   MV      .S1X    B0,A20            ; |139| <0,29> 
||         AND     .L2     B18,B17,B17       ; |139| <0,29>  ^ 

   [ A1]   MV      .L1     A3,A5             ; |139| <0,30> 
||         AND     .L2     B3,B17,B17        ; |139| <0,30>  ^ 
||         ADD     .S1     1,A3,A4           ; |140| <1,0> 

           AND     .L2     B4,B17,B0         ; |139| <0,31>  ^ 

   [!B0]   ZERO    .L1     A1                ; |139| <0,32>  ^ 
||         ADD     .L2X    B21,A4,B4         ; |140| <1,2> 

   [ A1]   B       .S1     $C$L4             ; |139| <0,33> 
|| [ A1]   LDBU    .D2T2   *+B4[B23],B20     ; |140| <1,3>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 140,column 21,is_stmt,isa 0
   [ A1]   LDBU    .D2T2   *+B4[B25],B27     ; |140| <1,4>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 145,column 21,is_stmt,isa 0
   [ A1]   LDBU    .D2T2   *+B4[B24],B31     ; |145| <1,5> 
   [ A1]   LDBU    .D2T2   *+B4[B22],B2      ; |145| <1,6> 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 139,column 27,is_stmt,isa 0
           MV      .L1     A1,A0             ; |139| <0,38> Split a long life(pre-sched)
$C$DW$L$VLIB_blockStatistics_d$17$E:
;** --------------------------------------------------------------------------*
$C$L5:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$19$B:
;          EXCLUSIVE CPU CYCLES: 14

           MV      .L1     A17,A0
||         MV      .S1     A19,A1
||         MV      .L2X    A18,B0
||         STW     .D2T1   A6,*+SP(128)

   [!A0]   MVK     .L2     0x1,B0            ; nullify predicate
||         STW     .D2T1   A7,*+SP(120)
|| [!A0]   MVKL    .S2     $C$SL5+0,B4

           STW     .D2T1   A8,*+SP(116)
|| [!A0]   MVKH    .S2     $C$SL5+0,B4

           STW     .D2T1   A22,*+SP(112)
           STW     .D2T1   A23,*+SP(108)
           STW     .D2T2   B22,*+SP(104)
           STW     .D2T2   B23,*+SP(100)
           STW     .D2T1   A9,*+SP(48)

           STW     .D2T2   B24,*+SP(88)
|| [!A0]   B       .S1     $C$L8

           STW     .D2T2   B25,*+SP(84)
|| [!B0]   B       .S1     $C$L7

           STW     .D2T1   A25,*+SP(92)
           STW     .D2T1   A24,*+SP(96)
           STW     .D2T2   B19,*+SP(40)
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x08)
	.dwattr $C$DW$214, DW_AT_name("printf")
	.dwattr $C$DW$214, DW_AT_TI_call

           STW     .D2T1   A16,*+SP(44)
||         MV      .L2X    A20,B1
|| [!A0]   CALL    .S1     printf            ; |142| 

           ; BRANCHCC OCCURS {$C$L8}  
$C$DW$L$VLIB_blockStatistics_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$20$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    if ( !f$5 ) goto g15;
           NOP             1
           ; BRANCHCC OCCURS {$C$L7}  
$C$DW$L$VLIB_blockStatistics_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$21$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    if ( !f$4 ) goto g14;

   [!A1]   B       .S1     $C$L6
|| [!A1]   ZERO    .L2     B1                ; nullify predicate

   [ B1]   BNOP    .S1     $C$L10,3
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("printf")
	.dwattr $C$DW$215, DW_AT_TI_call

   [!A1]   CALL    .S1     printf            ; |152| 
|| [!A1]   MVKL    .S2     $C$SL3+0,B4
|| [!A1]   MV      .L1     A16,A3            ; |152| 

           ; BRANCHCC OCCURS {$C$L6}  
$C$DW$L$VLIB_blockStatistics_d$21$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$22$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    if ( f$3 ) goto g17;

   [ B1]   SUB     .L1     A12,1,A0          ; |138| 
|| [ B1]   SUB     .S1     A12,1,A12         ; |138| 
|| [ B1]   ADD     .D1     1,A10,A10         ; |138| 

           ; BRANCHCC OCCURS {$C$L10}  
$C$DW$L$VLIB_blockStatistics_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$23$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 157	-----------------------    printf((const char *)"row:%d, col:%d, var_out:%u, var_EOut:%u \n", i, j, U$145, U$147);
;** 156	-----------------------    status_nat_vs_int = 0;
;** 158	-----------------------    goto g17;
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("printf")
	.dwattr $C$DW$216, DW_AT_TI_call

           CALL    .S1     printf            ; |157| 
||         MV      .L2     B19,B4            ; |157| 
||         MVKL    .S2     $C$SL2+0,B5

           STW     .D2T2   B4,*+SP(16)       ; |157| 
||         MV      .L2X    A8,B4             ; |157| 
||         MVKH    .S2     $C$SL2+0,B5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 157,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(20)       ; |157| 
           STW     .D2T2   B5,*+SP(4)        ; |157| 
           STW     .D2T1   A10,*+SP(8)       ; |157| 

           ADDKPC  .S2     $C$RL25,B3,0      ; |157| 
||         STW     .D2T1   A5,*+SP(12)       ; |157| 

$C$RL25:   ; CALL OCCURS {printf} {0}        ; |157| 
$C$DW$L$VLIB_blockStatistics_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$24$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S2     $C$L10,4          ; |158| 
||         ZERO    .L1     A11               ; |156| 
||         ADD     .S1     1,A10,A10         ; |138| 
||         SUB     .D1     A12,1,A0          ; |138| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 138,column 23,is_stmt,isa 0
           SUB     .L1     A12,1,A12         ; |138| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 158,column 25,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L10}          ; |158| 
$C$DW$L$VLIB_blockStatistics_d$24$E:
;** --------------------------------------------------------------------------*
$C$L6:    
$C$DW$L$VLIB_blockStatistics_d$25$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g14:
;** 152	-----------------------    printf((const char *)"row:%d, col:%d, mean_out:%u, mean_EOut:%u \n", i, j, (int)U$136, (int)U$138);
;** 151	-----------------------    status_nat_vs_int = 0;
;** 153	-----------------------    goto g17;

           STW     .D2T1   A3,*+SP(16)       ; |152| 
||         MV      .L1     A7,A3             ; |152| 
||         MVKH    .S2     $C$SL3+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 152,column 25,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(20)       ; |152| 
           STW     .D2T2   B4,*+SP(4)        ; |152| 
           STW     .D2T1   A5,*+SP(12)       ; |152| 

           STW     .D2T1   A10,*+SP(8)       ; |152| 
||         ADDKPC  .S2     $C$RL26,B3,0      ; |152| 

$C$RL26:   ; CALL OCCURS {printf} {0}        ; |152| 
$C$DW$L$VLIB_blockStatistics_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$26$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S2     $C$L10,4          ; |153| 
||         ADD     .L1     1,A10,A10         ; |138| 
||         ZERO    .S1     A11               ; |151| 
||         SUB     .D1     A12,1,A0          ; |138| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 138,column 23,is_stmt,isa 0
           SUB     .L1     A12,1,A12         ; |138| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 153,column 25,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L10}          ; |153| 
$C$DW$L$VLIB_blockStatistics_d$26$E:
;** --------------------------------------------------------------------------*
$C$L7:    
$C$DW$L$VLIB_blockStatistics_d$27$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g15:
;** 147	-----------------------    printf((const char *)"row:%d, col:%d, max_out:%u, max_EOut:%u \n", i, j, (int)U$127, (int)U$129);
;** 146	-----------------------    status_nat_vs_int = 0;
;** 148	-----------------------    goto g17;
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("printf")
	.dwattr $C$DW$217, DW_AT_TI_call

           CALL    .S1     printf            ; |147| 
||         MVKL    .S2     $C$SL4+0,B4
||         MV      .L1     A9,A3             ; |147| 

           MVKH    .S2     $C$SL4+0,B4
||         STW     .D2T1   A3,*+SP(16)       ; |147| 
||         MV      .L1     A6,A3             ; |147| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 147,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |147| 
           STW     .D2T1   A3,*+SP(20)       ; |147| 
           STW     .D2T1   A10,*+SP(8)       ; |147| 

           ADDKPC  .S2     $C$RL27,B3,0      ; |147| 
||         STW     .D2T1   A5,*+SP(12)       ; |147| 

$C$RL27:   ; CALL OCCURS {printf} {0}        ; |147| 
$C$DW$L$VLIB_blockStatistics_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$28$B:
;          EXCLUSIVE CPU CYCLES: 6

           B       .S2     $C$L11            ; |148| 
||         SUB     .L1     A12,1,A0          ; |138| 
||         ZERO    .S1     A11               ; |146| 
||         ADD     .D1     1,A10,A10         ; |138| 

   [ A0]   BNOP    .S1     $C$L2,4           ; |138| 
||         SUB     .L1     A12,1,A12         ; |138| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 148,column 25,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L11}          ; |148| 
$C$DW$L$VLIB_blockStatistics_d$28$E:
;** --------------------------------------------------------------------------*
$C$L8:    
$C$DW$L$VLIB_blockStatistics_d$29$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g16:
;** 142	-----------------------    printf((const char *)"row:%d, col:%d, min_out:%u, min_EOut:%u \n", i, j, (int)U$121, (int)U$123);
;** 141	-----------------------    status_nat_vs_int = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 142,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |142| 
           STW     .D2T2   B27,*+SP(16)      ; |142| 
           STW     .D2T2   B20,*+SP(20)      ; |142| 
           STW     .D2T1   A5,*+SP(12)       ; |142| 

           STW     .D2T1   A10,*+SP(8)       ; |142| 
||         ADDKPC  .S2     $C$RL28,B3,0      ; |142| 

$C$RL28:   ; CALL OCCURS {printf} {0}        ; |142| 
$C$DW$L$VLIB_blockStatistics_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$30$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 141,column 25,is_stmt,isa 0
           ZERO    .L1     A11               ; |141| 
$C$DW$L$VLIB_blockStatistics_d$30$E:
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_blockStatistics_d$31$B:
;          EXCLUSIVE CPU CYCLES: 1

           SUB     .L1     A12,1,A12         ; |138| 
||         ADD     .S1     1,A10,A10         ; |138| 
||         SUB     .D1     A12,1,A0          ; |138| 

$C$DW$L$VLIB_blockStatistics_d$31$E:
;** --------------------------------------------------------------------------*
$C$L10:    
$C$DW$L$VLIB_blockStatistics_d$32$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 138,column 23,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L2,4           ; |138| 
$C$DW$L$VLIB_blockStatistics_d$32$E:
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 139,column 27,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$33$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g17:
;** 138	-----------------------    ++i;
;** 138	-----------------------    if ( L$1 = L$1-1 ) goto g6;
           LDW     .D2T1   *+SP(64),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 138,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L2}         ; |138| 
$C$DW$L$VLIB_blockStatistics_d$33$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_blockStatistics_d$34$B:
;          EXCLUSIVE CPU CYCLES: 17
;**	-----------------------g18:
;** 164	-----------------------    v$1 = prm;
;** 55	-----------------------    status_nat_vs_ref = 1;
;** 97	-----------------------    K$83 = &testPatternString[0];
;** 164	-----------------------    if ( !(((*U$12).staticOutMin != NULL)&((*U$12).staticOutMax != NULL)&((*U$12).staticOutMean != NULL)&((*U$12).staticOutVar != NULL)) ) goto g33;

           LDW     .D2T2   *+B11(12),B2      ; |164| 
||         ZERO    .L1     A3                ; |164| 
||         ZERO    .S1     A4                ; |164| 
||         ZERO    .L2     B5                ; |164| 
||         ZERO    .S2     B4                ; |164| 
||         MVK     .D1     0x1,A12           ; |55| 

           LDW     .D2T1   *+B11(8),A0       ; |164| 
||         MVKL    .S2     testPatternString,B12

           LDW     .D2T2   *+B11(16),B1      ; |164| 
||         MVKH    .S2     testPatternString,B12

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 164,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 164 | if((prm[tpi].staticOutMin != NULL) && (prm[tpi].staticOutMax != NULL) &
;     | & (prm[tpi].staticOutMean != NULL) && (prm[tpi].staticOutVar != NULL)) 
;     | {                                                                      
; 165 |     for( i=0; i < (outHeight); i++ ) {                                 
; 166 |         for( j=0; j < (outWidth); j++ ) {                              
; 167 |             if((prm[tpi].staticOutMin[i * outWidth + j] != min_cn[i * o
;     | utWidth + j])) {                                                       
; 168 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 169 |                 printf("row:%d, col:%d, min_out:%u, min_EOut:%u \n", i,
;     |  j, prm[tpi].staticOutMin[i * outWidth + j], min_cn[i * outWidth + j]);
; 170 |                 break;                                                 
; 172 |             if((prm[tpi].staticOutMax[i * outWidth + j] != max_cn[i * o
;     | utWidth + j])) {                                                       
; 173 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 174 |                 printf("row:%d, col:%d, max_out:%u, max_EOut:%u \n", i,
;     |  j, prm[tpi].staticOutMax[i * outWidth + j], max_cn[i * outWidth + j]);
; 175 |                 break;                                                 
; 177 |             if((prm[tpi].staticOutMean[i * outWidth + j] != mean_cn[i *
;     |  outWidth + j])) {                                                     
; 178 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 179 |                 printf("row:%d, col:%d, mean_out:%u, mean_EOut:%u \n",
;     | i, j, prm[tpi].staticOutMean[i * outWidth + j], mean_cn[i * outWidth + 
;     | j]);                                                                   
; 180 |                 break;                                                 
; 182 |             if((prm[tpi].staticOutVar[i * outWidth + j] != var_cn[i * o
;     | utWidth + j])) {                                                       
; 183 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 184 |                 printf("row:%d, col:%d, var_out:%u, var_EOut:%u \n", i,
;     |  j, prm[tpi].staticOutVar[i * outWidth + j], var_cn[i * outWidth + j]);
; 185 |                 break;                                                 
; 192 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_ref =
;     | = vlib_KERNEL_FAIL)) ? 1 : 0;                                          
; 194 | est_test=1;                                                            
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(20),B0      ; |164| 
           LDW     .D2T1   *+SP(36),A15      ; |164| 
   [ B2]   MVK     .L1     0x1,A3            ; |164| 

   [ A0]   MVK     .L1     0x1,A4            ; |164| 
||         LDW     .D2T1   *+SP(68),A0

           AND     .L1     A3,A4,A3          ; |164| 
|| [ B1]   MVK     .L2     0x1,B5            ; |164| 

   [ B0]   MVK     .L2     0x1,B4            ; |164| 

           AND     .L2X    B5,A3,B5          ; |164| 
||         ADD     .L1     A15,A14,A3        ; |197| 

           AND     .L2     B4,B5,B0          ; |164| 

   [!B0]   LDHU    .D1T1   *+A3(32),A4       ; |197| 
|| [!B0]   MVK     .L1     0x1,A0            ; nullify predicate
|| [!B0]   B       .S1     $C$L24            ; |164| 
|| [!B0]   LDW     .D2T2   *+SP(72),B4       ; |197| 
|| [!B0]   MVKL    .S2     $C$SL6+0,B5

   [!A0]   B       .S1     $C$L23            ; |165| 
|| [!B0]   MVKL    .S2     est_test,B6
|| [!B0]   LDHU    .D1T1   *+A3(34),A5       ; |197| 
|| [!B0]   MVK     .L1     1,A7              ; |194| 

   [!B0]   MVKH    .S2     $C$SL6+0,B5
|| [!B0]   LDHU    .D1T1   *+A3(28),A6       ; |197| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 197,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 197 | sprintf(desc, "%s generated input | Opt and NatC results compared | ima
;     | geWidth= %d, imageHeight= %d, statBlockWidth= %d, statBlockHeight= %d, 
;     | mode = %d",                                                            
;----------------------------------------------------------------------
   [!B0]   LDHU    .D1T1   *+A3(26),A3       ; |197| 
   [!B0]   MVKH    .S2     est_test,B6

   [!B0]   STW     .D2T1   A4,*+SP(20)       ; |197| 
||         MVKL    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 164,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L24}        ; |164| 
$C$DW$L$VLIB_blockStatistics_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$35$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 165	-----------------------    if ( !outHeight ) goto g33;

   [ A0]   ZERO    .L1     A10               ; |165| 
|| [ A0]   MV      .L2X    A0,B10            ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 165,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |165| 
$C$DW$L$VLIB_blockStatistics_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$36$B:
;** 166	-----------------------    L$3 = (unsigned)outHeight;
;** 165	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_blockStatistics_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$37$B:
;          EXCLUSIVE CPU CYCLES: 1
           LDW     .D2T1   *+SP(64),A0
$C$DW$L$VLIB_blockStatistics_d$37$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L13
;** --------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 165,column 22,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$38$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g21:
;** 166	-----------------------    if ( !outWidth ) goto g32;
           SHL     .S1     A13,5,A31
           NOP             3

           MV      .L1     A0,A3
|| [!A0]   B       .S2     $C$L20            ; |166| 
|| [ A0]   MVK     .S1     0xffffffff,A7     ; |166| 
|| [ A0]   LDW     .D2T2   *+SP(100),B24
|| [ A0]   ADD     .D1     A15,A14,A25

           MPY32   .M1     A10,A3,A22
||         ADDAW   .D1     A31,A13,A3

           ADD     .L1     A15,A3,A3
   [ A0]   LDW     .D1T2   *+A3(8),B27
   [ A0]   LDW     .D2T2   *+SP(104),B23
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 167,column 25,is_stmt,isa 0
   [ A0]   ADD     .L1     1,A7,A6           ; |167| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 166,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L20}        ; |166| 
$C$DW$L$VLIB_blockStatistics_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$39$B:
;          EXCLUSIVE CPU CYCLES: 11
;**  	-----------------------    U$117 = outWidth*i;
;**  	-----------------------    U$118 = U$117;
;**  	-----------------------    U$182 = U$11+v$1;
;**  	-----------------------    U$184 = (v$1[tpi]).staticOutMin;
;** 167	-----------------------    L$4 = (unsigned)outWidth;
;** 166	-----------------------    j = 0xffffffffu;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g23:
;** 167	-----------------------    C$13 = j+1u;
;** 167	-----------------------    C$17 = (int)C$13+U$118;
;** 167	-----------------------    U$123 = min_cn[C$17];
;** 167	-----------------------    U$186 = U$184[C$17];
;** 167	-----------------------    f$10 = (U$186 != U$123)-1;
;** 172	-----------------------    U$129 = (unsigned char)(A$36 = max_cn[C$17] , f$10 ? A$36 : U$129);
;** 172	-----------------------    U$191 = (unsigned char)(A$37 = *((*U$182).staticOutMax+C$17) , f$10 ? A$37 : U$191);
;** 172	-----------------------    f$9 = (U$191 != U$129)-1;
;** 177	-----------------------    C$15 = (int)U$117+C$13;
;** 177	-----------------------    C$16 = f$9&f$10;
;** 177	-----------------------    U$138 = (unsigned short)(A$38 = mean_cn[C$15] , C$16 ? A$38 : U$138);
;** 177	-----------------------    U$196 = (unsigned short)(A$39 = *(C$15*2+(*U$182).staticOutMean) , C$16 ? A$39 : U$196);
;** 177	-----------------------    f$8 = (U$196 != U$138)-1;
;** 182	-----------------------    C$14 = f$8&f$9&f$10;
;** 182	-----------------------    U$147 = (A$40 = var_cn[C$15] , C$14 ? A$40 : U$147);
;** 182	-----------------------    U$201 = (A$41 = *(C$15*4+(*U$182).staticOutVar) , C$14 ? A$41 : U$201);
;** 182	-----------------------    f$7 = (U$201 != U$147)-1;
;** 166	-----------------------    j = C$13;
;** 166	-----------------------    L$4 = L$4-1;
;** 166	-----------------------    if ( L$4&f$7&f$8&f$9&f$10 ) goto g23;
;**  	-----------------------    if ( !f$10 ) goto g31;

           LDW     .D1T2   *+A25(12),B4      ; |172| (P) <0,2> 
||         MV      .L2X    A22,B22
||         LDW     .D2T1   *+SP(112),A23
||         MVK     .L1     0x1,A1
||         ADD     .S1     A6,A22,A5         ; |177| (P) <0,3> 
||         MV      .S2     B13,B9

           ADD     .L2X    B22,A6,B17        ; |167| (P) <0,3> 
||         LDW     .D1T1   *+A25(20),A30     ; |182| (P) <0,0> 
||         LDW     .D2T2   *+SP(132),B5

           LDW     .D1T1   *+A25(16),A4      ; |177| (P) <0,3> 
||         LDBU    .D2T2   *+B17[B27],B26    ; |167| (P) <0,4>  ^ 
||         MV      .L2X    A0,B25
||         MV      .L1     A1,A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 167,column 25,is_stmt,isa 0
           LDBU    .D2T2   *+B17[B24],B21    ; |167| (P) <0,5>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 172,column 25,is_stmt,isa 0
   [ A1]   LDBU    .D2T2   *+B17[B23],B31    ; |172| (P) <0,6> 

           LDW     .D2T2   *+SP(60),B7
||         LDW     .D1T1   *+A23[A5],A27     ; |182| (P) <0,4> 

   [ A1]   LDBU    .D2T2   *+B4[B17],B30     ; |172| (P) <0,7> 
||         LDW     .D1T1   *+A30[A5],A26     ; |182| (P) <0,5> 

           LDW     .D2T1   *+SP(108),A24
|| [ A1]   LDHU    .D1T2   *+A4[A5],B28      ; |177| (P) <0,8> 

           LDW     .D2T2   *+SP(52),B16
           LDW     .D2T2   *+SP(124),B6
           LDW     .D2T2   *+SP(56),B8
$C$DW$L$VLIB_blockStatistics_d$39$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c
;*      Loop source line                 : 166
;*      Loop opening brace source line   : 166
;*      Loop closing brace source line   : 187
;*      Known Minimum Trip Count         : 1                    
;*      Known Maximum Trip Count         : 65535                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 26
;*      Unpartitioned Resource Bound     : 12
;*      Partitioned Resource Bound(*)    : 16
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     0        4     
;*      .S units                     1        8     
;*      .D units                     7        4     
;*      .M units                     0        0     
;*      .X cross paths               8        3     
;*      .T address paths             4        7     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)         16       30     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        6     
;*      Bound(.L .S .D .LS .LSD)     8       16*    
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 26 Did not find schedule
;*         ii = 27 Did not find schedule
;*         ii = 28 Did not find schedule
;*         ii = 29 Did not find schedule
;*         ii = 30 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |**   *****      ************    |     *****      *  *************|
;*       1: |**   *****      ************    |    ******      *  *************|
;*       2: |**   *****      ************    |*    *****      *  *************|
;*       3: |**   *****      ************    |*   *** **      *  *************|
;*       4: |**    ****      ************    |*   ******      *  *************|
;*       5: |**    ****      ************    |*   ******      ** *************|
;*       6: |**    ****      ************    |*   ******      ****************|
;*       7: |**    ****      ************    |* * ******      *  *************|
;*       8: |**    ****      ************    |*** ******      *  *************|
;*       9: |**    ****      ************    |*** ******      ** *************|
;*      10: |**    ****      ************    |* * ******      *  *************|
;*      11: |**    ****      ************    |* * ******      * **************|
;*      12: |**    ****      ************    |* * ******      ****************|
;*      13: |**    ****      ************    |*** ******      *  *************|
;*      14: |**    ****      ************    |*** ******      ** *************|
;*      15: |**    ****      ************    |*** ******      *  *************|
;*      16: |**    ****      ************    |*** *****       * **************|
;*      17: |**    ****      ************    | ** ******      * **************|
;*      18: |** *  ****      ************    | ** ******      ****************|
;*      19: |** *  ****      ************    | ** ******      * **************|
;*      20: |**    ****      ************    | ** ******      ****************|
;*      21: | * **  ***      ************    |  * ******      ** *************|
;*      22: | * *  ****      ************    |    ******      ** *************|
;*      23: | * *  ****      ************    |*   ******      *  *************|
;*      24: | * *******      ************    |    ******      ** *************|
;*      25: | * *******      ************    |    ******      ** *************|
;*      26: | *  ******      ************    |    ******      ** *************|
;*      27: | *  ******      ************    |    ******      ** *************|
;*      28: | *  ******      ************    |     *****      *  *************|
;*      29: | *   *****      ************    |     *****      *  *************|
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop is interruptible
;*      Collapsed epilog stages       : 1
;*      Prolog not removed
;*      Collapsed prolog stages       : 0
;*
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 2
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.250, max 2.000 }
;*      Mem bank perf. penalty (est.) : 0.8%
;*
;*      Effective ii                : { min 30.00, est 30.25, max 32.00 }
;*
;*
;*      Total cycles (est.)         : 10 + trip_cnt * 30        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A1
;*                  MV              A3,B16
;*                  MV              A3,B9
;*                  MV              B18,B8
;*                  MV              B17,B7
;*                  MV              B8,B6
;*                  MV              B7,B5
;*                  MV              A1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C205:
;*   0              LDW     .D1T1   *+A25(20),A3      ; |182| 
;*   1              ADD     .S1     1,A4,A6           ; |167| 
;*   2              LDW     .D1T2   *+A25(12),B4      ; |172| 
;*   3              ADD     .L2X    B22,A6,B17        ; |167| 
;*     ||           ADD     .L1     A6,A22,A5         ; |177| 
;*     ||           LDW     .D1T1   *+A25(16),A4      ; |177| 
;*   4      [ A1]   LDBU    .D2T2   *+B17[B27],B26    ; |167|  ^ 
;*     ||   [ A1]   LDW     .D1T1   *+A23[A5],A27     ; |182| 
;*   5      [ A1]   LDBU    .D2T2   *+B17[B24],B21    ; |167|  ^ 
;*     ||   [ A1]   LDW     .D1T1   *+A3[A5],A26      ; |182| 
;*   6      [ A1]   LDBU    .D2T2   *+B17[B23],B31    ; |172| 
;*   7      [ A1]   LDBU    .D2T2   *+B4[B17],B30     ; |172| 
;*   8      [ A1]   LDHU    .D1T2   *+A4[A5],B28      ; |177| 
;*   9              NOP             1
;*  10              CMPEQ   .L2     B26,B21,B4        ; |167|  ^ 
;*  11              EXT     .S2     B4,31,31,B0       ; |167|  ^ 
;*  12      [ B0]   MV      .D2     B31,B4            ; |172|  ^ 
;*     ||   [!B0]   MV      .S2     B5,B4             ; |172|  ^ 
;*     ||   [!B0]   MV      .L2     B7,B5             ; |172|  ^ 
;*  13              MV      .L2     B0,B4             ; |167| Split a long life(pre-sched)
;*     ||           EXTU    .S2     B4,24,24,B7       ; |172|  ^ 
;*     ||   [ B0]   MV      .D2     B30,B5            ; |172|  ^ 
;*     ||   [ A1]   LDHU    .D1T2   *+A24[A5],B29     ; |177| 
;*     ||   [ A1]   MV      .L1X    B0,A20            ; |166| 
;*  14              MV      .L2     B7,B5             ; |172| Split a long life(pre-sched)
;*     ||           EXTU    .S2     B5,24,24,B17      ; |172|  ^ 
;*  15              MV      .S2     B17,B7            ; |172| Split a long life(pre-sched)
;*     ||           CMPEQ   .L2     B17,B7,B18        ; |172|  ^ 
;*     ||   [ A1]   MV      .L1X    B7,A8             ; |166| 
;*  16              EXT     .S2     B18,31,31,B2      ; |172|  ^ 
;*     ||   [ A1]   MV      .L1X    B17,A17           ; |166| 
;*  17              AND     .S2     B0,B2,B1          ; |177|  ^ 
;*     ||   [ A1]   MV      .L2     B2,B19            ; |166| 
;*  18      [ B1]   MV      .S2     B29,B17           ; |177|  ^ 
;*     ||   [!B1]   MV      .L2     B6,B17            ; |177|  ^ 
;*     ||   [ B1]   MV      .D2     B28,B6            ; |177|  ^ 
;*  19              EXTU    .S2     B17,16,16,B8      ; |177|  ^ 
;*     ||   [!B1]   MV      .L2     B8,B6             ; |177|  ^ 
;*  20              MV      .L2     B8,B6             ; |177| Split a long life(pre-sched)
;*     ||           EXTU    .S2     B6,16,16,B18      ; |177|  ^ 
;*  21              MV      .S2     B18,B8            ; |177| Split a long life(pre-sched)
;*     ||           CMPEQ   .L2     B18,B8,B17        ; |177|  ^ 
;*     ||   [ A1]   MV      .L1X    B8,A9             ; |166| 
;*  22              EXT     .S2     B17,31,31,B1      ; |177|  ^ 
;*     ||   [ A1]   MV      .L1X    B18,A18           ; |166| 
;*  23              AND     .S2     B2,B1,B17         ; |182|  ^ 
;*     ||   [ A0]   MV      .L2     B1,B20            ; |166| 
;*  24              AND     .L2     B0,B17,B0         ; |182|  ^ 
;*  25      [ B0]   MV      .D2X    A27,B16           ; |182|  ^ 
;*     ||   [!B0]   MV      .S2     B9,B16            ; |182|  ^ 
;*     ||   [!B0]   MV      .L2     B16,B18           ; |182|  ^ 
;*  26      [ B0]   MV      .S2X    A26,B18           ; |182|  ^ 
;*     ||           MV      .L2     B16,B9            ; |182| Define a twin register
;*  27              MV      .L1X    B16,A3            ; |182| 
;*     ||           CMPEQ   .L2     B18,B16,B17       ; |182|  ^ 
;*     ||           MV      .S2     B18,B16           ; |182| Define a twin register
;*  28              MV      .S1X    B18,A3            ; |182| 
;*     ||           EXT     .S2     B17,31,31,B18     ; |182|  ^ 
;*     ||           SUB     .L2     B25,1,B25         ; |166| 
;*     ||   [ A0]   MV      .L1     A3,A16            ; |166| 
;*  29              AND     .L2     B18,B25,B17       ; |166|  ^ 
;*     ||   [ A0]   MV      .L1     A3,A19            ; |166| 
;*  30              MV      .L1     A6,A4             ; |166| 
;*     ||           AND     .L2     B1,B17,B17        ; |166|  ^ 
;*     ||   [ A0]   MV      .S1X    B18,A21           ; |166| 
;*  31              AND     .L2     B2,B17,B17        ; |166|  ^ 
;*     ||   [ A1]   MV      .L1     A4,A7             ; |166| 
;*  32              AND     .L2     B4,B17,B0         ; |166|  ^ 
;*  33      [!B0]   ZERO    .S1     A1                ; |166|  ^ 
;*  34      [ A1]   B       .S1     $C$C205           ; |166| 
;*  35              NOP             4
;*  39              MV      .L1     A1,A0             ; |166| Split a long life(pre-sched)
;*  40              ; BRANCHCC OCCURS {$C$C205}       ; |166| 
;*
;*       RESTORE CODE
;*
;*                  MV              A7,A4
;*                  MV              A8,B7
;*                  MV              A9,B8
;*                  MV              A16,A3
;*                  MV              A17,B17
;*                  MV              A18,B18
;*                  MV              A19,A3
;*----------------------------------------------------------------------------*
$C$L14:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L15:    ; PIPED LOOP KERNEL
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 166,column 47,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$41$B:
;          EXCLUSIVE CPU CYCLES: 30
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 167,column 25,is_stmt,isa 0
           CMPEQ   .L2     B26,B21,B4        ; |167| <0,10>  ^ 
           EXT     .S2     B4,31,31,B0       ; |167| <0,11>  ^ 

   [!B0]   MV      .L2     B7,B5             ; |172| <0,12>  ^ 
|| [!B0]   MV      .S2     B5,B4             ; |172| <0,12>  ^ 
|| [ B0]   MV      .D2     B31,B4            ; |172| <0,12>  ^ 

   [ A1]   MV      .L1X    B0,A20            ; |166| <0,13> 
||         MV      .L2     B0,B4             ; |167| <0,13> Split a long life(pre-sched)
|| [ A1]   LDHU    .D1T2   *+A24[A5],B29     ; |177| <0,13> 
||         EXTU    .S2     B4,24,24,B7       ; |172| <0,13>  ^ 
|| [ B0]   MV      .D2     B30,B5            ; |172| <0,13>  ^ 

           MV      .L2     B7,B5             ; |172| <0,14> Split a long life(pre-sched)
||         EXTU    .S2     B5,24,24,B17      ; |172| <0,14>  ^ 

           MV      .S2     B17,B7            ; |172| <0,15> Split a long life(pre-sched)
|| [ A1]   MV      .L1X    B7,A8             ; |166| <0,15> 
||         CMPEQ   .L2     B17,B7,B18        ; |172| <0,15>  ^ 

   [ A1]   MV      .L1X    B17,A17           ; |166| <0,16> 
||         EXT     .S2     B18,31,31,B2      ; |172| <0,16>  ^ 

   [ A1]   MV      .L2     B2,B19            ; |166| <0,17> 
||         AND     .S2     B0,B2,B1          ; |177| <0,17>  ^ 

   [!B1]   MV      .L2     B6,B17            ; |177| <0,18>  ^ 
|| [ B1]   MV      .S2     B29,B17           ; |177| <0,18>  ^ 
|| [ B1]   MV      .D2     B28,B6            ; |177| <0,18>  ^ 

           EXTU    .S2     B17,16,16,B8      ; |177| <0,19>  ^ 
|| [!B1]   MV      .L2     B8,B6             ; |177| <0,19>  ^ 

           MV      .L2     B8,B6             ; |177| <0,20> Split a long life(pre-sched)
||         EXTU    .S2     B6,16,16,B18      ; |177| <0,20>  ^ 

           MV      .S2     B18,B8            ; |177| <0,21> Split a long life(pre-sched)
|| [ A1]   MV      .L1X    B8,A9             ; |166| <0,21> 
||         CMPEQ   .L2     B18,B8,B17        ; |177| <0,21>  ^ 

   [ A1]   MV      .L1X    B18,A18           ; |166| <0,22> 
||         EXT     .S2     B17,31,31,B1      ; |177| <0,22>  ^ 

   [ A0]   MV      .L2     B1,B20            ; |166| <0,23> 
||         AND     .S2     B2,B1,B17         ; |182| <0,23>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 182,column 25,is_stmt,isa 0
           AND     .L2     B0,B17,B0         ; |182| <0,24>  ^ 

   [!B0]   MV      .L2     B16,B18           ; |182| <0,25>  ^ 
|| [!B0]   MV      .S2     B9,B16            ; |182| <0,25>  ^ 
|| [ B0]   MV      .D2X    A27,B16           ; |182| <0,25>  ^ 

           MV      .L2     B16,B9            ; |182| <0,26> Define a twin register
|| [ B0]   MV      .S2X    A26,B18           ; |182| <0,26>  ^ 

           MV      .S2     B18,B16           ; |182| <0,27> Define a twin register
||         MV      .L1X    B16,A3            ; |182| <0,27> 
||         CMPEQ   .L2     B18,B16,B17       ; |182| <0,27>  ^ 

           SUB     .L2     B25,1,B25         ; |166| <0,28> 
|| [ A0]   MV      .L1     A3,A16            ; |166| <0,28> 
||         MV      .S1X    B18,A3            ; |182| <0,28> 
||         EXT     .S2     B17,31,31,B18     ; |182| <0,28>  ^ 

   [ A0]   MV      .L1     A3,A19            ; |166| <0,29> 
||         AND     .L2     B18,B25,B17       ; |166| <0,29>  ^ 

           MV      .L1     A6,A4             ; |166| <0,30> 
|| [ A0]   MV      .S1X    B18,A21           ; |166| <0,30> 
||         AND     .L2     B1,B17,B17        ; |166| <0,30>  ^ 
||         LDW     .D1T1   *+A25(20),A3      ; |182| <1,0> 

   [ A1]   MV      .L1     A4,A7             ; |166| <0,31> 
||         AND     .L2     B2,B17,B17        ; |166| <0,31>  ^ 
||         ADD     .S1     1,A4,A6           ; |167| <1,1> 

           AND     .L2     B4,B17,B0         ; |166| <0,32>  ^ 
||         LDW     .D1T2   *+A25(12),B4      ; |172| <1,2> 

   [!B0]   ZERO    .S1     A1                ; |166| <0,33>  ^ 
||         LDW     .D1T1   *+A25(16),A4      ; |177| <1,3> 
||         ADD     .L2X    B22,A6,B17        ; |167| <1,3> 
||         ADD     .L1     A6,A22,A5         ; |177| <1,3> 

   [ A1]   B       .S1     $C$L15            ; |166| <0,34> 
|| [ A1]   LDW     .D1T1   *+A23[A5],A27     ; |182| <1,4> 
|| [ A1]   LDBU    .D2T2   *+B17[B27],B26    ; |167| <1,4>  ^ 

   [ A1]   LDW     .D1T1   *+A3[A5],A26      ; |182| <1,5> 
|| [ A1]   LDBU    .D2T2   *+B17[B24],B21    ; |167| <1,5>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 172,column 25,is_stmt,isa 0
   [ A1]   LDBU    .D2T2   *+B17[B23],B31    ; |172| <1,6> 
   [ A1]   LDBU    .D2T2   *+B4[B17],B30     ; |172| <1,7> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 177,column 25,is_stmt,isa 0
   [ A1]   LDHU    .D1T2   *+A4[A5],B28      ; |177| <1,8> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 166,column 31,is_stmt,isa 0
           MV      .L1     A1,A0             ; |166| <0,39> Split a long life(pre-sched)
$C$DW$L$VLIB_blockStatistics_d$41$E:
;** --------------------------------------------------------------------------*
$C$L16:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$43$B:
;          EXCLUSIVE CPU CYCLES: 9

           MV      .L1     A20,A0
||         MV      .S1X    B20,A1
||         MV      .L2     B19,B0
||         STW     .D2T1   A8,*+SP(132)
||         MV      .S2X    A21,B1

   [!A0]   MVK     .L2     0x1,B0            ; nullify predicate
||         STW     .D2T1   A24,*+SP(108)
|| [!A0]   MVKL    .S2     $C$SL5+0,B4

           STW     .D2T1   A19,*+SP(52)
|| [!A0]   MVKH    .S2     $C$SL5+0,B4

           STW     .D2T1   A17,*+SP(60)
|| [!A0]   B       .S1     $C$L19

           STW     .D2T2   B24,*+SP(100)
|| [!B0]   B       .S1     $C$L18

           STW     .D2T1   A18,*+SP(56)
           STW     .D2T2   B23,*+SP(104)
           STW     .D2T1   A23,*+SP(112)
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x08)
	.dwattr $C$DW$218, DW_AT_name("printf")
	.dwattr $C$DW$218, DW_AT_TI_call

           STW     .D2T1   A9,*+SP(124)
||         MV      .L2X    A16,B13
|| [!A0]   CALL    .S1     printf            ; |169| 

           ; BRANCHCC OCCURS {$C$L19}  
$C$DW$L$VLIB_blockStatistics_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$44$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    if ( !f$9 ) goto g30;
           NOP             1
           ; BRANCHCC OCCURS {$C$L18}  
$C$DW$L$VLIB_blockStatistics_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$45$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    if ( !f$8 ) goto g29;

   [!A1]   B       .S1     $C$L17
|| [!A1]   ZERO    .L2     B1                ; nullify predicate

   [ B1]   BNOP    .S1     $C$L21,3
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("printf")
	.dwattr $C$DW$219, DW_AT_TI_call

   [!A1]   CALL    .S1     printf            ; |179| 
|| [!A1]   MVKL    .S2     $C$SL3+0,B5

           ; BRANCHCC OCCURS {$C$L17}  
$C$DW$L$VLIB_blockStatistics_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$46$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    if ( f$7 ) goto g32;

   [ B1]   SUB     .L1X    B10,1,A0          ; |165| 
|| [ B1]   SUB     .L2     B10,1,B10         ; |165| 
|| [ B1]   ADD     .S1     1,A10,A10         ; |165| 

           ; BRANCHCC OCCURS {$C$L21}  
$C$DW$L$VLIB_blockStatistics_d$46$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$47$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 184	-----------------------    printf((const char *)"row:%d, col:%d, var_out:%u, var_EOut:%u \n", i, j, U$201, U$147);
;** 183	-----------------------    status_nat_vs_ref = 0;
;** 185	-----------------------    goto g32;
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("printf")
	.dwattr $C$DW$220, DW_AT_TI_call

           CALL    .S1     printf            ; |184| 
||         MVKL    .S2     $C$SL2+0,B4

           MVKH    .S2     $C$SL2+0,B4
||         STW     .D2T1   A10,*+SP(8)       ; |184| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 184,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |184| 
           STW     .D2T1   A7,*+SP(12)       ; |184| 

           MV      .L1     A19,A3            ; |184| 
||         STW     .D2T2   B13,*+SP(20)      ; |184| 

           ADDKPC  .S2     $C$RL29,B3,0      ; |184| 
||         STW     .D2T1   A3,*+SP(16)       ; |184| 

$C$RL29:   ; CALL OCCURS {printf} {0}        ; |184| 
$C$DW$L$VLIB_blockStatistics_d$47$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$48$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S2     $C$L21,5          ; |185| 
||         ZERO    .L1     A12               ; |183| 
||         ADD     .S1     1,A10,A10         ; |165| 
||         SUB     .D1X    B10,1,A0          ; |165| 
||         SUB     .L2     B10,1,B10         ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 185,column 29,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L21}          ; |185| 
$C$DW$L$VLIB_blockStatistics_d$48$E:
;** --------------------------------------------------------------------------*
$C$L17:    
$C$DW$L$VLIB_blockStatistics_d$49$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g29:
;** 179	-----------------------    printf((const char *)"row:%d, col:%d, mean_out:%u, mean_EOut:%u \n", i, j, (int)U$196, (int)U$138);
;** 178	-----------------------    status_nat_vs_ref = 0;
;** 180	-----------------------    goto g32;

           MV      .L2X    A18,B4            ; |179| 
||         MV      .L1     A9,A3             ; |179| 
||         MVKH    .S2     $C$SL3+0,B5
||         STW     .D2T1   A7,*+SP(12)       ; |179| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 179,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(16)       ; |179| 
           STW     .D2T1   A3,*+SP(20)       ; |179| 
           STW     .D2T2   B5,*+SP(4)        ; |179| 

           STW     .D2T1   A10,*+SP(8)       ; |179| 
||         ADDKPC  .S2     $C$RL30,B3,0      ; |179| 

$C$RL30:   ; CALL OCCURS {printf} {0}        ; |179| 
$C$DW$L$VLIB_blockStatistics_d$49$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$50$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S2     $C$L21,5          ; |180| 
||         ADD     .L1     1,A10,A10         ; |165| 
||         ZERO    .S1     A12               ; |178| 
||         SUB     .D1X    B10,1,A0          ; |165| 
||         SUB     .L2     B10,1,B10         ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 180,column 29,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L21}          ; |180| 
$C$DW$L$VLIB_blockStatistics_d$50$E:
;** --------------------------------------------------------------------------*
$C$L18:    
$C$DW$L$VLIB_blockStatistics_d$51$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g30:
;** 174	-----------------------    printf((const char *)"row:%d, col:%d, max_out:%u, max_EOut:%u \n", i, j, (int)U$191, (int)U$129);
;** 173	-----------------------    status_nat_vs_ref = 0;
;** 175	-----------------------    goto g32;
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("printf")
	.dwattr $C$DW$221, DW_AT_TI_call

           CALL    .S1     printf            ; |174| 
||         MVKL    .S2     $C$SL4+0,B4
||         MV      .L1     A17,A3            ; |174| 

           MVKH    .S2     $C$SL4+0,B4
||         STW     .D2T1   A3,*+SP(16)       ; |174| 
||         MV      .L1     A8,A3             ; |174| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 174,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |174| 
           STW     .D2T1   A3,*+SP(20)       ; |174| 
           STW     .D2T1   A10,*+SP(8)       ; |174| 

           ADDKPC  .S2     $C$RL31,B3,0      ; |174| 
||         STW     .D2T1   A7,*+SP(12)       ; |174| 

$C$RL31:   ; CALL OCCURS {printf} {0}        ; |174| 
$C$DW$L$VLIB_blockStatistics_d$51$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$52$B:
;          EXCLUSIVE CPU CYCLES: 6

           B       .S2     $C$L22            ; |175| 
||         SUB     .L1X    B10,1,A0          ; |165| 
||         ZERO    .S1     A12               ; |173| 
||         ADD     .D1     1,A10,A10         ; |165| 
||         SUB     .L2     B10,1,B10         ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 165,column 27,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L13,4          ; |165| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 175,column 29,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L22}          ; |175| 
$C$DW$L$VLIB_blockStatistics_d$52$E:
;** --------------------------------------------------------------------------*
$C$L19:    
$C$DW$L$VLIB_blockStatistics_d$53$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g31:
;** 169	-----------------------    printf((const char *)"row:%d, col:%d, min_out:%u, min_EOut:%u \n", i, j, (int)U$186, (int)U$123);
;** 168	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 169,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |169| 
           STW     .D2T2   B21,*+SP(20)      ; |169| 
           STW     .D2T2   B26,*+SP(16)      ; |169| 
           STW     .D2T1   A7,*+SP(12)       ; |169| 

           STW     .D2T1   A10,*+SP(8)       ; |169| 
||         ADDKPC  .S2     $C$RL32,B3,0      ; |169| 

$C$RL32:   ; CALL OCCURS {printf} {0}        ; |169| 
$C$DW$L$VLIB_blockStatistics_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$54$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 168,column 29,is_stmt,isa 0
           ZERO    .L1     A12               ; |168| 
$C$DW$L$VLIB_blockStatistics_d$54$E:
;** --------------------------------------------------------------------------*
$C$L20:    
$C$DW$L$VLIB_blockStatistics_d$55$B:
;          EXCLUSIVE CPU CYCLES: 1

           SUB     .L2     B10,1,B10         ; |165| 
||         ADD     .L1     1,A10,A10         ; |165| 
||         SUB     .S1X    B10,1,A0          ; |165| 

$C$DW$L$VLIB_blockStatistics_d$55$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_blockStatistics_d$56$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 165,column 27,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L13,4          ; |165| 
$C$DW$L$VLIB_blockStatistics_d$56$E:
;** --------------------------------------------------------------------------*
$C$L22:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 166,column 31,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$57$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g32:
;** 165	-----------------------    ++i;
;** 165	-----------------------    if ( L$3 = L$3-1 ) goto g21;
           LDW     .D2T1   *+SP(64),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 165,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |165| 
$C$DW$L$VLIB_blockStatistics_d$57$E:
;** --------------------------------------------------------------------------*
$C$L23:    
$C$DW$L$VLIB_blockStatistics_d$58$B:
;          EXCLUSIVE CPU CYCLES: 7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 197,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 198 | testPatternString, prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].
;     | statBlockWidth, prm[tpi].statBlockHeight, mode);                       
;----------------------------------------------------------------------
           ADD     .L1     A15,A14,A3        ; |197| 
           LDHU    .D1T1   *+A3(32),A4       ; |197| 
           LDW     .D2T2   *+SP(72),B4       ; |197| 

           LDHU    .D1T1   *+A3(28),A6       ; |197| 
||         MVKL    .S2     $C$SL6+0,B5

           LDHU    .D1T1   *+A3(34),A5       ; |197| 
||         MVKL    .S2     est_test,B6

           LDHU    .D1T1   *+A3(26),A3       ; |197| 
||         MVKH    .S2     $C$SL6+0,B5

           MVKL    .S1     desc,A4
||         STW     .D2T1   A4,*+SP(20)       ; |197| 
||         MVKH    .S2     est_test,B6
||         MVK     .L1     1,A7              ; |194| 

$C$DW$L$VLIB_blockStatistics_d$58$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 164,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$59$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g33:
;** 194	-----------------------    est_test = 1;
;** 197	-----------------------    C$12 = U$11+v$1;
;** 197	-----------------------    sprintf(K$215, (const char *)"%s generated input | Opt and NatC results compared | imageWidth= %d, imageHeight= %d, statBlockWidth= %d, statBlockHeight= %d, mode = %d", K$83, (int)(*C$12).imageWidth, (int)(*C$12).imageHeight, (int)(*C$12).statBlockWidth, (int)(*C$12).statBlockHeight, (int)mode);
;** 199	-----------------------    VLIB_formula_add_test((int)_mpyu((*U$12).imageWidth, (*U$12).imageHeight), 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$215, 0);
;** 201	-----------------------    goto g35;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 197,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(28)       ; |197| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x04)
	.dwattr $C$DW$222, DW_AT_name("sprintf")
	.dwattr $C$DW$222, DW_AT_TI_call

           STW     .D2T2   B5,*+SP(4)        ; |197| 
||         CALL    .S1     sprintf           ; |197| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 194,column 13,is_stmt,isa 0
           STW     .D2T1   A7,*B6            ; |194| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 197,column 13,is_stmt,isa 0
           STW     .D2T2   B12,*+SP(8)       ; |197| 
           STW     .D2T1   A6,*+SP(16)       ; |197| 

           ADDKPC  .S2     $C$RL33,B3,0      ; |197| 
||         STW     .D2T1   A3,*+SP(12)       ; |197| 

           STW     .D2T1   A5,*+SP(24)       ; |197| 
||         MVKH    .S1     desc,A4

$C$RL33:   ; CALL OCCURS {sprintf} {0}       ; |197| 
$C$DW$L$VLIB_blockStatistics_d$59$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$60$B:
;          EXCLUSIVE CPU CYCLES: 15
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 199,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 199 | VLIB_formula_add_test((prm[tpi].imageWidth) * (prm[tpi].imageHeight), N
;     | ULL, NULL, fail, desc, NULL);                                          
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(28),B5      ; |199| 
           LDHU    .D2T2   *+B11(26),B6      ; |199| 
           CMPEQ   .L1     A11,0,A3          ; |199| 
           CMPEQ   .L2X    A12,0,B4          ; |199| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |199| 
           MPYU    .M2     B6,B5,B5          ; |199| 
           OR      .L2X    B4,A3,B6          ; |199| 
           ZERO    .L2     B4                ; |199| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x08)
	.dwattr $C$DW$223, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$223, DW_AT_TI_call

           MVKH    .S1     desc,A8
||         ZERO    .L1     A6                ; |199| 
||         CALLP   .S2     VLIB_formula_add_test,B3
||         MV      .D1X    B5,A4             ; |199| 

$C$RL34:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |199| 
$C$DW$L$VLIB_blockStatistics_d$60$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$61$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 201,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 201 | } else {                                                               
; 203 |     sprintf(desc, "imageWidth= %d, imageHeight= %d, statBlockWidth= %d,
;     |  statBlockHeight= %d ",                                                
; 204 |             prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].statBlo
;     | ckWidth, prm[tpi].statBlockHeight);                                    
; 205 |     VLIB_skip_test(desc);                                              
;----------------------------------------------------------------------
           B       .S1     $C$L26            ; |201| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 208,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 208 | VLIB_align_free(input);                                                
;----------------------------------------------------------------------
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$224, DW_AT_TI_call
           CALL    .S1     VLIB_align_free   ; |208| 
           LDW     .D2T1   *+SP(80),A4       ; |208| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 201,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L26}          ; |201| 
$C$DW$L$VLIB_blockStatistics_d$61$E:
;** --------------------------------------------------------------------------*
$C$L25:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 93,column 9,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$62$B:
;          EXCLUSIVE CPU CYCLES: 9
;**	-----------------------g34:
;** 203	-----------------------    C$11 = U$11+v$1;
;** 203	-----------------------    sprintf(K$215, (const char *)"imageWidth= %d, imageHeight= %d, statBlockWidth= %d, statBlockHeight= %d ", (int)(*C$11).imageWidth, (int)(*C$11).imageHeight, (int)(*C$11).statBlockWidth, (int)(*C$11).statBlockHeight);
;** 205	-----------------------    VLIB_skip_test(K$215);

           LDHU    .D1T1   *+A6(32),A4       ; |203| 
||         MVKL    .S2     $C$SL7+0,B4

           LDHU    .D1T1   *+A6(34),A3       ; |203| 
||         MVKH    .S2     $C$SL7+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 203,column 13,is_stmt,isa 0
           LDHU    .D1T1   *+A6(28),A5       ; |203| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x04)
	.dwattr $C$DW$225, DW_AT_name("sprintf")
	.dwattr $C$DW$225, DW_AT_TI_call

           LDHU    .D1T1   *+A6(26),A6       ; |203| 
||         CALL    .S1     sprintf           ; |203| 

           STW     .D2T2   B4,*+SP(4)        ; |203| 

           STW     .D2T1   A4,*+SP(16)       ; |203| 
||         MVKL    .S1     desc,A4

           MVKH    .S1     desc,A4
||         STW     .D2T1   A3,*+SP(20)       ; |203| 

           STW     .D2T1   A5,*+SP(12)       ; |203| 

           STW     .D2T1   A6,*+SP(8)        ; |203| 
||         ADDKPC  .S2     $C$RL35,B3,0      ; |203| 

$C$RL35:   ; CALL OCCURS {sprintf} {0}       ; |203| 
$C$DW$L$VLIB_blockStatistics_d$62$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$63$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$226, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 205,column 13,is_stmt,isa 0
$C$RL36:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |205| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 208,column 9,is_stmt,isa 0
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$227, DW_AT_TI_call
           CALL    .S1     VLIB_align_free   ; |208| 
           LDW     .D2T1   *+SP(80),A4       ; |208| 
           NOP             3
$C$DW$L$VLIB_blockStatistics_d$63$E:
;** --------------------------------------------------------------------------*
$C$L26:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 201,column 9,is_stmt,isa 0
$C$DW$L$VLIB_blockStatistics_d$64$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g35:
;** 208	-----------------------    VLIB_align_free((void *)input);
;** 209	-----------------------    VLIB_align_free((void *)min_opt);
;** 210	-----------------------    VLIB_align_free((void *)max_opt);
;** 211	-----------------------    VLIB_align_free((void *)mean_opt);
;** 212	-----------------------    VLIB_align_free((void *)var_opt);
;** 213	-----------------------    VLIB_align_free((void *)scratch);
;** 215	-----------------------    free((void *)min_cn);
;** 216	-----------------------    free((void *)max_cn);
;** 217	-----------------------    free((void *)mean_cn);
;** 218	-----------------------    free((void *)var_cn);
;** 51	-----------------------    U$11 += 36;
;** 51	-----------------------    U$12 += 36;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 208,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL37,B3,0      ; |208| 
$C$RL37:   ; CALL OCCURS {VLIB_align_free} {0}  ; |208| 
$C$DW$L$VLIB_blockStatistics_d$64$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$65$B:
;          EXCLUSIVE CPU CYCLES: 54
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$228, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(84),A4       ; |209| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 209,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 209 | VLIB_align_free(min_opt);                                              
;----------------------------------------------------------------------
$C$RL38:   ; CALL OCCURS {VLIB_align_free} {0}  ; |209| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$229, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(88),A4       ; |210| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 210,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 210 | VLIB_align_free(max_opt);                                              
;----------------------------------------------------------------------
$C$RL39:   ; CALL OCCURS {VLIB_align_free} {0}  ; |210| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$230, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(92),A4       ; |211| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 211,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 211 | VLIB_align_free(mean_opt);                                             
;----------------------------------------------------------------------
$C$RL40:   ; CALL OCCURS {VLIB_align_free} {0}  ; |211| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$231, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(96),A4       ; |212| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 212,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 212 | VLIB_align_free(var_opt);                                              
;----------------------------------------------------------------------
$C$RL41:   ; CALL OCCURS {VLIB_align_free} {0}  ; |212| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$232, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(76),A4       ; |213| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 213,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 213 | VLIB_align_free(scratch);                                              
;----------------------------------------------------------------------
$C$RL42:   ; CALL OCCURS {VLIB_align_free} {0}  ; |213| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("free")
	.dwattr $C$DW$233, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(100),A4      ; |215| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 215,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 215 | align_free(min_cn);                                                    
;----------------------------------------------------------------------
$C$RL43:   ; CALL OCCURS {free} {0}          ; |215| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("free")
	.dwattr $C$DW$234, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(104),A4      ; |216| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 216,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | align_free(max_cn);                                                    
;----------------------------------------------------------------------
$C$RL44:   ; CALL OCCURS {free} {0}          ; |216| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("free")
	.dwattr $C$DW$235, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(108),A4      ; |217| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 217,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 217 | align_free(mean_cn);                                                   
;----------------------------------------------------------------------
$C$RL45:   ; CALL OCCURS {free} {0}          ; |217| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("free")
	.dwattr $C$DW$236, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(112),A4      ; |218| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 218,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | align_free(var_cn);                                                    
;----------------------------------------------------------------------
$C$RL46:   ; CALL OCCURS {free} {0}          ; |218| 
$C$DW$L$VLIB_blockStatistics_d$65$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blockStatistics_d$66$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |51| 
           ADDK    .S2     36,B11            ; |51| 
           ADD     .L1     1,A13,A13         ; |51| 
           ADDK    .S1     36,A14            ; |51| 
           NOP             1
           CMPGT   .L1     A3,A13,A0         ; |51| 
   [ A0]   BNOP    .S1     $C$L1,5           ; |51| 
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_blockStatistics_d$66$E:
;** --------------------------------------------------------------------------*
$C$L27:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g36:
;** 222	-----------------------    VLIB_profile_cycle_report(1, NULL, "imageWidth*imageHeight");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [17]
;** 168	-----------------------    VLIB_stack_memory();  // [17]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL8+0,A6
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$237, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL8+0,A6
||         MVK     .L1     0x1,A4            ; |222| 
||         ZERO    .L2     B4                ; |222| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 222,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 222 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 223 |                           NULL,                                        
; 224 |                           "imageWidth*imageHeight");                   
; 227 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL47:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |222| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL9+0,B4
           MVKH    .S2     $C$SL9+0,B4
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("printf")
	.dwattr $C$DW$238, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL48:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$239, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL49:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c",line 229,column 1,is_stmt,isa 0
           ADDK    .S2     136,SP            ; |229| 
	.dwcfi	cfa_offset, 56
           LDW     .D2T2   *++SP(8),B3
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |229| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$241	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$241, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.se66:$C$L1:1:1443280141")
	.dwattr $C$DW$241, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$241, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$241, DW_AT_TI_end_line(0xdb)
$C$DW$242	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$242, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$4$B)
	.dwattr $C$DW$242, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$4$E)
$C$DW$243	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$243, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$62$B)
	.dwattr $C$DW$243, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$62$E)
$C$DW$244	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$244, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$36$B)
	.dwattr $C$DW$244, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$36$E)
$C$DW$245	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$245, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$37$B)
	.dwattr $C$DW$245, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$37$E)
$C$DW$246	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$246, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$35$B)
	.dwattr $C$DW$246, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$35$E)
$C$DW$247	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$247, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$12$B)
	.dwattr $C$DW$247, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$12$E)
$C$DW$248	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$248, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$13$B)
	.dwattr $C$DW$248, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$13$E)
$C$DW$249	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$249, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$5$B)
	.dwattr $C$DW$249, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$5$E)
$C$DW$250	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$250, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$6$B)
	.dwattr $C$DW$250, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$6$E)
$C$DW$251	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$251, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$7$B)
	.dwattr $C$DW$251, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$7$E)
$C$DW$252	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$252, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$8$B)
	.dwattr $C$DW$252, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$8$E)
$C$DW$253	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$253, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$9$B)
	.dwattr $C$DW$253, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$9$E)
$C$DW$254	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$254, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$10$B)
	.dwattr $C$DW$254, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$10$E)
$C$DW$255	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$255, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$11$B)
	.dwattr $C$DW$255, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$11$E)
$C$DW$256	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$256, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$34$B)
	.dwattr $C$DW$256, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$34$E)
$C$DW$257	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$257, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$58$B)
	.dwattr $C$DW$257, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$58$E)
$C$DW$258	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$258, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$59$B)
	.dwattr $C$DW$258, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$59$E)
$C$DW$259	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$259, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$60$B)
	.dwattr $C$DW$259, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$60$E)
$C$DW$260	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$260, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$61$B)
	.dwattr $C$DW$260, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$61$E)
$C$DW$261	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$261, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$63$B)
	.dwattr $C$DW$261, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$63$E)
$C$DW$262	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$262, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$64$B)
	.dwattr $C$DW$262, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$64$E)
$C$DW$263	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$263, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$65$B)
	.dwattr $C$DW$263, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$65$E)
$C$DW$264	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$264, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$66$B)
	.dwattr $C$DW$264, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$66$E)

$C$DW$265	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$265, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.se66:$C$L13:2:1443280141")
	.dwattr $C$DW$265, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$265, DW_AT_TI_begin_line(0xa5)
	.dwattr $C$DW$265, DW_AT_TI_end_line(0xbc)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$38$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$38$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$53$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$53$E)
$C$DW$268	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$268, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$54$B)
	.dwattr $C$DW$268, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$54$E)
$C$DW$269	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$269, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$49$B)
	.dwattr $C$DW$269, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$49$E)
$C$DW$270	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$270, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$47$B)
	.dwattr $C$DW$270, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$47$E)
$C$DW$271	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$271, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$45$B)
	.dwattr $C$DW$271, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$45$E)
$C$DW$272	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$272, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$46$B)
	.dwattr $C$DW$272, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$46$E)
$C$DW$273	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$273, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$48$B)
	.dwattr $C$DW$273, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$48$E)
$C$DW$274	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$274, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$50$B)
	.dwattr $C$DW$274, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$50$E)
$C$DW$275	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$275, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$55$B)
	.dwattr $C$DW$275, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$55$E)
$C$DW$276	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$276, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$39$B)
	.dwattr $C$DW$276, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$39$E)
$C$DW$277	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$277, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$43$B)
	.dwattr $C$DW$277, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$43$E)
$C$DW$278	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$278, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$44$B)
	.dwattr $C$DW$278, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$44$E)
$C$DW$279	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$279, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$51$B)
	.dwattr $C$DW$279, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$51$E)
$C$DW$280	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$280, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$52$B)
	.dwattr $C$DW$280, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$52$E)
$C$DW$281	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$281, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$56$B)
	.dwattr $C$DW$281, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$56$E)
$C$DW$282	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$282, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$57$B)
	.dwattr $C$DW$282, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$57$E)

$C$DW$283	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$283, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.se66:$C$L15:3:1443280141")
	.dwattr $C$DW$283, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$283, DW_AT_TI_begin_line(0xa6)
	.dwattr $C$DW$283, DW_AT_TI_end_line(0xbb)
$C$DW$284	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$284, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$41$B)
	.dwattr $C$DW$284, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$41$E)
	.dwendtag $C$DW$283

	.dwendtag $C$DW$265


$C$DW$285	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$285, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.se66:$C$L2:2:1443280141")
	.dwattr $C$DW$285, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$285, DW_AT_TI_begin_line(0x8a)
	.dwattr $C$DW$285, DW_AT_TI_end_line(0xa1)
$C$DW$286	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$286, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$14$B)
	.dwattr $C$DW$286, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$14$E)
$C$DW$287	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$287, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$29$B)
	.dwattr $C$DW$287, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$29$E)
$C$DW$288	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$288, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$30$B)
	.dwattr $C$DW$288, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$30$E)
$C$DW$289	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$289, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$25$B)
	.dwattr $C$DW$289, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$25$E)
$C$DW$290	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$290, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$23$B)
	.dwattr $C$DW$290, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$23$E)
$C$DW$291	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$291, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$21$B)
	.dwattr $C$DW$291, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$21$E)
$C$DW$292	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$292, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$22$B)
	.dwattr $C$DW$292, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$22$E)
$C$DW$293	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$293, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$24$B)
	.dwattr $C$DW$293, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$24$E)
$C$DW$294	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$294, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$26$B)
	.dwattr $C$DW$294, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$26$E)
$C$DW$295	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$295, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$31$B)
	.dwattr $C$DW$295, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$31$E)
$C$DW$296	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$296, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$15$B)
	.dwattr $C$DW$296, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$15$E)
$C$DW$297	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$297, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$19$B)
	.dwattr $C$DW$297, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$19$E)
$C$DW$298	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$298, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$20$B)
	.dwattr $C$DW$298, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$20$E)
$C$DW$299	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$299, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$27$B)
	.dwattr $C$DW$299, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$27$E)
$C$DW$300	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$300, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$28$B)
	.dwattr $C$DW$300, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$28$E)
$C$DW$301	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$301, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$32$B)
	.dwattr $C$DW$301, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$32$E)
$C$DW$302	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$302, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$33$B)
	.dwattr $C$DW$302, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$33$E)

$C$DW$303	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$303, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.se66:$C$L4:3:1443280141")
	.dwattr $C$DW$303, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$303, DW_AT_TI_begin_line(0x8b)
	.dwattr $C$DW$303, DW_AT_TI_end_line(0xa0)
$C$DW$304	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$304, DW_AT_low_pc($C$DW$L$VLIB_blockStatistics_d$17$B)
	.dwattr $C$DW$304, DW_AT_high_pc($C$DW$L$VLIB_blockStatistics_d$17$E)
	.dwendtag $C$DW$303

	.dwendtag $C$DW$285

	.dwendtag $C$DW$241

	.dwattr $C$DW$89, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_blockStatistics/VLIB_blockStatistics_d.c")
	.dwattr $C$DW$89, DW_AT_TI_end_line(0xe5)
	.dwattr $C$DW$89, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$89

;; Inlined function references:
;; [ 14] VLIB_profile_start
;; [ 15] VLIB_profile_stop
;; [ 17] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_blockStatistics",0
$C$SL2:	.string	"row:%d, col:%d, var_out:%u, var_EOut:%u ",10,0
$C$SL3:	.string	"row:%d, col:%d, mean_out:%u, mean_EOut:%u ",10,0
$C$SL4:	.string	"row:%d, col:%d, max_out:%u, max_EOut:%u ",10,0
$C$SL5:	.string	"row:%d, col:%d, min_out:%u, min_EOut:%u ",10,0
$C$SL6:	.string	"%s generated input | Opt and NatC results compared | imageW"
	.string	"idth= %d, imageHeight= %d, statBlockWidth= %d, statBlockHei"
	.string	"ght= %d, mode = %d",0
$C$SL7:	.string	"imageWidth= %d, imageHeight= %d, statBlockWidth= %d, statBl"
	.string	"ockHeight= %d ",0
$C$SL8:	.string	"imageWidth*imageHeight",0
$C$SL9:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	free
	.global	memalign
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_memalign
	.global	VLIB_align_free
	.global	VLIB_blockStatistics
	.global	VLIB_blockStatistics_cn
	.global	blockStatistics_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles
	.global	__c6xabi_divi

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$39	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x04)
$C$DW$305	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$305, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$305, DW_AT_decl_column(0x05)
$C$DW$306	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$306, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$306, DW_AT_decl_column(0x05)
$C$DW$307	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$307, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$307, DW_AT_decl_column(0x05)
$C$DW$308	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$308, DW_AT_decl_column(0x05)
$C$DW$309	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$309, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$309, DW_AT_decl_column(0x05)
$C$DW$310	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$310, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$310, DW_AT_decl_column(0x05)
$C$DW$311	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$311, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x80)
	.dwattr $C$DW$311, DW_AT_decl_column(0x05)
$C$DW$312	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$312, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x81)
	.dwattr $C$DW$312, DW_AT_decl_column(0x05)
$C$DW$313	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$313, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x82)
	.dwattr $C$DW$313, DW_AT_decl_column(0x05)
$C$DW$314	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$314, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x83)
	.dwattr $C$DW$314, DW_AT_decl_column(0x05)
$C$DW$315	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$315, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x84)
	.dwattr $C$DW$315, DW_AT_decl_column(0x05)
$C$DW$316	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$316, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x85)
	.dwattr $C$DW$316, DW_AT_decl_column(0x05)
$C$DW$317	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$317, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x86)
	.dwattr $C$DW$317, DW_AT_decl_column(0x05)
$C$DW$318	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$318, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x87)
	.dwattr $C$DW$318, DW_AT_decl_column(0x05)
$C$DW$319	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$319, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x88)
	.dwattr $C$DW$319, DW_AT_decl_column(0x05)
$C$DW$320	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$320, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x89)
	.dwattr $C$DW$320, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x0e)
$C$DW$T$40	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$40, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x03)

$C$DW$T$41	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x04)
$C$DW$321	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$321, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$321, DW_AT_decl_column(0x05)
$C$DW$322	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$322, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$322, DW_AT_decl_column(0x05)
$C$DW$323	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$323, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$323, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$41

	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x06)

$C$DW$T$42	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x04)
$C$DW$324	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$324, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x72)
	.dwattr $C$DW$324, DW_AT_decl_column(0x05)
$C$DW$325	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$325, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x73)
	.dwattr $C$DW$325, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\../common/VLIB_test.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x06)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x24)
$C$DW$326	.dwtag  DW_TAG_member
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$326, DW_AT_name("testPattern")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$326, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$326, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$326, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$326, DW_AT_decl_line(0x24)
	.dwattr $C$DW$326, DW_AT_decl_column(0x0f)
$C$DW$327	.dwtag  DW_TAG_member
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$327, DW_AT_name("staticIn")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$327, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$327, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$327, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$327, DW_AT_decl_line(0x25)
	.dwattr $C$DW$327, DW_AT_decl_column(0x0f)
$C$DW$328	.dwtag  DW_TAG_member
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$328, DW_AT_name("staticOutMin")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("staticOutMin")
	.dwattr $C$DW$328, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$328, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$328, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$328, DW_AT_decl_line(0x26)
	.dwattr $C$DW$328, DW_AT_decl_column(0x0f)
$C$DW$329	.dwtag  DW_TAG_member
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$329, DW_AT_name("staticOutMax")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("staticOutMax")
	.dwattr $C$DW$329, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$329, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$329, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$329, DW_AT_decl_line(0x27)
	.dwattr $C$DW$329, DW_AT_decl_column(0x0f)
$C$DW$330	.dwtag  DW_TAG_member
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$330, DW_AT_name("staticOutMean")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("staticOutMean")
	.dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$330, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$330, DW_AT_decl_line(0x28)
	.dwattr $C$DW$330, DW_AT_decl_column(0x0f)
$C$DW$331	.dwtag  DW_TAG_member
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$331, DW_AT_name("staticOutVar")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("staticOutVar")
	.dwattr $C$DW$331, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$331, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$331, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$331, DW_AT_decl_line(0x29)
	.dwattr $C$DW$331, DW_AT_decl_column(0x0f)
$C$DW$332	.dwtag  DW_TAG_member
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$332, DW_AT_name("mode")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("mode")
	.dwattr $C$DW$332, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$332, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$332, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$332, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$332, DW_AT_decl_column(0x0f)
$C$DW$333	.dwtag  DW_TAG_member
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$333, DW_AT_name("imageWidth")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$333, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$333, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$333, DW_AT_decl_column(0x0f)
$C$DW$334	.dwtag  DW_TAG_member
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$334, DW_AT_name("imageHeight")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$334, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$334, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$334, DW_AT_decl_column(0x0f)
$C$DW$335	.dwtag  DW_TAG_member
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$335, DW_AT_name("imagePitch")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("imagePitch")
	.dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x1e]
	.dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$335, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$335, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$335, DW_AT_decl_column(0x0f)
$C$DW$336	.dwtag  DW_TAG_member
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$336, DW_AT_name("statBlockWidth")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("statBlockWidth")
	.dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$336, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$336, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$336, DW_AT_decl_column(0x0f)
$C$DW$337	.dwtag  DW_TAG_member
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$337, DW_AT_name("statBlockHeight")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("statBlockHeight")
	.dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$337, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$337, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$337, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$43	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$43, DW_AT_address_class(0x20)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("blockStatistics_testParams_t")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\VLIB_blockStatistics_idat.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x03)
$C$DW$T$46	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$46, DW_AT_address_class(0x20)
$C$DW$T$47	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$47, DW_AT_address_class(0x20)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x18)
$C$DW$338	.dwtag  DW_TAG_member
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$338, DW_AT_name("fd")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$338, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$338, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$338, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$338, DW_AT_decl_line(0x49)
	.dwattr $C$DW$338, DW_AT_decl_column(0x0b)
$C$DW$339	.dwtag  DW_TAG_member
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$339, DW_AT_name("buf")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$339, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$339, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$339, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$339, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$339, DW_AT_decl_column(0x16)
$C$DW$340	.dwtag  DW_TAG_member
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$340, DW_AT_name("pos")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$340, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$340, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$340, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$340, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$340, DW_AT_decl_column(0x16)
$C$DW$341	.dwtag  DW_TAG_member
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$341, DW_AT_name("bufend")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$341, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$341, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$341, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$341, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$341, DW_AT_decl_column(0x16)
$C$DW$342	.dwtag  DW_TAG_member
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$342, DW_AT_name("buff_stop")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$342, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$342, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$342, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$342, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$342, DW_AT_decl_column(0x16)
$C$DW$343	.dwtag  DW_TAG_member
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$343, DW_AT_name("flags")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$343, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$343, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$343, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$343, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$343, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x03)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x08)
$C$DW$344	.dwtag  DW_TAG_member
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$344, DW_AT_name("quot")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$344, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$344, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$344, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$344, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$344, DW_AT_decl_column(0x16)
$C$DW$345	.dwtag  DW_TAG_member
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$345, DW_AT_name("rem")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$345, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$345, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$345, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$345, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$345, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x23)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x08)
$C$DW$346	.dwtag  DW_TAG_member
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$346, DW_AT_name("quot")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$346, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$346, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$346, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$346, DW_AT_decl_line(0x40)
	.dwattr $C$DW$346, DW_AT_decl_column(0x17)
$C$DW$347	.dwtag  DW_TAG_member
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$347, DW_AT_name("rem")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$347, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$347, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$347, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$347, DW_AT_decl_line(0x40)
	.dwattr $C$DW$347, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x24)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x10)
$C$DW$348	.dwtag  DW_TAG_member
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$348, DW_AT_name("quot")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$348, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$348, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$348, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$348, DW_AT_decl_line(0x43)
	.dwattr $C$DW$348, DW_AT_decl_column(0x1c)
$C$DW$349	.dwtag  DW_TAG_member
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$349, DW_AT_name("rem")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$349, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$349, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$349, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$349, DW_AT_decl_line(0x43)
	.dwattr $C$DW$349, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x29)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x24)
$C$DW$350	.dwtag  DW_TAG_member
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$350, DW_AT_name("area")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$350, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$350, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$350, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$350, DW_AT_decl_line(0x69)
	.dwattr $C$DW$350, DW_AT_decl_column(0x0d)
$C$DW$351	.dwtag  DW_TAG_member
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$351, DW_AT_name("xsum")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$351, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$351, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$351, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$351, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$351, DW_AT_decl_column(0x0d)
$C$DW$352	.dwtag  DW_TAG_member
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$352, DW_AT_name("ysum")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$352, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$352, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$352, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$352, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$352, DW_AT_decl_column(0x0d)
$C$DW$353	.dwtag  DW_TAG_member
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$353, DW_AT_name("xmin")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$353, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$353, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$353, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$353, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$353, DW_AT_decl_column(0x0d)
$C$DW$354	.dwtag  DW_TAG_member
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$354, DW_AT_name("ymin")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$354, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$354, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$354, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$354, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$354, DW_AT_decl_column(0x0d)
$C$DW$355	.dwtag  DW_TAG_member
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$355, DW_AT_name("xmax")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$355, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$355, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$355, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$355, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$355, DW_AT_decl_column(0x0d)
$C$DW$356	.dwtag  DW_TAG_member
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$356, DW_AT_name("ymax")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$356, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$356, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$356, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$356, DW_AT_decl_line(0x70)
	.dwattr $C$DW$356, DW_AT_decl_column(0x0d)
$C$DW$357	.dwtag  DW_TAG_member
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$357, DW_AT_name("seedx")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$357, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$357, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$357, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$357, DW_AT_decl_line(0x72)
	.dwattr $C$DW$357, DW_AT_decl_column(0x0d)
$C$DW$358	.dwtag  DW_TAG_member
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$358, DW_AT_name("seedy")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$358, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$358, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$358, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$358, DW_AT_decl_line(0x73)
	.dwattr $C$DW$358, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x03)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x10)
$C$DW$359	.dwtag  DW_TAG_member
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$359, DW_AT_name("daylight")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$359, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$359, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$359, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$359, DW_AT_decl_line(0x52)
	.dwattr $C$DW$359, DW_AT_decl_column(0x0b)
$C$DW$360	.dwtag  DW_TAG_member
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$360, DW_AT_name("timezone")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$360, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$360, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$360, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$360, DW_AT_decl_line(0x53)
	.dwattr $C$DW$360, DW_AT_decl_column(0x0b)
$C$DW$361	.dwtag  DW_TAG_member
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$361, DW_AT_name("tzname")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$361, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$361, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$361, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$361, DW_AT_decl_line(0x54)
	.dwattr $C$DW$361, DW_AT_decl_column(0x0b)
$C$DW$362	.dwtag  DW_TAG_member
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$362, DW_AT_name("dstname")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$362, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$362, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$362, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$362, DW_AT_decl_line(0x55)
	.dwattr $C$DW$362, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x01)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$82	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$82, DW_AT_address_class(0x20)
$C$DW$T$96	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$96, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$96, DW_AT_decl_column(0x1d)
$C$DW$T$97	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$97, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$97, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$97, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$98	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$20)
$C$DW$T$99	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$19)
$C$DW$T$100	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_address_class(0x20)
$C$DW$T$101	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$100)
$C$DW$T$102	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$102, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$102, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$103	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$103, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$103, DW_AT_decl_column(0x1d)
$C$DW$T$104	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$104, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$T$104, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$104, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$104, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$104, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1c)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$107	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$22)
$C$DW$T$108	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$108, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$108, DW_AT_decl_column(0x16)
$C$DW$T$106	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$106, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$106, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$124	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$124, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$124, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$124, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$124, DW_AT_decl_column(0x0d)
$C$DW$T$31	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$31, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x1d)
$C$DW$T$118	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$118, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$118, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$118, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$118, DW_AT_decl_column(0x11)

$C$DW$T$36	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x10)
$C$DW$363	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$363, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$36

$C$DW$T$78	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$78, DW_AT_address_class(0x20)
$C$DW$T$119	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$119, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$119, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$119, DW_AT_decl_column(0x17)
$C$DW$T$120	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$120, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$120, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$120, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$120, DW_AT_decl_column(0x17)
$C$DW$T$121	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$121, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$121, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$121, DW_AT_decl_column(0x17)
$C$DW$T$122	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$122, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$122, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$122, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$122, DW_AT_decl_column(0x17)
$C$DW$T$123	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$123, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$123, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$123, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$123, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$123, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$125	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$125, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$125, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$125, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$125, DW_AT_decl_column(0x17)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x16)
$C$DW$T$55	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$55, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$55, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x19)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x16)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1c)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$130	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$24)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x16)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x16)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x16)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x16)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x21)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x17)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x20)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x16)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x21)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x17)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x17)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$154	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$154, DW_AT_address_class(0x20)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x20)

$C$DW$T$156	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_byte_size(0x10)
$C$DW$364	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$364, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$156

$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x16)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x16)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x0f)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blockStatistics\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x10)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$33	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$33, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$33, DW_AT_name("signed char")
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x01)

$C$DW$T$34	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$34, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x04)
$C$DW$365	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$365, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$34

$C$DW$T$60	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$60, DW_AT_address_class(0x20)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x12)
$C$DW$T$109	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$109, DW_AT_type(*$C$DW$T$33)
$C$DW$T$110	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$110, DW_AT_address_class(0x20)

$C$DW$T$165	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
$C$DW$366	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$165


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x10)
$C$DW$367	.dwtag  DW_TAG_member
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_name("_v")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$367, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$367, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$367, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$367, DW_AT_decl_line(0x44)
	.dwattr $C$DW$367, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x01)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x01)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$166)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x13)

$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("tm")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x24)
$C$DW$368	.dwtag  DW_TAG_member
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$368, DW_AT_name("tm_sec")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$368, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$368, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$368, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$368, DW_AT_decl_line(0x41)
	.dwattr $C$DW$368, DW_AT_decl_column(0x09)
$C$DW$369	.dwtag  DW_TAG_member
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$369, DW_AT_name("tm_min")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$369, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$369, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$369, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$369, DW_AT_decl_line(0x42)
	.dwattr $C$DW$369, DW_AT_decl_column(0x09)
$C$DW$370	.dwtag  DW_TAG_member
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$370, DW_AT_name("tm_hour")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$370, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$370, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$370, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$370, DW_AT_decl_line(0x43)
	.dwattr $C$DW$370, DW_AT_decl_column(0x09)
$C$DW$371	.dwtag  DW_TAG_member
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$371, DW_AT_name("tm_mday")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$371, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$371, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$371, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$371, DW_AT_decl_line(0x44)
	.dwattr $C$DW$371, DW_AT_decl_column(0x09)
$C$DW$372	.dwtag  DW_TAG_member
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$372, DW_AT_name("tm_mon")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$372, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$372, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$372, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$372, DW_AT_decl_line(0x45)
	.dwattr $C$DW$372, DW_AT_decl_column(0x09)
$C$DW$373	.dwtag  DW_TAG_member
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$373, DW_AT_name("tm_year")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$373, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$373, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$373, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$373, DW_AT_decl_line(0x46)
	.dwattr $C$DW$373, DW_AT_decl_column(0x09)
$C$DW$374	.dwtag  DW_TAG_member
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$374, DW_AT_name("tm_wday")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$374, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$374, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$374, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$374, DW_AT_decl_line(0x47)
	.dwattr $C$DW$374, DW_AT_decl_column(0x09)
$C$DW$375	.dwtag  DW_TAG_member
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$375, DW_AT_name("tm_yday")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$375, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$375, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$375, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$375, DW_AT_decl_line(0x48)
	.dwattr $C$DW$375, DW_AT_decl_column(0x09)
$C$DW$376	.dwtag  DW_TAG_member
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$376, DW_AT_name("tm_isdst")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$376, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$376, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$376, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$376, DW_AT_decl_line(0x49)
	.dwattr $C$DW$376, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

