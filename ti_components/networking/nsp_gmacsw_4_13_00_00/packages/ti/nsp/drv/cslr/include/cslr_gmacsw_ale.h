/*
 * Copyright (C) 2013 Texas Instruments Incorporated - http://www.ti.com/
 *
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*! ============================================================================
 *   \file  cslr_gmacsw_ale.h
 *
 *   @path  $(CSLPATH)\inc
 *
 *   @desc  This file contains the Register Descriptions for GMAC_SW ALE
 *
 *  ============================================================================
 */

#ifndef CSLR_GMACSW_ALE_H_
#define CSLR_GMACSW_ALE_H_

#ifdef __cplusplus
extern "C" {
#endif


/*---------------------------------------------------------------------------*\
|                                Header Files                                 |
\*---------------------------------------------------------------------------*/

/* Standard language headers */
#include <stdlib.h>
#include <stdint.h>

/* OS/Posix headers */

/* Project dependency headers */


/*---------------------------------------------------------------------------*\
|                           Global Typedefs/Enums                             |
\*---------------------------------------------------------------------------*/

typedef struct
{
#if defined(DEVICE_CENTAURUS)
    volatile uint8_t  RSVD0[0x600U];        /* offset since union is used for Centaurus */
#endif
    volatile uint32_t ALE_IDVER;            /* 0x000U */
    volatile uint8_t  RSVD1[4];
    volatile uint32_t ALE_CONTROL;
    volatile uint8_t  RSVD2[4];
    volatile uint32_t ALE_PRESCALE;         /* 0x010U */
    volatile uint8_t  RSVD3[4];
    volatile uint32_t ALE_UNKNOWN_VLAN;
    volatile uint8_t  RSVD4[4];
    volatile uint32_t ALE_TBLCTL;           /* 0x020U */
    volatile uint8_t  RSVD5[16];            /* 0x024U */
    volatile uint32_t ALE_TBLW2;            /* 0x034U */
    volatile uint32_t ALE_TBLW1;
    volatile uint32_t ALE_TBLW0;
    volatile uint32_t ALE_PORTCTL[6];       /* 0x040U */
    volatile uint8_t  RSVD6[40];            /* 0x058U */
}
CSL_GMACSW_aleRegs;


/*---------------------------------------------------------------------------*\
|                           Global Macros/Defines                             |
\*---------------------------------------------------------------------------*/

/* Field Definition Macros */

/* ALE_IDVER */

#define CSL_GMACSW_ALE_IDVER_ALE_IDENT_MASK (0xFFFF0000U)
#define CSL_GMACSW_ALE_IDVER_ALE_IDENT_SHIFT ((uint32_t)0x00000010U)
#define CSL_GMACSW_ALE_IDVER_ALE_IDENT_RESETVAL (0x00000029U)

#define CSL_GMACSW_ALE_IDVER_ALE_MAJ_VER_MASK (0x0000FF00U)
#define CSL_GMACSW_ALE_IDVER_ALE_MAJ_VER_SHIFT ((uint32_t)0x00000008U)
#define CSL_GMACSW_ALE_IDVER_ALE_MAJ_VER_RESETVAL (0x00000001U)

#define CSL_GMACSW_ALE_IDVER_ALE_MINOR_VER_MASK (0x000000FFU)
#define CSL_GMACSW_ALE_IDVER_ALE_MINOR_VER_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_IDVER_ALE_MINOR_VER_RESETVAL (0x00000001U)

#define CSL_GMACSW_ALE_IDVER_RESETVAL (0x00290101U)


/* ALE_Control */

#define CSL_GMACSW_ALE_CONTROL_ENABLE_ALE_MASK (0x80000000U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_ALE_SHIFT ((uint32_t)0x0000001FU)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_ALE_RESETVAL (0x00000000U)
/*----enable_ale Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_ENABLE_ALE_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_ALE_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_CLEAR_TABLE_MASK (0x40000000U)
#define CSL_GMACSW_ALE_CONTROL_CLEAR_TABLE_SHIFT ((uint32_t)0x0000001EU)
#define CSL_GMACSW_ALE_CONTROL_CLEAR_TABLE_RESETVAL (0x00000000U)
/*----clear_table Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_CLEAR_TABLE_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_CLEAR_TABLE_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_AGE_OUT_NOW_MASK (0x20000000U)
#define CSL_GMACSW_ALE_CONTROL_AGE_OUT_NOW_SHIFT ((uint32_t)0x0000001DU)
#define CSL_GMACSW_ALE_CONTROL_AGE_OUT_NOW_RESETVAL (0x00000000U)
/*----age_out_now Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_AGE_OUT_NOW_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_AGE_OUT_NOW_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_LEARN_NO_VID_MASK (0x00000080U)
#define CSL_GMACSW_ALE_CONTROL_LEARN_NO_VID_SHIFT ((uint32_t)0x00000007U)
#define CSL_GMACSW_ALE_CONTROL_LEARN_NO_VID_RESETVAL (0x00000000U)
/*----learn_no_vid Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_LEARN_NO_VID_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_LEARN_NO_VID_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_EN_VID0_MODE_MASK (0x00000040U)
#define CSL_GMACSW_ALE_CONTROL_EN_VID0_MODE_SHIFT ((uint32_t)0x00000006U)
#define CSL_GMACSW_ALE_CONTROL_EN_VID0_MODE_RESETVAL (0x00000000U)
/*----en_vid0_mode Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_EN_VID0_MODE_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_EN_VID0_MODE_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_ENABLE_OUI_DENY_MASK (0x00000020U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_OUI_DENY_SHIFT ((uint32_t)0x00000005U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_OUI_DENY_RESETVAL (0x00000000U)
/*----enable_oui_deny Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_ENABLE_OUI_DENY_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_OUI_DENY_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_ALE_BYPASS_MASK (0x00000010U)
#define CSL_GMACSW_ALE_CONTROL_ALE_BYPASS_SHIFT ((uint32_t)0x00000004U)
#define CSL_GMACSW_ALE_CONTROL_ALE_BYPASS_RESETVAL (0x00000000U)
/*----ale_bypass Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_ALE_BYPASS_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ALE_BYPASS_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_RATE_LIMIT_TX_MASK (0x00000008U)
#define CSL_GMACSW_ALE_CONTROL_RATE_LIMIT_TX_SHIFT ((uint32_t)0x00000003U)
#define CSL_GMACSW_ALE_CONTROL_RATE_LIMIT_TX_RESETVAL (0x00000000U)
/*----rate_limit_tx Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_RATE_LIMIT_TX_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_RATE_LIMIT_TX_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_ALE_VLAN_AWARE_MASK (0x00000004U)
#define CSL_GMACSW_ALE_CONTROL_ALE_VLAN_AWARE_SHIFT ((uint32_t)0x00000002U)
#define CSL_GMACSW_ALE_CONTROL_ALE_VLAN_AWARE_RESETVAL (0x00000000U)
/*----ale_vlan_aware Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_ALE_VLAN_AWARE_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ALE_VLAN_AWARE_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_ENABLE_AUTH_MODE_MASK (0x00000002U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_AUTH_MODE_SHIFT ((uint32_t)0x00000001U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_AUTH_MODE_RESETVAL (0x00000000U)
/*----enable_auth_mode Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_ENABLE_AUTH_MODE_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_AUTH_MODE_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_ENABLE_RATE_LIMIT_MASK (0x00000001U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_RATE_LIMIT_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_RATE_LIMIT_RESETVAL (0x00000000U)
/*----enable_rate_limit Tokens----*/
#define CSL_GMACSW_ALE_CONTROL_ENABLE_RATE_LIMIT_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_CONTROL_ENABLE_RATE_LIMIT_ENABLE (0x00000001U)

#define CSL_GMACSW_ALE_CONTROL_RESETVAL (0x00000000U)


/* ALE_Prescale */

#define CSL_GMACSW_ALE_PRESCALE_ALE_PRESCALE_MASK (0x000FFFFFU)
#define CSL_GMACSW_ALE_PRESCALE_ALE_PRESCALE_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_PRESCALE_ALE_PRESCALE_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_PRESCALE_RESETVAL (0x00000000U)


/* ALE_Unknown_VLAN */

#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_FORCE_UNTAGGED_EGRESS_MASK (0x3F000000U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_FORCE_UNTAGGED_EGRESS_SHIFT ((uint32_t)0x00000018U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_FORCE_UNTAGGED_EGRESS_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_REG_MCAST_FLOOD_MASK_MASK (0x003F0000U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_REG_MCAST_FLOOD_MASK_SHIFT ((uint32_t)0x00000010U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_REG_MCAST_FLOOD_MASK_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_MCAST_FLOOD_MASK_MASK (0x00003F00U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_MCAST_FLOOD_MASK_SHIFT ((uint32_t)0x00000008U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_MCAST_FLOOD_MASK_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_VLAN_MEMBER_LIST_MASK ((uint32_t)0x0000001FU)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_VLAN_MEMBER_LIST_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_UNKNOWN_VLAN_UNKNOWN_VLAN_MEMBER_LIST_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_UNKNOWN_VLAN_RESETVAL ((uint32_t)0x00000000U)


/* ALE_TBLCTL */

#define CSL_GMACSW_ALE_TBLCTL_WRITE_RDZ_MASK (0x80000000U)
#define CSL_GMACSW_ALE_TBLCTL_WRITE_RDZ_SHIFT ((uint32_t)0x0000001FU)
#define CSL_GMACSW_ALE_TBLCTL_WRITE_RDZ_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_TBLCTL_ENTRY_POINTER_MASK (0x000003FFU)
#define CSL_GMACSW_ALE_TBLCTL_ENTRY_POINTER_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_TBLCTL_ENTRY_POINTER_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_TBLCTL_RESETVAL ((uint32_t)0x00000000U)


/* ALE_TBLW2 */

#define CSL_GMACSW_ALE_TBLW2_ENTRY_MASK (0x000000FFU)
#define CSL_GMACSW_ALE_TBLW2_ENTRY_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_TBLW2_ENTRY_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_TBLW2_RESETVAL ((uint32_t)0x00000000U)


/* ALE_TBLW1 */

#define CSL_GMACSW_ALE_TBLW1_ENTRY_MASK (0xFFFFFFFFU)
#define CSL_GMACSW_ALE_TBLW1_ENTRY_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_TBLW1_ENTRY_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_TBLW1_RESETVAL ((uint32_t)0x00000000U)


/* ALE_TBLW0 */

#define CSL_GMACSW_ALE_TBLW0_ENTRY_MASK (0xFFFFFFFFU)
#define CSL_GMACSW_ALE_TBLW0_ENTRY_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_TBLW0_ENTRY_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_TBLW0_RESETVAL ((uint32_t)0x00000000U)


/* ALE_PORTCTL */

#define CSL_GMACSW_ALE_PORTCTL_BCAST_LIMIT_MASK (0xFF000000U)
#define CSL_GMACSW_ALE_PORTCTL_BCAST_LIMIT_SHIFT ((uint32_t)0x00000018U)
#define CSL_GMACSW_ALE_PORTCTL_BCAST_LIMIT_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_PORTCTL_MCAST_LIMIT_MASK ((uint32_t)0x00FF0000U)
#define CSL_GMACSW_ALE_PORTCTL_MCAST_LIMIT_SHIFT ((uint32_t)0x00000010U)
#define CSL_GMACSW_ALE_PORTCTL_MCAST_LIMIT_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_PORTCTL_NO_LEARN_MASK ((uint32_t)0x00000010U)
#define CSL_GMACSW_ALE_PORTCTL_NO_LEARN_SHIFT ((uint32_t)0x00000004U)
#define CSL_GMACSW_ALE_PORTCTL_NO_LEARN_RESETVAL ((uint32_t)0x00000000U)

#define CSL_GMACSW_ALE_PORTCTL_VID_INGRESS_CHECK_MASK ((uint32_t)0x00000008U)
#define CSL_GMACSW_ALE_PORTCTL_VID_INGRESS_CHECK_SHIFT ((uint32_t)0x00000003U)
#define CSL_GMACSW_ALE_PORTCTL_VID_INGRESS_CHECK_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_PORTCTL_DROP_UNTAGGED_MASK ((uint32_t)0x00000004U)
#define CSL_GMACSW_ALE_PORTCTL_DROP_UNTAGGED_SHIFT ((uint32_t)0x00000002U)
#define CSL_GMACSW_ALE_PORTCTL_DROP_UNTAGGED_RESETVAL (0x00000000U)

#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_MASK ((uint32_t)0x00000003U)
#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_RESETVAL ((uint32_t)0x00000000U)
/*----port_state Tokens----*/
#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_DISABLE (0x00000000U)
#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_BLOCK (0x00000001U)
#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_LEARN (0x00000002U)
#define CSL_GMACSW_ALE_PORTCTL_PORT_STATE_FORWARD (0x00000003U)

#define CSL_GMACSW_ALE_PORTCTL_RESETVAL (0x00000000U)


/*---------------------------------------------------------------------------*\
|                                 End of File                                 |
\*---------------------------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

#endif /* _CSLR_GMACSW_ALE_H_ */

