;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:09:12 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("fabsf")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("fabsf")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/mathf.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xa4)
	.dwattr $C$DW$1, DW_AT_decl_column(0x10)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$16)
	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
	.dwattr $C$DW$3, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$3, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$3, DW_AT_decl_column(0x0b)
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$11)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$3


$C$DW$6	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
	.dwattr $C$DW$6, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$6, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$6, DW_AT_decl_column(0x19)
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$109)
$C$DW$8	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$6


$C$DW$9	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
	.dwattr $C$DW$9, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$9, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$9, DW_AT_decl_column(0x19)
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$63)
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$109)
$C$DW$12	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$9


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x82)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$56)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x86)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x58)
	.dwattr $C$DW$17, DW_AT_decl_column(0x05)

$C$DW$18	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwattr $C$DW$18, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$18, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$18, DW_AT_decl_column(0x06)
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$63)
	.dwendtag $C$DW$18


$C$DW$21	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwattr $C$DW$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$21, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$21, DW_AT_decl_column(0x06)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$63)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$21


$C$DW$28	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwattr $C$DW$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$28, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$28, DW_AT_decl_column(0x06)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$63)
	.dwendtag $C$DW$28


$C$DW$30	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwattr $C$DW$30, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$30, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$30, DW_AT_decl_column(0x06)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$10)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$63)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$63)
	.dwendtag $C$DW$30


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x80)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$25)
	.dwendtag $C$DW$34


$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x81)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)

$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x82)
	.dwattr $C$DW$37, DW_AT_decl_column(0x0a)

$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x83)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)

$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$39, DW_AT_decl_column(0x06)
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$19)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$19)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$3)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$3)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$77)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$77)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$77)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$19)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$63)
	.dwendtag $C$DW$39


$C$DW$49	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("VLIB_memalign")
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwattr $C$DW$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h")
	.dwattr $C$DW$49, DW_AT_decl_line(0xb1)
	.dwattr $C$DW$49, DW_AT_decl_column(0x07)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$56)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$56)
	.dwendtag $C$DW$49


$C$DW$52	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwattr $C$DW$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h")
	.dwattr $C$DW$52, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$52, DW_AT_decl_column(0x07)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$56)
	.dwendtag $C$DW$52


$C$DW$54	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("VLIB_align_free")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwattr $C$DW$54, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h")
	.dwattr $C$DW$54, DW_AT_decl_line(0xb6)
	.dwattr $C$DW$54, DW_AT_decl_column(0x07)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$54


$C$DW$56	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwattr $C$DW$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h")
	.dwattr $C$DW$56, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$56, DW_AT_decl_column(0x07)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$56


$C$DW$58	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_convertUYVYint_to_LABpl")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("VLIB_convertUYVYint_to_LABpl")
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwattr $C$DW$58, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\c66/VLIB_convertUYVYint_to_LABpl.h")
	.dwattr $C$DW$58, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$58, DW_AT_decl_column(0x09)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$100)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$25)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$26)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$25)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$104)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$117)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$118)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$118)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$118)
	.dwendtag $C$DW$58


$C$DW$68	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_convertUYVYint_to_LABpl_cn")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("VLIB_convertUYVYint_to_LABpl_cn")
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
	.dwattr $C$DW$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_cn.h")
	.dwattr $C$DW$68, DW_AT_decl_line(0x20)
	.dwattr $C$DW$68, DW_AT_decl_column(0x0c)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$100)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$25)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$26)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$25)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$104)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$22)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$118)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$118)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$118)
	.dwendtag $C$DW$68


$C$DW$78	.dwtag  DW_TAG_subprogram, DW_AT_name("UYVYint_to_LABpl_getTestParams")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("UYVYint_to_LABpl_getTestParams")
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
	.dwattr $C$DW$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$78, DW_AT_decl_line(0x30)
	.dwattr $C$DW$78, DW_AT_decl_column(0x06)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$46)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$80)
	.dwendtag $C$DW$78

$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x60)
	.dwattr $C$DW$81, DW_AT_decl_column(0x13)
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x62)
	.dwattr $C$DW$82, DW_AT_decl_column(0x13)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$169)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x63)
	.dwattr $C$DW$83, DW_AT_decl_column(0x13)
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$169)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x64)
	.dwattr $C$DW$84, DW_AT_decl_column(0x13)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x75)
	.dwattr $C$DW$85, DW_AT_decl_column(0x14)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x76)
	.dwattr $C$DW$86, DW_AT_decl_column(0x14)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x77)
	.dwattr $C$DW$87, DW_AT_decl_column(0x14)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x78)
	.dwattr $C$DW$88, DW_AT_decl_column(0x14)
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h")
	.dwattr $C$DW$89, DW_AT_decl_line(0x79)
	.dwattr $C$DW$89, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\001565 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\001567 
	.sect	".text"
	.clink
	.global	VLIB_convertUYVYint_to_LABpl_d

$C$DW$90	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_convertUYVYint_to_LABpl_d")
	.dwattr $C$DW$90, DW_AT_low_pc(VLIB_convertUYVYint_to_LABpl_d)
	.dwattr $C$DW$90, DW_AT_high_pc(0x00)
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("VLIB_convertUYVYint_to_LABpl_d")
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$90, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$90, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$90, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$90, DW_AT_decl_line(0x26)
	.dwattr $C$DW$90, DW_AT_decl_column(0x06)
	.dwattr $C$DW$90, DW_AT_TI_max_frame_size(0xa8)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 39,column 1,is_stmt,address VLIB_convertUYVYint_to_LABpl_d,isa 0

	.dwfde $C$DW$CIE, VLIB_convertUYVYint_to_LABpl_d
$C$DW$91	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_convertUYVYint_to_LABpl_d (uint8_t LevelOfFeedback)          
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_convertUYVYint_to_LABpl_d                              *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 32 Args + 76 Auto + 56 Save = 164 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_convertUYVYint_to_LABpl_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 45	-----------------------    UYVYint_to_LABpl_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(3, "VLIB_convertUYVYint_to_LABpl");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g29;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | UYVYint_to_LABpl_testParams_t   *prm;                                  
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(120)     ; |39| 
	.dwcfi	cfa_offset, 168
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_reg4]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg3]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg4]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg3]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg3]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_regx 0x25]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg10]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg10]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$T4")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$T4")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg10]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$T3")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$T3")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg14]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$T2")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$T2")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg10]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$T1")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$T1")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg15]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg11]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$K58")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$K58")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg12]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$K65")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$K65")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg3]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$K104")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$K104")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$157)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg4]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$U127")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$U127")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg29]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$U128")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$U128")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg24]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$U191")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$U191")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg29]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$U181")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$U181")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_breg31 40]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$U184")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$U184")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_breg31 44]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$U192")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$U192")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg24]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$U117")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$U117")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_breg31 48]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$K226")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$K226")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg8]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$U179")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$U179")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_breg31 52]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("whitePoint")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("whitePoint")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_breg31 56]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("coeff")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("coeff")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_breg31 60]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("b_cn")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("b_cn")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_breg31 64]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("a_cn")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("a_cn")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_breg31 68]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("L_cn")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("L_cn")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_breg31 72]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("b")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("b")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_breg31 76]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("a")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("a")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_breg31 80]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("L")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("L")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 84]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("yc")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("yc")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_breg31 88]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("out_size")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("out_size")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_breg31 92]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_breg31 96]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg28]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_breg31 36]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_breg31 100]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_breg31 104]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg14]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("$O$U119")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("$O$U119")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 40]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$U119")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$U119")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 108]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$U129")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$U129")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg13]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$U129")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$U129")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg13]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$U126")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$U126")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg12]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("$O$U126")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("$O$U126")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg12]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("$O$U130")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("$O$U130")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_reg4]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("$O$U130")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("$O$U130")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_reg4]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("$O$U175")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("$O$U175")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_breg31 44]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$U175")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$U175")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg15]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg27]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg27]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg26]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_reg26]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_reg22]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_reg22]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("UYVYint_to_LABpl_getTestParams")
	.dwattr $C$DW$149, DW_AT_TI_call

           CALLP   .S2     UYVYint_to_LABpl_getTestParams,B3
||         STW     .D2T1   A4,*+SP(104)      ; |39| 
||         ADDAW   .D1X    SP,9,A4           ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | UYVYint_to_LABpl_getTestParams(&prm, &test_cases);                     
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {UYVYint_to_LABpl_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$150, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$150, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x3,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(3, "VLIB_convertUYVYint_to_LABpl");                  
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     test_cases,A3
||         LDW     .D2T2   *+SP(36),B6

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;  54 |     int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : N
;     | atural c vs. Optimized */                                              
;  55 |     int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : N
;     | atural c vs. Static Reference */                                       
;  58 |     uint32_t    inp_size   =  prm[tpi].pitch * prm[tpi].height * 2;    
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |51| 
           MVK     .S1     40,A5
           NOP             1
           SUB     .L1X    B6,A5,A11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  59 | uint32_t    out_size   =  prm[tpi].width * prm[tpi].height;            
;----------------------------------------------------------------------
           ADDK    .S1     40,A11            ; |59| 

           CMPGT   .L1     A3,0,A0           ; |51| 
||         ZERO    .S1     A3                ; |51| 

   [!A0]   B       .S1     $C$L18            ; |51| 
||         STW     .D2T1   A3,*+SP(100)

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 62,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  62 | uint8_t    *yc    = (uint8_t *) VLIB_memalign(8, inp_size);            
;----------------------------------------------------------------------
   [ A0]   LDW     .D1T2   *+A11(32),B4      ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *+A11(36),A10     ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 62,column 21,is_stmt,isa 0
   [ A0]   MVK     .L1     0x8,A4            ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *+A11(28),A12     ; |59| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |51| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    K$58 = &testPatternString[0];
;**  	-----------------------    K$65 = 255;
;**  	-----------------------    K$104 = &cycles[0];
;**  	-----------------------    K$226 = &desc[0];
;**  	-----------------------    U$13 = prm-40;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           NOP             1
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$5$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 59	-----------------------    C$12 = (*(U$13 += 40)).height;
;** 59	-----------------------    out_size = (*U$13).width*C$12;
;** 62	-----------------------    yc = VLIB_memalign(8u, (*U$13).pitch*C$12*2u);
;** 63	-----------------------    C$11 = out_size*4u;
;** 63	-----------------------    L = VLIB_memalign(8u, C$11);
;** 64	-----------------------    a = VLIB_memalign(8u, C$11);
;** 65	-----------------------    b = VLIB_memalign(8u, C$11);
;** 66	-----------------------    L_cn = malloc(C$11);
;** 67	-----------------------    a_cn = malloc(C$11);
;** 68	-----------------------    b_cn = malloc(C$11);
;** 69	-----------------------    coeff = VLIB_malloc(10u);
;** 70	-----------------------    whitePoint = VLIB_malloc(12u);
;** 73	-----------------------    if ( !((yc != NULL)&(L != NULL)&(a != NULL)&(b != NULL)&(L_cn != NULL)&(a_cn != NULL)&(b_cn != NULL)&(coeff != NULL)&(whitePoint != NULL)) ) goto g27;
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$151, DW_AT_TI_call

           CALL    .S1     VLIB_memalign     ; |62| 
||         MPY32   .M2X    A10,B4,B4         ; |62| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 62,column 21,is_stmt,isa 0
           ADDKPC  .S2     $C$RL2,B3,2       ; |62| 
           ADD     .L2     B4,B4,B4          ; |62| 
           NOP             1
$C$RL2:    ; CALL OCCURS {VLIB_memalign} {0}  ; |62| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$6$B:
;          EXCLUSIVE CPU CYCLES: 54
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
           MPY32   .M1     A10,A12,A3        ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 62,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(88)       ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | VLIB_F32   *L     = (VLIB_F32 *) VLIB_memalign(8, out_size * sizeof(VLI
;     | B_F32));                                                               
;----------------------------------------------------------------------
           MVK     .L1     0x8,A4            ; |63| 
           NOP             1
           SHL     .S1     A3,2,A10          ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(92)       ; |59| 
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$152, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A10,B4            ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 63,column 21,is_stmt,isa 0
$C$RL3:    ; CALL OCCURS {VLIB_memalign} {0}  ; |63| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A10,B4            ; |64| 
||         STW     .D2T1   A4,*+SP(84)       ; |63| 
||         MVK     .L1     0x8,A4            ; |64| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | VLIB_F32   *a     = (VLIB_F32 *) VLIB_memalign(8, out_size * sizeof(VLI
;     | B_F32));                                                               
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {VLIB_memalign} {0}  ; |64| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$154, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MV      .L2X    A10,B4            ; |65| 
||         STW     .D2T1   A4,*+SP(80)       ; |64| 
||         MVK     .L1     0x8,A4            ; |65| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 65,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | VLIB_F32   *b     = (VLIB_F32 *) VLIB_memalign(8, out_size * sizeof(VLI
;     | B_F32));                                                               
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {VLIB_memalign} {0}  ; |65| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("malloc")
	.dwattr $C$DW$155, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(76)       ; |65| 
||         MV      .L1     A10,A4            ; |66| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 66,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | VLIB_F32   *L_cn  = (VLIB_F32 *) malloc(out_size * sizeof(VLIB_F32));  
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {malloc} {0}        ; |66| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("malloc")
	.dwattr $C$DW$156, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(72)       ; |66| 
||         MV      .L1     A10,A4            ; |67| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 67,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | VLIB_F32   *a_cn  = (VLIB_F32 *) malloc(out_size * sizeof(VLIB_F32));  
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {malloc} {0}        ; |67| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("malloc")
	.dwattr $C$DW$157, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(68)       ; |67| 
||         MV      .L1     A10,A4            ; |68| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 68,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  68 | VLIB_F32   *b_cn  = (VLIB_F32 *) malloc(out_size * sizeof(VLIB_F32));  
;----------------------------------------------------------------------
$C$RL8:    ; CALL OCCURS {malloc} {0}        ; |68| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(64)       ; |68| 
||         MVK     .L1     0xa,A4            ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 69,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | int16_t    *coeff = (int16_t *) VLIB_malloc(5 * sizeof(int16_t));      
;----------------------------------------------------------------------
$C$RL9:    ; CALL OCCURS {VLIB_malloc} {0}   ; |69| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$159, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(60)       ; |69| 
||         MVK     .L1     0xc,A4            ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 70,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | VLIB_F32   *whitePoint = (VLIB_F32 *) VLIB_malloc(3 * sizeof(VLIB_F32))
;     | ;                                                                      
;----------------------------------------------------------------------
$C$RL10:   ; CALL OCCURS {VLIB_malloc} {0}   ; |70| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$7$B:
;          EXCLUSIVE CPU CYCLES: 29

           LDW     .D2T1   *+SP(80),A2       ; |73| 
||         ZERO    .L2     B6                ; |73| 
||         ZERO    .S2     B5                ; |73| 
||         ZERO    .L1     A3                ; |73| 

           LDW     .D2T1   *+SP(88),A0       ; |73| 
||         ZERO    .L2     B4                ; |73| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 73,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  73 | if( yc && L && a && b && L_cn && a_cn && b_cn && coeff && whitePoint )
;     | {                                                                      
;  75 |     int32_t    fail, i, j;                                             
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(84),B0       ; |73| 
           LDW     .D2T1   *+SP(76),A1       ; |73| 

           STW     .D2T1   A4,*+SP(56)       ; |70| 
||         ZERO    .L1     A4                ; |73| 

   [ A2]   MVK     .L2     0x1,B6            ; |73| 
||         LDW     .D2T1   *+SP(72),A2       ; |73| 

   [ A0]   MVK     .L2     0x1,B5            ; |73| 
   [ B0]   MVK     .L2     0x1,B4            ; |73| 

           AND     .L2     B4,B5,B5          ; |73| 
||         ZERO    .S2     B4                ; |73| 

   [ A1]   MVK     .L2     0x1,B4            ; |73| 
||         LDW     .D2T1   *+SP(68),A1       ; |73| 
||         AND     .S2     B6,B5,B5          ; |73| 

   [ A2]   MVK     .L1     0x1,A4            ; |73| 
||         LDW     .D2T1   *+SP(64),A2       ; |73| 
||         AND     .L2     B4,B5,B4          ; |73| 

           ZERO    .L2     B5                ; |73| 
           AND     .L1X    A4,B4,A4          ; |73| 
           ZERO    .L2     B4                ; |73| 

   [ A1]   MVK     .L1     0x1,A3            ; |73| 
||         LDW     .D2T1   *+SP(60),A1       ; |73| 

           AND     .L1     A3,A4,A3          ; |73| 
|| [ A2]   MVK     .L2     0x1,B5            ; |73| 

           LDW     .D2T1   *+SP(56),A2       ; |73| 
           AND     .L2X    B5,A3,B5          ; |73| 
           ZERO    .L1     A3                ; |73| 
   [ A1]   MVK     .L2     0x1,B4            ; |73| 
           AND     .L2     B4,B5,B4          ; |73| 
   [ A2]   MVK     .L1     0x1,A3            ; |73| 
           AND     .L1X    A3,B4,A0          ; |73| 

   [!A0]   B       .S2     $C$L16            ; |73| 
|| [ A0]   LDW     .D1T1   *+A11(32),A5      ; |78| 
|| [ A0]   MVK     .S1     0xff,A3

   [ A0]   LDW     .D2T1   *+SP(88),A6       ; |78| 
|| [ A0]   LDW     .D1T2   *+A11(4),B6       ; |78| 
|| [ A0]   EXTU    .S1     A3,24,24,A3       ; |78| 

   [ A0]   LDBU    .D1T1   *A11,A4           ; |78| 
|| [ A0]   MVKL    .S1     testPatternString,A12

$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$160, DW_AT_TI_call

   [ A0]   CALL    .S1     VLIB_fillBuffer   ; |78| 
|| [ A0]   LDHU    .D1T1   *+A11(28),A8      ; |78| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 78,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  78 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
;  79 |                 (uint8_t)255,                                          
;  80 |                 yc, prm[tpi].staticIn,                                 
;  81 |                 prm[tpi].width, prm[tpi].height, prm[tpi].pitch * 2,   
;  82 |                 sizeof(uint16_t), testPatternString);                  
;  84 | for( i=0; i < 5; i++ ) {                                               
;  85 |     coeff[i] = prm[tpi].coeff[i];                                      
;  88 | for( i=0; i < 3; i++ ) {                                               
;  89 |     whitePoint[i] = prm[tpi].whitePoint[i];                            
;  93 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
;  94 | VLIB_convertUYVYint_to_LABpl(yc, prm[tpi].width, prm[tpi].pitch, prm[tp
;     | i].height, coeff, whitePoint, L, a, b);                                
;  95 | VLIB_profile_stop();                                                   
;  98 | VLIB_profile_start(vlib_KERNEL_CN);                                    
;  99 | VLIB_convertUYVYint_to_LABpl_cn(yc, prm[tpi].width, prm[tpi].pitch, prm
;     | [tpi].height, coeff, whitePoint, L_cn, a_cn, b_cn);                    
; 100 | VLIB_profile_stop();                                                   
; 103 | for( j=0; j < prm[tpi].height; j++ ) {                                 
; 104 |     for( i=0; i < prm[tpi].width; i++ ) {                              
; 105 |         if( fabsf(L[j * prm[tpi].width + i] - L_cn[j * prm[tpi].width +
;     |  i]) > 0.0001 ||                                                       
; 106 |             fabsf(a[j * prm[tpi].width + i] - a_cn[j * prm[tpi].width +
;     |  i]) > 0.0001 ||                                                       
; 107 |             fabsf(b[j * prm[tpi].width + i] - b_cn[j * prm[tpi].width +
;     |  i]) > 0.0001 ) {                                                      
; 108 |             status_nat_vs_int = vlib_KERNEL_FAIL;                      
; 109 |             if( LevelOfFeedback > 0 ) {                                
; 110 |                 printf("L[%d,%d] O=%f C=%f\n", i, j, L[j * prm[tpi].wid
;     | th + i], L_cn[j * prm[tpi].width + i]);                                
; 111 |                 printf("a[%d,%d] O=%f C=%f\n", i, j, a[j * prm[tpi].wid
;     | th + i], a_cn[j * prm[tpi].width + i]);                                
; 112 |                 printf("b[%d,%d] O=%f C=%f\n", i, j, b[j * prm[tpi].wid
;     | th + i], b_cn[j * prm[tpi].width + i]);                                
; 119 | if( prm[tpi].staticOutL != NULL &&                                     
; 120 |     prm[tpi].staticOutA != NULL &&                                     
; 121 |     prm[tpi].staticOutB != NULL ) {                                    
; 123 |     for( j=0; j < prm[tpi].height; j++ ) {                             
; 124 |         for( i=0; i < prm[tpi].width; i++ ) {                          
; 125 |             if( fabsf(prm[tpi].staticOutL[j * prm[tpi].width + i] - L_c
;     | n[j * prm[tpi].width + i]) > 0.0001 ||                                 
; 126 |                 fabsf(prm[tpi].staticOutA[j * prm[tpi].width + i] - a_c
;     | n[j * prm[tpi].width + i]) > 0.0001 ||                                 
; 127 |                 fabsf(prm[tpi].staticOutB[j * prm[tpi].width + i] - b_c
;     | n[j * prm[tpi].width + i]) > 0.0001 ) {                                
; 128 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 129 |                 if( LevelOfFeedback > 0 ) {                            
; 130 |                     printf("L[%d,%d] S=%f C=%f\n", i, j, prm[tpi].stati
;     | cOutL[j * prm[tpi].width + i], L_cn[j * prm[tpi].width + i]);          
; 131 |                     printf("a[%d,%d] S=%f C=%f\n", i, j, prm[tpi].stati
;     | cOutA[j * prm[tpi].width + i], a_cn[j * prm[tpi].width + i]);          
; 132 |                     printf("b[%d,%d] S=%f C=%f\n", i, j, prm[tpi].stati
;     | cOutB[j * prm[tpi].width + i], b_cn[j * prm[tpi].width + i]);          
; 140 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_ref =
;     | = vlib_KERNEL_FAIL)) ? 1 : 0;                                          
; 142 | est_test=1;                                                            
; 145 | sprintf(desc, "%s generated input | Opt results compared to NatC result
;     | s | width=%d, pitch=%d, height=%d, num_pts=%d",                        
; 146 |         testPatternString, prm[tpi].width, prm[tpi].pitch, prm[tpi].hei
;     | ght, out_size);                                                        
; 147 | VLIB_formula_add_test(out_size, NULL, NULL, fail, desc, NULL);         
; 149 | } else {                                                               
;----------------------------------------------------------------------
   [ A0]   LDHU    .D1T2   *+A11(36),B8      ; |78| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 151,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 151 | sprintf(desc, "width=%d, pitch=%d, height=%d, num_pts=%d",             
; 152 |         prm[tpi].width, prm[tpi].pitch, prm[tpi].height, out_size);    
;----------------------------------------------------------------------
   [!A0]   LDW     .D1T1   *+A11(32),A4      ; |151| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 73,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |73| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$8$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 78	-----------------------    VLIB_fillBuffer((*U$13).testPattern, (unsigned char)K$65, (void *)yc, (*U$13).staticIn, (unsigned short)(*U$13).width, (unsigned short)(*U$13).height, (unsigned short)((*U$13).pitch*2), 2u, K$58);
;** 85	-----------------------    *coeff = *(*U$13).coeff;
;** 85	-----------------------    coeff[1] = *((*U$13).coeff+2);
;** 85	-----------------------    coeff[2] = *((*U$13).coeff+4);
;** 85	-----------------------    coeff[3] = *((*U$13).coeff+6);
;** 85	-----------------------    coeff[4] = *((*U$13).coeff+8);
;** 89	-----------------------    *whitePoint = *(*U$13).whitePoint;
;** 89	-----------------------    whitePoint[1] = *((*U$13).whitePoint+4);
;** 89	-----------------------    whitePoint[2] = *((*U$13).whitePoint+8);
;** 137	-----------------------    act_kernel = 0;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 94	-----------------------    VLIB_convertUYVYint_to_LABpl(yc, (*U$13).width, (*U$13).pitch, (*U$13).height, coeff, whitePoint, L, a, b);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$10 = act_kernel;  // [16]
;** 156	-----------------------    *((C$10<<3)+K$104) = *((C$10<<3)+K$104)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 137	-----------------------    act_kernel = 1;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 99	-----------------------    VLIB_convertUYVYint_to_LABpl_cn(yc, (*U$13).width, (*U$13).pitch, (*U$13).height, coeff, whitePoint, L_cn, a_cn, b_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$9 = act_kernel;  // [16]
;** 156	-----------------------    *((C$9<<3)+K$104) = *((C$9<<3)+K$104)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 78,column 13,is_stmt,isa 0
           EXTU    .S1     A5,17,16,A10      ; |78| 
           MV      .L2X    A3,B4             ; |78| 

           MVK     .L2     0x2,B10           ; |78| 
||         MVKH    .S1     testPatternString,A12
||         ADDKPC  .S2     $C$RL11,B3,0      ; |78| 

$C$RL11:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |78| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$9$B:
;          EXCLUSIVE CPU CYCLES: 195
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 85,column 17,is_stmt,isa 0
           LDW     .D1T2   *+A11(20),B4      ; |85| 
           LDW     .D2T1   *+SP(60),A4
           MVKL    .S1     act_kernel,A14
           MVKH    .S1     act_kernel,A14
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           ZERO    .L2     B5                ; |137| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 85,column 17,is_stmt,isa 0
           LDH     .D2T1   *B4,A3            ; |85| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           STW     .D1T2   B5,*A14           ; |137| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 85,column 17,is_stmt,isa 0
           STH     .D1T1   A3,*A4            ; |85| 
           LDW     .D1T2   *+A11(20),B4      ; |85| 
           NOP             4
           LDH     .D2T1   *+B4(2),A3        ; |85| 
           NOP             4
           STH     .D1T1   A3,*+A4(2)        ; |85| 
           LDW     .D1T2   *+A11(20),B4      ; |85| 
           NOP             4
           LDH     .D2T1   *+B4(4),A3        ; |85| 
           NOP             4
           STH     .D1T1   A3,*+A4(4)        ; |85| 
           LDW     .D1T2   *+A11(20),B4      ; |85| 
           NOP             4
           LDH     .D2T1   *+B4(6),A3        ; |85| 
           NOP             4
           STH     .D1T1   A3,*+A4(6)        ; |85| 
           LDW     .D1T2   *+A11(20),B4      ; |85| 
           NOP             4
           LDH     .D2T1   *+B4(8),A3        ; |85| 
           NOP             4
           STH     .D1T1   A3,*+A4(8)        ; |85| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 89,column 17,is_stmt,isa 0
           LDW     .D1T2   *+A11(24),B4      ; |89| 
           LDW     .D2T1   *+SP(56),A3
           NOP             3
           LDW     .D2T2   *B4,B4            ; |89| 
           NOP             4
           STW     .D1T2   B4,*A3            ; |89| 
           LDW     .D1T2   *+A11(24),B4      ; |89| 
           NOP             4
           LDW     .D2T2   *+B4(4),B4        ; |89| 
           NOP             4
           STW     .D1T2   B4,*+A3(4)        ; |89| 
           LDW     .D1T2   *+A11(24),B4      ; |89| 
           NOP             4
           LDW     .D2T2   *+B4(8),B4        ; |89| 
           NOP             4
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*+A3(8)        ; |89| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL12:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("getSP")
	.dwattr $C$DW$162, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("initStack")
	.dwattr $C$DW$163, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL14:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 94,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(88),A4       ; |94| 

           MVKL    .S1     beg_count,A13
||         LDW     .D2T2   *+SP(56),B8       ; |94| 

           MVKH    .S1     beg_count,A13
||         MV      .L2     B4,B7             ; |146| 
||         LDW     .D2T2   *+SP(80),B10      ; |94| 
||         LDW     .D1T1   *+A11(32),A6      ; |94| 

           STDW    .D1T2   B7:B6,*A13        ; |146| 
||         LDW     .D2T1   *+SP(60),A8       ; |94| 

           LDW     .D2T1   *+SP(76),A12      ; |94| 
||         LDW     .D1T2   *+A11(28),B4      ; |94| 

$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("VLIB_convertUYVYint_to_LABpl")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     VLIB_convertUYVYint_to_LABpl,B3
||         LDW     .D1T2   *+A11(36),B6      ; |94| 
||         LDW     .D2T1   *+SP(84),A10      ; |94| 

$C$RL15:   ; CALL OCCURS {VLIB_convertUYVYint_to_LABpl} {0}  ; |94| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 153 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S2     overhead,B11

           MVKH    .S2     overhead,B11
||         LDW     .D1T1   *A14,A16          ; |156| 

           LDDW    .D2T2   *B11,B5:B4        ; |156| 
||         LDDW    .D1T1   *A13,A7:A6        ; |156| 

           MVKL    .S1     cycles,A3
           MVKH    .S1     cycles,A3
           MVKL    .S2     end_count,B12
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 157 | VLIB_free(whitePoint);                                                 
; 158 | VLIB_free(coeff);                                                      
;----------------------------------------------------------------------
           LDDW    .D1T1   *+A3[A16],A9:A8   ; |156| 
           ADDU    .L1X    B4,A6,A5:A4       ; |156| 
           ADD     .L1X    A5,B5,A3          ; |156| 
           ADD     .L1     A3,A7,A3          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 
           SUB     .L2X    B7,A3,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1     A5,A9,A3          ; |156| 
||         ADD     .S1X    B4,A31,A5         ; |156| 

           ADD     .L1     A3,A5,A5          ; |156| 
||         MVKL    .S1     cycles,A3

           MVKH    .S1     cycles,A3
||         MVKH    .S2     end_count,B12

$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("setStackDepth")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A3[A16]   ; |156| 
||         STDW    .D2T2   B7:B6,*B12        ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 159 | free(b_cn);                                                            
;----------------------------------------------------------------------
$C$RL16:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           MVK     .L2     1,B4              ; |137| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$166, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A14           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL17:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("getSP")
	.dwattr $C$DW$167, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL18:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("initStack")
	.dwattr $C$DW$168, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL19:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 99,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(88),A4       ; |99| 

           STDW    .D1T2   B5:B4,*A13        ; |146| 
||         LDW     .D2T1   *+SP(60),A8       ; |99| 

           LDW     .D2T1   *+SP(72),A10      ; |99| 
||         LDW     .D1T2   *+A11(36),B6      ; |99| 

           LDW     .D2T1   *+SP(64),A12      ; |99| 
||         LDW     .D1T2   *+A11(28),B4      ; |99| 

           LDW     .D2T2   *+SP(56),B8       ; |99| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("VLIB_convertUYVYint_to_LABpl_cn")
	.dwattr $C$DW$169, DW_AT_TI_call

           CALLP   .S2     VLIB_convertUYVYint_to_LABpl_cn,B3
||         LDW     .D2T2   *+SP(68),B10      ; |99| 
||         LDW     .D1T1   *+A11(32),A6      ; |99| 

$C$RL20:   ; CALL OCCURS {VLIB_convertUYVYint_to_LABpl_cn} {0}  ; |99| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A14,A3           ; |156| 
           LDDW    .D2T2   *B11,B9:B8        ; |156| 
           LDDW    .D1T1   *A13,A5:A4        ; |156| 
           MVKL    .S1     cycles,A6
           MVKH    .S1     cycles,A6
           LDDW    .D1T1   *+A6[A3],A7:A6    ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           STDW    .D2T2   B7:B6,*B12        ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B8,A4,B5:B4       ; |156| 
           ADD     .L2     B5,B9,B8          ; |156| 

           ADD     .S2X    B8,A5,B8          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           EXT     .S2     B5,24,24,B9       ; |156| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |156| 
||         SUB     .D2     B7,B8,B8          ; |156| 

           ADD     .L2X    B5,A7,B5          ; |156| 
||         ADD     .S2     B8,B9,B8          ; |156| 
||         MVKL    .S1     cycles,A4

           ADD     .L2     B5,B8,B5          ; |156| 
||         MVKH    .S1     cycles,A4

$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("setStackDepth")
	.dwattr $C$DW$170, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B5:B4,*+A4[A3]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$10$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 103	-----------------------    v$1 = prm;
;** 54	-----------------------    status_nat_vs_int = 1;
;** 103	-----------------------    if ( !(*U$13).height ) goto g15;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 103,column 23,is_stmt,isa 0
           LDW     .D1T1   *+A11(36),A0      ; |103| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 54,column 20,is_stmt,isa 0
           MVK     .L2     0x1,B12           ; |54| 
           LDW     .D2T1   *+SP(100),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 103,column 23,is_stmt,isa 0
           LDW     .D2T1   *+SP(36),A14      ; |103| 
           NOP             1

   [!A0]   BNOP    .S1     $C$L8,3           ; |103| 
|| [ A0]   LDW     .D2T1   *+SP(100),A4

           SHL     .S1     A3,5,A3
           ADDAD   .D1     A3,A4,A3
           ; BRANCHCC OCCURS {$C$L8}         ; |103| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$11$B:
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    C$8 = &v$1[tpi];
;**  	-----------------------    U$119 = (*C$8).width;
;**  	-----------------------    U$175 = (*C$8).height;
;**  	-----------------------    T$1 = 0u;
;** 103	-----------------------    j = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 4294967295, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)
           ADD     .L1     A14,A3,A3
           LDW     .D1T1   *+A3(36),A4
           LDW     .D1T1   *+A3(28),A3
           LDW     .D2T1   *+SP(84),A31
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 103,column 18,is_stmt,isa 0
           ZERO    .L2     B11               ; |103| 
           ZERO    .L1     A15               ; |103| 
           STW     .D2T1   A4,*+SP(44)
           STW     .D2T1   A3,*+SP(40)
           LDW     .D2T1   *+SP(40),A0
           NOP             4

           MV      .L1     A0,A3
|| [ A0]   LDW     .D2T1   *+SP(72),A30

$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$11$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L2
;** --------------------------------------------------------------------------*
$C$L2:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$12$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g6:
;** 104	-----------------------    if ( !U$119 ) goto g14;

   [!A0]   BNOP    .S1     $C$L7,4           ; |104| 
||         MPY32   .M1X    B11,A3,A4

           ADDAW   .D1     A31,A4,A5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L7}         ; |104| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$13$B:
;          EXCLUSIVE CPU CYCLES: 2
;**  	-----------------------    C$7 = U$119*j;
;**  	-----------------------    U$126 = C$7*4;
;**  	-----------------------    U$127 = &L[C$7-1];
;**  	-----------------------    U$129 = &L_cn[C$7-1];
;**  	-----------------------    T$2 = 0u;
;** 104	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 4294967295, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)

           ADDAW   .D1     A30,A4,A3
||         ZERO    .L1     A10               ; |104| 
||         ZERO    .L2     B10               ; |104| 
||         SHL     .S1     A4,2,A12

           SUB     .L2X    A5,4,B13
||         SUB     .L1     A3,4,A13

$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$14$B:
;          EXCLUSIVE CPU CYCLES: 3

           LDW     .D1T1   *++A13,A4         ; |105| 
||         LDW     .D2T2   *++B13,B8         ; |105| 
||         MVKL    .S2     0x3f1a36e2,B7

           LDW     .D2T1   *+SP(68),A3
||         MVKL    .S2     0xeb1c432d,B6

           MVKH    .S2     0x3f1a36e2,B7
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$14$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 22,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$15$B:
;          EXCLUSIVE CPU CYCLES: 16
;**	-----------------------g8:
;** 105	-----------------------    U$130 = *(++U$129);
;** 105	-----------------------    U$128 = *(++U$127);
;** 105	-----------------------    if ( (double)ABS(U$128-U$130) > 0.0001 ) goto g11;
           MVKH    .S2     0xeb1c432d,B6
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 105,column 21,is_stmt,isa 0
           FSUBSP  .L2X    B8,A4,B4          ; |105| 
           ADD     .L1     A3,A12,A3         ; |105| 
           NOP             1
           ABSSP   .S2     B4,B4             ; |105| 
           SPDP    .S2     B4,B5:B4          ; |105| 
           NOP             1

           CMPGTDP .S2     B5:B4,B7:B6,B0    ; |105| 
||         LDW     .D2T2   *+SP(80),B4

           NOP             1

   [ B0]   BNOP    .S1     $C$L4,2           ; |105| 
|| [!B0]   LDW     .D1T1   *A3,A3            ; |105| 

           ADD     .L2X    B4,A12,B4         ; |105| 
   [!B0]   LDW     .D2T2   *B4,B4            ; |105| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L4}         ; |105| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$16$B:
;          EXCLUSIVE CPU CYCLES: 17
;** 105	-----------------------    if ( (double)ABS(*(U$126+a)-*(U$126+a_cn)) > 0.0001 ) goto g11;
           NOP             3
           FSUBSP  .L2X    B4,A3,B4          ; |105| 
           LDW     .D2T1   *+SP(64),A3
           NOP             1
           ABSSP   .S2     B4,B4             ; |105| 
           SPDP    .S2     B4,B5:B4          ; |105| 
           NOP             1

           CMPGTDP .S2     B5:B4,B7:B6,B0    ; |105| 
||         LDW     .D2T2   *+SP(76),B4

           ADD     .L1     A3,A12,A3         ; |105| 

   [ B0]   BNOP    .S1     $C$L4,2           ; |105| 
|| [!B0]   LDW     .D1T1   *A3,A3            ; |105| 

           ADD     .L2X    B4,A12,B4         ; |105| 
   [!B0]   LDW     .D2T2   *B4,B4            ; |105| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L4}         ; |105| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$17$B:
;          EXCLUSIVE CPU CYCLES: 17
;** 105	-----------------------    if ( (double)ABS(*(U$126+b)-*(U$126+b_cn)) <= 0.0001 ) goto g13;
           NOP             3
           FSUBSP  .L2X    B4,A3,B4          ; |105| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 27,is_stmt,isa 0
           LDW     .D2T1   *+SP(40),A3       ; |104| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 105,column 21,is_stmt,isa 0
           ABSSP   .S2     B4,B4             ; |105| 
           SPDP    .S2     B4,B5:B4          ; |105| 
           NOP             1
           CMPGTDP .S2     B5:B4,B7:B6,B0    ; |105| 
           NOP             1

   [!B0]   ADD     .L1     1,A10,A10         ; |104| 
|| [!B0]   B       .S1     $C$L6             ; |105| 
|| [!B0]   ADD     .D1     4,A12,A12         ; |104| 
|| [!B0]   ADD     .L2     1,B10,B10         ; |104| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 27,is_stmt,isa 0
           CMPLTU  .L1     A10,A3,A0         ; |104| 
   [ B0]   ZERO    .L1     A0                ; |104| nullify predicate
   [ A0]   BNOP    .S1     $C$L3,2           ; |104| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 105,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |105| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$17$E:
;** --------------------------------------------------------------------------*
$C$L4:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$18$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g11:
;** 108	-----------------------    status_nat_vs_int = 0;
;** 109	-----------------------    if ( !LevelOfFeedback ) goto g13;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 108,column 25,is_stmt,isa 0
           LDW     .D2T1   *+SP(104),A0      ; |108| 
           ZERO    .L2     B12               ; |108| 
           NOP             3

   [!A0]   B       .S1     $C$L5             ; |109| 
|| [!A0]   LDW     .D2T1   *+SP(40),A3       ; |104| 
|| [ A0]   MVKL    .S2     $C$SL2+0,B4
|| [!A0]   ADD     .L1     1,A10,A10         ; |104| 
|| [!A0]   ADD     .D1     4,A12,A12         ; |104| 

   [ A0]   MVKH    .S2     $C$SL2+0,B4
|| [ A0]   SPDP    .S1     A4,A5:A4          ; |110| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 110,column 29,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |110| 
   [ A0]   SPDP    .S2     B8,B5:B4          ; |110| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("printf")
	.dwattr $C$DW$171, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |110| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 27,is_stmt,isa 0
   [!A0]   CMPLTU  .L1     A10,A3,A0         ; |104| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 109,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |109| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$19$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 110	-----------------------    printf((const char *)"L[%d,%d] O=%f C=%f\n", i, j, (double)U$128, (double)U$130);
;** 111	-----------------------    printf((const char *)"a[%d,%d] O=%f C=%f\n", i, j, (double)*(U$126+a), (double)*(U$126+a_cn));
;** 112	-----------------------    printf((const char *)"b[%d,%d] O=%f C=%f\n", i, j, (double)*(U$126+b), (double)*(U$126+b_cn));
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 110,column 29,is_stmt,isa 0
           STDW    .D2T2   B5:B4,*+SP(16)    ; |110| 
           STDW    .D2T1   A5:A4,*+SP(24)    ; |110| 
           STW     .D2T2   B11,*+SP(12)      ; |110| 

           STW     .D2T2   B10,*+SP(8)       ; |110| 
||         ADDKPC  .S2     $C$RL22,B3,0      ; |110| 

$C$RL22:   ; CALL OCCURS {printf} {0}        ; |110| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$20$B:
;          EXCLUSIVE CPU CYCLES: 46
           LDW     .D2T1   *+SP(68),A3       ; |110| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 111,column 29,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |111| 
           STW     .D2T2   B10,*+SP(8)       ; |111| 
           STW     .D2T2   B11,*+SP(12)      ; |111| 
           NOP             1
           ADD     .L1     A3,A12,A3         ; |111| 

           ADD     .L2X    B4,A12,B4         ; |111| 
||         LDW     .D1T1   *A3,A4            ; |111| 

           LDW     .D2T2   *B4,B4            ; |111| 
           MVKL    .S1     $C$SL3+0,A3
           MVKH    .S1     $C$SL3+0,A3
           STW     .D2T1   A3,*+SP(4)        ; |111| 
           SPDP    .S1     A4,A5:A4          ; |111| 
           SPDP    .S2     B4,B5:B4          ; |111| 
           STDW    .D2T1   A5:A4,*+SP(24)    ; |111| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("printf")
	.dwattr $C$DW$172, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STDW    .D2T2   B5:B4,*+SP(16)    ; |111| 

$C$RL23:   ; CALL OCCURS {printf} {0}        ; |111| 
           LDW     .D2T1   *+SP(64),A3       ; |111| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 112,column 29,is_stmt,isa 0
           LDW     .D2T2   *+SP(76),B4       ; |112| 
           MVKL    .S2     $C$SL4+0,B31
           STW     .D2T2   B10,*+SP(8)       ; |112| 
           MVKH    .S2     $C$SL4+0,B31
           ADD     .L1     A3,A12,A3         ; |112| 

           ADD     .L2X    B4,A12,B4         ; |112| 
||         LDW     .D1T1   *A3,A3            ; |112| 

           LDW     .D2T2   *B4,B5            ; |112| 
           STW     .D2T2   B11,*+SP(12)      ; |112| 
           STW     .D2T2   B31,*+SP(4)       ; |112| 
           NOP             1
           SPDP    .S1     A3,A5:A4          ; |112| 
           SPDP    .S2     B5,B5:B4          ; |112| 
           STDW    .D2T1   A5:A4,*+SP(24)    ; |112| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("printf")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STDW    .D2T2   B5:B4,*+SP(16)    ; |112| 

$C$RL24:   ; CALL OCCURS {printf} {0}        ; |112| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 27,is_stmt,isa 0
           LDW     .D2T1   *+SP(40),A3       ; |104| 
           ADD     .L1     1,A10,A10         ; |104| 
           ADD     .L1     4,A12,A12         ; |104| 
           NOP             2
           CMPLTU  .L1     A10,A3,A0         ; |104| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$20$E:
;** --------------------------------------------------------------------------*
$C$L5:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$21$B:
;          EXCLUSIVE CPU CYCLES: 3

   [ A0]   BNOP    .S1     $C$L3,2           ; |104| 
||         ADD     .L2     1,B10,B10         ; |104| 

$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$21$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 105,column 21,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$22$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g13:
;** 104	-----------------------    U$126 += 4;
;** 104	-----------------------    ++i;
;** 104	-----------------------    if ( (++T$2) < U$119 ) goto g8;

   [ A0]   LDW     .D2T2   *++B13,B8         ; |105| 
|| [ A0]   LDW     .D1T1   *++A13,A4         ; |105| 
|| [ A0]   MVKL    .S2     0x3f1a36e2,B7

   [ A0]   MVKL    .S2     0xeb1c432d,B6
|| [ A0]   LDW     .D2T1   *+SP(68),A3

   [ A0]   MVKH    .S2     0x3f1a36e2,B7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 104,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |104| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$22$E:
;** --------------------------------------------------------------------------*
$C$L7:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$23$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g14:
;** 103	-----------------------    ++j;
;** 103	-----------------------    if ( (++T$1) < U$175 ) goto g6;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 103,column 23,is_stmt,isa 0
           LDW     .D2T1   *+SP(44),A3       ; |103| 
           ADD     .L2     1,B11,B11         ; |103| 
           ADD     .L1     1,A15,A15         ; |103| 
           NOP             2
           CMPLTU  .L1     A15,A3,A0         ; |103| 

   [ A0]   BNOP    .S1     $C$L2,3           ; |103| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
||         LDW     .D2T1   *+SP(40),A0

   [ A1]   LDW     .D2T1   *+SP(84),A31

           MV      .L1     A0,A3
|| [ A0]   LDW     .D2T1   *+SP(72),A30

           ; BRANCHCC OCCURS {$C$L2}         ; |103| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$23$E:
;** --------------------------------------------------------------------------*
$C$L8:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$24$B:
;          EXCLUSIVE CPU CYCLES: 38
;**	-----------------------g15:
;**  	-----------------------    U$119 = (v$1[tpi]).width;
;**  	-----------------------    C$6 = _lo(_mpyli(40, tpi))+v$1;
;**  	-----------------------    U$175 = (*C$6).height;
;** 119	-----------------------    U$117 = C$6;
;** 119	-----------------------    U$184 = (*U$117).staticOutB;
;** 119	-----------------------    U$181 = (*U$117).staticOutA;
;** 119	-----------------------    U$179 = (*U$117).staticOutL;
;** 55	-----------------------    status_nat_vs_ref = 1;
;** 119	-----------------------    if ( !((U$179 != NULL)&(U$181 != NULL)&(U$184 != NULL)&(U$175 != 0u)) ) goto g26;
           LDW     .D2T1   *+SP(100),A4
           MVK     .S1     40,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 55,column 20,is_stmt,isa 0
           MVK     .L2     0x1,B30           ; |55| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 119,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(100),A31     ; |119| 
           LDW     .D2T1   *+SP(100),A29     ; |119| 
           MPYLI   .M1     A3,A4,A5:A4
           ZERO    .L2     B5                ; |119| 
           STW     .D2T2   B30,*+SP(96)
           SHL     .S1     A31,5,A30
           ADD     .L1     A14,A4,A3
           ADDAD   .D1     A30,A29,A5
           MV      .L2X    A3,B4             ; |119| 
           LDW     .D2T2   *+B4(12),B4       ; |119| 
           ADD     .L1     A14,A5,A5
           LDW     .D1T1   *+A3(36),A15
           MV      .L2X    A3,B31            ; |119| 
           LDW     .D2T1   *+B31(8),A4       ; |119| 

           MV      .L1X    B4,A0             ; |119| 
||         STW     .D2T2   B4,*+SP(40)       ; |119| 

           LDW     .D2T2   *+B31(16),B4      ; |119| 
           STW     .D2T1   A3,*+SP(48)       ; |119| 
           ZERO    .L1     A3                ; |119| 
           CMPEQ   .L1     A15,0,A28         ; |119| 
           MV      .L2X    A4,B0             ; |119| 

           STW     .D2T2   B4,*+SP(44)       ; |119| 
||         ZERO    .L2     B4                ; |119| 

   [ A0]   MVK     .L2     0x1,B4            ; |119| 
||         LDW     .D2T1   *+SP(44),A0       ; |119| 

           STW     .D2T1   A4,*+SP(52)       ; |119| 
           XOR     .L1     1,A28,A4          ; |119| 
   [ B0]   MVK     .L2     0x1,B5            ; |119| 
           AND     .L2     B4,B5,B4          ; |119| 
   [ A0]   MVK     .L1     0x1,A3            ; |119| 
           AND     .L1X    A3,B4,A3          ; |119| 

           AND     .L1     A4,A3,A0          ; |119| 
||         LDW     .D1T1   *+A5(28),A3

   [!A0]   BNOP    .S1     $C$L15,3          ; |119| 
|| [ A0]   ZERO    .L2     B11
|| [ A0]   ZERO    .L1     A14
||         MV      .D1     A0,A1             ; guard predicate rewrite

           MV      .L1     A3,A0
|| [ A1]   MPY32   .M1X    B11,A3,A4
||         STW     .D2T1   A3,*+SP(108)

   [ A0]   LDW     .D2T1   *+SP(52),A3
           ; BRANCHCC OCCURS {$C$L15}        ; |119| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$25$B:
;          EXCLUSIVE CPU CYCLES: 4
;**  	-----------------------    T$3 = 0u;
;** 123	-----------------------    j = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 4294967295, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)
   [ A0]   LDW     .D2T1   *+SP(72),A31
           NOP             3
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$25$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L9
;** --------------------------------------------------------------------------*
$C$L9:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 123,column 22,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$26$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g17:
;** 124	-----------------------    if ( !U$119 ) goto g25;

   [!A0]   BNOP    .S1     $C$L14,5          ; |124| 
||         ADDAW   .D1     A3,A4,A5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |124| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$27$B:
;          EXCLUSIVE CPU CYCLES: 2
;**  	-----------------------    C$5 = U$119*j;
;**  	-----------------------    U$126 = C$5*4;
;**  	-----------------------    U$129 = &L_cn[C$5-1];
;**  	-----------------------    U$191 = &U$179[C$5-1];
;**  	-----------------------    T$4 = 0u;
;** 124	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 4294967295, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)

           ADDAW   .D1     A31,A4,A3
||         ZERO    .L1     A10               ; |124| 
||         ZERO    .L2     B10               ; |124| 
||         SHL     .S1     A4,2,A12

           SUB     .L2X    A5,4,B13
||         SUB     .L1     A3,4,A13

$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$28$B:
;          EXCLUSIVE CPU CYCLES: 3

           LDW     .D1T1   *++A13,A4         ; |125| 
||         LDW     .D2T2   *++B13,B8         ; |125| 
||         MVKL    .S2     0x3f1a36e2,B7

           LDW     .D2T1   *+SP(68),A3
||         MVKL    .S2     0xeb1c432d,B6

           MVKH    .S2     0x3f1a36e2,B7
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$28$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 26,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$29$B:
;          EXCLUSIVE CPU CYCLES: 16
;**	-----------------------g19:
;** 125	-----------------------    U$130 = *(++U$129);
;** 125	-----------------------    U$192 = *(++U$191);
;** 125	-----------------------    if ( (double)ABS(U$192-U$130) > 0.0001 ) goto g22;
           MVKH    .S2     0xeb1c432d,B6
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 125,column 25,is_stmt,isa 0
           FSUBSP  .L2X    B8,A4,B4          ; |125| 
           ADD     .L1     A3,A12,A3         ; |125| 
           NOP             1
           ABSSP   .S2     B4,B4             ; |125| 
           SPDP    .S2     B4,B5:B4          ; |125| 
           NOP             1

           CMPGTDP .S2     B5:B4,B7:B6,B0    ; |125| 
||         LDW     .D2T2   *+SP(40),B4

           NOP             1

   [ B0]   BNOP    .S1     $C$L11,2          ; |125| 
|| [!B0]   LDW     .D1T1   *A3,A3            ; |125| 

           ADD     .L2X    B4,A12,B4         ; |125| 
   [!B0]   LDW     .D2T2   *B4,B4            ; |125| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L11}        ; |125| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$30$B:
;          EXCLUSIVE CPU CYCLES: 17
;** 125	-----------------------    if ( (double)ABS(*(U$126+U$181)-*(U$126+a_cn)) > 0.0001 ) goto g22;
           NOP             3
           FSUBSP  .L2X    B4,A3,B4          ; |125| 
           LDW     .D2T1   *+SP(64),A3
           NOP             1
           ABSSP   .S2     B4,B4             ; |125| 
           SPDP    .S2     B4,B5:B4          ; |125| 
           NOP             1

           CMPGTDP .S2     B5:B4,B7:B6,B0    ; |125| 
||         LDW     .D2T2   *+SP(44),B4

           ADD     .L1     A3,A12,A3         ; |125| 

   [ B0]   BNOP    .S1     $C$L11,2          ; |125| 
|| [!B0]   LDW     .D1T1   *A3,A3            ; |125| 

           ADD     .L2X    B4,A12,B4         ; |125| 
   [!B0]   LDW     .D2T2   *B4,B4            ; |125| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L11}        ; |125| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$31$B:
;          EXCLUSIVE CPU CYCLES: 17
;** 125	-----------------------    if ( (double)ABS(*(U$126+U$184)-*(U$126+b_cn)) <= 0.0001 ) goto g24;
           NOP             3
           FSUBSP  .L2X    B4,A3,B4          ; |125| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 31,is_stmt,isa 0
           LDW     .D2T1   *+SP(108),A3      ; |124| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 125,column 25,is_stmt,isa 0
           ABSSP   .S2     B4,B4             ; |125| 
           SPDP    .S2     B4,B5:B4          ; |125| 
           NOP             1
           CMPGTDP .S2     B5:B4,B7:B6,B0    ; |125| 
           NOP             1

   [!B0]   ADD     .L1     1,A10,A10         ; |124| 
|| [!B0]   B       .S1     $C$L13            ; |125| 
|| [!B0]   ADD     .D1     4,A12,A12         ; |124| 
|| [!B0]   ADD     .L2     1,B10,B10         ; |124| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 31,is_stmt,isa 0
           CMPLTU  .L1     A10,A3,A0         ; |124| 
   [ B0]   ZERO    .L1     A0                ; |124| nullify predicate
   [ A0]   BNOP    .S1     $C$L10,2          ; |124| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 125,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |125| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$31$E:
;** --------------------------------------------------------------------------*
$C$L11:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$32$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g22:
;** 128	-----------------------    status_nat_vs_ref = 0;
;** 129	-----------------------    if ( !LevelOfFeedback ) goto g24;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 128,column 29,is_stmt,isa 0
           LDW     .D2T1   *+SP(104),A0      ; |128| 
           ZERO    .L2     B4                ; |128| 
           STW     .D2T2   B4,*+SP(96)       ; |128| 
           NOP             2

   [!A0]   B       .S1     $C$L12            ; |129| 
|| [!A0]   LDW     .D2T1   *+SP(108),A3      ; |124| 
|| [ A0]   MVKL    .S2     $C$SL5+0,B4
|| [!A0]   ADD     .L1     1,A10,A10         ; |124| 
|| [!A0]   ADD     .D1     4,A12,A12         ; |124| 

   [ A0]   MVKH    .S2     $C$SL5+0,B4
|| [ A0]   SPDP    .S1     A4,A5:A4          ; |130| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 130,column 33,is_stmt,isa 0
   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |130| 
   [ A0]   SPDP    .S2     B8,B5:B4          ; |130| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("printf")
	.dwattr $C$DW$174, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |130| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 31,is_stmt,isa 0
   [!A0]   CMPLTU  .L1     A10,A3,A0         ; |124| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 129,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |129| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$32$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$33$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 130	-----------------------    printf((const char *)"L[%d,%d] S=%f C=%f\n", i, j, (double)U$192, (double)U$130);
;** 131	-----------------------    printf((const char *)"a[%d,%d] S=%f C=%f\n", i, j, (double)*(U$126+U$181), (double)*(U$126+a_cn));
;** 132	-----------------------    printf((const char *)"b[%d,%d] S=%f C=%f\n", i, j, (double)*(U$126+U$184), (double)*(U$126+b_cn));
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 130,column 33,is_stmt,isa 0
           STDW    .D2T2   B5:B4,*+SP(16)    ; |130| 
           STDW    .D2T1   A5:A4,*+SP(24)    ; |130| 
           STW     .D2T2   B11,*+SP(12)      ; |130| 

           STW     .D2T2   B10,*+SP(8)       ; |130| 
||         ADDKPC  .S2     $C$RL25,B3,0      ; |130| 

$C$RL25:   ; CALL OCCURS {printf} {0}        ; |130| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$34$B:
;          EXCLUSIVE CPU CYCLES: 46
           LDW     .D2T1   *+SP(68),A3       ; |130| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 131,column 33,is_stmt,isa 0
           LDW     .D2T2   *+SP(40),B4       ; |131| 
           STW     .D2T2   B10,*+SP(8)       ; |131| 
           STW     .D2T2   B11,*+SP(12)      ; |131| 
           NOP             1
           ADD     .L1     A3,A12,A3         ; |131| 

           ADD     .L2X    B4,A12,B4         ; |131| 
||         LDW     .D1T1   *A3,A4            ; |131| 

           LDW     .D2T2   *B4,B4            ; |131| 
           MVKL    .S1     $C$SL6+0,A3
           MVKH    .S1     $C$SL6+0,A3
           STW     .D2T1   A3,*+SP(4)        ; |131| 
           SPDP    .S1     A4,A5:A4          ; |131| 
           SPDP    .S2     B4,B5:B4          ; |131| 
           STDW    .D2T1   A5:A4,*+SP(24)    ; |131| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("printf")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STDW    .D2T2   B5:B4,*+SP(16)    ; |131| 

$C$RL26:   ; CALL OCCURS {printf} {0}        ; |131| 
           LDW     .D2T1   *+SP(64),A3       ; |131| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 132,column 33,is_stmt,isa 0
           LDW     .D2T2   *+SP(44),B4       ; |132| 
           MVKL    .S2     $C$SL7+0,B31
           STW     .D2T2   B10,*+SP(8)       ; |132| 
           MVKH    .S2     $C$SL7+0,B31
           ADD     .L1     A3,A12,A3         ; |132| 

           ADD     .L2X    B4,A12,B4         ; |132| 
||         LDW     .D1T1   *A3,A3            ; |132| 

           LDW     .D2T2   *B4,B5            ; |132| 
           STW     .D2T2   B11,*+SP(12)      ; |132| 
           STW     .D2T2   B31,*+SP(4)       ; |132| 
           NOP             1
           SPDP    .S1     A3,A5:A4          ; |132| 
           SPDP    .S2     B5,B5:B4          ; |132| 
           STDW    .D2T1   A5:A4,*+SP(24)    ; |132| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("printf")
	.dwattr $C$DW$176, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STDW    .D2T2   B5:B4,*+SP(16)    ; |132| 

$C$RL27:   ; CALL OCCURS {printf} {0}        ; |132| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 31,is_stmt,isa 0
           LDW     .D2T1   *+SP(108),A3      ; |124| 
           ADD     .L1     1,A10,A10         ; |124| 
           ADD     .L1     4,A12,A12         ; |124| 
           NOP             2
           CMPLTU  .L1     A10,A3,A0         ; |124| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$34$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$35$B:
;          EXCLUSIVE CPU CYCLES: 3

   [ A0]   BNOP    .S1     $C$L10,2          ; |124| 
||         ADD     .L2     1,B10,B10         ; |124| 

$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$35$E:
;** --------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 125,column 25,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$36$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g24:
;** 124	-----------------------    U$126 += 4;
;** 124	-----------------------    ++i;
;** 124	-----------------------    if ( (++T$4) < U$119 ) goto g19;

   [ A0]   LDW     .D2T2   *++B13,B8         ; |125| 
|| [ A0]   LDW     .D1T1   *++A13,A4         ; |125| 
|| [ A0]   MVKL    .S2     0x3f1a36e2,B7

   [ A0]   MVKL    .S2     0xeb1c432d,B6
|| [ A0]   LDW     .D2T1   *+SP(68),A3

   [ A0]   MVKH    .S2     0x3f1a36e2,B7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 124,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |124| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$36$E:
;** --------------------------------------------------------------------------*
$C$L14:    
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$37$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g25:
;** 123	-----------------------    ++j;
;** 123	-----------------------    if ( (++T$3) < U$175 ) goto g17;

           ADD     .L1     1,A14,A14         ; |123| 
||         ADD     .L2     1,B11,B11         ; |123| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 123,column 27,is_stmt,isa 0
           CMPLTU  .L1     A14,A15,A0        ; |123| 

           MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   B       .S1     $C$L9             ; |123| 
||         MV      .D1     A3,A0
||         MPY32   .M1X    B11,A3,A4

   [ A0]   LDW     .D2T1   *+SP(52),A3
   [ A0]   LDW     .D2T1   *+SP(72),A31
           NOP             3
           ; BRANCHCC OCCURS {$C$L9}         ; |123| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$37$E:
;** --------------------------------------------------------------------------*
$C$L15:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 119,column 13,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$38$B:
;          EXCLUSIVE CPU CYCLES: 17
;**	-----------------------g26:
;** 142	-----------------------    est_test = 1;
;** 145	-----------------------    sprintf(K$226, (const char *)"%s generated input | Opt results compared to NatC results | width=%d, pitch=%d, height=%d, num_pts=%d", K$58, U$119, (*U$117).pitch, U$175, out_size);
;** 147	-----------------------    VLIB_formula_add_test((int)out_size, 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$226, 0);
;** 149	-----------------------    goto g28;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 145,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(108),A4      ; |145| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 142,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(48),B5       ; |142| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 145,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(92),A31      ; |145| 
           MVKL    .S2     testPatternString,B6
           MVKL    .S2     $C$SL8+0,B4
           STW     .D2T1   A4,*+SP(12)       ; |145| 
           LDW     .D2T2   *+B5(32),B5       ; |145| 

           MVKH    .S2     testPatternString,B6
||         STW     .D2T1   A15,*+SP(20)      ; |145| 

           MVKL    .S1     est_test,A3
||         MVKH    .S2     $C$SL8+0,B4
||         STW     .D2T2   B6,*+SP(8)        ; |145| 

           MVKH    .S1     est_test,A3
||         STW     .D2T2   B4,*+SP(4)        ; |145| 

           MVKL    .S1     desc,A4
||         MVK     .L1     1,A30             ; |142| 
||         STW     .D2T1   A31,*+SP(24)      ; |145| 

$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("sprintf")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     sprintf,B3
||         STW     .D2T2   B5,*+SP(16)       ; |145| 
||         MVKH    .S1     desc,A4
||         STW     .D1T1   A30,*A3           ; |142| 

$C$RL28:   ; CALL OCCURS {sprintf} {0}       ; |145| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$39$B:
;          EXCLUSIVE CPU CYCLES: 13
           LDW     .D2T1   *+SP(96),A3       ; |145| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 147,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(92),A4       ; |147| 
           CMPEQ   .L2     B12,0,B4          ; |147| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |147| 
           CMPEQ   .L1     A3,0,A3           ; |147| 
           MVKH    .S1     desc,A8
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x04)
	.dwattr $C$DW$178, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$178, DW_AT_TI_call

           ZERO    .L1     A6                ; |147| 
||         CALLP   .S2     VLIB_formula_add_test,B3
||         OR      .L2X    A3,B4,B6          ; |147| 
||         ZERO    .D2     B4                ; |147| 

$C$RL29:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |147| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$39$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$40$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 149,column 9,is_stmt,isa 0
           B       .S1     $C$L17            ; |149| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 157,column 9,is_stmt,isa 0
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("VLIB_free")
	.dwattr $C$DW$179, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |157| 
           LDW     .D2T1   *+SP(56),A4       ; |157| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 149,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L17}          ; |149| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$40$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 73,column 9,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$41$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g27:
;** 151	-----------------------    sprintf(K$226, (const char *)"width=%d, pitch=%d, height=%d, num_pts=%d", (*U$13).width, (*U$13).pitch, (*U$13).height, out_size);
;** 153	-----------------------    VLIB_skip_test(K$226);

           LDW     .D1T1   *+A11(28),A5      ; |151| 
||         MVKL    .S2     $C$SL9+0,B4

           LDW     .D2T1   *+SP(92),A6       ; |151| 
||         MVKH    .S2     $C$SL9+0,B4

$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("sprintf")
	.dwattr $C$DW$180, DW_AT_TI_call

           CALL    .S1     sprintf           ; |151| 
||         LDW     .D1T1   *+A11(36),A3      ; |151| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 151,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |151| 
           STW     .D2T1   A4,*+SP(12)       ; |151| 
           STW     .D2T1   A5,*+SP(8)        ; |151| 

           MVKL    .S1     desc,A4
||         STW     .D2T1   A6,*+SP(20)       ; |151| 

           STW     .D2T1   A3,*+SP(16)       ; |151| 
||         MVKH    .S1     desc,A4
||         ADDKPC  .S2     $C$RL30,B3,0      ; |151| 

$C$RL30:   ; CALL OCCURS {sprintf} {0}       ; |151| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$42$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$181, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 153,column 13,is_stmt,isa 0
$C$RL31:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |153| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 157,column 9,is_stmt,isa 0
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("VLIB_free")
	.dwattr $C$DW$182, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |157| 
           LDW     .D2T1   *+SP(56),A4       ; |157| 
           NOP             3
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$42$E:
;** --------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 149,column 9,is_stmt,isa 0
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$43$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g28:
;** 157	-----------------------    VLIB_free((void *)whitePoint);
;** 158	-----------------------    VLIB_free((void *)coeff);
;** 159	-----------------------    free((void *)b_cn);
;** 160	-----------------------    free((void *)a_cn);
;** 161	-----------------------    free((void *)L_cn);
;** 162	-----------------------    VLIB_align_free((void *)b);
;** 163	-----------------------    VLIB_align_free((void *)a);
;** 164	-----------------------    VLIB_align_free((void *)L);
;** 165	-----------------------    VLIB_align_free((void *)yc);
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 157,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL32,B3,0      ; |157| 
$C$RL32:   ; CALL OCCURS {VLIB_free} {0}     ; |157| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$44$B:
;          EXCLUSIVE CPU CYCLES: 48
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("VLIB_free")
	.dwattr $C$DW$183, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(60),A4       ; |158| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 158,column 9,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {VLIB_free} {0}     ; |158| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("free")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(64),A4       ; |159| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 159,column 9,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {free} {0}          ; |159| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("free")
	.dwattr $C$DW$185, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(68),A4       ; |160| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 160,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 160 | free(a_cn);                                                            
;----------------------------------------------------------------------
$C$RL35:   ; CALL OCCURS {free} {0}          ; |160| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("free")
	.dwattr $C$DW$186, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(72),A4       ; |161| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 161,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 161 | free(L_cn);                                                            
;----------------------------------------------------------------------
$C$RL36:   ; CALL OCCURS {free} {0}          ; |161| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$187, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(76),A4       ; |162| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 162,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 162 | VLIB_align_free(b);                                                    
;----------------------------------------------------------------------
$C$RL37:   ; CALL OCCURS {VLIB_align_free} {0}  ; |162| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$188, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(80),A4       ; |163| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 163,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 163 | VLIB_align_free(a);                                                    
;----------------------------------------------------------------------
$C$RL38:   ; CALL OCCURS {VLIB_align_free} {0}  ; |163| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$189, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(84),A4       ; |164| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 164,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 164 | VLIB_align_free(L);                                                    
;----------------------------------------------------------------------
$C$RL39:   ; CALL OCCURS {VLIB_align_free} {0}  ; |164| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(88),A4       ; |165| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 165,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 165 | VLIB_align_free(yc);                                                   
;----------------------------------------------------------------------
$C$RL40:   ; CALL OCCURS {VLIB_align_free} {0}  ; |165| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$45$B:
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(100),A31

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A4            ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
           ADDK    .S1     40,A11            ; |59| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 17,is_stmt,isa 0
           ADD     .L1     1,A31,A3          ; |51| 
           CMPGT   .L1     A4,A3,A0          ; |51| 

   [ A0]   B       .S1     $C$L1             ; |51| 
|| [ A0]   LDW     .D1T2   *+A11(32),B4      ; |62| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *+A11(36),A10     ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 17,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(100)      ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 62,column 21,is_stmt,isa 0
   [ A0]   MVK     .L1     0x8,A4            ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 59,column 21,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *+A11(28),A12     ; |59| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_convertUYVYint_to_LABpl_d$45$E:
;** --------------------------------------------------------------------------*
$C$L18:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g29:
;** 169	-----------------------    VLIB_profile_cycle_report(1, NULL, "width * height");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [18]
;** 168	-----------------------    VLIB_stack_memory();  // [18]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL10+0,A6
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$191, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL10+0,A6
||         MVK     .L1     0x1,A4            ; |169| 
||         ZERO    .L2     B4                ; |169| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 169,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 169 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 170 |                           NULL,                                        
; 171 |                           "width * height");                           
; 174 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL41:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |169| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL11+0,B4
           MVKH    .S2     $C$SL11+0,B4
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("printf")
	.dwattr $C$DW$192, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL42:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$193, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL43:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c",line 175,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(120),B3     ; |175| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |175| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$195	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$195, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.se66:$C$L1:1:1443280153")
	.dwattr $C$DW$195, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$195, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$195, DW_AT_TI_end_line(0xa6)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$5$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$5$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$41$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$41$E)
$C$DW$198	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$198, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$25$B)
	.dwattr $C$DW$198, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$25$E)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$11$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$11$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$6$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$6$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$7$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$7$E)
$C$DW$202	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$202, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$8$B)
	.dwattr $C$DW$202, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$8$E)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$9$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$9$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$10$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$10$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$24$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$24$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$38$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$38$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$39$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$39$E)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$40$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$40$E)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$42$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$42$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$43$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$43$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$44$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$44$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$45$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$45$E)

$C$DW$213	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$213, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.se66:$C$L2:2:1443280153")
	.dwattr $C$DW$213, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$213, DW_AT_TI_begin_line(0x67)
	.dwattr $C$DW$213, DW_AT_TI_end_line(0x74)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$12$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$12$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$13$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$13$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$14$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$14$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$23$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$23$E)

$C$DW$218	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$218, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.se66:$C$L3:3:1443280153")
	.dwattr $C$DW$218, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$218, DW_AT_TI_begin_line(0x68)
	.dwattr $C$DW$218, DW_AT_TI_end_line(0x73)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$15$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$15$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$19$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$19$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$18$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$18$E)
$C$DW$222	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$20$B)
	.dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$20$E)
$C$DW$223	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$223, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$16$B)
	.dwattr $C$DW$223, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$16$E)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$17$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$17$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$21$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$21$E)
$C$DW$226	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$226, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$22$B)
	.dwattr $C$DW$226, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$22$E)
	.dwendtag $C$DW$218

	.dwendtag $C$DW$213


$C$DW$227	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$227, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.se66:$C$L9:2:1443280153")
	.dwattr $C$DW$227, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$227, DW_AT_TI_begin_line(0x7b)
	.dwattr $C$DW$227, DW_AT_TI_end_line(0x88)
$C$DW$228	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$228, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$26$B)
	.dwattr $C$DW$228, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$26$E)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$27$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$27$E)
$C$DW$230	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$230, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$28$B)
	.dwattr $C$DW$230, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$28$E)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$37$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$37$E)

$C$DW$232	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$232, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.se66:$C$L10:3:1443280153")
	.dwattr $C$DW$232, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$232, DW_AT_TI_begin_line(0x7c)
	.dwattr $C$DW$232, DW_AT_TI_end_line(0x87)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$29$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$29$E)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$33$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$33$E)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$32$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$32$E)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$34$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$34$E)
$C$DW$237	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$237, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$30$B)
	.dwattr $C$DW$237, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$30$E)
$C$DW$238	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$238, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$31$B)
	.dwattr $C$DW$238, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$31$E)
$C$DW$239	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$239, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$35$B)
	.dwattr $C$DW$239, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$35$E)
$C$DW$240	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$240, DW_AT_low_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$36$B)
	.dwattr $C$DW$240, DW_AT_high_pc($C$DW$L$VLIB_convertUYVYint_to_LABpl_d$36$E)
	.dwendtag $C$DW$232

	.dwendtag $C$DW$227

	.dwendtag $C$DW$195

	.dwattr $C$DW$90, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_convertUYVYint_to_LABpl/VLIB_convertUYVYint_to_LABpl_d.c")
	.dwattr $C$DW$90, DW_AT_TI_end_line(0xaf)
	.dwattr $C$DW$90, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$90

;; Inlined function references:
;; [ 15] VLIB_profile_start
;; [ 16] VLIB_profile_stop
;; [ 18] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_convertUYVYint_to_LABpl",0
$C$SL2:	.string	"L[%d,%d] O=%f C=%f",10,0
$C$SL3:	.string	"a[%d,%d] O=%f C=%f",10,0
$C$SL4:	.string	"b[%d,%d] O=%f C=%f",10,0
$C$SL5:	.string	"L[%d,%d] S=%f C=%f",10,0
$C$SL6:	.string	"a[%d,%d] S=%f C=%f",10,0
$C$SL7:	.string	"b[%d,%d] S=%f C=%f",10,0
$C$SL8:	.string	"%s generated input | Opt results compared to NatC results |"
	.string	" width=%d, pitch=%d, height=%d, num_pts=%d",0
$C$SL9:	.string	"width=%d, pitch=%d, height=%d, num_pts=%d",0
$C$SL10:	.string	"width * height",0
$C$SL11:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_memalign
	.global	VLIB_malloc
	.global	VLIB_align_free
	.global	VLIB_free
	.global	VLIB_convertUYVYint_to_LABpl
	.global	VLIB_convertUYVYint_to_LABpl_cn
	.global	UYVYint_to_LABpl_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$40	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x04)
$C$DW$241	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$241, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$241, DW_AT_decl_column(0x05)
$C$DW$242	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$242, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$242, DW_AT_decl_column(0x05)
$C$DW$243	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$243, DW_AT_decl_column(0x05)
$C$DW$244	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$244, DW_AT_decl_column(0x05)
$C$DW$245	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$245, DW_AT_decl_column(0x05)
$C$DW$246	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$246, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$246, DW_AT_decl_column(0x05)
$C$DW$247	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$247, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x80)
	.dwattr $C$DW$247, DW_AT_decl_column(0x05)
$C$DW$248	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$248, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x81)
	.dwattr $C$DW$248, DW_AT_decl_column(0x05)
$C$DW$249	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$249, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x82)
	.dwattr $C$DW$249, DW_AT_decl_column(0x05)
$C$DW$250	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$250, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x83)
	.dwattr $C$DW$250, DW_AT_decl_column(0x05)
$C$DW$251	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$251, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x84)
	.dwattr $C$DW$251, DW_AT_decl_column(0x05)
$C$DW$252	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$252, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x85)
	.dwattr $C$DW$252, DW_AT_decl_column(0x05)
$C$DW$253	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$253, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x86)
	.dwattr $C$DW$253, DW_AT_decl_column(0x05)
$C$DW$254	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$254, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x87)
	.dwattr $C$DW$254, DW_AT_decl_column(0x05)
$C$DW$255	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$255, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x88)
	.dwattr $C$DW$255, DW_AT_decl_column(0x05)
$C$DW$256	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$256, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$256, DW_AT_decl_line(0x89)
	.dwattr $C$DW$256, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x0e)
$C$DW$T$41	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x03)

$C$DW$T$42	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x04)
$C$DW$257	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$257, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$257, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$257, DW_AT_decl_column(0x05)
$C$DW$258	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$258, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$258, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$258, DW_AT_decl_column(0x05)
$C$DW$259	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$259, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$259, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$259, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x06)

$C$DW$T$43	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x04)
$C$DW$260	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$260, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0x72)
	.dwattr $C$DW$260, DW_AT_decl_column(0x05)
$C$DW$261	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$261, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x73)
	.dwattr $C$DW$261, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\../common/VLIB_test.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x06)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x28)
$C$DW$262	.dwtag  DW_TAG_member
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$262, DW_AT_name("testPattern")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$262, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x24)
	.dwattr $C$DW$262, DW_AT_decl_column(0x0f)
$C$DW$263	.dwtag  DW_TAG_member
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$263, DW_AT_name("staticIn")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$263, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x25)
	.dwattr $C$DW$263, DW_AT_decl_column(0x0f)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$264, DW_AT_name("staticOutL")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("staticOutL")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x26)
	.dwattr $C$DW$264, DW_AT_decl_column(0x0f)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$265, DW_AT_name("staticOutA")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("staticOutA")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x27)
	.dwattr $C$DW$265, DW_AT_decl_column(0x0f)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$266, DW_AT_name("staticOutB")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("staticOutB")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x28)
	.dwattr $C$DW$266, DW_AT_decl_column(0x0f)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$267, DW_AT_name("coeff")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("coeff")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x29)
	.dwattr $C$DW$267, DW_AT_decl_column(0x0f)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$268, DW_AT_name("whitePoint")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("whitePoint")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$268, DW_AT_decl_column(0x0f)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$269, DW_AT_name("width")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$269, DW_AT_decl_column(0x0f)
$C$DW$270	.dwtag  DW_TAG_member
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$270, DW_AT_name("pitch")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("pitch")
	.dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$270, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$270, DW_AT_decl_column(0x0f)
$C$DW$271	.dwtag  DW_TAG_member
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$271, DW_AT_name("height")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$271, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$44	.dwtag  DW_TAG_typedef, DW_AT_name("UYVYint_to_LABpl_testParams_t")
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\VLIB_convertUYVYint_to_LABpl_idat.h")
	.dwattr $C$DW$T$44, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$44, DW_AT_decl_column(0x03)
$C$DW$T$45	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$T$45, DW_AT_address_class(0x20)
$C$DW$T$46	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$46, DW_AT_address_class(0x20)
$C$DW$T$47	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$47, DW_AT_address_class(0x20)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x18)
$C$DW$272	.dwtag  DW_TAG_member
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$272, DW_AT_name("fd")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$272, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0x49)
	.dwattr $C$DW$272, DW_AT_decl_column(0x0b)
$C$DW$273	.dwtag  DW_TAG_member
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$273, DW_AT_name("buf")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$273, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$273, DW_AT_decl_column(0x16)
$C$DW$274	.dwtag  DW_TAG_member
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$274, DW_AT_name("pos")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$274, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$274, DW_AT_decl_column(0x16)
$C$DW$275	.dwtag  DW_TAG_member
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$275, DW_AT_name("bufend")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$275, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$275, DW_AT_decl_column(0x16)
$C$DW$276	.dwtag  DW_TAG_member
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$276, DW_AT_name("buff_stop")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$276, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$276, DW_AT_decl_column(0x16)
$C$DW$277	.dwtag  DW_TAG_member
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$277, DW_AT_name("flags")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$277, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$277, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x03)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$278	.dwtag  DW_TAG_member
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$278, DW_AT_name("quot")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$278, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$278, DW_AT_decl_column(0x16)
$C$DW$279	.dwtag  DW_TAG_member
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$279, DW_AT_name("rem")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$279, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$279, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x23)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$280	.dwtag  DW_TAG_member
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$280, DW_AT_name("quot")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$280, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x40)
	.dwattr $C$DW$280, DW_AT_decl_column(0x17)
$C$DW$281	.dwtag  DW_TAG_member
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$281, DW_AT_name("rem")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$281, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x40)
	.dwattr $C$DW$281, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x24)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x10)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$282, DW_AT_name("quot")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0x43)
	.dwattr $C$DW$282, DW_AT_decl_column(0x1c)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$283, DW_AT_name("rem")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0x43)
	.dwattr $C$DW$283, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x29)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x24)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$284, DW_AT_name("area")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0x69)
	.dwattr $C$DW$284, DW_AT_decl_column(0x0d)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$285, DW_AT_name("xsum")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$285, DW_AT_decl_column(0x0d)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$286, DW_AT_name("ysum")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$286, DW_AT_decl_column(0x0d)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$287, DW_AT_name("xmin")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$287, DW_AT_decl_column(0x0d)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$288, DW_AT_name("ymin")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$288, DW_AT_decl_column(0x0d)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$289, DW_AT_name("xmax")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0d)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$290, DW_AT_name("ymax")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0x70)
	.dwattr $C$DW$290, DW_AT_decl_column(0x0d)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$291, DW_AT_name("seedx")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x72)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0d)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$292, DW_AT_name("seedy")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0x73)
	.dwattr $C$DW$292, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x10)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x03)

$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x10)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$293, DW_AT_name("daylight")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0x52)
	.dwattr $C$DW$293, DW_AT_decl_column(0x0b)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$294, DW_AT_name("timezone")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0x53)
	.dwattr $C$DW$294, DW_AT_decl_column(0x0b)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$295, DW_AT_name("tzname")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0x54)
	.dwattr $C$DW$295, DW_AT_decl_column(0x0b)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$296, DW_AT_name("dstname")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x55)
	.dwattr $C$DW$296, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x01)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$55	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$55, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$84	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$84, DW_AT_address_class(0x20)
$C$DW$T$96	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$96, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$96, DW_AT_decl_column(0x1d)
$C$DW$T$97	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$97, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$97, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$97, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$28	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$28, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$28, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$99	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$19)
$C$DW$T$100	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_address_class(0x20)
$C$DW$T$101	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$101, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$101, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$101, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1d)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$103	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$23)
$C$DW$T$104	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$104, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$T$104, DW_AT_address_class(0x20)
$C$DW$T$105	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$105, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$105, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$77	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$77, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$77, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$77, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$77, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$77, DW_AT_decl_column(0x1c)
$C$DW$T$107	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$107, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$107, DW_AT_decl_column(0x16)
$C$DW$T$106	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$106, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$106, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$132	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$132, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$132, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$132, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$132, DW_AT_decl_column(0x0d)
$C$DW$T$26	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$26, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x1d)
$C$DW$T$124	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$124, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$124, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$124, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$124, DW_AT_decl_column(0x11)

$C$DW$T$37	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x10)
$C$DW$297	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$297, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$37

$C$DW$T$80	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$80, DW_AT_address_class(0x20)
$C$DW$T$127	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$127, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$127, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$127, DW_AT_decl_column(0x17)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x17)
$C$DW$T$129	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$129, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$129, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$129, DW_AT_decl_column(0x17)
$C$DW$T$130	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$130, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$130, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$130, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$130, DW_AT_decl_column(0x17)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x17)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x16)
$C$DW$T$56	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$56, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x19)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x16)
$C$DW$T$25	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$25, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x1c)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x16)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x16)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x16)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x16)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x21)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x17)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$148	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$148, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$148, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$148, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$148, DW_AT_decl_column(0x20)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$148)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x16)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$148)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x21)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x17)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x17)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$157	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$157, DW_AT_address_class(0x20)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x20)

$C$DW$T$159	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_byte_size(0x10)
$C$DW$298	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$298, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$159

$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x16)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x16)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x0f)
$C$DW$T$116	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$21)
$C$DW$T$117	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$T$117, DW_AT_address_class(0x20)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$118	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$22)
$C$DW$T$164	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$164, DW_AT_address_class(0x20)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_convertUYVYint_to_LABpl\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x10)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$34	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$34, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$34, DW_AT_name("signed char")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x01)

$C$DW$T$35	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$35, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x04)
$C$DW$299	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$299, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$35

$C$DW$T$63	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$63, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$63, DW_AT_address_class(0x20)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x12)
$C$DW$T$108	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$34)
$C$DW$T$109	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$109, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$T$109, DW_AT_address_class(0x20)

$C$DW$T$169	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
$C$DW$300	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$169


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x10)
$C$DW$301	.dwtag  DW_TAG_member
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$301, DW_AT_name("_v")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$301, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$301, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$301, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x44)
	.dwattr $C$DW$301, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x01)
$C$DW$T$170	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$170, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$170, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$170, DW_AT_decl_column(0x01)
$C$DW$T$171	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$170)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$171, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$171, DW_AT_decl_column(0x13)

$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("tm")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x24)
$C$DW$302	.dwtag  DW_TAG_member
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$302, DW_AT_name("tm_sec")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$302, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x41)
	.dwattr $C$DW$302, DW_AT_decl_column(0x09)
$C$DW$303	.dwtag  DW_TAG_member
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$303, DW_AT_name("tm_min")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$303, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x42)
	.dwattr $C$DW$303, DW_AT_decl_column(0x09)
$C$DW$304	.dwtag  DW_TAG_member
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$304, DW_AT_name("tm_hour")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$304, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$304, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$304, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x43)
	.dwattr $C$DW$304, DW_AT_decl_column(0x09)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$305, DW_AT_name("tm_mday")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x44)
	.dwattr $C$DW$305, DW_AT_decl_column(0x09)
$C$DW$306	.dwtag  DW_TAG_member
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$306, DW_AT_name("tm_mon")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$306, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x45)
	.dwattr $C$DW$306, DW_AT_decl_column(0x09)
$C$DW$307	.dwtag  DW_TAG_member
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$307, DW_AT_name("tm_year")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$307, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x46)
	.dwattr $C$DW$307, DW_AT_decl_column(0x09)
$C$DW$308	.dwtag  DW_TAG_member
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$308, DW_AT_name("tm_wday")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$308, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x47)
	.dwattr $C$DW$308, DW_AT_decl_column(0x09)
$C$DW$309	.dwtag  DW_TAG_member
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$309, DW_AT_name("tm_yday")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$309, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x48)
	.dwattr $C$DW$309, DW_AT_decl_column(0x09)
$C$DW$310	.dwtag  DW_TAG_member
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$310, DW_AT_name("tm_isdst")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$310, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x49)
	.dwattr $C$DW$310, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

