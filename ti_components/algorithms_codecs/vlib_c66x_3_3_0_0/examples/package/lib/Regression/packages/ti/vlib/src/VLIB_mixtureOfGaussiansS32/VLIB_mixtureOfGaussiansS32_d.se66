;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:12:11 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$122)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$61)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$122)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$11, DW_AT_decl_column(0x16)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$3)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$10)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x82)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x86)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x58)
	.dwattr $C$DW$19, DW_AT_decl_column(0x05)

$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_getFractional32")
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$20, DW_AT_decl_column(0x0a)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$23)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$23)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$20


$C$DW$24	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("VLIB_getFractional16")
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwattr $C$DW$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$24, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$24, DW_AT_decl_column(0x0a)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$24)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$23)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$24


$C$DW$28	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwattr $C$DW$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$28, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$28, DW_AT_decl_column(0x06)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$61)
	.dwendtag $C$DW$28


$C$DW$31	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external
	.dwattr $C$DW$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$31, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$31, DW_AT_decl_column(0x06)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$10)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$10)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$10)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$10)
$C$DW$36	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$61)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$31


$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$61)
	.dwendtag $C$DW$38


$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$10)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$61)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$61)
	.dwendtag $C$DW$40


$C$DW$44	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwattr $C$DW$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$44, DW_AT_decl_line(0x80)
	.dwattr $C$DW$44, DW_AT_decl_column(0x06)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$44


$C$DW$46	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwattr $C$DW$46, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$46, DW_AT_decl_line(0x81)
	.dwattr $C$DW$46, DW_AT_decl_column(0x06)

$C$DW$47	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwattr $C$DW$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$47, DW_AT_decl_line(0x82)
	.dwattr $C$DW$47, DW_AT_decl_column(0x0a)

$C$DW$48	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwattr $C$DW$48, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$48, DW_AT_decl_line(0x83)
	.dwattr $C$DW$48, DW_AT_decl_column(0x06)

$C$DW$49	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("VLIB_compare_mem")
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwattr $C$DW$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_memory.h")
	.dwattr $C$DW$49, DW_AT_decl_line(0x72)
	.dwattr $C$DW$49, DW_AT_decl_column(0x11)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$53)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$53)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$49


$C$DW$53	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwattr $C$DW$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_memory.h")
	.dwattr $C$DW$53, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$53, DW_AT_decl_column(0x06)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$19)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$19)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$3)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$3)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$75)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$75)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$75)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$19)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$61)
	.dwendtag $C$DW$53


$C$DW$63	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
	.dwattr $C$DW$63, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_memory.h")
	.dwattr $C$DW$63, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$63, DW_AT_decl_column(0x07)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$63


$C$DW$65	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$65, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$65, DW_AT_declaration
	.dwattr $C$DW$65, DW_AT_external
	.dwattr $C$DW$65, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_memory.h")
	.dwattr $C$DW$65, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$65, DW_AT_decl_column(0x07)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$65


$C$DW$67	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_mixtureOfGaussiansS32")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("VLIB_mixtureOfGaussiansS32")
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external
	.dwattr $C$DW$67, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\c66/VLIB_mixtureOfGaussiansS32.h")
	.dwattr $C$DW$67, DW_AT_decl_line(0x80)
	.dwattr $C$DW$67, DW_AT_decl_column(0x09)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$112)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$116)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$131)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$131)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$109)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$109)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$132)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$133)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$117)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$133)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$133)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$117)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$117)
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$133)
	.dwendtag $C$DW$67


$C$DW$82	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_mixtureOfGaussiansS32_cn")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("VLIB_mixtureOfGaussiansS32_cn")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_cn.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x20)
	.dwattr $C$DW$82, DW_AT_decl_column(0x09)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$112)
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$116)
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$131)
$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$131)
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$109)
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$109)
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$132)
$C$DW$90	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$133)
$C$DW$91	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$117)
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$133)
$C$DW$93	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$133)
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$117)
$C$DW$95	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$117)
$C$DW$96	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$133)
	.dwendtag $C$DW$82


$C$DW$97	.dwtag  DW_TAG_subprogram, DW_AT_name("mixtureOfGaussiansS32_getTestParams")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("mixtureOfGaussiansS32_getTestParams")
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwattr $C$DW$97, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$97, DW_AT_decl_line(0x31)
	.dwattr $C$DW$97, DW_AT_decl_column(0x06)
$C$DW$98	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$46)
$C$DW$99	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$78)
	.dwendtag $C$DW$97

$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwattr $C$DW$100, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$100, DW_AT_decl_line(0x60)
	.dwattr $C$DW$100, DW_AT_decl_column(0x13)
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwattr $C$DW$101, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$101, DW_AT_decl_line(0x62)
	.dwattr $C$DW$101, DW_AT_decl_column(0x13)
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$188)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwattr $C$DW$102, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$102, DW_AT_decl_line(0x63)
	.dwattr $C$DW$102, DW_AT_decl_column(0x13)
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$188)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwattr $C$DW$103, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$103, DW_AT_decl_line(0x64)
	.dwattr $C$DW$103, DW_AT_decl_column(0x13)
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwattr $C$DW$104, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$104, DW_AT_decl_line(0x75)
	.dwattr $C$DW$104, DW_AT_decl_column(0x14)
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwattr $C$DW$105, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$105, DW_AT_decl_line(0x76)
	.dwattr $C$DW$105, DW_AT_decl_column(0x14)
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
	.dwattr $C$DW$106, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$106, DW_AT_decl_line(0x77)
	.dwattr $C$DW$106, DW_AT_decl_column(0x14)
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwattr $C$DW$107, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$107, DW_AT_decl_line(0x78)
	.dwattr $C$DW$107, DW_AT_decl_column(0x14)
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$173)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
	.dwattr $C$DW$108, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h")
	.dwattr $C$DW$108, DW_AT_decl_line(0x79)
	.dwattr $C$DW$108, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\022844 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\022846 
	.sect	".text"
	.clink
	.global	VLIB_mixtureOfGaussiansS32_d

$C$DW$109	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_mixtureOfGaussiansS32_d")
	.dwattr $C$DW$109, DW_AT_low_pc(VLIB_mixtureOfGaussiansS32_d)
	.dwattr $C$DW$109, DW_AT_high_pc(0x00)
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("VLIB_mixtureOfGaussiansS32_d")
	.dwattr $C$DW$109, DW_AT_external
	.dwattr $C$DW$109, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$109, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$109, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$109, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$109, DW_AT_decl_line(0x26)
	.dwattr $C$DW$109, DW_AT_decl_column(0x06)
	.dwattr $C$DW$109, DW_AT_TI_max_frame_size(0xe8)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 39,column 1,is_stmt,address VLIB_mixtureOfGaussiansS32_d,isa 0

	.dwfde $C$DW$CIE, VLIB_mixtureOfGaussiansS32_d
$C$DW$110	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_mixtureOfGaussiansS32_d (uint8_t LevelOfFeedback)            
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_mixtureOfGaussiansS32_d                                *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 112 Args + 64 Auto + 56 Save = 232 byte              *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_mixtureOfGaussiansS32_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 45	-----------------------    mixtureOfGaussiansS32_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(3, "VLIB_mixtureOfGaussiansS32");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g63;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | mixtureOfGaussiansS32_testParams_t   *prm;                             
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(8)       ; |39| 
	.dwcfi	cfa_offset, 56
	.dwcfi	save_reg_to_mem, 19, -48
           ADDK    .S2     -176,SP           ; |39| 
	.dwcfi	cfa_offset, 232
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$C1")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$C1")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg20]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$C2")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$C2")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg3]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg3]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg8]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg26]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg3]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg3]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg26]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg21]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg20]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg20]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg27]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$K36")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$K36")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg3]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$K59")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$K59")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg12]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$K65")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$K65")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg3]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_breg31 128]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$U138")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$U138")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg28]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$U217")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$U217")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg28]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$K232")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$K232")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg8]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_breg31 132]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_breg31 132]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg0]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 132]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$L5")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$L5")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 132]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$L6")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$L6")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg0]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_breg31 136]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg13]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_breg31 116]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_reg10]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_reg11]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("Im")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("Im")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_breg31 140]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("wt")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("wt")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_breg31 144]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("mu")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("mu")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_breg31 148]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("var")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("var")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_breg31 152]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("compNum")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("compNum")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_breg31 156]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("updateMask8")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("updateMask8")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_breg31 160]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("Im_mask")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("Im_mask")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_breg31 164]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("Im_mask_cn")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("Im_mask_cn")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 168]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("$O$K94")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("$O$K94")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$171)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_reg6]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("$O$K94")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("$O$K94")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$171)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_reg3]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("$O$K102")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("$O$K102")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_reg3]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("$O$K102")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("$O$K102")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg3]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("$O$K112")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("$O$K112")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg5]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("$O$K112")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("$O$K112")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_regx 0x33]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("$O$U159")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("$O$U159")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_reg12]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("$O$U159")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("$O$U159")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_reg15]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("$O$U159")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("$O$U159")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_reg12]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("$O$U159")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("$O$U159")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_reg15]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("$O$U152")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("$O$U152")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_reg15]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("$O$U152")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("$O$U152")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_reg15]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("$O$U170")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("$O$U170")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_breg31 172]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("$O$U170")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("$O$U170")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_breg31 172]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("$O$U178")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("$O$U178")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$114)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg26]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("$O$U178")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("$O$U178")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$114)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg26]
$C$DW$165	.dwtag  DW_TAG_variable, DW_AT_name("$O$U194")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("$O$U194")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg28]
$C$DW$166	.dwtag  DW_TAG_variable, DW_AT_name("$O$U194")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("$O$U194")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_reg28]
$C$DW$167	.dwtag  DW_TAG_variable, DW_AT_name("$O$U186")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("$O$U186")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_reg26]
$C$DW$168	.dwtag  DW_TAG_variable, DW_AT_name("$O$U186")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("$O$U186")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_reg26]
$C$DW$169	.dwtag  DW_TAG_variable, DW_AT_name("$O$U205")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("$O$U205")
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$169, DW_AT_location[DW_OP_reg15]
$C$DW$170	.dwtag  DW_TAG_variable, DW_AT_name("$O$U205")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("$O$U205")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_reg15]
$C$DW$171	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_reg29]
$C$DW$172	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_reg29]
$C$DW$173	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg28]
$C$DW$174	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg12]
$C$DW$175	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg12]
$C$DW$176	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg28]
$C$DW$177	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_reg12]
$C$DW$178	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_reg12]
$C$DW$179	.dwtag  DW_TAG_variable, DW_AT_name("counter")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("counter")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_reg14]
$C$DW$180	.dwtag  DW_TAG_variable, DW_AT_name("counter")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("counter")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_reg14]
$C$DW$181	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_reg10]
$C$DW$182	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_reg10]
$C$DW$183	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$183, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$183, DW_AT_location[DW_OP_reg22]
$C$DW$184	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$184, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$184, DW_AT_location[DW_OP_reg20]
$C$DW$185	.dwtag  DW_TAG_variable, DW_AT_name("mode")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("mode")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_breg31 120]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("mixtureOfGaussiansS32_getTestParams")
	.dwattr $C$DW$186, DW_AT_TI_call

           CALLP   .S2     mixtureOfGaussiansS32_getTestParams,B3
||         STW     .D2T1   A4,*+SP(136)      ; |39| 
||         ADDAW   .D1X    SP,29,A4          ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | mixtureOfGaussiansS32_getTestParams(&prm, &test_cases);                
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {mixtureOfGaussiansS32_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$187, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x3,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(3, "VLIB_mixtureOfGaussiansS32");                    
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;  54 |     int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : N
;     | atural c vs. Optimized */                                              
;  55 |     int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : N
;     | atural c vs. Static Reference */                                       
;  58 |     uint32_t    inp_size     =   prm[tpi].im_size * prm[tpi].num_images
;     | ; // Allocate all frames into a single buffer for this test            
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |51| 
           LDW     .D2T2   *+SP(116),B11
           ZERO    .L1     A13
           NOP             2

           CMPGT   .L1     A3,0,A0           ; |51| 
||         ZERO    .S1     A3

   [!A0]   BNOP    .S1     $C$L36,1          ; |51| 
||         STW     .D2T1   A3,*+SP(128)

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 61,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint8_t    *Im          =  (uint8_t *) VLIB_malloc(inp_size*sizeof(uint
;     | 8_t));                                                                 
;----------------------------------------------------------------------
   [ A0]   LDW     .D2T1   *+B11(16),A3      ; |61| 
   [ A0]   LDW     .D2T2   *+B11(12),B4      ; |61| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L36}        ; |51| 
;** --------------------------------------------------------------------------*
;**  	-----------------------    K$59 = &testPatternString[0];
;**  	-----------------------    K$65 = 255;
;**  	-----------------------    K$232 = &desc[0];
;**  	-----------------------    U$13 = prm;
;**  	-----------------------    K$36 = 0xfffffffcu;
;**  	-----------------------    U$12 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$5$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 61	-----------------------    Im = VLIB_malloc((unsigned)((*U$13).im_size*(*U$13).num_images));
;** 62	-----------------------    wt = VLIB_malloc((*U$13).im_size*6u);
;** 63	-----------------------    mu = VLIB_malloc((*U$13).im_size*12u);
;** 64	-----------------------    var = VLIB_malloc((*U$13).im_size*12u);
;** 65	-----------------------    compNum = VLIB_malloc((unsigned)(*U$13).im_size);
;** 66	-----------------------    updateMask8 = VLIB_malloc((unsigned)(*U$13).im_size);
;** 67	-----------------------    C$11 = (*U$13).im_size;
;** 67	-----------------------    Im_mask = VLIB_malloc((C$11>>4>>27)+C$11>>3&K$36);
;** 68	-----------------------    C$10 = (*U$13).im_size;
;** 68	-----------------------    Im_mask_cn = malloc((C$10>>4>>27)+C$10>>3&K$36);
;** 71	-----------------------    if ( !((Im != NULL)&(wt != NULL)&(mu != NULL)&(var != NULL)&(compNum != NULL)&(updateMask8 != NULL)&(Im_mask != NULL)&(Im_mask_cn != NULL)) ) goto g61;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 61,column 21,is_stmt,isa 0
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$188, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |61| 
           ADDKPC  .S2     $C$RL2,B3,0       ; |61| 
           MPY32   .M1X    A3,B4,A4          ; |61| 
           NOP             3
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |61| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$6$B:
;          EXCLUSIVE CPU CYCLES: 87
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 62,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  62 | int16_t    *wt          =  (int16_t *) VLIB_malloc(prm[tpi].im_size * 3
;     |  * sizeof(int16_t));                                                   
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(12),B4      ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 61,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(140)      ; |61| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 62,column 21,is_stmt,isa 0
           SHL     .S2     B4,2,B5           ; |62| 
           ADDAH   .D2     B5,B4,B4          ; |62| 
           NOP             1
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x04)
	.dwattr $C$DW$189, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$189, DW_AT_TI_call

           MV      .L1X    B4,A4             ; |62| 
||         CALLP   .S2     VLIB_malloc,B3

$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | int32_t    *mu          =  (int32_t *) VLIB_malloc(prm[tpi].im_size * 3
;     |  * sizeof(int32_t));                                                   
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(12),B4      ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 62,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(144)      ; |62| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 63,column 21,is_stmt,isa 0
           SHL     .S2     B4,3,B5           ; |63| 
           ADDAW   .D2     B5,B4,B4          ; |63| 
           NOP             1
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x04)
	.dwattr $C$DW$190, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$190, DW_AT_TI_call

           MV      .L1X    B4,A4             ; |63| 
||         CALLP   .S2     VLIB_malloc,B3

$C$RL4:    ; CALL OCCURS {VLIB_malloc} {0}   ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | int32_t    *var         =  (int32_t *) VLIB_malloc(prm[tpi].im_size * 3
;     |  * sizeof(int32_t));                                                   
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(12),B4      ; |64| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 63,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(148)      ; |63| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 64,column 21,is_stmt,isa 0
           SHL     .S2     B4,3,B5           ; |64| 
           ADDAW   .D2     B5,B4,B4          ; |64| 
           NOP             1
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x04)
	.dwattr $C$DW$191, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$191, DW_AT_TI_call

           MV      .L1X    B4,A4             ; |64| 
||         CALLP   .S2     VLIB_malloc,B3

$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |64| 
           STW     .D2T1   A4,*+SP(152)      ; |64| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$192, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         LDW     .D2T1   *+B11(12),A4      ; |65| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 65,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | uint8_t    *compNum     =  (uint8_t *) VLIB_malloc(prm[tpi].im_size * s
;     | izeof(uint8_t));                                                       
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |65| 
           STW     .D2T1   A4,*+SP(156)      ; |65| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$193, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         LDW     .D2T1   *+B11(12),A4      ; |66| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 66,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | uint8_t    *updateMask8 =  (uint8_t *) VLIB_malloc(prm[tpi].im_size * s
;     | izeof(uint8_t));                                                       
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {VLIB_malloc} {0}   ; |66| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 67,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | uint32_t   *Im_mask     =  (uint32_t *) VLIB_malloc(prm[tpi].im_size /
;     | 32 * sizeof(uint32_t));                                                
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(12),B4      ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 66,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(160)      ; |66| 
           MVK     .L1     0xfffffffc,A4
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 67,column 21,is_stmt,isa 0
           SHR     .S1X    B4,4,A3           ; |67| 
           SHRU    .S1     A3,27,A3          ; |67| 
           ADD     .L1X    B4,A3,A3          ; |67| 
           SHR     .S1     A3,3,A3           ; |67| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$194, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         AND     .L1     A4,A3,A4          ; |67| 

$C$RL8:    ; CALL OCCURS {VLIB_malloc} {0}   ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 68,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  68 | uint32_t   *Im_mask_cn  =  (uint32_t *) malloc(prm[tpi].im_size / 32 *
;     | sizeof(uint32_t));                                                     
;----------------------------------------------------------------------
           LDW     .D2T2   *+B11(12),B4      ; |68| 
           MVK     .L1     0xfffffffc,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 67,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(164)      ; |67| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 68,column 21,is_stmt,isa 0
           SHR     .S2     B4,4,B5           ; |68| 
           SHRU    .S2     B5,27,B5          ; |68| 
           ADD     .L2     B4,B5,B4          ; |68| 
           SHR     .S2     B4,3,B4           ; |68| 
           NOP             1
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x04)
	.dwattr $C$DW$195, DW_AT_name("malloc")
	.dwattr $C$DW$195, DW_AT_TI_call

           AND     .L1X    A3,B4,A4          ; |68| 
||         CALLP   .S2     malloc,B3

$C$RL9:    ; CALL OCCURS {malloc} {0}        ; |68| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$7$B:
;          EXCLUSIVE CPU CYCLES: 22

           LDW     .D2T1   *+SP(140),A0      ; |71| 
||         ZERO    .L1     A3                ; |71| 
||         ZERO    .L2     B5                ; |71| 
||         ZERO    .S2     B4                ; |71| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 71,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  71 | if( Im && wt && mu && var && compNum && updateMask8 && Im_mask && Im_ma
;     | sk_cn) {                                                               
;  73 |     int32_t    fail, i, k, counter;                                    
;  74 |     int8_t     mode[3];                                                
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(144),B0      ; |71| 
           LDW     .D2T1   *+SP(148),A1      ; |71| 
           LDW     .D2T1   *+SP(152),A2      ; |71| 
           LDW     .D2T2   *+SP(156),B2      ; |71| 

           STW     .D2T1   A4,*+SP(168)      ; |68| 
||         ZERO    .L1     A4                ; |71| 

   [ A0]   MVK     .L1     0x1,A4            ; |71| 
||         LDW     .D2T1   *+SP(160),A0      ; |71| 
|| [ B0]   MVK     .S1     0x1,A3            ; |71| 

           AND     .L1     A3,A4,A4          ; |71| 
||         ZERO    .S1     A3                ; |71| 
|| [ A1]   MVK     .L2     0x1,B5            ; |71| 
||         LDW     .D2T1   *+SP(168),A1      ; |71| 

   [ A2]   MVK     .L1     0x1,A3            ; |71| 
||         LDW     .D2T1   *+SP(164),A2      ; |71| 

           AND     .L1X    B5,A4,A4          ; |71| 
|| [ B2]   MVK     .L2     0x1,B4            ; |71| 
||         ZERO    .S2     B5                ; |71| 

           AND     .L1     A3,A4,A4          ; |71| 
||         ZERO    .S1     A3                ; |71| 

   [ A0]   MVK     .L1     0x1,A3            ; |71| 
||         AND     .S1X    B4,A4,A4          ; |71| 
||         ZERO    .L2     B4                ; |71| 

           AND     .L1     A3,A4,A3          ; |71| 
|| [ A1]   MVK     .L2     0x1,B4            ; |71| 

   [ A2]   MVK     .L2     0x1,B5            ; |71| 
           AND     .L2X    B5,A3,B5          ; |71| 
           AND     .L2     B4,B5,B0          ; |71| 

   [ B0]   MVK     .S1     0xff,A3
|| [!B0]   B       .S2     $C$L34            ; |71| 
|| [ B0]   LDHU    .D2T2   *+B11(12),B5      ; |77| 

   [ B0]   EXTU    .S1     A3,24,24,A3       ; |77| 
|| [ B0]   LDBU    .D2T1   *B11,A4           ; |77| 

   [ B0]   MVKL    .S1     testPatternString,A12
|| [ B0]   LDHU    .D2T2   *+B11(16),B8      ; |77| 

$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$196, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |77| 
|| [ B0]   LDW     .D2T2   *+B11(4),B6       ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 77,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  77 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
;  78 |                 (uint8_t)255,                                          
;  79 |                 Im, prm[tpi].staticIn,                                 
;  80 |                 prm[tpi].im_size, prm[tpi].num_images, prm[tpi].im_size
;     | *sizeof(uint8_t),                                                      
;  81 |                 sizeof(uint8_t), testPatternString);                   
;  88 | memset(wt, 0, prm[tpi].im_size * 3 * sizeof(int16_t));                 
;  89 | memset(mu, 0, prm[tpi].im_size * 3 * sizeof(int32_t));                 
;  90 | memset(var, 0, prm[tpi].im_size * 3 * sizeof(int32_t));                
;  91 | counter = 0;                                                           
;  93 | if( LevelOfFeedback > 0 ) {                                            
;  95 |     printf("Luma  FG    Mean-1   Varn-1   Wght-1        Mean-2   Varn-2
;     |    Wght-2       Mean-3   Varn-3   Wght-3\n");                          
;  96 |     printf("-----------------------------------------------------------
;     | ------------------------------------------\n");                        
; 100 | for( i=0; i < prm[tpi].num_images; i++ ) {                             
; 103 |     VLIB_profile_start(vlib_KERNEL_OPT);                               
; 104 |     VLIB_mixtureOfGaussiansS32(&Im[i*prm[tpi].im_size],                
; 105 |                                wt, mu, var, compNum, updateMask8, Im_ma
;     | sk,                                                                    
; 106 |                                prm[tpi].im_size,                       
; 107 |                                prm[tpi].alpha,  prm[tpi].rho,          
; 108 |                                prm[tpi].delta,  prm[tpi].T,            
; 109 |                                prm[tpi].ini_wt, prm[tpi].ini_var);     
; 110 |     VLIB_profile_stop();                                               
; 113 |     mode[0] = ' ';                                                     
; 114 |     mode[1] = ' ';                                                     
; 115 |     mode[2] = ' ';                                                     
; 116 |     mode[compNum[0]] = '*';                                            
; 118 |     if( LevelOfFeedback > 0 ) {                                        
; 119 |         printf("%4d  %d  %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f
;     | %c %8.4f %8.4f %8.6f\n", Im[i*prm[tpi].im_size], (Im_mask[0] & 0x800000
;     | 00) >> 31,                                                             
; 120 |                mode[0], VLIB_getFractional32(mu[0], 15, 1), VLIB_getFra
;     | ctional16(var[0], 3, 1), VLIB_getFractional16(wt[0], 15, 1),           
; 121 |                mode[1], VLIB_getFractional32(mu[0 + (prm[tpi].im_size)]
;     | , 23, 1), VLIB_getFractional32(var[0 + (prm[tpi].im_size)], 15, 1), VLI
;     | B_getFractional16(wt[0 + (prm[tpi].im_size)], 15, 1),                  
; 122 |                mode[2], VLIB_getFractional32(mu[0 + 2 * (prm[tpi].im_si
;     | ze)], 23, 1), VLIB_getFractional16(var[0 + 2 * (prm[tpi].im_size)], 15,
;     |  1), VLIB_getFractional16(wt[0 + 2 * (prm[tpi].im_size)], 15, 1));     
; 126 |     if( prm[tpi].staticOut != NULL ) {                                 
; 129 |         for( k=0; k < 3 * prm[tpi].im_size; k++ ) {                    
; 130 |             if( mu[k] != prm[tpi].staticOut[counter++] ) {             
; 131 |                 printf("\tError in Mean: Image %d, Pixel %d, Mode %d\n"
;     | , i, k % 32, k / 32);                                                  
; 132 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 134 |             if( var[k] != prm[tpi].staticOut[counter++] ) {            
; 135 |                 printf("\tError in Variance: Image %d, Pixel %d, Mode %
;     | d\n", i, k % 32, k / 32);                                              
; 136 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 138 |             if( wt[k] != prm[tpi].staticOut[counter++] ) {             
; 139 |                 printf("\tError in Weight: Image %d, Pixel %d, Mode %d\
;     | n", i, k % 32, k / 32);                                                
; 140 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 144 |         for( k=0; k < prm[tpi].im_size; k++ ) {                        
; 145 |             if( compNum[k] != prm[tpi].staticOut[counter++] ) {        
; 146 |                 printf("\tError in Component index: Image %d, Pixel %d\
;     | n", i, k % 32);                                                        
; 147 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 151 |         for( k=0; k < prm[tpi].im_size; k++ ) {                        
; 152 |             if(((Im_mask[0] >> k) & 0x00000001) != ((prm[tpi].staticOut
;     | [counter] >> k) & 0x00000001)) {                                       
; 153 |                 printf("\tError in Foreground Mask: Image %d, Pixel %d\
;     | n", i, k);                                                             
; 154 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 158 |         counter++;                                                     
; 167 | memset(wt, 0, prm[tpi].im_size * 3 * sizeof(int16_t));                 
; 168 | memset(mu, 0, prm[tpi].im_size * 3 * sizeof(int32_t));                 
; 169 | memset(var, 0, prm[tpi].im_size * 3 * sizeof(int32_t));                
; 170 | counter = 0;                                                           
; 172 | if( LevelOfFeedback > 0 ) {                                            
; 174 |     printf("Luma  FG    Mean-1   Varn-1   Wght-1        Mean-2   Varn-2
;     |    Wght-2       Mean-3   Varn-3   Wght-3\n");                          
; 175 |     printf("-----------------------------------------------------------
;     | ------------------------------------------\n");                        
; 179 | for( i=0; i < prm[tpi].num_images; i++ ) {                             
; 182 |     VLIB_profile_start(vlib_KERNEL_CN);                                
; 183 |     VLIB_mixtureOfGaussiansS32_cn(&Im[i*prm[tpi].im_size],             
; 184 |                                wt, mu, var, compNum, updateMask8, Im_ma
;     | sk_cn,                                                                 
; 185 |                                prm[tpi].im_size,                       
; 186 |                                prm[tpi].alpha,  prm[tpi].rho,          
; 187 |                                prm[tpi].delta,  prm[tpi].T,            
; 188 |                                prm[tpi].ini_wt, prm[tpi].ini_var);     
; 189 |     VLIB_profile_stop();                                               
; 192 |     mode[0] = ' ';                                                     
; 193 |     mode[1] = ' ';                                                     
; 194 |     mode[2] = ' ';                                                     
; 195 |     mode[compNum[0]] = '*';                                            
; 197 |     if( LevelOfFeedback > 0 ) {                                        
; 198 |         printf("%4d  %d  %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f
;     | %c %8.4f %8.4f %8.6f\n", Im[i*prm[tpi].im_size], (Im_mask[0] & 0x800000
;     | 00) >> 31,                                                             
; 199 |                mode[0], VLIB_getFractional32(mu[0], 15, 1), VLIB_getFra
;     | ctional16(var[0], 3, 1), VLIB_getFractional16(wt[0], 15, 1),           
; 200 |                mode[1], VLIB_getFractional32(mu[0 + (prm[tpi].im_size)]
;     | , 23, 1), VLIB_getFractional32(var[0 + (prm[tpi].im_size)], 15, 1), VLI
;     | B_getFractional16(wt[0 + (prm[tpi].im_size)], 15, 1),                  
; 201 |                mode[2], VLIB_getFractional32(mu[0 + 2 * (prm[tpi].im_si
;     | ze)], 23, 1), VLIB_getFractional16(var[0 + 2 * (prm[tpi].im_size)], 15,
;     |  1), VLIB_getFractional16(wt[0 + 2 * (prm[tpi].im_size)], 15, 1));     
; 205 |     if( prm[tpi].staticOut != NULL ) {                                 
; 208 |         for( k=0; k < 3 * prm[tpi].im_size; k++ ) {                    
; 209 |             if( mu[k] != prm[tpi].staticOut[counter++] ) {             
; 210 |                 printf("\tError in Mean: Image %d, Pixel %d, Mode %d\n"
;     | , i, k % 32, k / 32);                                                  
; 211 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 213 |             if( var[k] != prm[tpi].staticOut[counter++] ) {            
; 214 |                 printf("\tError in Variance: Image %d, Pixel %d, Mode %
;     | d\n", i, k % 32, k / 32);                                              
; 215 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 217 |             if( wt[k] != prm[tpi].staticOut[counter++] ) {             
; 218 |                 printf("\tError in Weight: Image %d, Pixel %d, Mode %d\
;     | n", i, k % 32, k / 32);                                                
; 219 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 223 |         for( k=0; k < prm[tpi].im_size; k++ ) {                        
; 224 |             if( compNum[k] != prm[tpi].staticOut[counter++] ) {        
; 225 |                 printf("\tError in Component index: Image %d, Pixel %d\
;     | n", i, k % 32);                                                        
; 226 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 230 |         for( k=0; k < prm[tpi].im_size; k++ ) {                        
; 231 |             if(((Im_mask_cn[0] >> k) & 0x00000001) != ((prm[tpi].static
;     | Out[counter] >> k) & 0x00000001)) {                                    
; 232 |                 printf("\tError in Foreground Mask: Image %d, Pixel %d\
;     | n", i, k);                                                             
; 233 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 237 |         counter++;                                                     
; 242 | status_nat_vs_int = VLIB_compare_mem((void *) Im_mask, (void *)Im_mask_
;     | cn, prm[tpi].im_size / 32 * sizeof(uint32_t));                         
; 245 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_ref =
;     | = vlib_KERNEL_FAIL)) ? 1 : 0;                                          
; 247 | est_test=1;                                                            
; 250 | sprintf(desc, "%s generated input | Opt results compared to NatC result
;     | s | im_size=%d, num_images=%d",                                        
; 251 |         testPatternString, prm[tpi].im_size, prm[tpi].num_images);     
; 252 | VLIB_formula_add_test(prm[tpi].im_size*prm[tpi].num_images, prm[tpi].nu
;     | m_images, NULL, fail, desc, NULL);                                     
; 254 | } else {                                                               
;----------------------------------------------------------------------
   [ B0]   LDW     .D2T1   *+SP(140),A6      ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 256,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 256 | sprintf(desc, "im_size=%d, num_images=%d",                             
; 257 |         prm[tpi].im_size, prm[tpi].num_images);                        
; 258 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!B0]   LDW     .D2T2   *+B11(16),B4      ; |256| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 71,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L34}        ; |71| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$8$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 77	-----------------------    C$9 = (unsigned short)(*U$13).im_size;
;** 77	-----------------------    VLIB_fillBuffer((*U$13).testPattern, (unsigned char)K$65, (void *)Im, (*U$13).staticIn, C$9, (unsigned short)(*U$13).num_images, C$9, 1u, K$59);
;** 88	-----------------------    memset((void *)wt, 0, (*U$13).im_size*6u);
;** 89	-----------------------    memset((void *)mu, 0, (*U$13).im_size*12u);
;** 90	-----------------------    memset((void *)var, 0, (*U$13).im_size*12u);
;** 93	-----------------------    if ( !LevelOfFeedback ) goto g6;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 77,column 13,is_stmt,isa 0
           MV      .L1X    B5,A8             ; |77| 
           MV      .L2X    A3,B4             ; |77| 

           MVKH    .S1     testPatternString,A12
||         MVK     .L2     0x1,B10           ; |77| 
||         MV      .L1X    B5,A10            ; |77| 
||         ADDKPC  .S2     $C$RL10,B3,0      ; |77| 

$C$RL10:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |77| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$9$B:
;          EXCLUSIVE CPU CYCLES: 40
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 88,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(12),B4      ; |88| 
           NOP             4
           SHL     .S1X    B4,2,A3           ; |88| 
           MV      .L1X    B4,A4             ; |88| Define a twin register
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("memset")
	.dwattr $C$DW$197, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         ADDAH   .D1     A3,A4,A6          ; |88| 
||         LDW     .D2T1   *+SP(144),A4      ; |88| 
||         ZERO    .L2     B4                ; |88| 

$C$RL11:   ; CALL OCCURS {memset} {0}        ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 89,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(12),B4      ; |89| 
           NOP             4
           SHL     .S1X    B4,3,A3           ; |89| 
           MV      .L1X    B4,A4             ; |89| Define a twin register
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("memset")
	.dwattr $C$DW$198, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         ADDAW   .D1     A3,A4,A6          ; |89| 
||         LDW     .D2T1   *+SP(148),A4      ; |89| 
||         ZERO    .L2     B4                ; |89| 

$C$RL12:   ; CALL OCCURS {memset} {0}        ; |89| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 90,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(12),B4      ; |90| 
           LDW     .D2T1   *+SP(152),A4      ; |90| 
           NOP             3
           SHL     .S2     B4,3,B5           ; |90| 
           ADDAW   .D2     B5,B4,B4          ; |90| 
           NOP             1
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x08)
	.dwattr $C$DW$199, DW_AT_name("memset")
	.dwattr $C$DW$199, DW_AT_TI_call

           MV      .L1X    B4,A6             ; |90| 
||         ZERO    .L2     B4                ; |90| 
||         CALLP   .S2     memset,B3

$C$RL13:   ; CALL OCCURS {memset} {0}        ; |90| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$10$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(136),A0      ; |90| 
           NOP             4

   [!A0]   B       .S1     $C$L2             ; |93| 
|| [!A0]   LDW     .D2T2   *+B11(16),B4      ; |100| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 95,column 17,is_stmt,isa 0
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("printf")
	.dwattr $C$DW$200, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |95| 
   [ A0]   MVKL    .S1     $C$SL2+0,A3
   [ A0]   MVKH    .S1     $C$SL2+0,A3
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 100,column 23,is_stmt,isa 0
   [!A0]   CMPGT   .L2     B4,0,B0           ; |100| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 93,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L2}         ; |93| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$11$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 95	-----------------------    printf((const char *)"Luma  FG    Mean-1   Varn-1   Wght-1        Mean-2   Varn-2   Wght-2       Mean-3   Varn-3   Wght-3\n");
;** 96	-----------------------    printf((const char *)"-----------------------------------------------------------------------------------------------------\n");

           STW     .D2T1   A3,*+SP(4)        ; |95| 
||         ADDKPC  .S2     $C$RL14,B3,0      ; |95| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 95,column 17,is_stmt,isa 0
$C$RL14:   ; CALL OCCURS {printf} {0}        ; |95| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$12$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL3+0,B4
           MVKH    .S2     $C$SL3+0,B4
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("printf")
	.dwattr $C$DW$201, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |96| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 96,column 17,is_stmt,isa 0
$C$RL15:   ; CALL OCCURS {printf} {0}        ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 100,column 23,is_stmt,isa 0
           LDW     .D2T2   *+B11(16),B4      ; |100| 
           NOP             4
           CMPGT   .L2     B4,0,B0           ; |100| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$12$E:
;** --------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 93,column 13,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$13$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g6:
;** 100	-----------------------    v$1 = prm;
;** 55	-----------------------    status_nat_vs_ref = 1;
;** 100	-----------------------    if ( (*U$13).num_images <= 0 ) goto g32;

   [!B0]   BNOP    .S1     $C$L17,5          ; |100| 
||         LDW     .D2T1   *+SP(116),A10     ; |100| 
||         MV      .L1X    B10,A11           ; |100| 
|| [ B0]   ZERO    .L2     B13               ; |100| 
|| [ B0]   ZERO    .D1     A14               ; |100| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 100,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |100| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$14$B:
;**  	-----------------------    K$102 = 32;
;**  	-----------------------    K$112 = 42;
;**  	-----------------------    K$94 = &cycles[0];
;** 91	-----------------------    counter = 0;
;** 100	-----------------------    i = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$14$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L3
;** --------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 100,column 18,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$15$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g8:
;** 137	-----------------------    act_kernel = 0;  // [17]
;** 140	-----------------------    VLIB_cache_inval();  // [17]
;** 143	-----------------------    initStack(getSP());  // [17]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [17]
;** 104	-----------------------    C$8 = (*U$13).im_size;
;** 104	-----------------------    VLIB_mixtureOfGaussiansS32(C$8*i+Im, wt, mu, var, compNum, updateMask8, Im_mask, C$8, (*U$13).alpha, (*U$13).rho, (*U$13).delta, (*U$13).T, (*U$13).ini_wt, (*U$13).ini_var);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [18]
;** 153	-----------------------    end_count = v$2;  // [18]
;** 156	-----------------------    C$7 = act_kernel;  // [18]
;** 156	-----------------------    *((C$7<<3)+K$94) = *((C$7<<3)+K$94)+(v$2-(beg_count+overhead));  // [18]
;** 159	-----------------------    setStackDepth();  // [18]
;** 113	-----------------------    mode[0] = K$102;
;** 114	-----------------------    mode[1] = K$102;
;** 115	-----------------------    mode[2] = K$102;
;** 116	-----------------------    mode[*compNum] = K$112;
;** 118	-----------------------    if ( !LevelOfFeedback ) goto g10;
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$202, DW_AT_TI_call
           CALL    .S1     VLIB_cache_inval  ; |140| 
           MVKL    .S1     act_kernel,A15
           MVKH    .S1     act_kernel,A15
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           ZERO    .L1     A3                ; |137| 
           STW     .D1T1   A3,*A15           ; |137| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
           ADDKPC  .S2     $C$RL16,B3,0      ; |140| 
$C$RL16:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$16$B:
;          EXCLUSIVE CPU CYCLES: 62
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("getSP")
	.dwattr $C$DW$203, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL17:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("initStack")
	.dwattr $C$DW$204, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL18:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 104,column 17,is_stmt,isa 0
           LDH     .D2T2   *+B11(34),B9      ; |104| 
           LDW     .D2T2   *+B11(36),B8      ; |104| 
           LDW     .D2T2   *+B11(12),B10     ; |104| 
           LDW     .D2T2   *+B11(28),B17     ; |104| 
           LDH     .D2T2   *+B11(32),B16     ; |104| 
           STH     .D2T2   B9,*+SP(10)       ; |104| 
           LDH     .D2T1   *+B11(20),A12     ; |104| 
           LDW     .D2T1   *+SP(164),A10     ; |104| 
           LDW     .D2T1   *+SP(156),A8      ; |104| 
           LDW     .D2T1   *+SP(148),A6      ; |104| 
           LDW     .D2T2   *+B11(24),B12     ; |104| 

           LDW     .D2T2   *+SP(140),B9      ; |104| 
||         MVKL    .S2     beg_count,B31

           MV      .L2     B4,B7             ; |146| 
||         MPY32   .M2     B13,B10,B4        ; |104| 
||         MVKH    .S2     beg_count,B31
||         STW     .D2T2   B8,*+SP(12)       ; |104| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           STDW    .D2T2   B7:B6,*B31        ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 104,column 17,is_stmt,isa 0
           STW     .D2T2   B17,*+SP(4)       ; |104| 
           STH     .D2T2   B16,*+SP(8)       ; |104| 

           ADD     .L2     B9,B4,B7          ; |104| 
||         LDW     .D2T2   *+SP(160),B8      ; |104| 

           LDW     .D2T2   *+SP(152),B6      ; |104| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("VLIB_mixtureOfGaussiansS32")
	.dwattr $C$DW$205, DW_AT_TI_call

           CALLP   .S2     VLIB_mixtureOfGaussiansS32,B3
||         LDW     .D2T2   *+SP(144),B4      ; |104| 
||         MV      .L1X    B7,A4             ; |104| 

$C$RL19:   ; CALL OCCURS {VLIB_mixtureOfGaussiansS32} {0}  ; |104| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S2     beg_count,B4
           MVKL    .S2     overhead,B5

           LDW     .D1T1   *A15,A3           ; |156| 
||         MVKH    .S2     beg_count,B4

           MVKH    .S2     overhead,B5
||         LDDW    .D2T2   *B4,B9:B8         ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D2T2   *B5,B17:B16       ; |156| 
           MVKL    .S1     cycles,A4
           MVKH    .S1     cycles,A4
           LDDW    .D1T1   *+A4[A3],A7:A6    ; |156| 
           MVKL    .S1     end_count,A8
           ADDU    .L2     B16,B8,B5:B4      ; |156| 

           ADD     .S2     B5,B17,B8         ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           ADD     .L2     B8,B9,B8          ; |156| 

           ADDU    .L1X    A6,B4,A5:A4       ; |156| 
||         SUB     .L2     B7,B8,B4          ; |156| 
||         EXT     .S2     B5,24,24,B5       ; |156| 

           ADD     .L2     B4,B5,B4          ; |156| 
||         MVKH    .S1     end_count,A8

           ADD     .L1     A5,A7,A5          ; |156| 
||         MVKL    .S1     cycles,A6

           ADD     .L1X    A5,B4,A5          ; |156| 
||         MVKH    .S1     cycles,A6
||         STDW    .D1T2   B7:B6,*A8         ; |153| 

$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("setStackDepth")
	.dwattr $C$DW$206, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A6[A3]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$17$B:
;          EXCLUSIVE CPU CYCLES: 23
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 115,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(156),A31     ; |115| 
           MVK     .S1     0x20,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 113,column 17,is_stmt,isa 0
           STB     .D2T1   A3,*+SP(120)      ; |113| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 114,column 17,is_stmt,isa 0
           STB     .D2T1   A3,*+SP(121)      ; |114| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 115,column 17,is_stmt,isa 0
           STB     .D2T1   A3,*+SP(122)      ; |115| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 116,column 17,is_stmt,isa 0
           LDBU    .D1T1   *A31,A3           ; |116| 
           MVK     .S1     0x2a,A5
           MVK     .S1     120,A4            ; |116| 
           NOP             2
           ADD     .L1X    A3,SP,A3          ; |116| 
           STB     .D1T1   A5,*+A4[A3]       ; |116| 
           LDW     .D2T1   *+SP(136),A0      ; |116| 
           LDW     .D2T1   *+SP(148),A3
           NOP             3

   [!A0]   LDW     .D2T2   *+B11(8),B0       ; |126| 
|| [!A0]   B       .S1     $C$L4             ; |118| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 119,column 21,is_stmt,isa 0
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$207, DW_AT_TI_call
   [ A0]   CALL    .S1     VLIB_getFractional32 ; |119| 
   [ A0]   LDW     .D1T1   *A3,A4            ; |119| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 126,column 17,is_stmt,isa 0
   [ A0]   MVK     .L2     0x1,B0            ; |126| nullify predicate
   [!A0]   LDW     .D2T1   *+SP(116),A10     ; |126| 
   [!B0]   B       .S1     $C$L16            ; |126| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 118,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |118| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$18$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 119	-----------------------    printf((const char *)"%4d  %d  %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f\n", (int)Im[(*U$13).im_size*i], *Im_mask>>31, (int)mode[0], (double)VLIB_getFractional32(*mu, 15, 1), (double)VLIB_getFractional16((short)*var, 3, 1), (double)VLIB_getFractional16(*wt, 15, 1), (int)mode[1], (double)VLIB_getFractional32(mu[(*U$13).im_size], 23, 1), (double)VLIB_getFractional32(var[(*U$13).im_size], 15, 1), (double)VLIB_getFractional16(wt[(*U$13).im_size], 15, 1), (int)mode[2], (double)VLIB_getFractional32(*(((*U$13).im_size<<3)+mu), 23, 1), (double)VLIB_getFractional16((short)*(((*U$13).im_size<<3)+var), 15, 1), (double)VLIB_getFractional16(wt[2*(*U$13).im_size], 15, 1));

           MVK     .L1     0x1,A6            ; |119| 
||         MVK     .L2     0xf,B4            ; |119| 
||         ADDKPC  .S2     $C$RL21,B3,0      ; |119| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 119,column 21,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |119| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$19$B:
;          EXCLUSIVE CPU CYCLES: 137
           LDW     .D2T2   *+SP(152),B4      ; |119| 
           MV      .L1     A4,A10            ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$208, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |119| 
||         MVK     .L2     0x3,B4            ; |119| 

$C$RL22:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |119| 
           LDW     .D2T2   *+SP(144),B4      ; |119| 
           MV      .L2X    A4,B10            ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$209, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |119| 
||         MVK     .L2     0xf,B4            ; |119| 

$C$RL23:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |119| 
           LDW     .D2T1   *+B11(12),A3      ; |119| 

           MV      .L1     A4,A12            ; |119| 
||         LDW     .D2T1   *+SP(148),A4

           MVK     .S2     0x17,B4           ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$210, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional32,B3
||         LDW     .D1T1   *+A4[A3],A4       ; |119| 

$C$RL24:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |119| 
           LDW     .D2T2   *+B11(12),B4      ; |119| 
           LDW     .D2T2   *+SP(152),B5
           MV      .L1     A4,A15            ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$211, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional32,B3
||         LDW     .D2T1   *+B5[B4],A4       ; |119| 
||         MVK     .L2     0xf,B4            ; |119| 

$C$RL25:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |119| 
           LDW     .D2T2   *+SP(144),B5
           LDW     .D2T2   *+B11(12),B4      ; |119| 
           MV      .L2X    A4,B12            ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$212, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *+B5[B4],A4       ; |119| 
||         MVK     .L2     0xf,B4            ; |119| 

$C$RL26:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |119| 
           STW     .D2T1   A4,*+SP(176)      ; |119| 
           LDW     .D2T1   *+SP(148),A4
           LDW     .D2T1   *+B11(12),A3      ; |119| 
           MVK     .S2     0x17,B4           ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
           ADDAD   .D1     A4,A3,A3          ; |119| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$213, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional32,B3
||         LDW     .D1T1   *A3,A4            ; |119| 

$C$RL27:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |119| 
           LDW     .D2T2   *+B11(12),B4      ; |119| 
           LDW     .D2T2   *+SP(152),B5
           STW     .D2T1   A4,*+SP(172)      ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
           ADDAD   .D2     B5,B4,B4          ; |119| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$214, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |119| 
||         MVK     .L2     0xf,B4            ; |119| 

$C$RL28:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |119| 
           LDW     .D2T2   *+SP(144),B5
           LDW     .D2T2   *+B11(12),B4      ; |119| 
           STW     .D2T1   A4,*+SP(132)      ; |119| 
           MVK     .L1     0x1,A6            ; |119| 
           NOP             2
           ADDAW   .D2     B5,B4,B4          ; |119| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$215, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |119| 
||         MVK     .L2     0xf,B4            ; |119| 

$C$RL29:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |119| 
           LDW     .D2T1   *+SP(164),A3      ; |119| 
           LDW     .D2T2   *+B11(12),B4      ; |119| 
           MVKL    .S1     $C$SL4+0,A5
           LDW     .D2T2   *+SP(140),B5      ; |119| 
           MVKH    .S1     $C$SL4+0,A5
           LDW     .D1T1   *A3,A3            ; |119| 
           STW     .D2T1   A5,*+SP(4)        ; |119| 
           LDB     .D2T2   *+SP(120),B9      ; |119| 

           MPY32   .M2     B13,B4,B4         ; |119| 
||         LDW     .D2T1   *+SP(172),A30     ; |119| 

           LDB     .D2T2   *+SP(121),B8      ; |119| 
           LDB     .D2T2   *+SP(122),B17     ; |119| 

           SHRU    .S1     A3,31,A3          ; |119| 
||         LDW     .D2T1   *+SP(176),A31     ; |119| 

           LDBU    .D2T2   *+B4[B5],B16      ; |119| 
||         SPDP    .S1     A12,A9:A8         ; |119| 

           STW     .D2T1   A3,*+SP(12)       ; |119| 

           SPDP    .S1     A10,A7:A6         ; |119| 
||         STDW    .D2T1   A9:A8,*+SP(40)    ; |119| 

           LDW     .D2T1   *+SP(132),A3      ; |119| 

           STDW    .D2T1   A7:A6,*+SP(24)    ; |119| 
||         SPDP    .S1     A15,A17:A16       ; |119| 

           STW     .D2T2   B16,*+SP(8)       ; |119| 
           STDW    .D2T1   A17:A16,*+SP(56)  ; |119| 

           SPDP    .S1     A4,A5:A4          ; |119| 
||         STW     .D2T2   B9,*+SP(16)       ; |119| 

           SPDP    .S2X    A30,B7:B6         ; |119| 
||         STW     .D2T2   B8,*+SP(48)       ; |119| 

           STDW    .D2T1   A5:A4,*+SP(104)   ; |119| 

           SPDP    .S2     B10,B5:B4         ; |119| 
||         SPDP    .S1     A3,A9:A8          ; |119| 
||         STW     .D2T2   B17,*+SP(80)      ; |119| 

           STDW    .D2T2   B7:B6,*+SP(88)    ; |119| 

           STDW    .D2T2   B5:B4,*+SP(32)    ; |119| 
||         SPDP    .S1     A31,A7:A6         ; |119| 

           SPDP    .S2     B12,B5:B4         ; |119| 
||         STDW    .D2T1   A9:A8,*+SP(96)    ; |119| 

           STDW    .D2T1   A7:A6,*+SP(72)    ; |119| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("printf")
	.dwattr $C$DW$216, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STDW    .D2T2   B5:B4,*+SP(64)    ; |119| 

$C$RL30:   ; CALL OCCURS {printf} {0}        ; |119| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 126,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B11(8),B0       ; |126| 
           LDW     .D2T1   *+SP(116),A10     ; |126| 
           NOP             3
   [!B0]   B       .S1     $C$L16            ; |126| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$19$E:
;** --------------------------------------------------------------------------*
$C$L4:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 118,column 17,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$20$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g10:
;** 126	-----------------------    v$1 = prm;
;** 126	-----------------------    if ( (*U$13).staticOut == NULL ) goto g31;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
   [ B0]   LDW     .D2T2   *+B11(12),B4      ; |129| 
   [!B0]   LDW     .D2T1   *+SP(128),A3
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 126,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |126| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$21$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 129	-----------------------    if ( (*U$13).im_size <= 0 ) goto g20;

           SHL     .S1     A13,5,A3
||         CMPGT   .L2     B4,0,B0           ; |129| 

           ADDAD   .D1     A3,A13,A3
|| [!B0]   B       .S1     $C$L9             ; |129| 
|| [ B0]   LDW     .D2T1   *+SP(152),A31

           ADD     .L1     A10,A3,A3
   [ B0]   LDW     .D1T1   *+A3(12),A4
   [ B0]   LDW     .D1T1   *+A3(8),A3
   [ B0]   MVK     .L1     3,A5
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |129| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$21$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$22$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$152 = mu;
;**  	-----------------------    C$6 = &v$1[tpi];
;**  	-----------------------    U$159 = counter*4+(*C$6).staticOut-4;
;**  	-----------------------    U$170 = var;
;**  	-----------------------    U$178 = wt;
;**  	-----------------------    L$1 = _lo(_mpyli(3, (*C$6).im_size));
;** 129	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D2T1   *+SP(148),A15

           MPYLI   .M1     A5,A4,A5:A4
||         STW     .D2T1   A31,*+SP(172)

           ADDAW   .D1     A3,A14,A3
           SUB     .L1     A3,4,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 130,column 25,is_stmt,isa 0
           ADD     .L1     4,A12,A12         ; |130| 
           STW     .D2T1   A4,*+SP(132)
           LDW     .D1T1   *A15++,A4         ; |130| 
           LDW     .D1T1   *A12++,A3         ; |130| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 26,is_stmt,isa 0
           ZERO    .L2     B12               ; |129| 
           LDW     .D2T2   *+SP(144),B10
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$22$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L5:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$23$B:
;          EXCLUSIVE CPU CYCLES: 9
;**	-----------------------g13:
;** 130	-----------------------    ++U$159;
;** 130	-----------------------    if ( (unsigned)*U$152++ == *U$159++ ) goto g15;
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 130,column 25,is_stmt,isa 0
           CMPEQ   .L1     A4,A3,A0          ; |130| 

   [ A0]   LDW     .D2T2   *+SP(172),B5
|| [ A0]   B       .S1     $C$L6             ; |130| 
|| [!A0]   MVKL    .S2     $C$SL5+0,B5
|| [ A0]   LDW     .D1T1   *A12++,A3         ; |134| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 131,column 29,is_stmt,isa 0
   [!A0]   SHR     .S1X    B12,5,A3          ; |131| 
   [!A0]   MVKH    .S2     $C$SL5+0,B5
   [!A0]   EXTU    .S2     B12,27,27,B4      ; |131| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("printf")
	.dwattr $C$DW$217, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |131| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 134,column 25,is_stmt,isa 0
   [ A0]   LDW     .D2T2   *B5++,B4          ; |134| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 130,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |130| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$24$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 131	-----------------------    printf((const char *)"\tError in Mean: Image %d, Pixel %d, Mode %d\n", i, k&0x1f, k>>5);
;** 132	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 131,column 29,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |131| 
           STW     .D2T1   A3,*+SP(16)       ; |131| 
           STW     .D2T2   B4,*+SP(12)       ; |131| 

           STW     .D2T2   B13,*+SP(8)       ; |131| 
||         ADDKPC  .S2     $C$RL31,B3,0      ; |131| 

$C$RL31:   ; CALL OCCURS {printf} {0}        ; |131| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$25$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(172),B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 134,column 25,is_stmt,isa 0
           LDW     .D1T1   *A12++,A3         ; |134| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 132,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |132| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 134,column 25,is_stmt,isa 0
           LDW     .D2T2   *B5++,B4          ; |134| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$25$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 130,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$26$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g15:
;** 134	-----------------------    if ( (unsigned)*U$170++ == *U$159++ ) goto g17;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 134,column 25,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(172)      ; |134| 
           NOP             3
           CMPEQ   .L1X    B4,A3,A0          ; |134| 

   [ A0]   LDW     .D1T1   *A12,A3           ; |138| 
|| [ A0]   LDH     .D2T2   *B10++,B4         ; |138| 
|| [ A0]   B       .S1     $C$L7             ; |134| 
|| [!A0]   MVKL    .S2     $C$SL6+0,B5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 135,column 29,is_stmt,isa 0
   [!A0]   SHR     .S1X    B12,5,A3          ; |135| 
   [!A0]   MVKH    .S2     $C$SL6+0,B5
   [!A0]   EXTU    .S2     B12,27,27,B4      ; |135| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("printf")
	.dwattr $C$DW$218, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |135| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 138,column 25,is_stmt,isa 0
   [ A0]   CMPEQ   .L1X    B4,A3,A0          ; |138| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 134,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L7}         ; |134| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$27$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 135	-----------------------    printf((const char *)"\tError in Variance: Image %d, Pixel %d, Mode %d\n", i, k&0x1f, k>>5);
;** 136	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 135,column 29,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |135| 
           STW     .D2T2   B4,*+SP(12)       ; |135| 
           STW     .D2T1   A3,*+SP(16)       ; |135| 

           STW     .D2T2   B13,*+SP(8)       ; |135| 
||         ADDKPC  .S2     $C$RL32,B3,0      ; |135| 

$C$RL32:   ; CALL OCCURS {printf} {0}        ; |135| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$28$B:
;          EXCLUSIVE CPU CYCLES: 6

           LDH     .D2T2   *B10++,B4         ; |138| 
||         LDW     .D1T1   *A12,A3           ; |138| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 136,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |136| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 138,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B4,A3,A0          ; |138| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$28$E:
;** --------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 134,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$29$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g17:
;** 138	-----------------------    if ( (unsigned)*U$178++ == *U$159 ) goto g19;

   [ A0]   B       .S1     $C$L8             ; |138| 
|| [ A0]   LDW     .D2T2   *+SP(132),B4
|| [!A0]   MVKL    .S2     $C$SL7+0,B5
|| [ A0]   ADD     .L1     3,A14,A14         ; |130| 
|| [ A0]   ADD     .L2     1,B12,B12         ; |129| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 139,column 29,is_stmt,isa 0
   [!A0]   SHR     .S1X    B12,5,A3          ; |139| 
   [!A0]   MVKH    .S2     $C$SL7+0,B5
   [!A0]   EXTU    .S2     B12,27,27,B4      ; |139| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("printf")
	.dwattr $C$DW$219, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |139| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
   [ A0]   SUB     .L1X    B4,1,A0           ; |129| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 138,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L8}         ; |138| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$30$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 139	-----------------------    printf((const char *)"\tError in Weight: Image %d, Pixel %d, Mode %d\n", i, k&0x1f, k>>5);
;** 140	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 139,column 29,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |139| 
           STW     .D2T1   A3,*+SP(16)       ; |139| 
           STW     .D2T2   B4,*+SP(12)       ; |139| 

           STW     .D2T2   B13,*+SP(8)       ; |139| 
||         ADDKPC  .S2     $C$RL33,B3,0      ; |139| 

$C$RL33:   ; CALL OCCURS {printf} {0}        ; |139| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$31$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(132),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 140,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |140| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
           ADD     .L2     1,B12,B12         ; |129| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 130,column 25,is_stmt,isa 0
           ADD     .L1     3,A14,A14         ; |130| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |129| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$31$E:
;** --------------------------------------------------------------------------*
$C$L8:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 138,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$32$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g19:
;** 129	-----------------------    ++k;
;** 130	-----------------------    counter += 3;
;** 129	-----------------------    if ( L$1 = L$1-1 ) goto g13;

   [ A0]   B       .S1     $C$L5             ; |129| 
||         SUB     .L2     B4,1,B4           ; |129| 
|| [ A0]   ADD     .L1     4,A12,A12         ; |130| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(132)      ; |129| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 130,column 25,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *A15++,A4         ; |130| 
   [ A0]   LDW     .D1T1   *A12++,A3         ; |130| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 129,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |129| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$32$E:
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$33$B:
;          EXCLUSIVE CPU CYCLES: 18
;**	-----------------------g20:
;** 144	-----------------------    if ( (U$186 = (*(U$12+v$1)).im_size) <= 0 ) goto g25;
           LDW     .D2T1   *+SP(128),A3
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 144,column 31,is_stmt,isa 0
           ADD     .L1     A10,A3,A3         ; |144| 
           LDW     .D1T2   *+A3(12),B10      ; |144| 
           SHL     .S1     A13,5,A3
           ADDAD   .D1     A3,A13,A3
           ADD     .L1     A10,A3,A3
           NOP             1
           CMPGT   .L2     B10,0,B0          ; |144| 

   [!B0]   BNOP    .S1     $C$L12,4          ; |144| 
|| [ B0]   LDW     .D1T1   *+A3(8),A3
|| [ B0]   LDW     .D2T2   *+SP(156),B12     ; |145| 

           ADDAW   .D1     A3,A14,A3
           ; BRANCHCC OCCURS {$C$L12}        ; |144| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$34$B:
;          EXCLUSIVE CPU CYCLES: 5
;**  	-----------------------    U$159 = counter*4+(v$1[tpi]).staticOut-4;
;**  	-----------------------    U$194 = compNum;
;** 145	-----------------------    L$2 = U$186;
;** 145	-----------------------    counter += L$2;
;** 144	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           STW     .D2T2   B10,*+SP(132)     ; |145| 
||         SUB     .L1     A3,4,A15

           LDW     .D1T1   *++A15,A3         ; |145| 
||         LDBU    .D2T2   *B12++,B4         ; |145| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 144,column 26,is_stmt,isa 0
           ZERO    .L1     A12               ; |144| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 145,column 25,is_stmt,isa 0
           ADD     .L1X    B10,A14,A14       ; |145| 
           NOP             1
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$34$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 144,column 26,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$35$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g22:
;** 145	-----------------------    if ( (unsigned)*U$194++ == *(++U$159) ) goto g24;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 145,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B4,A3,A0          ; |145| 

   [ A0]   BNOP    .S1     $C$L11,1          ; |145| 
|| [ A0]   LDW     .D2T2   *+SP(132),B4
|| [!A0]   MVKL    .S2     $C$SL8+0,B4
|| [ A0]   ADD     .L1     1,A12,A12         ; |144| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 146,column 29,is_stmt,isa 0
   [!A0]   EXTU    .S1     A12,27,27,A3      ; |146| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("printf")
	.dwattr $C$DW$220, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |146| 
   [!A0]   MVKH    .S2     $C$SL8+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 144,column 31,is_stmt,isa 0
   [ A0]   SUB     .L1X    B4,1,A0           ; |144| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 145,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |145| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$36$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 146	-----------------------    printf((const char *)"\tError in Component index: Image %d, Pixel %d\n", i, k&0x1f);
;** 147	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 146,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |146| 
           STW     .D2T1   A3,*+SP(12)       ; |146| 

           STW     .D2T2   B13,*+SP(8)       ; |146| 
||         ADDKPC  .S2     $C$RL34,B3,0      ; |146| 

$C$RL34:   ; CALL OCCURS {printf} {0}        ; |146| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$37$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(132),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 147,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |147| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 144,column 31,is_stmt,isa 0
           ADD     .L1     1,A12,A12         ; |144| 
           NOP             2
           SUB     .L1X    B4,1,A0           ; |144| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$37$E:
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 145,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$38$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g24:
;** 144	-----------------------    ++k;
;** 144	-----------------------    if ( L$2 = L$2-1 ) goto g22;

           SUB     .L2     B4,1,B4           ; |144| 
|| [ A0]   B       .S1     $C$L10            ; |144| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 144,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(132)      ; |144| 

   [ A0]   LDBU    .D2T2   *B12++,B4         ; |145| 
|| [ A0]   LDW     .D1T1   *++A15,A3         ; |145| 

           NOP             3
           ; BRANCHCC OCCURS {$C$L10}        ; |144| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$38$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$39$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g25:
;** 151	-----------------------    if ( U$186 <= 0 ) goto g30;

           CMPGT   .L2     B10,0,B0          ; |151| 
||         SHL     .S1     A13,5,A3

   [!B0]   B       .S1     $C$L15            ; |151| 
||         ADDAD   .D1     A3,A13,A3
|| [ B0]   LDW     .D2T1   *+SP(164),A31     ; |152| 

           ADD     .L1     A10,A3,A3
   [ B0]   LDW     .D1T1   *+A3(8),A4
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 151,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |151| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$39$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$40$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    U$138 = *Im_mask;
;**  	-----------------------    U$205 = *(counter*4+(v$1[tpi]).staticOut);
;** 152	-----------------------    L$3 = U$186;
;** 151	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D1T2   *A31,B12
           LDW     .D1T1   *+A4[A14],A15
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 151,column 26,is_stmt,isa 0
           ZERO    .L1     A12               ; |151| 
           NOP             3
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$40$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L13:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$41$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g27:
;** 152	-----------------------    if ( (U$138>>k&1u) == (U$205>>k&1u) ) goto g29;

           MV      .L1X    B12,A3            ; |152| 
||         SHRU    .S1     A15,A12,A4        ; |152| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 152,column 25,is_stmt,isa 0
           SHRU    .S1     A3,A12,A3         ; |152| 

           AND     .L1     1,A3,A4           ; |152| 
||         AND     .S1     1,A4,A3           ; |152| 

           CMPEQ   .L1     A4,A3,A0          ; |152| 

   [ A0]   BNOP    .S1     $C$L14,1          ; |152| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [!A0]   MVKL    .S2     $C$SL9+0,B4
|| [ A0]   ADD     .D1     1,A12,A12         ; |151| 

   [!A0]   MVKH    .S2     $C$SL9+0,B4
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("printf")
	.dwattr $C$DW$221, DW_AT_TI_call

   [!A0]   CALL    .S1     printf            ; |153| 
|| [ A0]   SUB     .L1X    B10,1,A0          ; |151| 
|| [ A1]   SUB     .L2     B10,1,B10         ; |151| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 151,column 31,is_stmt,isa 0
   [!A1]   ZERO    .L1     A0                ; |151| nullify predicate
   [ A0]   B       .S1     $C$L13            ; |151| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 152,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |152| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$42$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 153	-----------------------    printf((const char *)"\tError in Foreground Mask: Image %d, Pixel %d\n", i, k);
;** 154	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 153,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |153| 
           STW     .D2T1   A12,*+SP(12)      ; |153| 

           STW     .D2T2   B13,*+SP(8)       ; |153| 
||         ADDKPC  .S2     $C$RL35,B3,0      ; |153| 

$C$RL35:   ; CALL OCCURS {printf} {0}        ; |153| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$42$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$43$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 151,column 31,is_stmt,isa 0
           SUB     .L1X    B10,1,A0          ; |151| 

   [ A0]   B       .S1     $C$L13            ; |151| 
||         SUB     .L2     B10,1,B10         ; |151| 
||         ADD     .L1     1,A12,A12         ; |151| 
||         ZERO    .D1     A11               ; |154| 

$C$DW$L$VLIB_mixtureOfGaussiansS32_d$43$E:
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 152,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$44$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g29:
;** 151	-----------------------    ++k;
;** 151	-----------------------    if ( L$3 = L$3-1 ) goto g27;
           NOP             5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 151,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |151| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$44$E:
;** --------------------------------------------------------------------------*
$C$L15:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$45$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g30:
;** 158	-----------------------    ++counter;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 158,column 21,is_stmt,isa 0
           ADD     .L1     1,A14,A14         ; |158| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$46$B:
;          EXCLUSIVE CPU CYCLES: 4
           LDW     .D2T1   *+SP(128),A3
           NOP             3
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$46$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 126,column 17,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$47$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g31:
;** 100	-----------------------    if ( (*(U$12+v$1)).num_images > (++i) ) goto g8;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 100,column 23,is_stmt,isa 0
           ADD     .L2     1,B13,B13         ; |100| 
           ADD     .L1     A10,A3,A3         ; |100| 
           LDW     .D1T1   *+A3(16),A3       ; |100| 
           NOP             4
           CMPGT   .L2X    A3,B13,B0         ; |100| 
   [ B0]   BNOP    .S1     $C$L3,5           ; |100| 
           ; BRANCHCC OCCURS {$C$L3}         ; |100| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$47$E:
;** --------------------------------------------------------------------------*
$C$L17:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$48$B:
;          EXCLUSIVE CPU CYCLES: 18
;**	-----------------------g32:
;** 167	-----------------------    memset((void *)wt, 0, (*(U$12+v$1)).im_size*6u);
;** 168	-----------------------    memset((void *)mu, 0, (*U$13).im_size*12u);
;** 169	-----------------------    memset((void *)var, 0, (*U$13).im_size*12u);
;** 172	-----------------------    if ( !LevelOfFeedback ) goto g34;
           LDW     .D2T1   *+SP(128),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 167,column 13,is_stmt,isa 0
           ZERO    .L2     B4                ; |167| 
           NOP             3
           ADD     .L1     A10,A3,A3         ; |167| 
           LDW     .D1T1   *+A3(12),A3       ; |167| 
           NOP             4
           SHL     .S1     A3,2,A4           ; |167| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("memset")
	.dwattr $C$DW$222, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         ADDAH   .D1     A4,A3,A6          ; |167| 
||         LDW     .D2T1   *+SP(144),A4      ; |167| 

$C$RL36:   ; CALL OCCURS {memset} {0}        ; |167| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$48$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$49$B:
;          EXCLUSIVE CPU CYCLES: 27
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 168,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(12),B4      ; |168| 
           NOP             4
           SHL     .S1X    B4,3,A3           ; |168| 
           MV      .L1X    B4,A4             ; |168| Define a twin register
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("memset")
	.dwattr $C$DW$223, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         ADDAW   .D1     A3,A4,A6          ; |168| 
||         LDW     .D2T1   *+SP(148),A4      ; |168| 
||         ZERO    .L2     B4                ; |168| 

$C$RL37:   ; CALL OCCURS {memset} {0}        ; |168| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 169,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(12),B4      ; |169| 
           LDW     .D2T1   *+SP(152),A4      ; |169| 
           NOP             3
           SHL     .S2     B4,3,B5           ; |169| 
           ADDAW   .D2     B5,B4,B4          ; |169| 
           NOP             1
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x08)
	.dwattr $C$DW$224, DW_AT_name("memset")
	.dwattr $C$DW$224, DW_AT_TI_call

           MV      .L1X    B4,A6             ; |169| 
||         ZERO    .L2     B4                ; |169| 
||         CALLP   .S2     memset,B3

$C$RL38:   ; CALL OCCURS {memset} {0}        ; |169| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$49$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$50$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(136),A0      ; |169| 
           NOP             4

   [!A0]   B       .S1     $C$L18            ; |172| 
|| [!A0]   LDW     .D2T2   *+B11(16),B4      ; |179| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 174,column 17,is_stmt,isa 0
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("printf")
	.dwattr $C$DW$225, DW_AT_TI_call
   [ A0]   CALL    .S1     printf            ; |174| 
   [ A0]   MVKL    .S1     $C$SL2+0,A3
   [ A0]   MVKH    .S1     $C$SL2+0,A3
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 179,column 23,is_stmt,isa 0
   [!A0]   CMPGT   .L2     B4,0,B0           ; |179| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 172,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |172| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$50$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$51$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 174	-----------------------    printf((const char *)"Luma  FG    Mean-1   Varn-1   Wght-1        Mean-2   Varn-2   Wght-2       Mean-3   Varn-3   Wght-3\n");
;** 175	-----------------------    printf((const char *)"-----------------------------------------------------------------------------------------------------\n");

           STW     .D2T1   A3,*+SP(4)        ; |174| 
||         ADDKPC  .S2     $C$RL39,B3,0      ; |174| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 174,column 17,is_stmt,isa 0
$C$RL39:   ; CALL OCCURS {printf} {0}        ; |174| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$51$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$52$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL3+0,B4
           MVKH    .S2     $C$SL3+0,B4
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("printf")
	.dwattr $C$DW$226, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |175| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 175,column 17,is_stmt,isa 0
$C$RL40:   ; CALL OCCURS {printf} {0}        ; |175| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 179,column 23,is_stmt,isa 0
           LDW     .D2T2   *+B11(16),B4      ; |179| 
           NOP             4
           CMPGT   .L2     B4,0,B0           ; |179| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$52$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 172,column 13,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$53$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g34:
;** 179	-----------------------    v$1 = prm;
;** 179	-----------------------    if ( (*U$13).num_images <= 0 ) goto g60;

   [!B0]   BNOP    .S1     $C$L33,5          ; |179| 
||         LDW     .D2T1   *+SP(116),A10     ; |179| 
|| [ B0]   ZERO    .L2     B13               ; |179| 
|| [ B0]   ZERO    .L1     A14               ; |179| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 179,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L33}        ; |179| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$54$B:
;**  	-----------------------    K$102 = 32;
;**  	-----------------------    K$112 = 42;
;**  	-----------------------    K$94 = &cycles[0];
;** 170	-----------------------    counter = 0;
;** 179	-----------------------    i = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$54$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L19
;** --------------------------------------------------------------------------*
$C$L19:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 179,column 18,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$55$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g36:
;** 137	-----------------------    act_kernel = 1;  // [17]
;** 140	-----------------------    VLIB_cache_inval();  // [17]
;** 143	-----------------------    initStack(getSP());  // [17]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [17]
;** 183	-----------------------    C$5 = (*U$13).im_size;
;** 183	-----------------------    VLIB_mixtureOfGaussiansS32_cn(C$5*i+Im, wt, mu, var, compNum, updateMask8, Im_mask_cn, C$5, (*U$13).alpha, (*U$13).rho, (*U$13).delta, (*U$13).T, (*U$13).ini_wt, (*U$13).ini_var);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [18]
;** 153	-----------------------    end_count = v$2;  // [18]
;** 156	-----------------------    C$4 = act_kernel;  // [18]
;** 156	-----------------------    *((C$4<<3)+K$94) = *((C$4<<3)+K$94)+(v$2-(beg_count+overhead));  // [18]
;** 159	-----------------------    setStackDepth();  // [18]
;** 192	-----------------------    mode[0] = K$102;
;** 193	-----------------------    mode[1] = K$102;
;** 194	-----------------------    mode[2] = K$102;
;** 195	-----------------------    mode[*compNum] = K$112;
;** 197	-----------------------    if ( !LevelOfFeedback ) goto g38;
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$227, DW_AT_TI_call
           CALL    .S1     VLIB_cache_inval  ; |140| 
           MVKL    .S1     act_kernel,A15
           MVKH    .S1     act_kernel,A15
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           MVK     .L1     1,A3              ; |137| 
           STW     .D1T1   A3,*A15           ; |137| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
           ADDKPC  .S2     $C$RL41,B3,0      ; |140| 
$C$RL41:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$55$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$56$B:
;          EXCLUSIVE CPU CYCLES: 62
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("getSP")
	.dwattr $C$DW$228, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL42:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("initStack")
	.dwattr $C$DW$229, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL43:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 183,column 17,is_stmt,isa 0
           LDH     .D2T2   *+B11(34),B8      ; |183| 
           LDW     .D2T2   *+B11(36),B5      ; |183| 
           LDW     .D2T2   *+B11(12),B10     ; |183| 
           LDW     .D2T2   *+B11(28),B17     ; |183| 
           LDH     .D2T2   *+B11(32),B16     ; |183| 
           LDW     .D2T2   *+SP(140),B31     ; |183| 
           LDW     .D2T1   *+SP(168),A10     ; |183| 
           LDW     .D2T1   *+SP(156),A8      ; |183| 
           LDW     .D2T1   *+SP(148),A6      ; |183| 
           LDH     .D2T1   *+B11(20),A12     ; |183| 
           LDW     .D2T2   *+B11(24),B12     ; |183| 

           MVKL    .S2     beg_count,B30
||         STH     .D2T2   B8,*+SP(10)       ; |183| 

           MV      .L2     B4,B7             ; |146| 
||         MPY32   .M2     B13,B10,B4        ; |183| 
||         MVKH    .S2     beg_count,B30
||         STW     .D2T2   B5,*+SP(12)       ; |183| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           STDW    .D2T2   B7:B6,*B30        ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 183,column 17,is_stmt,isa 0
           STW     .D2T2   B17,*+SP(4)       ; |183| 
           STH     .D2T2   B16,*+SP(8)       ; |183| 

           ADD     .L2     B31,B4,B5         ; |183| 
||         LDW     .D2T2   *+SP(160),B8      ; |183| 

           LDW     .D2T2   *+SP(152),B6      ; |183| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("VLIB_mixtureOfGaussiansS32_cn")
	.dwattr $C$DW$230, DW_AT_TI_call

           CALLP   .S2     VLIB_mixtureOfGaussiansS32_cn,B3
||         LDW     .D2T2   *+SP(144),B4      ; |183| 
||         MV      .L1X    B5,A4             ; |183| 

$C$RL44:   ; CALL OCCURS {VLIB_mixtureOfGaussiansS32_cn} {0}  ; |183| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |153| 
           MVC     .S2     TSCH,B5           ; |153| 
           MVKL    .S1     beg_count,A3

           MVKH    .S1     beg_count,A3
||         MVKL    .S2     overhead,B7

           LDW     .D1T1   *A15,A8           ; |156| 
||         MVKH    .S2     overhead,B7

           MV      .L2X    A3,B6
||         LDDW    .D2T2   *B7,B17:B16       ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D2T2   *B6,B9:B8         ; |156| 
           MVKL    .S1     cycles,A31
           MVKH    .S1     cycles,A31
           LDDW    .D1T1   *+A31[A8],A7:A6   ; |156| 
           MVKL    .S1     end_count,A30
           ADDU    .L2     B16,B8,B7:B6      ; |156| 

           ADD     .S2     B7,B17,B8         ; |156| 
||         SUBU    .L2     B4,B6,B7:B6       ; |156| 

           ADD     .L2     B8,B9,B8          ; |156| 

           ADDU    .L1X    A6,B6,A5:A4       ; |156| 
||         SUB     .L2     B5,B8,B6          ; |156| 
||         EXT     .S2     B7,24,24,B7       ; |156| 

           ADD     .L2     B6,B7,B6          ; |156| 
||         MVKH    .S1     end_count,A30

           ADD     .L1     A5,A7,A5          ; |156| 
||         MVKL    .S1     cycles,A3

           ADD     .L1X    A5,B6,A5          ; |156| 
||         MVKH    .S1     cycles,A3
||         STDW    .D1T2   B5:B4,*A30        ; |153| 

$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("setStackDepth")
	.dwattr $C$DW$231, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A3[A8]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL45:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$57$B:
;          EXCLUSIVE CPU CYCLES: 23
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 194,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(156),A31     ; |194| 
           MVK     .S1     0x20,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 192,column 17,is_stmt,isa 0
           STB     .D2T1   A3,*+SP(120)      ; |192| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 193,column 17,is_stmt,isa 0
           STB     .D2T1   A3,*+SP(121)      ; |193| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 194,column 17,is_stmt,isa 0
           STB     .D2T1   A3,*+SP(122)      ; |194| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 195,column 17,is_stmt,isa 0
           LDBU    .D1T1   *A31,A3           ; |195| 
           MVK     .S1     120,A5            ; |195| 
           MVK     .S1     0x2a,A30
           NOP             2
           ADD     .L1X    A3,SP,A4          ; |195| 
           STB     .D1T1   A30,*+A5[A4]      ; |195| 
           LDW     .D2T1   *+SP(136),A0      ; |195| 
           LDW     .D2T1   *+SP(148),A3
           NOP             3

   [!A0]   LDW     .D2T2   *+B11(8),B0       ; |205| 
|| [!A0]   B       .S1     $C$L20            ; |197| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 198,column 21,is_stmt,isa 0
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$232, DW_AT_TI_call
   [ A0]   CALL    .S1     VLIB_getFractional32 ; |198| 
   [ A0]   LDW     .D1T1   *A3,A4            ; |198| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 205,column 17,is_stmt,isa 0
   [ A0]   MVK     .L2     0x1,B0            ; |205| nullify predicate
   [!A0]   LDW     .D2T1   *+SP(116),A10     ; |205| 
   [!B0]   B       .S1     $C$L32            ; |205| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 197,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L20}        ; |197| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$57$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$58$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 198	-----------------------    printf((const char *)"%4d  %d  %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f\n", (int)Im[(*U$13).im_size*i], *Im_mask>>31, (int)mode[0], (double)VLIB_getFractional32(*mu, 15, 1), (double)VLIB_getFractional16((short)*var, 3, 1), (double)VLIB_getFractional16(*wt, 15, 1), (int)mode[1], (double)VLIB_getFractional32(mu[(*U$13).im_size], 23, 1), (double)VLIB_getFractional32(var[(*U$13).im_size], 15, 1), (double)VLIB_getFractional16(wt[(*U$13).im_size], 15, 1), (int)mode[2], (double)VLIB_getFractional32(*(((*U$13).im_size<<3)+mu), 23, 1), (double)VLIB_getFractional16((short)*(((*U$13).im_size<<3)+var), 15, 1), (double)VLIB_getFractional16(wt[2*(*U$13).im_size], 15, 1));

           MVK     .L1     0x1,A6            ; |198| 
||         MVK     .L2     0xf,B4            ; |198| 
||         ADDKPC  .S2     $C$RL46,B3,0      ; |198| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 198,column 21,is_stmt,isa 0
$C$RL46:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |198| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$58$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$59$B:
;          EXCLUSIVE CPU CYCLES: 137
           LDW     .D2T2   *+SP(152),B4      ; |198| 
           MV      .L1     A4,A10            ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$233, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |198| 
||         MVK     .L2     0x3,B4            ; |198| 

$C$RL47:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |198| 
           LDW     .D2T2   *+SP(144),B4      ; |198| 
           MV      .L2X    A4,B10            ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$234, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |198| 
||         MVK     .L2     0xf,B4            ; |198| 

$C$RL48:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |198| 
           LDW     .D2T1   *+B11(12),A3      ; |198| 

           MV      .L1     A4,A12            ; |198| 
||         LDW     .D2T1   *+SP(148),A4

           MVK     .S2     0x17,B4           ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$235, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional32,B3
||         LDW     .D1T1   *+A4[A3],A4       ; |198| 

$C$RL49:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |198| 
           LDW     .D2T2   *+B11(12),B4      ; |198| 
           LDW     .D2T2   *+SP(152),B5
           MV      .L1     A4,A15            ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$236, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional32,B3
||         LDW     .D2T1   *+B5[B4],A4       ; |198| 
||         MVK     .L2     0xf,B4            ; |198| 

$C$RL50:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |198| 
           LDW     .D2T2   *+SP(144),B5
           LDW     .D2T2   *+B11(12),B4      ; |198| 
           MV      .L2X    A4,B12            ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$237, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *+B5[B4],A4       ; |198| 
||         MVK     .L2     0xf,B4            ; |198| 

$C$RL51:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |198| 
           STW     .D2T1   A4,*+SP(176)      ; |198| 
           LDW     .D2T1   *+SP(148),A4
           LDW     .D2T1   *+B11(12),A3      ; |198| 
           MVK     .S2     0x17,B4           ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
           ADDAD   .D1     A4,A3,A3          ; |198| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("VLIB_getFractional32")
	.dwattr $C$DW$238, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional32,B3
||         LDW     .D1T1   *A3,A4            ; |198| 

$C$RL52:   ; CALL OCCURS {VLIB_getFractional32} {0}  ; |198| 
           LDW     .D2T2   *+B11(12),B4      ; |198| 
           LDW     .D2T2   *+SP(152),B5
           STW     .D2T1   A4,*+SP(172)      ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
           ADDAD   .D2     B5,B4,B4          ; |198| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$239, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |198| 
||         MVK     .L2     0xf,B4            ; |198| 

$C$RL53:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |198| 
           LDW     .D2T2   *+B11(12),B5      ; |198| 
           LDW     .D2T2   *+SP(144),B4
           STW     .D2T1   A4,*+SP(132)      ; |198| 
           MVK     .L1     0x1,A6            ; |198| 
           NOP             2
           ADDAW   .D2     B4,B5,B4          ; |198| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("VLIB_getFractional16")
	.dwattr $C$DW$240, DW_AT_TI_call

           CALLP   .S2     VLIB_getFractional16,B3
||         LDH     .D2T1   *B4,A4            ; |198| 
||         MVK     .L2     0xf,B4            ; |198| 

$C$RL54:   ; CALL OCCURS {VLIB_getFractional16} {0}  ; |198| 
           LDW     .D2T1   *+SP(164),A3      ; |198| 
           LDW     .D2T2   *+B11(12),B4      ; |198| 
           MVKL    .S1     $C$SL4+0,A5
           LDW     .D2T2   *+SP(140),B31     ; |198| 
           MVKH    .S1     $C$SL4+0,A5
           LDW     .D1T1   *A3,A3            ; |198| 
           STW     .D2T1   A5,*+SP(4)        ; |198| 
           LDB     .D2T2   *+SP(120),B9      ; |198| 

           MPY32   .M2     B13,B4,B5         ; |198| 
||         LDW     .D2T1   *+SP(172),A30     ; |198| 

           LDB     .D2T2   *+SP(121),B8      ; |198| 
           LDB     .D2T2   *+SP(122),B17     ; |198| 

           SHRU    .S1     A3,31,A3          ; |198| 
||         LDW     .D2T1   *+SP(176),A31     ; |198| 

           LDBU    .D2T2   *+B5[B31],B16     ; |198| 
||         SPDP    .S1     A12,A9:A8         ; |198| 

           STW     .D2T1   A3,*+SP(12)       ; |198| 

           SPDP    .S1     A10,A7:A6         ; |198| 
||         STDW    .D2T1   A9:A8,*+SP(40)    ; |198| 

           LDW     .D2T1   *+SP(132),A3      ; |198| 

           STDW    .D2T1   A7:A6,*+SP(24)    ; |198| 
||         SPDP    .S1     A15,A17:A16       ; |198| 

           STW     .D2T2   B16,*+SP(8)       ; |198| 
           STDW    .D2T1   A17:A16,*+SP(56)  ; |198| 

           SPDP    .S1     A4,A5:A4          ; |198| 
||         STW     .D2T2   B9,*+SP(16)       ; |198| 

           SPDP    .S2X    A30,B7:B6         ; |198| 
||         STW     .D2T2   B8,*+SP(48)       ; |198| 

           STDW    .D2T1   A5:A4,*+SP(104)   ; |198| 

           SPDP    .S2     B10,B5:B4         ; |198| 
||         SPDP    .S1     A3,A9:A8          ; |198| 
||         STW     .D2T2   B17,*+SP(80)      ; |198| 

           STDW    .D2T2   B7:B6,*+SP(88)    ; |198| 

           STDW    .D2T2   B5:B4,*+SP(32)    ; |198| 
||         SPDP    .S1     A31,A7:A6         ; |198| 

           SPDP    .S2     B12,B5:B4         ; |198| 
||         STDW    .D2T1   A9:A8,*+SP(96)    ; |198| 

           STDW    .D2T1   A7:A6,*+SP(72)    ; |198| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("printf")
	.dwattr $C$DW$241, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STDW    .D2T2   B5:B4,*+SP(64)    ; |198| 

$C$RL55:   ; CALL OCCURS {printf} {0}        ; |198| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 205,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B11(8),B0       ; |205| 
           LDW     .D2T1   *+SP(116),A10     ; |205| 
           NOP             3
   [!B0]   B       .S1     $C$L32            ; |205| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$59$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 197,column 17,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$60$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g38:
;** 205	-----------------------    v$1 = prm;
;** 205	-----------------------    if ( (*U$13).staticOut == NULL ) goto g59;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
   [ B0]   LDW     .D2T2   *+B11(12),B4      ; |208| 
   [!B0]   LDW     .D2T1   *+SP(128),A3
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 205,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L32}        ; |205| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$60$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$61$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 208	-----------------------    if ( (*U$13).im_size <= 0 ) goto g48;

           SHL     .S1     A13,5,A3
||         CMPGT   .L2     B4,0,B0           ; |208| 

           ADDAD   .D1     A3,A13,A3
|| [!B0]   B       .S1     $C$L25            ; |208| 
|| [ B0]   LDW     .D2T1   *+SP(152),A30

           ADD     .L1     A10,A3,A3
   [ B0]   LDW     .D1T1   *+A3(12),A4
   [ B0]   LDW     .D1T1   *+A3(8),A6
   [ B0]   MVK     .L1     3,A31
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L25}        ; |208| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$61$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$62$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$152 = mu;
;**  	-----------------------    C$3 = &v$1[tpi];
;**  	-----------------------    U$159 = counter*4+(*C$3).staticOut-4;
;**  	-----------------------    U$170 = var;
;**  	-----------------------    U$178 = wt;
;**  	-----------------------    L$4 = _lo(_mpyli(3, (*C$3).im_size));
;** 208	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D2T1   *+SP(148),A15

           MPYLI   .M1     A31,A4,A5:A4
||         STW     .D2T1   A30,*+SP(172)

           ADDAW   .D1     A6,A14,A29
           SUB     .L1     A29,4,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 209,column 25,is_stmt,isa 0
           ADD     .L1     4,A12,A12         ; |209| 
           STW     .D2T1   A4,*+SP(132)
           LDW     .D1T1   *A15++,A4         ; |209| 
           LDW     .D1T1   *A12++,A3         ; |209| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 26,is_stmt,isa 0
           ZERO    .L2     B12               ; |208| 
           LDW     .D2T2   *+SP(144),B10
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$62$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$63$B:
;          EXCLUSIVE CPU CYCLES: 9
;**	-----------------------g41:
;** 209	-----------------------    ++U$159;
;** 209	-----------------------    if ( (unsigned)*U$152++ == *U$159++ ) goto g43;
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 209,column 25,is_stmt,isa 0
           CMPEQ   .L1     A4,A3,A0          ; |209| 

   [ A0]   B       .S1     $C$L22            ; |209| 
|| [ A0]   LDW     .D2T2   *+SP(172),B4
|| [!A0]   MVKL    .S2     $C$SL5+0,B5
|| [ A0]   LDW     .D1T1   *A12++,A3         ; |213| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 210,column 29,is_stmt,isa 0
   [!A0]   SHR     .S1X    B12,5,A3          ; |210| 
   [!A0]   MVKH    .S2     $C$SL5+0,B5
   [!A0]   EXTU    .S2     B12,27,27,B4      ; |210| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("printf")
	.dwattr $C$DW$242, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |210| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 213,column 25,is_stmt,isa 0
   [ A0]   LDW     .D2T2   *B4++,B5          ; |213| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 209,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L22}        ; |209| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$63$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$64$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 210	-----------------------    printf((const char *)"\tError in Mean: Image %d, Pixel %d, Mode %d\n", i, k&0x1f, k>>5);
;** 211	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 210,column 29,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |210| 
           STW     .D2T1   A3,*+SP(16)       ; |210| 
           STW     .D2T2   B4,*+SP(12)       ; |210| 

           STW     .D2T2   B13,*+SP(8)       ; |210| 
||         ADDKPC  .S2     $C$RL56,B3,0      ; |210| 

$C$RL56:   ; CALL OCCURS {printf} {0}        ; |210| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$64$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$65$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(172),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 213,column 25,is_stmt,isa 0
           LDW     .D1T1   *A12++,A3         ; |213| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 211,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |211| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 213,column 25,is_stmt,isa 0
           LDW     .D2T2   *B4++,B5          ; |213| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$65$E:
;** --------------------------------------------------------------------------*
$C$L22:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 209,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$66$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g43:
;** 213	-----------------------    if ( (unsigned)*U$170++ == *U$159++ ) goto g45;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 213,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(172)      ; |213| 
           NOP             3
           CMPEQ   .L1X    B5,A3,A0          ; |213| 

   [ A0]   LDW     .D1T1   *A12,A3           ; |217| 
|| [ A0]   LDH     .D2T2   *B10++,B4         ; |217| 
|| [ A0]   B       .S1     $C$L23            ; |213| 
|| [!A0]   MVKL    .S2     $C$SL6+0,B5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 214,column 29,is_stmt,isa 0
   [!A0]   SHR     .S1X    B12,5,A3          ; |214| 
   [!A0]   MVKH    .S2     $C$SL6+0,B5
   [!A0]   EXTU    .S2     B12,27,27,B4      ; |214| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("printf")
	.dwattr $C$DW$243, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |214| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 217,column 25,is_stmt,isa 0
   [ A0]   CMPEQ   .L1X    B4,A3,A0          ; |217| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 213,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |213| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$66$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$67$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 214	-----------------------    printf((const char *)"\tError in Variance: Image %d, Pixel %d, Mode %d\n", i, k&0x1f, k>>5);
;** 215	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 214,column 29,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |214| 
           STW     .D2T2   B4,*+SP(12)       ; |214| 
           STW     .D2T1   A3,*+SP(16)       ; |214| 

           STW     .D2T2   B13,*+SP(8)       ; |214| 
||         ADDKPC  .S2     $C$RL57,B3,0      ; |214| 

$C$RL57:   ; CALL OCCURS {printf} {0}        ; |214| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$67$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$68$B:
;          EXCLUSIVE CPU CYCLES: 6

           LDH     .D2T2   *B10++,B4         ; |217| 
||         LDW     .D1T1   *A12,A3           ; |217| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 215,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |215| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 217,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B4,A3,A0          ; |217| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$68$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 213,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$69$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g45:
;** 217	-----------------------    if ( (unsigned)*U$178++ == *U$159 ) goto g47;

   [ A0]   B       .S1     $C$L24            ; |217| 
|| [ A0]   LDW     .D2T2   *+SP(132),B4
|| [!A0]   MVKL    .S2     $C$SL7+0,B5
|| [ A0]   ADD     .L1     3,A14,A14         ; |209| 
|| [ A0]   ADD     .L2     1,B12,B12         ; |208| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 218,column 29,is_stmt,isa 0
   [!A0]   SHR     .S1X    B12,5,A3          ; |218| 
   [!A0]   MVKH    .S2     $C$SL7+0,B5
   [!A0]   EXTU    .S2     B12,27,27,B4      ; |218| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("printf")
	.dwattr $C$DW$244, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |218| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
   [ A0]   SUB     .L1X    B4,1,A0           ; |208| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 217,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L24}        ; |217| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$69$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$70$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 218	-----------------------    printf((const char *)"\tError in Weight: Image %d, Pixel %d, Mode %d\n", i, k&0x1f, k>>5);
;** 219	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 218,column 29,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |218| 
           STW     .D2T1   A3,*+SP(16)       ; |218| 
           STW     .D2T2   B4,*+SP(12)       ; |218| 

           STW     .D2T2   B13,*+SP(8)       ; |218| 
||         ADDKPC  .S2     $C$RL58,B3,0      ; |218| 

$C$RL58:   ; CALL OCCURS {printf} {0}        ; |218| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$70$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$71$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(132),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 219,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |219| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
           ADD     .L2     1,B12,B12         ; |208| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 209,column 25,is_stmt,isa 0
           ADD     .L1     3,A14,A14         ; |209| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |208| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$71$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 217,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$72$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g47:
;** 208	-----------------------    ++k;
;** 209	-----------------------    counter += 3;
;** 208	-----------------------    if ( L$4 = L$4-1 ) goto g41;

   [ A0]   B       .S1     $C$L21            ; |208| 
||         SUB     .L2     B4,1,B4           ; |208| 
|| [ A0]   ADD     .L1     4,A12,A12         ; |209| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(132)      ; |208| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 209,column 25,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *A15++,A4         ; |209| 
   [ A0]   LDW     .D1T1   *A12++,A3         ; |209| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 208,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L21}        ; |208| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$72$E:
;** --------------------------------------------------------------------------*
$C$L25:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$73$B:
;          EXCLUSIVE CPU CYCLES: 18
;**	-----------------------g48:
;** 223	-----------------------    if ( (U$186 = (*(U$12+v$1)).im_size) <= 0 ) goto g53;
           LDW     .D2T1   *+SP(128),A3
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 223,column 31,is_stmt,isa 0
           ADD     .L1     A10,A3,A3         ; |223| 
           LDW     .D1T2   *+A3(12),B10      ; |223| 
           SHL     .S1     A13,5,A3
           ADDAD   .D1     A3,A13,A3
           ADD     .L1     A10,A3,A3
           NOP             1
           CMPGT   .L2     B10,0,B0          ; |223| 

   [!B0]   BNOP    .S1     $C$L28,4          ; |223| 
|| [ B0]   LDW     .D1T1   *+A3(8),A3
|| [ B0]   LDW     .D2T2   *+SP(156),B12     ; |224| 

           ADDAW   .D1     A3,A14,A3
           ; BRANCHCC OCCURS {$C$L28}        ; |223| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$73$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$74$B:
;          EXCLUSIVE CPU CYCLES: 5
;**  	-----------------------    U$159 = counter*4+(v$1[tpi]).staticOut-4;
;**  	-----------------------    U$194 = compNum;
;** 224	-----------------------    L$5 = U$186;
;** 224	-----------------------    counter += L$5;
;** 223	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           STW     .D2T2   B10,*+SP(132)     ; |224| 
||         SUB     .L1     A3,4,A15

           LDW     .D1T1   *++A15,A3         ; |224| 
||         LDBU    .D2T2   *B12++,B4         ; |224| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 223,column 26,is_stmt,isa 0
           ZERO    .L1     A12               ; |223| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 224,column 25,is_stmt,isa 0
           ADD     .L1X    B10,A14,A14       ; |224| 
           NOP             1
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$74$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L26:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 223,column 26,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$75$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g50:
;** 224	-----------------------    if ( (unsigned)*U$194++ == *(++U$159) ) goto g52;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 224,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B4,A3,A0          ; |224| 

   [ A0]   BNOP    .S1     $C$L27,1          ; |224| 
|| [ A0]   LDW     .D2T2   *+SP(132),B4
|| [!A0]   MVKL    .S2     $C$SL8+0,B4
|| [ A0]   ADD     .L1     1,A12,A12         ; |223| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 225,column 29,is_stmt,isa 0
   [!A0]   EXTU    .S1     A12,27,27,A3      ; |225| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("printf")
	.dwattr $C$DW$245, DW_AT_TI_call
   [!A0]   CALL    .S1     printf            ; |225| 
   [!A0]   MVKH    .S2     $C$SL8+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 223,column 31,is_stmt,isa 0
   [ A0]   SUB     .L1X    B4,1,A0           ; |223| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 224,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L27}        ; |224| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$75$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$76$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 225	-----------------------    printf((const char *)"\tError in Component index: Image %d, Pixel %d\n", i, k&0x1f);
;** 226	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 225,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |225| 
           STW     .D2T1   A3,*+SP(12)       ; |225| 

           STW     .D2T2   B13,*+SP(8)       ; |225| 
||         ADDKPC  .S2     $C$RL59,B3,0      ; |225| 

$C$RL59:   ; CALL OCCURS {printf} {0}        ; |225| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$76$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$77$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(132),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 226,column 29,is_stmt,isa 0
           ZERO    .L1     A11               ; |226| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 223,column 31,is_stmt,isa 0
           ADD     .L1     1,A12,A12         ; |223| 
           NOP             2
           SUB     .L1X    B4,1,A0           ; |223| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$77$E:
;** --------------------------------------------------------------------------*
$C$L27:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 224,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$78$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g52:
;** 223	-----------------------    ++k;
;** 223	-----------------------    if ( L$5 = L$5-1 ) goto g50;

           SUB     .L2     B4,1,B4           ; |223| 
|| [ A0]   B       .S1     $C$L26            ; |223| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 223,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(132)      ; |223| 

   [ A0]   LDBU    .D2T2   *B12++,B4         ; |224| 
|| [ A0]   LDW     .D1T1   *++A15,A3         ; |224| 

           NOP             3
           ; BRANCHCC OCCURS {$C$L26}        ; |223| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$78$E:
;** --------------------------------------------------------------------------*
$C$L28:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$79$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g53:
;** 230	-----------------------    if ( U$186 <= 0 ) goto g58;

           CMPGT   .L2     B10,0,B0          ; |230| 
||         SHL     .S1     A13,5,A3

   [!B0]   B       .S1     $C$L31            ; |230| 
||         ADDAD   .D1     A3,A13,A3
|| [ B0]   LDW     .D2T1   *+SP(168),A31     ; |231| 

           ADD     .L1     A10,A3,A3
   [ B0]   LDW     .D1T1   *+A3(8),A4
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 230,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L31}        ; |230| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$79$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$80$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    U$205 = *(counter*4+(v$1[tpi]).staticOut);
;**  	-----------------------    U$217 = *Im_mask_cn;
;** 231	-----------------------    L$6 = U$186;
;** 230	-----------------------    k = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D1T2   *A31,B12
           LDW     .D1T1   *+A4[A14],A15
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 230,column 26,is_stmt,isa 0
           ZERO    .L1     A12               ; |230| 
           NOP             3
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$80$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L29:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$81$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g55:
;** 231	-----------------------    if ( (U$217>>k&1u) == (U$205>>k&1u) ) goto g57;

           MV      .L1X    B12,A4            ; |231| 
||         SHRU    .S1     A15,A12,A3        ; |231| 

           SHRU    .S1     A4,A12,A4         ; |231| 
||         AND     .L1     1,A3,A3           ; |231| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 231,column 25,is_stmt,isa 0
           AND     .L1     1,A4,A4           ; |231| 
           CMPEQ   .L1     A4,A3,A0          ; |231| 

   [ A0]   BNOP    .S1     $C$L30,1          ; |231| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [!A0]   MVKL    .S2     $C$SL9+0,B4
|| [ A0]   ADD     .D1     1,A12,A12         ; |230| 

   [!A0]   MVKH    .S2     $C$SL9+0,B4
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("printf")
	.dwattr $C$DW$246, DW_AT_TI_call

   [!A0]   CALL    .S1     printf            ; |232| 
|| [ A0]   SUB     .L1X    B10,1,A0          ; |230| 
|| [ A1]   SUB     .L2     B10,1,B10         ; |230| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 230,column 31,is_stmt,isa 0
   [!A1]   ZERO    .L1     A0                ; |230| nullify predicate
   [ A0]   B       .S1     $C$L29            ; |230| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 231,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L30}        ; |231| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$81$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$82$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 232	-----------------------    printf((const char *)"\tError in Foreground Mask: Image %d, Pixel %d\n", i, k);
;** 233	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 232,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |232| 
           STW     .D2T1   A12,*+SP(12)      ; |232| 

           STW     .D2T2   B13,*+SP(8)       ; |232| 
||         ADDKPC  .S2     $C$RL60,B3,0      ; |232| 

$C$RL60:   ; CALL OCCURS {printf} {0}        ; |232| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$82$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$83$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 230,column 31,is_stmt,isa 0
           SUB     .L1X    B10,1,A0          ; |230| 

   [ A0]   B       .S1     $C$L29            ; |230| 
||         SUB     .L2     B10,1,B10         ; |230| 
||         ADD     .L1     1,A12,A12         ; |230| 
||         ZERO    .D1     A11               ; |233| 

$C$DW$L$VLIB_mixtureOfGaussiansS32_d$83$E:
;** --------------------------------------------------------------------------*
$C$L30:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 231,column 25,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$84$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g57:
;** 230	-----------------------    ++k;
;** 230	-----------------------    if ( L$6 = L$6-1 ) goto g55;
           NOP             5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 230,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L29}        ; |230| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$84$E:
;** --------------------------------------------------------------------------*
$C$L31:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$85$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g58:
;** 237	-----------------------    ++counter;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 237,column 21,is_stmt,isa 0
           ADD     .L1     1,A14,A14         ; |237| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$85$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$86$B:
;          EXCLUSIVE CPU CYCLES: 4
           LDW     .D2T1   *+SP(128),A3
           NOP             3
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$86$E:
;** --------------------------------------------------------------------------*
$C$L32:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 205,column 17,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$87$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g59:
;** 179	-----------------------    if ( (*(U$12+v$1)).num_images > (++i) ) goto g36;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 179,column 23,is_stmt,isa 0
           ADD     .L2     1,B13,B13         ; |179| 
           ADD     .L1     A10,A3,A3         ; |179| 
           LDW     .D1T1   *+A3(16),A3       ; |179| 
           NOP             4
           CMPGT   .L2X    A3,B13,B0         ; |179| 
   [ B0]   BNOP    .S1     $C$L19,5          ; |179| 
           ; BRANCHCC OCCURS {$C$L19}        ; |179| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$87$E:
;** --------------------------------------------------------------------------*
$C$L33:    
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$88$B:
;          EXCLUSIVE CPU CYCLES: 21
;**	-----------------------g60:
;** 242	-----------------------    C$2 = (*(U$12+v$1)).im_size;
;** 242	-----------------------    status_nat_vs_int = VLIB_compare_mem((void *)Im_mask, (void *)Im_mask_cn, (C$2>>4>>27)+C$2>>3&0xfffffffc);
;** 247	-----------------------    est_test = 1;
;** 250	-----------------------    sprintf(K$232, (const char *)"%s generated input | Opt results compared to NatC results | im_size=%d, num_images=%d", K$59, (*U$13).im_size, (*U$13).num_images);
;** 252	-----------------------    C$1 = (*U$13).num_images;
;** 252	-----------------------    VLIB_formula_add_test((*U$13).im_size*C$1, C$1, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$232, 0);
;** 254	-----------------------    goto g62;
           LDW     .D2T1   *+SP(128),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 242,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(168),B4      ; |242| 
           NOP             3
           ADD     .L1     A10,A3,A3         ; |242| 
           LDW     .D1T1   *+A3(12),A3       ; |242| 
           NOP             4
           SHR     .S1     A3,4,A4           ; |242| 
           SHRU    .S1     A4,27,A4          ; |242| 
           ADD     .L1     A3,A4,A3          ; |242| 
           SHR     .S1     A3,3,A3           ; |242| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$247, DW_AT_TI_call

           CALLP   .S2     VLIB_compare_mem,B3
||         LDW     .D2T1   *+SP(164),A4      ; |242| 
||         AND     .L1     -4,A3,A6          ; |242| 

$C$RL61:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |242| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$88$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$89$B:
;          EXCLUSIVE CPU CYCLES: 29

           LDW     .D2T2   *+B11(16),B4      ; |250| 
||         MVKL    .S2     testPatternString,B7

           LDW     .D2T2   *+B11(12),B5      ; |250| 
||         MVKL    .S2     $C$SL10+0,B6

           MVKH    .S2     testPatternString,B7

           MV      .L1     A4,A10            ; |242| 
||         MVKL    .S1     est_test,A4
||         MVKH    .S2     $C$SL10+0,B6
||         STW     .D2T2   B7,*+SP(8)        ; |250| 

           MVKH    .S1     est_test,A4
||         MVK     .L1     1,A3              ; |247| 
||         STW     .D2T2   B6,*+SP(4)        ; |250| 

           STW     .D1T1   A3,*A4            ; |247| 
||         MVKL    .S1     desc,A4
||         STW     .D2T2   B4,*+SP(16)       ; |250| 

$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("sprintf")
	.dwattr $C$DW$248, DW_AT_TI_call

           CALLP   .S2     sprintf,B3
||         STW     .D2T2   B5,*+SP(12)       ; |250| 
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 250,column 13,is_stmt,isa 0
$C$RL62:   ; CALL OCCURS {sprintf} {0}       ; |250| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 252,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(12),B5      ; |252| 
           LDW     .D2T2   *+B11(16),B4      ; |252| 
           CMPEQ   .L1     A11,0,A3          ; |252| 
           CMPEQ   .L1     A10,0,A4          ; |252| 
           OR      .L1     A3,A4,A3          ; |252| 
           MVKL    .S1     desc,A8
           MPY32   .M2     B4,B5,B5          ; |252| 
           MV      .L2X    A3,B6             ; |252| 
           MVKH    .S1     desc,A8
           ZERO    .L1     A6                ; |252| 
           ZERO    .L2     B8                ; |252| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$249, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MV      .L1X    B5,A4             ; |252| 

$C$RL63:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |252| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$89$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$90$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 254,column 9,is_stmt,isa 0
           B       .S1     $C$L35            ; |254| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 262,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | free(Im_mask_cn);                                                      
;----------------------------------------------------------------------
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("free")
	.dwattr $C$DW$250, DW_AT_TI_call
           CALL    .S1     free              ; |262| 
           LDW     .D2T1   *+SP(168),A4      ; |262| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 254,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L35}          ; |254| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$90$E:
;** --------------------------------------------------------------------------*
$C$L34:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 71,column 9,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$91$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g61:
;** 256	-----------------------    sprintf(K$232, (const char *)"im_size=%d, num_images=%d", (*U$13).im_size, (*U$13).num_images);
;** 258	-----------------------    VLIB_skip_test(K$232);
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x04)
	.dwattr $C$DW$251, DW_AT_name("sprintf")
	.dwattr $C$DW$251, DW_AT_TI_call

           LDW     .D2T2   *+B11(12),B5      ; |256| 
||         CALL    .S1     sprintf           ; |256| 
||         MVKL    .S2     $C$SL11+0,B6

           MVKH    .S2     $C$SL11+0,B6
||         MVKL    .S1     desc,A4

           MVKH    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 256,column 13,is_stmt,isa 0
           STW     .D2T2   B6,*+SP(4)        ; |256| 
           STW     .D2T2   B4,*+SP(12)       ; |256| 

           STW     .D2T2   B5,*+SP(8)        ; |256| 
||         ADDKPC  .S2     $C$RL64,B3,0      ; |256| 

$C$RL64:   ; CALL OCCURS {sprintf} {0}       ; |256| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$91$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$92$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$252, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 258,column 13,is_stmt,isa 0
$C$RL65:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |258| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 262,column 9,is_stmt,isa 0
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("free")
	.dwattr $C$DW$253, DW_AT_TI_call
           CALL    .S1     free              ; |262| 
           LDW     .D2T1   *+SP(168),A4      ; |262| 
           NOP             3
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$92$E:
;** --------------------------------------------------------------------------*
$C$L35:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 254,column 9,is_stmt,isa 0
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$93$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g62:
;** 262	-----------------------    free((void *)Im_mask_cn);
;** 263	-----------------------    VLIB_free((void *)Im_mask);
;** 264	-----------------------    VLIB_free((void *)updateMask8);
;** 265	-----------------------    VLIB_free((void *)compNum);
;** 266	-----------------------    VLIB_free((void *)var);
;** 267	-----------------------    VLIB_free((void *)mu);
;** 268	-----------------------    VLIB_free((void *)wt);
;** 269	-----------------------    VLIB_free((void *)Im);
;** 51	-----------------------    U$12 += 40;
;** 51	-----------------------    U$13 += 40;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 262,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL66,B3,0      ; |262| 
$C$RL66:   ; CALL OCCURS {free} {0}          ; |262| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$93$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$94$B:
;          EXCLUSIVE CPU CYCLES: 42
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("VLIB_free")
	.dwattr $C$DW$254, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(164),A4      ; |263| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 263,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 263 | VLIB_free(Im_mask);                                                    
;----------------------------------------------------------------------
$C$RL67:   ; CALL OCCURS {VLIB_free} {0}     ; |263| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("VLIB_free")
	.dwattr $C$DW$255, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(160),A4      ; |264| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 264,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 264 | VLIB_free(updateMask8);                                                
;----------------------------------------------------------------------
$C$RL68:   ; CALL OCCURS {VLIB_free} {0}     ; |264| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("VLIB_free")
	.dwattr $C$DW$256, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(156),A4      ; |265| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 265,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 265 | VLIB_free(compNum);                                                    
;----------------------------------------------------------------------
$C$RL69:   ; CALL OCCURS {VLIB_free} {0}     ; |265| 
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("VLIB_free")
	.dwattr $C$DW$257, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(152),A4      ; |266| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 266,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 266 | VLIB_free(var);                                                        
;----------------------------------------------------------------------
$C$RL70:   ; CALL OCCURS {VLIB_free} {0}     ; |266| 
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_name("VLIB_free")
	.dwattr $C$DW$258, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(148),A4      ; |267| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 267,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 267 | VLIB_free(mu);                                                         
;----------------------------------------------------------------------
$C$RL71:   ; CALL OCCURS {VLIB_free} {0}     ; |267| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("VLIB_free")
	.dwattr $C$DW$259, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(144),A4      ; |268| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 268,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 268 | VLIB_free(wt);                                                         
;----------------------------------------------------------------------
$C$RL72:   ; CALL OCCURS {VLIB_free} {0}     ; |268| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("VLIB_free")
	.dwattr $C$DW$260, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(140),A4      ; |269| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 269,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 269 | VLIB_free(Im);                                                         
;----------------------------------------------------------------------
$C$RL73:   ; CALL OCCURS {VLIB_free} {0}     ; |269| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$94$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$95$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |51| 
           ADDK    .S2     40,B11            ; |51| 
           LDW     .D2T1   *+SP(128),A4      ; |51| 
           ADD     .L1     1,A13,A13         ; |51| 
           NOP             1
           CMPGT   .L1     A3,A13,A0         ; |51| 

   [ A0]   BNOP    .S1     $C$L1,2           ; |51| 
|| [ A0]   LDW     .D2T1   *+B11(16),A3      ; |61| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 61,column 21,is_stmt,isa 0
   [ A0]   LDW     .D2T2   *+B11(12),B4      ; |61| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 51,column 17,is_stmt,isa 0
           ADDK    .S1     40,A4             ; |51| 
           STW     .D2T1   A4,*+SP(128)      ; |51| 
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_mixtureOfGaussiansS32_d$95$E:
;** --------------------------------------------------------------------------*
$C$L36:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g63:
;** 272	-----------------------    VLIB_profile_cycle_report(2, "N = im_size*num_images; M = num_images", "im_size*num_images");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [21]
;** 168	-----------------------    VLIB_stack_memory();  // [21]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL13+0,B4

           MVKL    .S1     $C$SL12+0,A6
||         MVKH    .S2     $C$SL13+0,B4

$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$261, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL12+0,A6
||         MVK     .L1     0x2,A4            ; |272| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 272,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 272 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 273 |                           "N = im_size*num_images; M = num_images",    
; 274 |                           "im_size*num_images");                       
; 277 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL74:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |272| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL14+0,B4
           MVKH    .S2     $C$SL14+0,B4
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("printf")
	.dwattr $C$DW$262, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL75:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$263, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL76:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c",line 278,column 1,is_stmt,isa 0
           ADDK    .S2     176,SP            ; |278| 
	.dwcfi	cfa_offset, 56
           LDW     .D2T2   *++SP(8),B3
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |278| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$265	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$265, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L1:1:1443280332")
	.dwattr $C$DW$265, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$265, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$265, DW_AT_TI_end_line(0x10e)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$5$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$5$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$91$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$91$E)
$C$DW$268	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$268, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$54$B)
	.dwattr $C$DW$268, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$54$E)
$C$DW$269	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$269, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$51$B)
	.dwattr $C$DW$269, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$51$E)
$C$DW$270	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$270, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$14$B)
	.dwattr $C$DW$270, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$14$E)
$C$DW$271	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$271, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$11$B)
	.dwattr $C$DW$271, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$11$E)
$C$DW$272	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$272, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$6$B)
	.dwattr $C$DW$272, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$6$E)
$C$DW$273	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$273, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$7$B)
	.dwattr $C$DW$273, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$7$E)
$C$DW$274	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$274, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$8$B)
	.dwattr $C$DW$274, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$8$E)
$C$DW$275	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$275, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$9$B)
	.dwattr $C$DW$275, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$9$E)
$C$DW$276	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$276, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$10$B)
	.dwattr $C$DW$276, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$10$E)
$C$DW$277	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$277, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$12$B)
	.dwattr $C$DW$277, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$12$E)
$C$DW$278	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$278, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$13$B)
	.dwattr $C$DW$278, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$13$E)
$C$DW$279	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$279, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$48$B)
	.dwattr $C$DW$279, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$48$E)
$C$DW$280	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$280, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$49$B)
	.dwattr $C$DW$280, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$49$E)
$C$DW$281	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$281, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$50$B)
	.dwattr $C$DW$281, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$50$E)
$C$DW$282	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$282, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$52$B)
	.dwattr $C$DW$282, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$52$E)
$C$DW$283	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$283, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$53$B)
	.dwattr $C$DW$283, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$53$E)
$C$DW$284	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$284, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$88$B)
	.dwattr $C$DW$284, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$88$E)
$C$DW$285	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$285, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$89$B)
	.dwattr $C$DW$285, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$89$E)
$C$DW$286	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$286, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$90$B)
	.dwattr $C$DW$286, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$90$E)
$C$DW$287	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$287, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$92$B)
	.dwattr $C$DW$287, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$92$E)
$C$DW$288	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$288, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$93$B)
	.dwattr $C$DW$288, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$93$E)
$C$DW$289	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$289, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$94$B)
	.dwattr $C$DW$289, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$94$E)
$C$DW$290	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$290, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$95$B)
	.dwattr $C$DW$290, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$95$E)

$C$DW$291	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$291, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L3:2:1443280332")
	.dwattr $C$DW$291, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$291, DW_AT_TI_begin_line(0x64)
	.dwattr $C$DW$291, DW_AT_TI_end_line(0xa0)
$C$DW$292	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$292, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$15$B)
	.dwattr $C$DW$292, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$15$E)
$C$DW$293	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$293, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$40$B)
	.dwattr $C$DW$293, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$40$E)
$C$DW$294	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$294, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$34$B)
	.dwattr $C$DW$294, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$34$E)
$C$DW$295	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$295, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$22$B)
	.dwattr $C$DW$295, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$22$E)
$C$DW$296	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$296, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$21$B)
	.dwattr $C$DW$296, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$21$E)
$C$DW$297	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$297, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$33$B)
	.dwattr $C$DW$297, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$33$E)
$C$DW$298	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$298, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$39$B)
	.dwattr $C$DW$298, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$39$E)
$C$DW$299	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$299, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$45$B)
	.dwattr $C$DW$299, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$45$E)
$C$DW$300	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$300, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$18$B)
	.dwattr $C$DW$300, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$18$E)
$C$DW$301	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$301, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$16$B)
	.dwattr $C$DW$301, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$16$E)
$C$DW$302	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$302, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$17$B)
	.dwattr $C$DW$302, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$17$E)
$C$DW$303	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$303, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$19$B)
	.dwattr $C$DW$303, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$19$E)
$C$DW$304	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$304, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$20$B)
	.dwattr $C$DW$304, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$20$E)
$C$DW$305	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$305, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$46$B)
	.dwattr $C$DW$305, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$46$E)
$C$DW$306	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$306, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$47$B)
	.dwattr $C$DW$306, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$47$E)

$C$DW$307	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$307, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L5:3:1443280332")
	.dwattr $C$DW$307, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$307, DW_AT_TI_begin_line(0x81)
	.dwattr $C$DW$307, DW_AT_TI_end_line(0x8e)
$C$DW$308	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$308, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$23$B)
	.dwattr $C$DW$308, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$23$E)
$C$DW$309	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$309, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$30$B)
	.dwattr $C$DW$309, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$30$E)
$C$DW$310	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$310, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$27$B)
	.dwattr $C$DW$310, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$27$E)
$C$DW$311	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$311, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$24$B)
	.dwattr $C$DW$311, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$24$E)
$C$DW$312	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$312, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$25$B)
	.dwattr $C$DW$312, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$25$E)
$C$DW$313	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$313, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$26$B)
	.dwattr $C$DW$313, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$26$E)
$C$DW$314	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$314, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$28$B)
	.dwattr $C$DW$314, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$28$E)
$C$DW$315	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$315, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$29$B)
	.dwattr $C$DW$315, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$29$E)
$C$DW$316	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$316, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$31$B)
	.dwattr $C$DW$316, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$31$E)
$C$DW$317	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$317, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$32$B)
	.dwattr $C$DW$317, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$32$E)
	.dwendtag $C$DW$307


$C$DW$318	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$318, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L10:3:1443280332")
	.dwattr $C$DW$318, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$318, DW_AT_TI_begin_line(0x90)
	.dwattr $C$DW$318, DW_AT_TI_end_line(0x95)
$C$DW$319	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$319, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$35$B)
	.dwattr $C$DW$319, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$35$E)
$C$DW$320	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$320, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$36$B)
	.dwattr $C$DW$320, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$36$E)
$C$DW$321	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$321, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$37$B)
	.dwattr $C$DW$321, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$37$E)
$C$DW$322	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$322, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$38$B)
	.dwattr $C$DW$322, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$38$E)
	.dwendtag $C$DW$318


$C$DW$323	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$323, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L13:3:1443280332")
	.dwattr $C$DW$323, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$323, DW_AT_TI_begin_line(0x97)
	.dwattr $C$DW$323, DW_AT_TI_end_line(0x9c)
$C$DW$324	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$324, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$41$B)
	.dwattr $C$DW$324, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$41$E)
$C$DW$325	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$325, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$42$B)
	.dwattr $C$DW$325, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$42$E)
$C$DW$326	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$326, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$43$B)
	.dwattr $C$DW$326, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$43$E)
$C$DW$327	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$327, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$44$B)
	.dwattr $C$DW$327, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$44$E)
	.dwendtag $C$DW$323

	.dwendtag $C$DW$291


$C$DW$328	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$328, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L19:2:1443280332")
	.dwattr $C$DW$328, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$328, DW_AT_TI_begin_line(0xb3)
	.dwattr $C$DW$328, DW_AT_TI_end_line(0xef)
$C$DW$329	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$329, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$55$B)
	.dwattr $C$DW$329, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$55$E)
$C$DW$330	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$330, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$80$B)
	.dwattr $C$DW$330, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$80$E)
$C$DW$331	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$331, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$74$B)
	.dwattr $C$DW$331, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$74$E)
$C$DW$332	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$332, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$62$B)
	.dwattr $C$DW$332, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$62$E)
$C$DW$333	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$333, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$61$B)
	.dwattr $C$DW$333, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$61$E)
$C$DW$334	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$334, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$73$B)
	.dwattr $C$DW$334, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$73$E)
$C$DW$335	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$335, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$79$B)
	.dwattr $C$DW$335, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$79$E)
$C$DW$336	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$336, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$85$B)
	.dwattr $C$DW$336, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$85$E)
$C$DW$337	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$337, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$58$B)
	.dwattr $C$DW$337, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$58$E)
$C$DW$338	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$338, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$56$B)
	.dwattr $C$DW$338, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$56$E)
$C$DW$339	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$339, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$57$B)
	.dwattr $C$DW$339, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$57$E)
$C$DW$340	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$340, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$59$B)
	.dwattr $C$DW$340, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$59$E)
$C$DW$341	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$341, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$60$B)
	.dwattr $C$DW$341, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$60$E)
$C$DW$342	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$342, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$86$B)
	.dwattr $C$DW$342, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$86$E)
$C$DW$343	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$343, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$87$B)
	.dwattr $C$DW$343, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$87$E)

$C$DW$344	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$344, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L21:3:1443280332")
	.dwattr $C$DW$344, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$344, DW_AT_TI_begin_line(0xd0)
	.dwattr $C$DW$344, DW_AT_TI_end_line(0xdd)
$C$DW$345	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$345, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$63$B)
	.dwattr $C$DW$345, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$63$E)
$C$DW$346	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$346, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$70$B)
	.dwattr $C$DW$346, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$70$E)
$C$DW$347	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$347, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$67$B)
	.dwattr $C$DW$347, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$67$E)
$C$DW$348	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$348, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$64$B)
	.dwattr $C$DW$348, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$64$E)
$C$DW$349	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$349, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$65$B)
	.dwattr $C$DW$349, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$65$E)
$C$DW$350	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$350, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$66$B)
	.dwattr $C$DW$350, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$66$E)
$C$DW$351	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$351, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$68$B)
	.dwattr $C$DW$351, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$68$E)
$C$DW$352	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$352, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$69$B)
	.dwattr $C$DW$352, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$69$E)
$C$DW$353	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$353, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$71$B)
	.dwattr $C$DW$353, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$71$E)
$C$DW$354	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$354, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$72$B)
	.dwattr $C$DW$354, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$72$E)
	.dwendtag $C$DW$344


$C$DW$355	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$355, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L26:3:1443280332")
	.dwattr $C$DW$355, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$355, DW_AT_TI_begin_line(0xdf)
	.dwattr $C$DW$355, DW_AT_TI_end_line(0xe4)
$C$DW$356	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$356, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$75$B)
	.dwattr $C$DW$356, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$75$E)
$C$DW$357	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$357, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$76$B)
	.dwattr $C$DW$357, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$76$E)
$C$DW$358	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$358, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$77$B)
	.dwattr $C$DW$358, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$77$E)
$C$DW$359	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$359, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$78$B)
	.dwattr $C$DW$359, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$78$E)
	.dwendtag $C$DW$355


$C$DW$360	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$360, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.se66:$C$L29:3:1443280332")
	.dwattr $C$DW$360, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$360, DW_AT_TI_begin_line(0xe6)
	.dwattr $C$DW$360, DW_AT_TI_end_line(0xeb)
$C$DW$361	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$361, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$81$B)
	.dwattr $C$DW$361, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$81$E)
$C$DW$362	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$362, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$82$B)
	.dwattr $C$DW$362, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$82$E)
$C$DW$363	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$363, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$83$B)
	.dwattr $C$DW$363, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$83$E)
$C$DW$364	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$364, DW_AT_low_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$84$B)
	.dwattr $C$DW$364, DW_AT_high_pc($C$DW$L$VLIB_mixtureOfGaussiansS32_d$84$E)
	.dwendtag $C$DW$360

	.dwendtag $C$DW$328

	.dwendtag $C$DW$265

	.dwattr $C$DW$109, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_mixtureOfGaussiansS32/VLIB_mixtureOfGaussiansS32_d.c")
	.dwattr $C$DW$109, DW_AT_TI_end_line(0x116)
	.dwattr $C$DW$109, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$109

;; Inlined function references:
;; [ 17] VLIB_profile_start
;; [ 18] VLIB_profile_stop
;; [ 21] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_mixtureOfGaussiansS32",0
$C$SL2:	.string	"Luma  FG    Mean-1   Varn-1   Wght-1        Mean-2   Varn-2"
	.string	"   Wght-2       Mean-3   Varn-3   Wght-3",10,0
$C$SL3:	.string	"-----------------------------------------------------------"
	.string	"------------------------------------------",10,0
$C$SL4:	.string	"%4d  %d  %c %8.4f %8.4f %8.6f   %c %8.4f %8.4f %8.6f   %c %"
	.string	"8.4f %8.4f %8.6f",10,0
$C$SL5:	.string	9,"Error in Mean: Image %d, Pixel %d, Mode %d",10,0
$C$SL6:	.string	9,"Error in Variance: Image %d, Pixel %d, Mode %d",10,0
$C$SL7:	.string	9,"Error in Weight: Image %d, Pixel %d, Mode %d",10,0
$C$SL8:	.string	9,"Error in Component index: Image %d, Pixel %d",10,0
$C$SL9:	.string	9,"Error in Foreground Mask: Image %d, Pixel %d",10,0
$C$SL10:	.string	"%s generated input | Opt results compared to NatC results |"
	.string	" im_size=%d, num_images=%d",0
$C$SL11:	.string	"im_size=%d, num_images=%d",0
$C$SL12:	.string	"im_size*num_images",0
$C$SL13:	.string	"N = im_size*num_images; M = num_images",0
$C$SL14:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_getFractional32
	.global	VLIB_getFractional16
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_compare_mem
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_mixtureOfGaussiansS32
	.global	VLIB_mixtureOfGaussiansS32_cn
	.global	mixtureOfGaussiansS32_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$38	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x04)
$C$DW$365	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$365, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$365, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$365, DW_AT_decl_column(0x05)
$C$DW$366	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$366, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$366, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$366, DW_AT_decl_column(0x05)
$C$DW$367	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$367, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$367, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$367, DW_AT_decl_column(0x05)
$C$DW$368	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$368, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$368, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$368, DW_AT_decl_column(0x05)
$C$DW$369	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$369, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$369, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$369, DW_AT_decl_column(0x05)
$C$DW$370	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$370, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$370, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$370, DW_AT_decl_column(0x05)
$C$DW$371	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$371, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$371, DW_AT_decl_line(0x80)
	.dwattr $C$DW$371, DW_AT_decl_column(0x05)
$C$DW$372	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$372, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$372, DW_AT_decl_line(0x81)
	.dwattr $C$DW$372, DW_AT_decl_column(0x05)
$C$DW$373	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$373, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$373, DW_AT_decl_line(0x82)
	.dwattr $C$DW$373, DW_AT_decl_column(0x05)
$C$DW$374	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$374, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$374, DW_AT_decl_line(0x83)
	.dwattr $C$DW$374, DW_AT_decl_column(0x05)
$C$DW$375	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$375, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$375, DW_AT_decl_line(0x84)
	.dwattr $C$DW$375, DW_AT_decl_column(0x05)
$C$DW$376	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$376, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$376, DW_AT_decl_line(0x85)
	.dwattr $C$DW$376, DW_AT_decl_column(0x05)
$C$DW$377	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$377, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$377, DW_AT_decl_line(0x86)
	.dwattr $C$DW$377, DW_AT_decl_column(0x05)
$C$DW$378	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$378, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$378, DW_AT_decl_line(0x87)
	.dwattr $C$DW$378, DW_AT_decl_column(0x05)
$C$DW$379	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$379, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$379, DW_AT_decl_line(0x88)
	.dwattr $C$DW$379, DW_AT_decl_column(0x05)
$C$DW$380	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$380, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$380, DW_AT_decl_line(0x89)
	.dwattr $C$DW$380, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x0e)
$C$DW$T$39	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x03)

$C$DW$T$40	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x04)
$C$DW$381	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$381, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$381, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$381, DW_AT_decl_column(0x05)
$C$DW$382	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$382, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$382, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$382, DW_AT_decl_column(0x05)
$C$DW$383	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$383, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$383, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$383, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x06)

$C$DW$T$41	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x04)
$C$DW$384	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$384, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$384, DW_AT_decl_line(0x72)
	.dwattr $C$DW$384, DW_AT_decl_column(0x05)
$C$DW$385	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$385, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$385, DW_AT_decl_line(0x73)
	.dwattr $C$DW$385, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$41

	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\../common/VLIB_test.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x06)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x28)
$C$DW$386	.dwtag  DW_TAG_member
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$386, DW_AT_name("testPattern")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$386, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$386, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$386, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$386, DW_AT_decl_line(0x24)
	.dwattr $C$DW$386, DW_AT_decl_column(0x0e)
$C$DW$387	.dwtag  DW_TAG_member
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$387, DW_AT_name("staticIn")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$387, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$387, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$387, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$387, DW_AT_decl_line(0x25)
	.dwattr $C$DW$387, DW_AT_decl_column(0x0f)
$C$DW$388	.dwtag  DW_TAG_member
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$388, DW_AT_name("staticOut")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$388, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$388, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$388, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$388, DW_AT_decl_line(0x26)
	.dwattr $C$DW$388, DW_AT_decl_column(0x0f)
$C$DW$389	.dwtag  DW_TAG_member
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$389, DW_AT_name("im_size")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("im_size")
	.dwattr $C$DW$389, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$389, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$389, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$389, DW_AT_decl_line(0x27)
	.dwattr $C$DW$389, DW_AT_decl_column(0x0e)
$C$DW$390	.dwtag  DW_TAG_member
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$390, DW_AT_name("num_images")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("num_images")
	.dwattr $C$DW$390, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$390, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$390, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$390, DW_AT_decl_line(0x28)
	.dwattr $C$DW$390, DW_AT_decl_column(0x0e)
$C$DW$391	.dwtag  DW_TAG_member
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$391, DW_AT_name("alpha")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("alpha")
	.dwattr $C$DW$391, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$391, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$391, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$391, DW_AT_decl_line(0x29)
	.dwattr $C$DW$391, DW_AT_decl_column(0x0e)
$C$DW$392	.dwtag  DW_TAG_member
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$392, DW_AT_name("rho")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("rho")
	.dwattr $C$DW$392, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$392, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$392, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$392, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$392, DW_AT_decl_column(0x0e)
$C$DW$393	.dwtag  DW_TAG_member
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$393, DW_AT_name("delta")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("delta")
	.dwattr $C$DW$393, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$393, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$393, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$393, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$393, DW_AT_decl_column(0x0e)
$C$DW$394	.dwtag  DW_TAG_member
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$394, DW_AT_name("T")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("T")
	.dwattr $C$DW$394, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$394, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$394, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$394, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$394, DW_AT_decl_column(0x0e)
$C$DW$395	.dwtag  DW_TAG_member
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$395, DW_AT_name("ini_wt")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("ini_wt")
	.dwattr $C$DW$395, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$395, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$395, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$395, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$395, DW_AT_decl_column(0x0e)
$C$DW$396	.dwtag  DW_TAG_member
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$396, DW_AT_name("ini_var")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("ini_var")
	.dwattr $C$DW$396, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$396, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$396, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$396, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$396, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$42	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$42, DW_AT_address_class(0x20)
$C$DW$T$44	.dwtag  DW_TAG_typedef, DW_AT_name("mixtureOfGaussiansS32_testParams_t")
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\VLIB_mixtureOfGaussiansS32_idat.h")
	.dwattr $C$DW$T$44, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$44, DW_AT_decl_column(0x03)
$C$DW$T$45	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$T$45, DW_AT_address_class(0x20)
$C$DW$T$46	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$46, DW_AT_address_class(0x20)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x18)
$C$DW$397	.dwtag  DW_TAG_member
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$397, DW_AT_name("fd")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$397, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$397, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$397, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$397, DW_AT_decl_line(0x49)
	.dwattr $C$DW$397, DW_AT_decl_column(0x0b)
$C$DW$398	.dwtag  DW_TAG_member
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$398, DW_AT_name("buf")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$398, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$398, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$398, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$398, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$398, DW_AT_decl_column(0x16)
$C$DW$399	.dwtag  DW_TAG_member
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$399, DW_AT_name("pos")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$399, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$399, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$399, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$399, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$399, DW_AT_decl_column(0x16)
$C$DW$400	.dwtag  DW_TAG_member
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$400, DW_AT_name("bufend")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$400, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$400, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$400, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$400, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$400, DW_AT_decl_column(0x16)
$C$DW$401	.dwtag  DW_TAG_member
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$401, DW_AT_name("buff_stop")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$401, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$401, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$401, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$401, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$401, DW_AT_decl_column(0x16)
$C$DW$402	.dwtag  DW_TAG_member
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$402, DW_AT_name("flags")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$402, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$402, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$402, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$402, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$402, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x03)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x08)
$C$DW$403	.dwtag  DW_TAG_member
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_name("quot")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$403, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$403, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$403, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$403, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$403, DW_AT_decl_column(0x16)
$C$DW$404	.dwtag  DW_TAG_member
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_name("rem")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$404, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$404, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$404, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$404, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$404, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x23)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x08)
$C$DW$405	.dwtag  DW_TAG_member
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_name("quot")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$405, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$405, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$405, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$405, DW_AT_decl_line(0x40)
	.dwattr $C$DW$405, DW_AT_decl_column(0x17)
$C$DW$406	.dwtag  DW_TAG_member
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_name("rem")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$406, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$406, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$406, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$406, DW_AT_decl_line(0x40)
	.dwattr $C$DW$406, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x24)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x10)
$C$DW$407	.dwtag  DW_TAG_member
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$407, DW_AT_name("quot")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$407, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$407, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$407, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$407, DW_AT_decl_line(0x43)
	.dwattr $C$DW$407, DW_AT_decl_column(0x1c)
$C$DW$408	.dwtag  DW_TAG_member
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$408, DW_AT_name("rem")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$408, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$408, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$408, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$408, DW_AT_decl_line(0x43)
	.dwattr $C$DW$408, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x29)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x24)
$C$DW$409	.dwtag  DW_TAG_member
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$409, DW_AT_name("area")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$409, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$409, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$409, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$409, DW_AT_decl_line(0x69)
	.dwattr $C$DW$409, DW_AT_decl_column(0x0d)
$C$DW$410	.dwtag  DW_TAG_member
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$410, DW_AT_name("xsum")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$410, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$410, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$410, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$410, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$410, DW_AT_decl_column(0x0d)
$C$DW$411	.dwtag  DW_TAG_member
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$411, DW_AT_name("ysum")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$411, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$411, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$411, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$411, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$411, DW_AT_decl_column(0x0d)
$C$DW$412	.dwtag  DW_TAG_member
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$412, DW_AT_name("xmin")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$412, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$412, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$412, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$412, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$412, DW_AT_decl_column(0x0d)
$C$DW$413	.dwtag  DW_TAG_member
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$413, DW_AT_name("ymin")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$413, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$413, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$413, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$413, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$413, DW_AT_decl_column(0x0d)
$C$DW$414	.dwtag  DW_TAG_member
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$414, DW_AT_name("xmax")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$414, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$414, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$414, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$414, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$414, DW_AT_decl_column(0x0d)
$C$DW$415	.dwtag  DW_TAG_member
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$415, DW_AT_name("ymax")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$415, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$415, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$415, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$415, DW_AT_decl_line(0x70)
	.dwattr $C$DW$415, DW_AT_decl_column(0x0d)
$C$DW$416	.dwtag  DW_TAG_member
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$416, DW_AT_name("seedx")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$416, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$416, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$416, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$416, DW_AT_decl_line(0x72)
	.dwattr $C$DW$416, DW_AT_decl_column(0x0d)
$C$DW$417	.dwtag  DW_TAG_member
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$417, DW_AT_name("seedy")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$417, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$417, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$417, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$417, DW_AT_decl_line(0x73)
	.dwattr $C$DW$417, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x03)

$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$418	.dwtag  DW_TAG_member
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$418, DW_AT_name("daylight")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$418, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$418, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$418, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$418, DW_AT_decl_line(0x52)
	.dwattr $C$DW$418, DW_AT_decl_column(0x0b)
$C$DW$419	.dwtag  DW_TAG_member
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_name("timezone")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$419, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$419, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$419, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$419, DW_AT_decl_line(0x53)
	.dwattr $C$DW$419, DW_AT_decl_column(0x0b)
$C$DW$420	.dwtag  DW_TAG_member
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$420, DW_AT_name("tzname")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$420, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$420, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$420, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$420, DW_AT_decl_line(0x54)
	.dwattr $C$DW$420, DW_AT_decl_column(0x0b)
$C$DW$421	.dwtag  DW_TAG_member
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$421, DW_AT_name("dstname")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$421, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$421, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$421, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$421, DW_AT_decl_line(0x55)
	.dwattr $C$DW$421, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x01)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$82	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$82, DW_AT_address_class(0x20)
$C$DW$T$105	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$105, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$105, DW_AT_decl_column(0x1d)

$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x03)
$C$DW$422	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$422, DW_AT_upper_bound(0x02)
	.dwendtag $C$DW$T$106

$C$DW$T$107	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$107, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$107, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$109	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$109, DW_AT_type(*$C$DW$T$20)
$C$DW$T$110	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$19)
$C$DW$T$111	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$T$111, DW_AT_address_class(0x20)
$C$DW$T$112	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$111)
$C$DW$T$113	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$113, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$113, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$113, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$113, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$113, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$114	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$114, DW_AT_address_class(0x20)
$C$DW$T$24	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$24, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$24, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$24, DW_AT_decl_column(0x1d)
$C$DW$T$115	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$115, DW_AT_address_class(0x20)
$C$DW$T$116	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
$C$DW$T$117	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$24)
$C$DW$T$118	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$118, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$118, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$118, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$118, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$75	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$75, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$75, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$75, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$75, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$75, DW_AT_decl_column(0x1c)
$C$DW$T$120	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$T$120, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$120, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$120, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$120, DW_AT_decl_column(0x16)
$C$DW$T$119	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$119, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$119, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$119, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$136	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$136, DW_AT_address_class(0x20)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x0d)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1d)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x11)

$C$DW$T$35	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$35, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x10)
$C$DW$423	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$423, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$35

$C$DW$T$78	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$78, DW_AT_address_class(0x20)
$C$DW$T$131	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$78)
$C$DW$T$133	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$23)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x17)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x17)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x17)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x17)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x17)
$C$DW$T$147	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$147, DW_AT_address_class(0x20)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x16)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x19)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x16)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1c)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$132	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$22)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x16)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x16)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x16)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x16)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x21)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x17)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x20)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$162)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x16)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$162)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x21)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$166)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x17)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$166)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x17)
$C$DW$T$169	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$169, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$169, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$171	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$171, DW_AT_address_class(0x20)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x20)

$C$DW$T$173	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_byte_size(0x10)
$C$DW$424	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$424, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$173

$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x16)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x16)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x0f)
$C$DW$T$184	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$184, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$184, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$184, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$184, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$185	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$185, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$185, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$185, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_mixtureOfGaussiansS32\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$185, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$185, DW_AT_decl_column(0x10)
$C$DW$T$186	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$186, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$186, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$186, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$186, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$186, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$32	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$32, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$32, DW_AT_name("signed char")
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x01)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$425	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$425, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$33

$C$DW$T$61	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$61, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$61, DW_AT_address_class(0x20)
$C$DW$T$187	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$187, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$187, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$187, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$187, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$187, DW_AT_decl_column(0x12)
$C$DW$T$121	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$32)
$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)

$C$DW$T$188	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$188, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$188, DW_AT_language(DW_LANG_C)
$C$DW$426	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$188


$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x10)
$C$DW$427	.dwtag  DW_TAG_member
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$427, DW_AT_name("_v")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$427, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$427, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$427, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$427, DW_AT_decl_line(0x44)
	.dwattr $C$DW$427, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x01)
$C$DW$T$189	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$189, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$189, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$189, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$189, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$189, DW_AT_decl_column(0x01)
$C$DW$T$190	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$190, DW_AT_type(*$C$DW$T$189)
	.dwattr $C$DW$T$190, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$190, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$190, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$190, DW_AT_decl_column(0x13)

$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("tm")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x24)
$C$DW$428	.dwtag  DW_TAG_member
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_name("tm_sec")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$428, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$428, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$428, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$428, DW_AT_decl_line(0x41)
	.dwattr $C$DW$428, DW_AT_decl_column(0x09)
$C$DW$429	.dwtag  DW_TAG_member
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_name("tm_min")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$429, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$429, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$429, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$429, DW_AT_decl_line(0x42)
	.dwattr $C$DW$429, DW_AT_decl_column(0x09)
$C$DW$430	.dwtag  DW_TAG_member
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_name("tm_hour")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$430, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$430, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$430, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$430, DW_AT_decl_line(0x43)
	.dwattr $C$DW$430, DW_AT_decl_column(0x09)
$C$DW$431	.dwtag  DW_TAG_member
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_name("tm_mday")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$431, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$431, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$431, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$431, DW_AT_decl_line(0x44)
	.dwattr $C$DW$431, DW_AT_decl_column(0x09)
$C$DW$432	.dwtag  DW_TAG_member
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_name("tm_mon")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$432, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$432, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$432, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$432, DW_AT_decl_line(0x45)
	.dwattr $C$DW$432, DW_AT_decl_column(0x09)
$C$DW$433	.dwtag  DW_TAG_member
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_name("tm_year")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$433, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$433, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$433, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$433, DW_AT_decl_line(0x46)
	.dwattr $C$DW$433, DW_AT_decl_column(0x09)
$C$DW$434	.dwtag  DW_TAG_member
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_name("tm_wday")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$434, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$434, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$434, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$434, DW_AT_decl_line(0x47)
	.dwattr $C$DW$434, DW_AT_decl_column(0x09)
$C$DW$435	.dwtag  DW_TAG_member
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_name("tm_yday")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$435, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$435, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$435, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$435, DW_AT_decl_line(0x48)
	.dwattr $C$DW$435, DW_AT_decl_column(0x09)
$C$DW$436	.dwtag  DW_TAG_member
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_name("tm_isdst")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$436, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$436, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$436, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$436, DW_AT_decl_line(0x49)
	.dwattr $C$DW$436, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

