;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:13:00 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$152)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$31)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$152)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x82)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$99)
	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x86)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x58)
	.dwattr $C$DW$15, DW_AT_decl_column(0x05)

$C$DW$16	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwattr $C$DW$16, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$16, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$16, DW_AT_decl_column(0x06)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$31)
	.dwendtag $C$DW$16


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$19, DW_AT_decl_column(0x06)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$10)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$31)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$19


$C$DW$26	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwattr $C$DW$26, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$26, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$26, DW_AT_decl_column(0x06)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$31)
	.dwendtag $C$DW$26


$C$DW$28	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwattr $C$DW$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$28, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$28, DW_AT_decl_column(0x06)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$31)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$31)
	.dwendtag $C$DW$28


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x80)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$29)
	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x81)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)

$C$DW$35	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwattr $C$DW$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$35, DW_AT_decl_line(0x82)
	.dwattr $C$DW$35, DW_AT_decl_column(0x0a)

$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x83)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)

$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$20)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$20)
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$3)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$3)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$27)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$27)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$27)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$20)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$31)
	.dwendtag $C$DW$37


$C$DW$47	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwattr $C$DW$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$47, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$47, DW_AT_decl_column(0x07)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$99)
	.dwendtag $C$DW$47


$C$DW$49	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwattr $C$DW$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$49, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$49, DW_AT_decl_column(0x07)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$49


$C$DW$51	.dwtag  DW_TAG_subprogram, DW_AT_name("getCORBParameters")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("getCORBParameters")
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
	.dwattr $C$DW$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$51, DW_AT_decl_line(0x46)
	.dwattr $C$DW$51, DW_AT_decl_column(0x10)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$10)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$10)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$10)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$6)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$51


$C$DW$57	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_originalfast9_detectCorners")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("VLIB_originalfast9_detectCorners")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwattr $C$DW$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\c66/VLIB_originalfast9_detectCorners.h")
	.dwattr $C$DW$57, DW_AT_decl_line(0x78)
	.dwattr $C$DW$57, DW_AT_decl_column(0x06)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$121)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$19)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$19)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$19)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$19)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$19)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$122)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$49)
	.dwendtag $C$DW$57


$C$DW$66	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_originalfast9_detectCorners_cn")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("VLIB_originalfast9_detectCorners_cn")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
	.dwattr $C$DW$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_cn.h")
	.dwattr $C$DW$66, DW_AT_decl_line(0x23)
	.dwattr $C$DW$66, DW_AT_decl_column(0x06)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$126)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$10)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$10)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$10)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$10)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$10)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$127)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$49)
	.dwendtag $C$DW$66


$C$DW$75	.dwtag  DW_TAG_subprogram, DW_AT_name("originalfast9_detectCorners_getTestParams")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("originalfast9_detectCorners_getTestParams")
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
	.dwattr $C$DW$75, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$75, DW_AT_decl_line(0x30)
	.dwattr $C$DW$75, DW_AT_decl_column(0x06)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$84)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$122)
	.dwendtag $C$DW$75

$C$DW$78	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
	.dwattr $C$DW$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$78, DW_AT_decl_line(0x60)
	.dwattr $C$DW$78, DW_AT_decl_column(0x13)
$C$DW$79	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
	.dwattr $C$DW$79, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$79, DW_AT_decl_line(0x62)
	.dwattr $C$DW$79, DW_AT_decl_column(0x13)
$C$DW$80	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$202)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
	.dwattr $C$DW$80, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$80, DW_AT_decl_line(0x63)
	.dwattr $C$DW$80, DW_AT_decl_column(0x13)
$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$202)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x64)
	.dwattr $C$DW$81, DW_AT_decl_column(0x13)
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x75)
	.dwattr $C$DW$82, DW_AT_decl_column(0x14)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x76)
	.dwattr $C$DW$83, DW_AT_decl_column(0x14)
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$84, DW_AT_decl_line(0x77)
	.dwattr $C$DW$84, DW_AT_decl_column(0x14)
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x78)
	.dwattr $C$DW$85, DW_AT_decl_column(0x14)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x79)
	.dwattr $C$DW$86, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021646 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021648 
	.sect	".text"
	.clink
	.global	VLIB_originalfast9_detectCorners_d

$C$DW$87	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_originalfast9_detectCorners_d")
	.dwattr $C$DW$87, DW_AT_low_pc(VLIB_originalfast9_detectCorners_d)
	.dwattr $C$DW$87, DW_AT_high_pc(0x00)
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("VLIB_originalfast9_detectCorners_d")
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$87, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$87, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$87, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$87, DW_AT_decl_line(0x26)
	.dwattr $C$DW$87, DW_AT_decl_column(0x06)
	.dwattr $C$DW$87, DW_AT_TI_max_frame_size(0x88)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 39,column 1,is_stmt,address VLIB_originalfast9_detectCorners_d,isa 0

	.dwfde $C$DW$CIE, VLIB_originalfast9_detectCorners_d
$C$DW$88	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$88, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_originalfast9_detectCorners_d(uint8_t LevelOfFeedback)       
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_originalfast9_detectCorners_d                          *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 56 Auto + 56 Save = 136 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_originalfast9_detectCorners_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 45	-----------------------    originalfast9_detectCorners_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(2, "VLIB_originalfast9_detectCorners");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g43;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | originalfast9_detectCorners_testParams_t   *prm;                       
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(88)      ; |39| 
	.dwcfi	cfa_offset, 136
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$89, DW_AT_location[DW_OP_reg3]
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$90, DW_AT_location[DW_OP_reg20]
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg5]
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_reg20]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg6]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg8]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg27]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_regx 0x25]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg0]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg29]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg10]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$f3")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$f3")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg0]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$f4")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$f4")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_regx 0x25]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$f5")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$f5")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg22]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg11]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$K23")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$K23")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg4]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$K64")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$K64")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_regx 0x25]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$K80")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$K80")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg8]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$U81")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$U81")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg3]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$U102")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$U102")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_regx 0x35]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$K106")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$K106")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_regx 0x25]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$U116")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$U116")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_regx 0x28]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$K134")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$K134")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$192)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg15]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$U43")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$U43")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg26]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$U149")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$U149")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg8]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$U48")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$U48")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg10]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$U179")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$U179")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$148)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg20]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg13]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$K62")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$K62")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$133)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg20]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$K197")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$K197")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$133)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg8]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg16]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg7]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg9]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$119)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_breg31 52]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg14]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 28]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg28]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg12]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("nfeatures")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("nfeatures")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg10]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("dummyPtr")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("dummyPtr")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_breg31 56]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("orbInput")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("orbInput")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_breg31 60]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("orbOutput")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("orbOutput")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_breg31 64]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("orbOutput_cn")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("orbOutput_cn")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_breg31 68]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("row")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("row")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_regx 0x26]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("col")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("col")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_regx 0x27]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$V1")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$V1")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_reg25]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$U152")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$U152")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_regx 0x35]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$U152")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$U152")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg8]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg22]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg7]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_reg9]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_reg27]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_reg27]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg22]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg22]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("orbParams")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("orbParams")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_breg31 32]
           MVKL    .S1     test_cases,A10
           MVKH    .S1     test_cases,A10
           STW     .D2T1   A4,*+SP(52)       ; |39| 
$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x04)
	.dwattr $C$DW$145, DW_AT_name("originalfast9_detectCorners_getTestParams")
	.dwattr $C$DW$145, DW_AT_TI_call

           ADDAW   .D1X    SP,7,A4           ; |45| 
||         CALLP   .S2     originalfast9_detectCorners_getTestParams,B3
||         MV      .L2X    A10,B4            ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | originalfast9_detectCorners_getTestParams(&prm, &test_cases);          
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {originalfast9_detectCorners_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$146, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(2, "VLIB_originalfast9_detectCorners");              
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
;**  	-----------------------    U$13 = prm-32;
;**  	-----------------------    K$23 = 369696u;
;**  	-----------------------    K$197 = &desc[0];
;**  	-----------------------    U$12 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           LDW     .D2T2   *+SP(28),B4
||         MV      .L1     A10,A3            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;  54 |     int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : N
;     | atural c vs. Optimized */                                              
;  55 |     int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : N
;     | atural c vs. Static Reference */                                       
;  61 |     //uint32_t    nfeatures = CORB_MAX_FEATURES;           /* Typical i
;     | n production */                                                        
;  62 |     uint32_t    nfeatures = prm[tpi].max_num_features;   /* Used for th
;     | e sake of this test for memory savings */                              
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |51| 
           ZERO    .L1     A14
           MVK     .S1     32,A4
           ZERO    .L1     A13
           SUB     .L1X    B4,A4,A11

           CMPGT   .L1     A3,0,A0           ; |51| 
||         ADDK    .S1     32,A11            ; |62| 
||         ADDAW   .D1X    SP,8,A3           ; |65| 

   [!A0]   BNOP    .S1     $C$L25,2          ; |51| 
|| [ A0]   LDW     .D1T1   *+A11(24),A10     ; |62| 
|| [ A0]   MVK     .L1     0xa,A6            ; |65| 
|| [ A0]   MVK     .S2     0x14,B6           ; |65| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 65,column 33,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | const CORBParameters    orbParams = getCORBParameters(prm[tpi].imageWid
;     | th, prm[tpi].imageHeight, 10, 20, nfeatures);                          
;----------------------------------------------------------------------
   [ A0]   LDHU    .D1T2   *+A11(18),B4      ; |65| 
   [ A0]   LDHU    .D1T1   *+A11(16),A4      ; |65| 
           MV      .L1     A10,A8            ; |65| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L25}        ; |51| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 62	-----------------------    nfeatures = (*(U$13 += 32)).max_num_features;
;** 65	-----------------------    orbParams = getCORBParameters((int)(*U$13).imageWidth, (int)(*U$13).imageHeight, 10, 20u, (int)nfeatures);
;** 69	-----------------------    orbInput = (struct $fake5 *)malloc(K$23);
;** 70	-----------------------    orbOutput = (struct $fake6 *)malloc(8u);
;** 71	-----------------------    orbOutput_cn = (struct $fake6 *)malloc(8u);
;** 73	-----------------------    if ( !((orbInput == NULL)|(orbOutput == NULL)|(orbOutput_cn == NULL)) ) goto g5;
;** 82	-----------------------    dummyPtr = NULL;
;** 82	-----------------------    goto g6;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 65,column 33,is_stmt,isa 0
;----------------------------------------------------------------------
;  68 | uint32_t     *dummyPtr      = (uint32_t *)1;                           
;----------------------------------------------------------------------
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("getCORBParameters")
	.dwattr $C$DW$147, DW_AT_TI_call
           CALL    .S1     getCORBParameters ; |65| 
           ADDKPC  .S2     $C$RL2,B3,4       ; |65| 
$C$RL2:    ; CALL OCCURS {getCORBParameters} {0}  ; |65| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$5$B:
;          EXCLUSIVE CPU CYCLES: 19
           MVKL    .S1     0x5a420,A4
$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("malloc")
	.dwattr $C$DW$148, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         MVKH    .S1     0x5a420,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 69,column 23,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | CORBInput    *orbInput      = (CORBInput  *) malloc(sizeof(CORBInput));
;----------------------------------------------------------------------
$C$RL3:    ; CALL OCCURS {malloc} {0}        ; |69| 
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("malloc")
	.dwattr $C$DW$149, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(60)       ; |69| 
||         MVK     .L1     0x8,A4            ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 70,column 23,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | CORBOutput   *orbOutput     = (CORBOutput *) malloc(sizeof(CORBOutput))
;     | ;                                                                      
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {malloc} {0}        ; |70| 
$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$150, DW_AT_name("malloc")
	.dwattr $C$DW$150, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(64)       ; |70| 
||         MVK     .L1     0x8,A4            ; |71| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 71,column 23,is_stmt,isa 0
;----------------------------------------------------------------------
;  71 | CORBOutput   *orbOutput_cn  = (CORBOutput *) malloc(sizeof(CORBOutput))
;     | ;                                                                      
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {malloc} {0}        ; |71| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$6$B:
;          EXCLUSIVE CPU CYCLES: 15

           ZERO    .L2     B5                ; |73| 
||         MV      .L1     A4,A1             ; |73| 
||         ZERO    .S2     B4                ; |73| 
||         LDW     .D2T1   *+SP(64),A0       ; |73| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 73,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  73 | if( orbInput && orbOutput && orbOutput_cn ) {                          
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(60),A2       ; |73| 
           ZERO    .L1     A3                ; |73| 
   [!A1]   MVK     .L2     0x1,B4            ; |73| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 71,column 23,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(68)       ; |71| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 73,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  74 | orbInput->prefimage         = (uint8_t *) VLIB_malloc(prm[tpi].imagePit
;     | ch * prm[tpi].imageHeight * sizeof(uint8_t));                          
;  76 | orbOutput->n_features       = prm[tpi].max_num_features;               
;  77 | orbOutput->features         = (CORBFeature *) malloc((nfeatures) * size
;     | of(CORBFeature));                                                      
;  79 | orbOutput_cn->n_features    = prm[tpi].max_num_features;               
;  80 | orbOutput_cn->features      = (CORBFeature *) malloc((nfeatures) * size
;     | of(CORBFeature));                                                      
;  81 | } else {                                                               
;----------------------------------------------------------------------
   [!A0]   MVK     .L1     0x1,A3            ; |73| 
   [!A2]   MVK     .L2     0x1,B5            ; |73| 
           OR      .L2X    A3,B5,B5          ; |73| 
           OR      .L2     B4,B5,B0          ; |73| 

   [ B0]   B       .S1     $C$L2             ; |82| 
|| [ B0]   ZERO    .L2     B4                ; |82| 
|| [!B0]   LDHU    .D1T1   *+A11(20),A3      ; |74| 

   [ B0]   STW     .D2T2   B4,*+SP(56)       ; |82| 
|| [!B0]   LDHU    .D1T1   *+A11(18),A4      ; |74| 

$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$151, DW_AT_TI_call

   [!B0]   CALL    .S1     VLIB_malloc       ; |74| 
|| [ B0]   LDW     .D2T1   *+SP(56),A0

           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 82,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  82 | dummyPtr = NULL;                                                       
;----------------------------------------------------------------------
           ; BRANCHCC OCCURS {$C$L2}         ; |82| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$6$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 73,column 9,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$7$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g5:
;** 74	-----------------------    (*orbInput).prefimage = VLIB_malloc((unsigned)((*U$13).imagePitch*(*U$13).imageHeight));
;** 76	-----------------------    (*orbOutput).n_features = (*U$13).max_num_features;
;** 77	-----------------------    C$17 = nfeatures*56u;
;** 77	-----------------------    (*orbOutput).features = (struct $fake1 *)malloc(C$17);
;** 79	-----------------------    (*orbOutput_cn).n_features = (*U$13).max_num_features;
;** 80	-----------------------    (*orbOutput_cn).features = (struct $fake1 *)malloc(C$17);
;** 68	-----------------------    dummyPtr = (unsigned *)0x1u;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 74,column 13,is_stmt,isa 0
           MPYU    .M1     A4,A3,A4          ; |74| 
           ADDKPC  .S2     $C$RL6,B3,0       ; |74| 
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |74| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$8$B:
;          EXCLUSIVE CPU CYCLES: 35
           LDW     .D2T2   *+SP(60),B5
           MVKL    .S2     0x16903,B4
           MVKH    .S2     0x16903,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 77,column 13,is_stmt,isa 0
           SHL     .S1     A10,3,A5          ; |77| 
           SHL     .S1     A10,6,A3          ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 74,column 13,is_stmt,isa 0
           STW     .D2T1   A4,*+B5[B4]       ; |74| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 77,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(64),A6       ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 76,column 13,is_stmt,isa 0
           LDW     .D1T1   *+A11(24),A4      ; |76| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 77,column 13,is_stmt,isa 0
           SUB     .L1     A3,A5,A10         ; |77| 
           NOP             3
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("malloc")
	.dwattr $C$DW$152, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D1T1   A4,*+A6(4)        ; |76| 
||         SUB     .L1     A3,A5,A4          ; |77| 

$C$RL7:    ; CALL OCCURS {malloc} {0}        ; |77| 
           LDW     .D2T1   *+SP(64),A3       ; |77| 
           LDW     .D2T1   *+SP(68),A31
           NOP             3
           STW     .D1T1   A4,*A3            ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 79,column 13,is_stmt,isa 0
           LDW     .D1T1   *+A11(24),A3      ; |79| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 80,column 13,is_stmt,isa 0
           MV      .L1     A10,A4            ; |80| 
           NOP             3
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("malloc")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D1T1   A3,*+A31(4)       ; |79| 

$C$RL8:    ; CALL OCCURS {malloc} {0}        ; |80| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$9$B:
;          EXCLUSIVE CPU CYCLES: 6

           LDW     .D2T1   *+SP(68),A3       ; |80| 
||         MVK     .L2     0x1,B4            ; |68| 

           STW     .D2T2   B4,*+SP(56)       ; |80| 
           LDW     .D2T1   *+SP(56),A0
           NOP             2
           STW     .D1T1   A4,*A3            ; |80| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$9$E:
;** --------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 82,column 13,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$10$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g6:
;** 86	-----------------------    if ( dummyPtr == NULL ) goto g40;
           LDW     .D2T1   *+SP(64),A3

           MV      .L1     A0,A1             ; branch predicate copy
|| [!A0]   B       .S1     $C$L21            ; |86| 

   [!A1]   LDW     .D2T2   *+SP(28),B11
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 86,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  86 | if( dummyPtr && orbOutput->features && orbOutput_cn->features && orbInp
;     | ut->prefimage ) {                                                      
;  88 |     int32_t    fail;                                                   
;  89 |     int32_t    i;                                                      
;----------------------------------------------------------------------
   [ A0]   LDW     .D1T1   *A3,A0            ; |86| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L21}        ; |86| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$11$B:
;          EXCLUSIVE CPU CYCLES: 9
;** 86	-----------------------    if ( (*orbOutput).features == NULL ) goto g39;
           LDW     .D2T1   *+SP(68),A3
           NOP             2

           MV      .L1     A0,A2             ; branch predicate copy
|| [!A0]   B       .S1     $C$L20            ; |86| 
||         MV      .D1     A0,A1             ; guard predicate rewrite

   [!A2]   B       .S1     $C$L22
|| [ A1]   LDW     .D2T2   *+SP(60),B5

   [ A0]   LDW     .D1T1   *A3,A0            ; |86| 
|| [!A2]   LDW     .D2T2   *+SP(28),B11

   [ A1]   MVKL    .S2     0x16903,B4
   [ A1]   MVKH    .S2     0x16903,B4
           NOP             1
           ; BRANCHCC OCCURS {$C$L20}        ; |86| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$12$B:
;          EXCLUSIVE CPU CYCLES: 14
;** 86	-----------------------    if ( (*orbOutput_cn).features == NULL ) goto g38;
;** 86	-----------------------    v$1 = prm;
;** 86	-----------------------    C$16 = (*orbInput).prefimage;
;** 86	-----------------------    if ( C$16 == NULL ) goto g41;
           NOP             1
   [ A0]   LDW     .D2T2   *+B5[B4],B13      ; |86| 
   [ A0]   LDW     .D2T2   *+SP(28),B11      ; |86| 
   [!A0]   LDW     .D2T2   *+SP(28),B11
           NOP             2
           MV      .L2     B13,B0
   [!A0]   ZERO    .L2     B0

   [!B0]   B       .S2     $C$L23            ; |86| 
|| [!B0]   ADD     .L1X    B11,A13,A3        ; |179| 
|| [ B0]   LDHU    .D1T1   *+A11(20),A10     ; |92| 
|| [ B0]   MVKL    .S1     testPatternString,A12

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 92,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  92 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
;  93 |                 (uint8_t)128,                                          
;  94 |                 orbInput->prefimage, prm[tpi].staticIn,                
;  95 |                 prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].ima
;     | gePitch,                                                               
;  96 |                 sizeof(uint8_t), testPatternString);                   
;  97 | if( prm[tpi].testPattern == CUSTOM ) {  /* Custom pattern of 3x3 blocks
;     |  to generate most corners*/                                            
;  98 |     uint32_t    row, col;                                              
;  99 |     uint8_t     val = 128;                                             
; 101 |     for( row= 0; row < prm[tpi].imageHeight; row++ ) {                 
; 102 |         for( col=0; col < prm[tpi].imageWidth - 5; col+=6 ) {          
; 103 |             orbInput->prefimage[row * prm[tpi].imagePitch + col] = 0;  
; 104 |             orbInput->prefimage[row * prm[tpi].imagePitch + col + 1] =
;     | 0;                                                                     
; 105 |             orbInput->prefimage[row * prm[tpi].imagePitch + col + 2] =
;     | 0;                                                                     
; 106 |             if((row % 6) < 3 ) {                                       
; 107 |                 orbInput->prefimage[row * prm[tpi].imagePitch + col + 3
;     | ] = 0;                                                                 
; 108 |                 orbInput->prefimage[row * prm[tpi].imagePitch + col + 4
;     | ] = 0;                                                                 
; 109 |                 orbInput->prefimage[row * prm[tpi].imagePitch + col + 5
;     | ] = 0;                                                                 
; 110 |             } else {                                                   
; 111 |                 orbInput->prefimage[row * prm[tpi].imagePitch + col + 3
;     | ] = val;                                                               
; 112 |                 orbInput->prefimage[row * prm[tpi].imagePitch + col + 4
;     | ] = val;                                                               
; 113 |                 orbInput->prefimage[row * prm[tpi].imagePitch + col + 5
;     | ] = val;                                                               
; 120 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 121 | VLIB_originalfast9_detectCorners(orbInput->prefimage, orbParams.width,
;     | orbParams.height, prm[tpi].imagePitch, orbParams.marginPixels,         
; 122 |                                   orbParams.fastDifferenceThreshold, &o
;     | rbOutput->n_features, orbOutput->features);                            
; 123 | VLIB_profile_stop();                                                   
; 126 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 127 | VLIB_originalfast9_detectCorners_cn(orbInput->prefimage, orbParams.widt
;     | h, orbParams.height, prm[tpi].imagePitch, orbParams.marginPixels,      
; 128 |                                      orbParams.fastDifferenceThreshold,
;     |  &orbOutput_cn->n_features, orbOutput_cn->features);                   
; 129 | VLIB_profile_stop();                                                   
; 132 | if( orbOutput->n_features == orbOutput_cn->n_features ) {              
; 133 |     for( i=0; i < orbOutput->n_features; i++ ) {                       
; 134 |         if((orbOutput->features[i].x != orbOutput_cn->features[i].x) ||
; 135 |            (orbOutput->features[i].y != orbOutput_cn->features[i].y)) {
; 136 |             status_nat_vs_int = vlib_KERNEL_FAIL;                      
; 137 |             if( LevelOfFeedback > 0 ) {                                
; 138 |                 printf(" Mismatch in Index = %u \n", i);               
; 140 |             break;                                                     
; 143 | } else {                                                               
; 144 |     status_nat_vs_int = vlib_KERNEL_FAIL;                              
; 148 | if( prm[tpi].staticOut != NULL ) {                                     
; 149 |     if( orbOutput_cn->n_features == prm[tpi].out_n_features ) {        
; 150 |         for( i=0; i < orbOutput->n_features; i++ ) {                   
; 151 |             if((orbOutput_cn->features[i].x != prm[tpi].staticOut[2 * i
;     | ]) ||                                                                  
; 152 |                (orbOutput_cn->features[i].y != prm[tpi].staticOut[2 * i
;     |  + 1])) {                                                              
; 153 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 154 |                 if( LevelOfFeedback > 0 ) {                            
; 155 |                     printf(" Mismatch in Index = %u \n", i);           
; 157 |                 break;                                                 
; 160 |     } else {                                                           
; 161 |         status_nat_vs_ref = vlib_KERNEL_FAIL;                          
; 166 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) ||                     
; 167 |         (status_nat_vs_ref == vlib_KERNEL_FAIL)) ? 1 : 0;              
; 169 | est_test=1;                                                            
; 172 | sprintf(desc, "%s generated input | Opt and NatC results compared | img
;     | _width= %d, img_height= %d, n_features found= %d, %s",                 
; 173 |         testPatternString, prm[tpi].imageWidth, prm[tpi].imageHeight, o
;     | rbOutput->n_features, prm[tpi].desc);                                  
; 175 | VLIB_formula_add_test(prm[tpi].imageWidth * prm[tpi].imageHeight, NULL,
;     |  NULL, fail, desc, NULL);                                              
; 177 | } else {                                                               
;----------------------------------------------------------------------
   [ B0]   LDHU    .D1T2   *+A11(18),B8      ; |92| 
   [ B0]   LDHU    .D1T1   *+A11(16),A8      ; |92| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$154, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |92| 
|| [ B0]   LDW     .D1T2   *+A11(4),B6       ; |92| 

   [ B0]   LDBU    .D1T1   *A11,A4           ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 179,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 179 | sprintf(desc, "img_width= %d, img_height= %d",                         
; 180 |         prm[tpi].imageWidth, prm[tpi].imageHeight);                    
; 181 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!B0]   LDHU    .D1T1   *+A3(18),A4       ; |179| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 86,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |86| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$13$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 92	-----------------------    VLIB_fillBuffer((*U$13).testPattern, 0x80u, C$16, (*U$13).staticIn, (*U$13).imageWidth, (*U$13).imageHeight, (*U$13).imagePitch, 1u, C$15 = &testPatternString[0]);
;** 97	-----------------------    v$1 = v$1;
;**  	-----------------------    K$134 = &cycles[0];
;** 54	-----------------------    status_nat_vs_int = 1;
;** 55	-----------------------    status_nat_vs_ref = 1;
;** 92	-----------------------    K$62 = C$15;
;** 97	-----------------------    if ( (*U$13).testPattern != 5 ) goto g20;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 92,column 13,is_stmt,isa 0
           MVK     .S2     0x80,B4           ; |92| 
           MVKH    .S1     testPatternString,A12

           MVK     .L2     0x1,B10           ; |92| 
||         MV      .L1X    B13,A6            ; |92| 
||         ADDKPC  .S2     $C$RL9,B3,0       ; |92| 

$C$RL9:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |92| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$14$B:
;          EXCLUSIVE CPU CYCLES: 12

           MV      .L1X    B10,A12           ; |97| 
||         LDBU    .D1T1   *A11,A3           ; |97| 

           MV      .L2     B10,B12
           MVKL    .S1     cycles,A15
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 97,column 13,is_stmt,isa 0
           MV      .L1X    B11,A9            ; |97| 
           MVKH    .S1     cycles,A15
           CMPEQ   .L1     A3,5,A0           ; |97| 

   [!A0]   BNOP    .S1     $C$L8,3           ; |97| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   LDHU    .D1T1   *+A11(18),A0      ; |101| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 101,column 30,is_stmt,isa 0
   [!A1]   MVK     .L1     0x1,A0            ; |101| nullify predicate
   [!A0]   B       .S1     $C$L8             ; |101| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 97,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L8}         ; |97| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$15$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 101	-----------------------    if ( !(C$14 = (*U$13).imageHeight) ) goto g20;

   [ A0]   ZERO    .L1     A17               ; |101| 
|| [ A0]   LDHU    .D1T2   *+A11(16),B9

   [ A0]   MVKL    .S1     0xaaab,A3
   [ A0]   MVKH    .S1     0xaaab,A3
   [ A0]   MPYU    .M1     A17,A3,A3
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 101,column 30,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L8}         ; |101| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$16$B:
;          EXCLUSIVE CPU CYCLES: 3
;**  	-----------------------    V$1 = (*U$13).imageWidth;
;** 102	-----------------------    L$1 = (unsigned)C$14;
;** 101	-----------------------    row = 0u;
;** 92	-----------------------    K$64 = 128;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)

           SHRU    .S1     A3,2,A3
||         CMPEQ   .L2     B9,5,B1           ; |102| 
||         MV      .S2X    A0,B0             ; |102| 
||         ZERO    .L1     A8
||         SUB     .D1X    B9,5,A19

   [!B1]   MVK     .L2     6,B4
||         MVK     .S1     0x80,A16          ; |92| 

           MPYHLU  .M2X    A3,B4,B4
$C$DW$L$VLIB_originalfast9_detectCorners_d$16$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L3
;** --------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 92,column 13,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$17$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g13:
;** 102	-----------------------    if ( (unsigned)V$1 == 5u ) goto g19;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 102,column 33,is_stmt,isa 0
   [ B1]   BNOP    .S1     $C$L7,5           ; |102| 
           ; BRANCHCC OCCURS {$C$L7}         ; |102| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$18$B:
;          EXCLUSIVE CPU CYCLES: 3
;**  	-----------------------    K$80 = 0;
;**  	-----------------------    K$106 = K$64;
;**  	-----------------------    U$81 = U$12+v$1;
;**  	-----------------------    U$102 = row-_mpyhlu(_mpyu(row, 43691u)>>2, 6u);
;**  	-----------------------    U$116 = (unsigned)V$1-5u;
;** 102	-----------------------    col = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 10922, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(0u)

           ADD     .L1     A9,A13,A3
||         ZERO    .S1     A18

           SUB     .L2X    A17,B4,B16
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 106,column 25,is_stmt,isa 0
           CMPLTU  .L2     B16,3,B1          ; |106| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$19$B:
;          EXCLUSIVE CPU CYCLES: 4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 103,column 25,is_stmt,isa 0
           LDHU    .D1T2   *+A3(20),B5       ; |103| 

           LDHU    .D1T1   *+A3(20),A7       ; |105| 
||         MVKL    .S2     0x16903,B6

           MVKH    .S2     0x16903,B6
||         LDW     .D2T2   *+SP(60),B17      ; |105| 

           MV      .L2     B6,B8             ; |103| 
||         MV      .S2     B6,B7             ; |103| 
||         LDHU    .D1T2   *+A3(20),B4       ; |104| 

$C$DW$L$VLIB_originalfast9_detectCorners_d$19$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L4:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 102,column 26,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$20$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g15:
;** 103	-----------------------    *((int)col+(int)((unsigned)(*U$81).imagePitch*row)+(*orbInput).prefimage) = K$80;
;** 104	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+1u) = K$80;
;** 105	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+2u) = K$80;
;** 106	-----------------------    if ( U$102 < 3u ) goto g17;
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 105,column 25,is_stmt,isa 0
           MPY32   .M1     A17,A7,A7         ; |105| 

           MPY32   .M1X    A17,B5,A6         ; |103| 
||         LDW     .D2T2   *+B17[B6],B5      ; |104| 
||         MV      .L2     B17,B6            ; |104| 

           MPY32   .M1X    A17,B4,A4         ; |104| 
||         MV      .L2     B17,B4            ; |104| 
||         LDW     .D2T1   *+B6[B7],A5       ; |103| 
|| [ B1]   LDHU    .D1T2   *+A3(20),B6       ; |107| 

           LDW     .D2T2   *+B4[B8],B4       ; |105| 

   [ B1]   B       .S1     $C$L5             ; |106| 
||         ADD     .L1     A18,A7,A31        ; |105| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 103,column 25,is_stmt,isa 0
           ADD     .L1     A6,A18,A6         ; |103| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 104,column 25,is_stmt,isa 0
           ADD     .L1     A18,A4,A4         ; |104| 

           ADD     .L1X    B5,A4,A4          ; |104| 
||         STB     .D1T1   A8,*+A6[A5]       ; |103| 

           STB     .D1T1   A8,*+A4(1)        ; |104| 
||         ADD     .L1X    B4,A31,A4         ; |105| 
|| [ B1]   LDW     .D2T2   *+SP(60),B4       ; |109| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 105,column 25,is_stmt,isa 0
           STB     .D1T1   A8,*+A4(2)        ; |105| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 106,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |106| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$21$B:
;          EXCLUSIVE CPU CYCLES: 16
;** 111	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+3u) = K$106;
;** 112	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+4u) = K$106;
;** 113	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+5u) = K$106;
;** 113	-----------------------    goto g18;

           MV      .L2     B17,B30           ; |111| 
||         LDHU    .D1T1   *+A3(20),A6       ; |113| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 112,column 29,is_stmt,isa 0
           LDHU    .D1T2   *+A3(20),B4       ; |112| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 111,column 29,is_stmt,isa 0
           LDHU    .D1T2   *+A3(20),B5       ; |111| 
           MV      .L2     B8,B6
           LDW     .D2T2   *+B17[B6],B31     ; |111| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 113,column 29,is_stmt,isa 0
           MPY32   .M1     A17,A6,A6         ; |113| 

           MPY32   .M1X    A17,B4,A4         ; |112| 
||         LDW     .D2T2   *+B30[B7],B4      ; |112| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 111,column 29,is_stmt,isa 0
           MPY32   .M1X    A17,B5,A5         ; |111| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 113,column 29,is_stmt,isa 0
           LDW     .D2T2   *+B30[B8],B6      ; |113| 
           ADD     .L1     A18,A6,A31        ; |113| 

           B       .S1     $C$L6             ; |113| 
||         ADD     .L1     A18,A4,A4         ; |112| 

           ADD     .L1     A18,A5,A5         ; |111| 
||         ADD     .S1     6,A18,A18         ; |102| 
||         ADD     .D1X    B4,A4,A4          ; |112| 

           ADD     .S1X    B31,A5,A5         ; |111| 
||         CMPLTU  .L1     A18,A19,A0        ; |102| 

   [ A0]   B       .S1     $C$L4             ; |102| 
||         STB     .D1T1   A16,*+A5(3)       ; |111| 

           STB     .D1T1   A16,*+A4(4)       ; |112| 
||         ADD     .L1X    B6,A31,A4         ; |113| 

           STB     .D1T1   A16,*+A4(5)       ; |113| 
           ; BRANCH OCCURS {$C$L6}           ; |113| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$21$E:
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 106,column 25,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$22$B:
;          EXCLUSIVE CPU CYCLES: 15
;**	-----------------------g17:
;** 107	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+3u) = K$80;
;** 108	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+4u) = K$80;
;** 109	-----------------------    *((unsigned)(*U$81).imagePitch*row+col+(*orbInput).prefimage+5u) = K$80;

           LDHU    .D1T1   *+A3(20),A6       ; |109| 
||         MPY32   .M1X    A17,B6,A5         ; |107| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 108,column 29,is_stmt,isa 0
           LDHU    .D1T2   *+A3(20),B5       ; |108| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 109,column 29,is_stmt,isa 0
           MV      .L2     B8,B17            ; |109| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 107,column 29,is_stmt,isa 0
           LDW     .D2T2   *+B4[B8],B6       ; |107| 
           ADD     .L1     A18,A5,A5         ; |107| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 109,column 29,is_stmt,isa 0
           MPY32   .M1     A17,A6,A6         ; |109| 

           MPY32   .M1X    A17,B5,A4         ; |108| 
||         LDW     .D2T2   *+B4[B7],B5       ; |108| 

           LDW     .D2T2   *+B4[B17],B4      ; |109| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 107,column 29,is_stmt,isa 0
           ADD     .L1X    B6,A5,A5          ; |107| 

           ADD     .L1     A18,A6,A31        ; |109| 
||         STB     .D1T1   A8,*+A5(3)        ; |107| 

           ADD     .L1     A18,A4,A4         ; |108| 
||         ADD     .S1     6,A18,A18         ; |102| 

           CMPLTU  .L1     A18,A19,A0        ; |102| 
||         ADD     .S1X    B5,A4,A4          ; |108| 

   [ A0]   BNOP    .S1     $C$L4,1           ; |102| 
||         STB     .D1T1   A8,*+A4(4)        ; |108| 
||         ADD     .L1X    B4,A31,A4         ; |109| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 109,column 29,is_stmt,isa 0
           STB     .D1T1   A8,*+A4(5)        ; |109| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$22$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 113,column 29,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$23$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g18:
;** 102	-----------------------    if ( (col += 6u) < U$116 ) goto g15;

   [ A0]   LDW     .D2T2   *+SP(60),B17      ; |105| 
|| [ A0]   LDHU    .D1T1   *+A3(20),A7       ; |105| 
|| [ A0]   MVKL    .S2     0x16903,B6

   [ A0]   LDHU    .D1T2   *+A3(20),B5       ; |103| 
|| [ A0]   MVKH    .S2     0x16903,B6

   [ A0]   LDHU    .D1T2   *+A3(20),B4       ; |104| 
|| [ A0]   MV      .L2     B6,B7             ; |103| 
|| [ A0]   MV      .S2     B6,B8             ; |103| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 102,column 33,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |102| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$23$E:
;** --------------------------------------------------------------------------*
$C$L7:    
$C$DW$L$VLIB_originalfast9_detectCorners_d$24$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g19:
;** 101	-----------------------    ++row;
;** 101	-----------------------    if ( L$1 = L$1-1 ) goto g13;

           MVKL    .S1     0xaaab,A3
||         SUB     .L2     B0,1,B0           ; |101| 
||         ADD     .L1     1,A17,A17         ; |101| 

           MVKH    .S1     0xaaab,A3
|| [ B0]   B       .S2     $C$L3             ; |101| 

           MPYU    .M1     A17,A3,A3
           CMPEQ   .L2     B9,5,B1           ; |102| 
           SHRU    .S1     A3,2,A3
   [!B1]   MVK     .L2     6,B4
           MPYHLU  .M2X    A3,B4,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 101,column 30,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |101| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$24$E:
;** --------------------------------------------------------------------------*
$C$L8:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 97,column 13,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$25$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g20:
;** 137	-----------------------    act_kernel = 0;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 121	-----------------------    C$12 = orbParams.fastDifferenceThreshold;
;** 121	-----------------------    C$11 = orbParams.marginPixels;
;** 121	-----------------------    C$10 = orbParams.height;
;** 121	-----------------------    C$9 = orbParams.width;
;** 121	-----------------------    VLIB_originalfast9_detectCorners((*orbInput).prefimage, C$9, C$10, (int)(*U$13).imagePitch, C$11, (int)C$12, (int *)orbOutput+4, (*orbOutput).features);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    C$13 = act_kernel;  // [15]
;** 156	-----------------------    *((C$13<<3)+K$134) = *((C$13<<3)+K$134)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
;** 137	-----------------------    act_kernel = 1;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 127	-----------------------    VLIB_originalfast9_detectCorners_cn((*orbInput).prefimage, C$9, C$10, (int)(*U$13).imagePitch, C$11, (int)C$12, (int *)orbOutput_cn+4, (*orbOutput_cn).features);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    C$8 = act_kernel;  // [15]
;** 156	-----------------------    *((C$8<<3)+K$134) = *((C$8<<3)+K$134)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
;** 132	-----------------------    U$48 = (*orbOutput_cn).n_features;
;** 132	-----------------------    U$43 = (*orbOutput).n_features;
;** 132	-----------------------    if ( U$43 != U$48 ) goto g27;
;** 133	-----------------------    if ( U$43 <= 0 ) goto g28;
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$155, DW_AT_TI_call
           CALL    .S1     VLIB_cache_inval  ; |140| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           ZERO    .L1     A3                ; |137| 
           MVKL    .S1     act_kernel,A4
           MVKH    .S1     act_kernel,A4
           STW     .D1T1   A3,*A4            ; |137| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
           ADDKPC  .S2     $C$RL10,B3,0      ; |140| 
$C$RL10:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$26$B:
;          EXCLUSIVE CPU CYCLES: 118
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("getSP")
	.dwattr $C$DW$156, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("initStack")
	.dwattr $C$DW$157, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL12:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B16          ; |146| 
           MVC     .S2     TSCH,B17          ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 121,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(40),B4       ; |121| 
           LDW     .D2T2   *+SP(32),B31      ; |121| 
           LDBU    .D2T2   *+SP(44),B11      ; |121| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           LDW     .D2T2   *+SP(60),B5       ; |146| 
           LDW     .D2T1   *+SP(64),A3       ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 121,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(80)       ; |121| 

           MV      .L1X    B4,A8             ; |121| 
||         LDW     .D2T2   *+SP(36),B4       ; |121| 

           MVKL    .S1     beg_count,A4
           LDHU    .D1T2   *+A11(20),B6      ; |121| 

           STW     .D2T2   B31,*+SP(72)      ; |121| 
||         MVKH    .S1     beg_count,A4

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           STDW    .D1T2   B17:B16,*A4       ; |146| 

           MVKL    .S2     0x16903,B30
||         STW     .D2T2   B4,*+SP(76)       ; |121| 

           MVKH    .S2     0x16903,B30
||         MV      .L1X    B4,A6             ; |121| 
||         LDW     .D2T2   *+SP(72),B4       ; |121| 

$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("VLIB_originalfast9_detectCorners")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     VLIB_originalfast9_detectCorners,B3
||         LDW     .D2T1   *+B5[B30],A4      ; |121| 
||         LDW     .D1T2   *A3,B10           ; |121| 
||         MV      .L2     B11,B8            ; |121| 
||         ADD     .L1     4,A3,A10          ; |121| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 121,column 13,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {VLIB_originalfast9_detectCorners} {0}  ; |121| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKL    .S1     beg_count,A10

           MVKL    .S2     overhead,B4
||         MVKH    .S1     act_kernel,A3

           MVKH    .S1     beg_count,A10
||         MVKH    .S2     overhead,B4
||         LDW     .D1T1   *A3,A16           ; |156| 

           LDDW    .D1T1   *A10,A7:A6        ; |156| 
||         LDDW    .D2T2   *B4,B5:B4         ; |156| 

           NOP             4

           LDDW    .D1T1   *+A15[A16],A9:A8  ; |156| 
||         ADDU    .L1X    B4,A6,A5:A4       ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADD     .L1X    A5,B5,A3          ; |156| 
           ADD     .L1     A3,A7,A3          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 

           MVKL    .S1     end_count,A6
||         SUB     .L2X    B7,A3,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1     A5,A9,A3          ; |156| 
||         ADD     .D1X    B4,A31,A5         ; |156| 
||         MVKH    .S1     end_count,A6

           ADD     .L1     A3,A5,A5          ; |156| 
||         STDW    .D1T2   B7:B6,*A6         ; |153| 

$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("setStackDepth")
	.dwattr $C$DW$159, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A15[A16]  ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL14:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         MVK     .L2     1,B4              ; |137| 

$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$160, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL15:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("getSP")
	.dwattr $C$DW$161, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("initStack")
	.dwattr $C$DW$162, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL17:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B7           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 127,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(60),B4       ; |127| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           LDW     .D2T1   *+SP(68),A3       ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 127,column 13,is_stmt,isa 0
           MV      .L1     A10,A4            ; |127| 
           MVKL    .S2     0x16903,B5

           STDW    .D1T2   B7:B6,*A4         ; |146| 
||         LDW     .D2T1   *+SP(80),A8       ; |127| 

           MVKH    .S2     0x16903,B5
||         LDHU    .D1T2   *+A11(20),B6      ; |127| 
||         LDW     .D2T1   *+SP(76),A6       ; |127| 

           LDW     .D1T2   *A3,B10           ; |127| 
||         LDW     .D2T1   *+B4[B5],A4       ; |127| 

$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("VLIB_originalfast9_detectCorners_cn")
	.dwattr $C$DW$163, DW_AT_TI_call

           CALLP   .S2     VLIB_originalfast9_detectCorners_cn,B3
||         LDW     .D2T2   *+SP(72),B4       ; |127| 
||         ADD     .L1     4,A3,A10          ; |127| 
||         MV      .L2     B11,B8            ; |127| 

$C$RL18:   ; CALL OCCURS {VLIB_originalfast9_detectCorners_cn} {0}  ; |127| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B4           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKL    .S1     overhead,A5
           MVKH    .S1     overhead,A5
           MVKH    .S1     act_kernel,A3

           MV      .L2X    A5,B5             ; |156| 
||         LDW     .D1T1   *A3,A5            ; |156| 
||         MVKL    .S1     beg_count,A4

           MVKH    .S1     beg_count,A4

           LDDW    .D2T2   *B5,B9:B8         ; |156| 
||         LDDW    .D1T1   *A4,A9:A8         ; |156| 

           MVKL    .S1     end_count,A3
           MVKH    .S1     end_count,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A15[A5],A7:A6   ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MV      .L2     B4,B7             ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B8,A8,B5:B4       ; |156| 

           ADD     .L2     B5,B9,B5          ; |156| 
||         MV      .S2     B4,B8             ; |156| 
||         MV      .D2X    A3,B4

           SUBU    .L2     B6,B8,B9:B8       ; |156| 
||         ADD     .S2X    B5,A9,B5          ; |156| 

           EXT     .S2     B9,24,24,B16      ; |156| 
||         ADDU    .L2X    A6,B8,B9:B8       ; |156| 
||         SUB     .D2     B7,B5,B5          ; |156| 

           ADD     .L2X    B9,A7,B5          ; |156| 
||         ADD     .S2     B5,B16,B9         ; |156| 

           ADD     .L2     B5,B9,B9          ; |156| 
||         STDW    .D2T2   B7:B6,*B4         ; |153| 

$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("setStackDepth")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B9:B8,*+A15[A5]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$27$B:
;          EXCLUSIVE CPU CYCLES: 24
           LDW     .D2T1   *+SP(68),A3       ; |159| 
           LDW     .D2T1   *+SP(68),A4
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 132,column 13,is_stmt,isa 0
           LDW     .D1T1   *+A3(4),A10       ; |132| 
           LDW     .D2T1   *+SP(64),A3       ; |132| 
           NOP             4
           LDW     .D1T2   *+A3(4),B10       ; |132| 
           NOP             4
           CMPEQ   .L1X    B10,A10,A0        ; |132| 

   [!A0]   ZERO    .S2     B0                ; |133| 
|| [ A0]   CMPGT   .L2     B10,0,B0          ; |133| 
|| [!A0]   ZERO    .D2     B12               ; |144| 

   [!B0]   BNOP    .S1     $C$L12,4          ; |133| 
|| [ B0]   LDW     .D1T1   *A3,A8
|| [ B0]   MV      .L2X    A12,B1

   [ B0]   LDW     .D1T2   *A4,B16
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 133,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |133| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$27$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 133,column 54,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$28$B:
;**  	-----------------------    U$149 = (*orbOutput).features;
;**  	-----------------------    U$152 = (*orbOutput_cn).features;
;** 134	-----------------------    L$3 = U$43;
;** 133	-----------------------    U$152 -= 56;
;** 133	-----------------------    U$149 -= 56;
;** 133	-----------------------    i = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g23:
;** 134	-----------------------    f$3 = ((*((int *)U$149+56) != *((int *)U$152+56))|(*((int *)U$149+60) != *((int *)U$152+60)))-1;
;** 133	-----------------------    U$152 += 56;
;** 133	-----------------------    U$149 += 56;
;** 133	-----------------------    ++i;
;** 133	-----------------------    L$3 = L$3-1;
;** 133	-----------------------    if ( L$3&f$3 ) goto g23;
;**  	-----------------------    if ( f$3 ) goto g28;
$C$DW$L$VLIB_originalfast9_detectCorners_d$28$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c
;*      Loop source line                 : 133
;*      Loop opening brace source line   : 133
;*      Loop closing brace source line   : 142
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 11
;*      Unpartitioned Resource Bound     : 4
;*      Partitioned Resource Bound(*)    : 4
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     2        0     
;*      .S units                     2        2     
;*      .D units                     2        2     
;*      .M units                     0        0     
;*      .X cross paths               2        0     
;*      .T address paths             2        2     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          6        5     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             2        1     
;*      Bound(.L .S .D .LS .LSD)     4*       3     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 11 Did not find schedule
;*         ii = 12 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   ******                       |**   *****      *               |
;*       1: |   ******                       |**   *****      *               |
;*       2: |   *******                      |**   *****      *               |
;*       3: |   *******      *               |**   *****      *               |
;*       4: |   *******                      |**   *****      *               |
;*       5: |   *******                      |**   *****      *               |
;*       6: |   *******                      |**   *****      *               |
;*       7: |*  ******                       | *   *****      *               |
;*       8: |   ******                       | *   *****      *               |
;*       9: |   ******                       | *   *****      *               |
;*      10: |   ******                       | *   *****      *               |
;*      11: |   ******                       | *  ******      *               |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh784
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 4
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.250, max 2.000 }
;*      Mem bank perf. penalty (est.) : 2.0%
;*
;*      Effective ii                : { min 12.00, est 12.25, max 14.00 }
;*
;*
;*      Total cycles (est.)         : 12 + trip_cnt * 12        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,B1
;*                  MV              A8,B5
;*                  ADDK            60,B5
;*                  ADDK            56,A8
;*                  MV              B16,A3
;*                  ADDK            60,A3
;*                  ADDK            56,B16
;*                  MV              B1,B0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C158:
;*   6              ADDK    .S2     56,B16
;*   7              ADDK    .S1     56,A8             ; |134| 
;*     ||           ADDK    .S2     56,B5             ; |134| 
;*     ||           ADD     .L2     1,B9,B9           ; |133| 
;*   8      [ B1]   LDW     .D2T2   *-B16(56),B7      ; |134|  ^ 
;*     ||   [ B1]   LDW     .D1T1   *-A8(56),A5       ; |134|  ^ 
;*     ||           ADDK    .S1     56,A3             ; |134| 
;*     ||   [ B1]   MV      .L2     B9,B6             ; |133| 
;*   9      [ B1]   LDW     .D1T1   *-A3(56),A6       ; |134|  ^ 
;*     ||   [ B1]   LDW     .D2T2   *-B5(56),B8       ; |134|  ^ 
;*  10              NOP             3
;*  13              CMPEQ   .L1X    A5,B7,A9          ; |134|  ^ 
;*  14              CMPEQ   .L1X    B8,A6,A16         ; |134|  ^ 
;*  15              AND     .L1     A9,A16,A9         ;  ^ 
;*  16              XOR     .L1     1,A9,A9           ;  ^ 
;*  17              SUB     .S1     A9,1,A9           ; |134|  ^ 
;*     ||           SUB     .L1     A7,1,A7           ; |133| 
;*  18              AND     .S1     A9,A7,A0          ; |133|  ^ 
;*     ||   [ B0]   MV      .L1     A9,A4             ; |133| 
;*  19      [!A0]   ZERO    .D2     B1                ; |133|  ^ 
;*  20      [ B1]   SPWBR           $C$C158
;*  21              NOP             1
;*  22              MV      .L2     B1,B4             ; |133| Split a long life(pre-sched)
;*  23              MV      .L2     B4,B0             ; |133| Split a long life(pre-sched)
;*  24              ; BRANCHCC OCCURS {$C$C158}       ; |133| 
;*
;*       RESTORE CODE
;*
;*                  MV              B6,B9
;*----------------------------------------------------------------------------*
$C$L9:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 13
   [ B1]   SPLOOPW 12      ;24               ; (P) 
;** --------------------------------------------------------------------------*
$C$L10:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_originalfast9_detectCorners_d$30$B:
;          EXCLUSIVE CPU CYCLES: 12
           NOP             1

           SPMASK          S1
||         ADDK    .S1     -56,A8            ; |133| 

           NOP             1

           SPMASK          L2,S2
||         MV      .L2X    A8,B5
||         ADDK    .S2     -56,B16           ; |133| 

           SPMASK          S2
||         ADDK    .S2     60,B5

           SPMASK          L1,S1,S2
||         ADDK    .S1     56,A8
||         MV      .L1X    B16,A3
||         ADDK    .S2     56,B16

           SPMASK          S1,L2
||         ADD     .L2X    -2,A12,B9
||         ADDK    .S1     60,A3
||         ADDK    .S2     56,B16            ; (P) <0,6> 

           SPMASK          D2
||         ADD     .D2X    -2,A12,B6
||         ADD     .L2     1,B9,B9           ; |133| (P) <0,7> 
||         ADDK    .S1     56,A8             ; |134| (P) <0,7> 
||         ADDK    .S2     56,B5             ; |134| (P) <0,7> 

   [ B1]   MV      .L2     B9,B6             ; |133| (P) <0,8> 
||         ADDK    .S1     56,A3             ; |134| (P) <0,8> 
|| [ B1]   LDW     .D2T2   *-B16(56),B7      ; |134| (P) <0,8>  ^ 
|| [ B1]   LDW     .D1T1   *-A8(56),A5       ; |134| (P) <0,8>  ^ 

   [ B1]   LDW     .D1T1   *-A3(56),A6       ; |134| (P) <0,9>  ^ 
|| [ B1]   LDW     .D2T2   *-B5(56),B8       ; |134| (P) <0,9>  ^ 

           NOP             1

           SPMASK          L1,L2
||         MV      .L1X    B10,A7            ; |134| 
||         MV      .L2X    A12,B0

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 134,column 21,is_stmt,isa 0
           CMPEQ   .L1X    A5,B7,A9          ; |134| <0,13>  ^ 
           CMPEQ   .L1X    B8,A6,A16         ; |134| <0,14>  ^ 
           AND     .L1     A9,A16,A9         ; <0,15>  ^ 
           XOR     .L1     1,A9,A9           ; <0,16>  ^ 

           SUB     .L1     A7,1,A7           ; |133| <0,17> 
||         SUB     .S1     A9,1,A9           ; |134| <0,17>  ^ 

   [ B0]   MV      .L1     A9,A4             ; |133| <0,18> 
||         AND     .S1     A9,A7,A0          ; |133| <0,18>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 133,column 27,is_stmt,isa 0
   [!A0]   ZERO    .D2     B1                ; |133| <0,19>  ^ 
           NOP             2
           MV      .L2     B1,B4             ; |133| <0,22> Split a long life(pre-sched)

           SPKERNEL 0,0
||         MV      .L2     B4,B0             ; |133| <0,23> Split a long life(pre-sched)

$C$DW$L$VLIB_originalfast9_detectCorners_d$30$E:
;** --------------------------------------------------------------------------*
$C$L11:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$32$B:
;          EXCLUSIVE CPU CYCLES: 7
           MV      .L1     A4,A0

           MV      .L1     A0,A1             ; branch predicate copy
|| [!A0]   ZERO    .L2     B12               ; |136| 
|| [ A0]   B       .S1     $C$L14
||         LDW     .D2T1   *+SP(52),A0       ; |136| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 148,column 13,is_stmt,isa 0
   [ A1]   LDW     .D1T1   *+A11(8),A0       ; |148| 
           NOP             4
           ; BRANCHCC OCCURS {$C$L14}  
$C$DW$L$VLIB_originalfast9_detectCorners_d$32$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$33$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 136	-----------------------    status_nat_vs_int = 0;
;** 137	-----------------------    if ( !LevelOfFeedback ) goto g28;

   [!A0]   B       .S1     $C$L13            ; |137| 
|| [ A0]   MVKL    .S2     $C$SL2+0,B4

   [ A0]   MVKH    .S2     $C$SL2+0,B4
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("printf")
	.dwattr $C$DW$165, DW_AT_TI_call

   [ A0]   CALL    .S1     printf            ; |138| 
|| [!A0]   LDW     .D1T1   *+A11(8),A0       ; |148| 

           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 137,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |137| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$34$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 138	-----------------------    printf((const char *)" Mismatch in Index = %u \n", i);
;** 138	-----------------------    goto g28;
;**	-----------------------g27:
;** 144	-----------------------    status_nat_vs_int = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 138,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |138| 

           STW     .D2T2   B6,*+SP(8)        ; |138| 
||         ADDKPC  .S2     $C$RL20,B3,0      ; |138| 

$C$RL20:   ; CALL OCCURS {printf} {0}        ; |138| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$34$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_originalfast9_detectCorners_d$35$B:
;          EXCLUSIVE CPU CYCLES: 4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 148,column 13,is_stmt,isa 0
           LDW     .D1T1   *+A11(8),A0       ; |148| 
           NOP             3
$C$DW$L$VLIB_originalfast9_detectCorners_d$35$E:
;** --------------------------------------------------------------------------*
$C$L13:    
$C$DW$L$VLIB_originalfast9_detectCorners_d$36$B:
;          EXCLUSIVE CPU CYCLES: 1
           NOP             1
$C$DW$L$VLIB_originalfast9_detectCorners_d$36$E:
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 133,column 27,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$37$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g28:
;** 148	-----------------------    v$1 = prm;
;** 148	-----------------------    if ( (*U$13).staticOut == NULL ) goto g37;

   [!A0]   BNOP    .S1     $C$L18,4          ; |148| 
|| [ A0]   LDW     .D1T1   *+A11(12),A3      ; |149| 
||         LDW     .D2T2   *+SP(28),B11      ; |148| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 149,column 17,is_stmt,isa 0
           CMPEQ   .L1     A10,A3,A0         ; |149| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 148,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |148| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$37$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$38$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 149	-----------------------    if ( U$48 != (*U$13).out_n_features ) goto g36;
;** 150	-----------------------    if ( U$43 <= 0 ) goto g37;

   [ A0]   CMPGT   .L2     B10,0,B0          ; |150| 
|| [!A0]   ZERO    .S2     B0                ; |150| 
|| [!A0]   ZERO    .L1     A12               ; |161| 

   [!B0]   BNOP    .S1     $C$L18,3          ; |150| 
|| [ B0]   LDW     .D2T1   *+SP(68),A31
||         MV      .L2     B0,B1             ; guard predicate rewrite
|| [ B0]   MVK     .S2     0x1,B0

   [ B1]   SHL     .S1     A14,5,A3
   [ B1]   LDW     .D1T1   *A31,A8
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 150,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |150| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$38$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 150,column 58,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$39$B:
;**  	-----------------------    U$152 = (*orbOutput_cn).features;
;**  	-----------------------    U$179 = (*((tpi<<5)+v$1)).staticOut;
;** 151	-----------------------    L$4 = U$43;
;** 150	-----------------------    U$179 -= 2;
;** 150	-----------------------    U$152 -= 56;
;** 150	-----------------------    i = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g32:
;** 151	-----------------------    f$5 = (*((int *)U$152+56) != U$179[2])-1;
;** 151	-----------------------    f$4 = (*((int *)U$152+60) != U$179[3])-1;
;** 150	-----------------------    ++i;
;** 150	-----------------------    U$152 += 56;
;** 150	-----------------------    U$179 += 2;
;** 150	-----------------------    L$4 = L$4-1;
;** 150	-----------------------    if ( L$4&f$4&f$5 ) goto g32;
;**  	-----------------------    if ( !((f$5 == 0)|(f$4 == 0)) ) goto g37;
$C$DW$L$VLIB_originalfast9_detectCorners_d$39$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c
;*      Loop source line                 : 150
;*      Loop opening brace source line   : 150
;*      Loop closing brace source line   : 159
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 2
;*      Unpartitioned Resource Bound     : 3
;*      Partitioned Resource Bound(*)    : 3
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        1     
;*      .S units                     1        1     
;*      .D units                     2        2     
;*      .M units                     0        0     
;*      .X cross paths               1        2     
;*      .T address paths             2        2     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          3        2     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        1     
;*      Bound(.L .S .D .LS .LSD)     3*       2     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Unsafe schedule for irregular loop
;*         ii = 9  Did not find schedule
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Unsafe schedule for irregular loop
;*         ii = 10 Did not find schedule
;*         ii = 11 Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    ******                      |     * ***                      |
;*       1: |    ******                      |     * ***                      |
;*       2: |   *******                      |     * ***                      |
;*       3: |    ******      *               |     * ***                      |
;*       4: |   *******                      |    ** ***                      |
;*       5: |   *******                      |     *****                      |
;*       6: |    ******                      |    ** ***                      |
;*       7: |    ******                      |*    * ***                      |
;*       8: |    ******                      |*    * ***                      |
;*       9: |    ******                      |*    * ***                      |
;*      10: |    ******                      |     * ***                      |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh784
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 4
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.250, max 2.000 }
;*      Mem bank perf. penalty (est.) : 2.2%
;*
;*      Effective ii                : { min 11.00, est 11.25, max 13.00 }
;*
;*
;*      Total cycles (est.)         : 11 + trip_cnt * 11        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,B0
;*                  MV              B5,A6
;*                  ADD             6,A6,A6
;*                  ADD             4,B5,B5
;*                  MV              A8,B9
;*                  ADDK            60,B9
;*                  ADDK            56,A8
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C73:
;*   7      [ B0]   LDHU    .D1T1   *A6++(4),A4       ; |151| 
;*     ||   [ B0]   LDW     .D2T2   *B9++(56),B7      ; |151| 
;*   8              NOP             1
;*   9      [ B0]   LDHU    .D2T2   *B5++(4),B8       ; |151| 
;*     ||   [ B0]   LDW     .D1T1   *A8++(56),A5      ; |151| 
;*  10              NOP             2
;*  12              CMPEQ   .L1X    B7,A4,A3          ; |151| 
;*  13              EXT     .S1     A3,31,31,A16      ; |151| 
;*     ||           SUB     .L1     A9,1,A9           ; |150| 
;*  14              CMPEQ   .L2X    A5,B8,B4          ; |151| 
;*     ||           AND     .L1     A16,A9,A3         ; |150|  ^ 
;*  15              EXT     .S2     B4,31,31,B6       ; |151| 
;*  16              AND     .L2X    B6,A3,B4          ; |150|  ^ 
;*  17              MV      .L2     B4,B0             ; |150| 
;*  18      [ B0]   SPWBR           $C$C73
;*  19              NOP             2
;*  21              ADD     .L1     1,A7,A7           ; |150| 
;*  22              ; BRANCHCC OCCURS {$C$C73}        ; |150| 
;*----------------------------------------------------------------------------*
$C$L15:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 12
   [ B0]   SPLOOPW 11      ;22               ; (P) 
;** --------------------------------------------------------------------------*
$C$L16:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_originalfast9_detectCorners_d$41$B:
;          EXCLUSIVE CPU CYCLES: 11

           SPMASK          L2
||         ADD     .L2X    B11,A3,B4

           SPMASK          D2
||         LDW     .D2T2   *+B4(8),B4

           NOP             1

           SPMASK          S1
||         ADDK    .S1     -56,A8            ; |150| 

           NOP             1

           SPMASK          L2
||         MV      .L2X    A8,B9

           SPMASK          L1,S2
||         ADD     .L1X    2,B4,A6
||         ADDK    .S2     60,B9

   [ B0]   LDHU    .D1T1   *A6++(4),A4       ; |151| (P) <0,7> 
|| [ B0]   LDW     .D2T2   *B9++(56),B7      ; |151| (P) <0,7> 

           SPMASK          S1,L2
||         MV      .L2     B4,B5
||         ADDK    .S1     56,A8

   [ B0]   LDHU    .D2T2   *B5++(4),B8       ; |151| (P) <0,9> 
|| [ B0]   LDW     .D1T1   *A8++(56),A5      ; |151| (P) <0,9> 

           SPMASK          L1,S1
||         MV      .L1X    B10,A9            ; |151| 
||         MVK     .S1     0xffffffff,A7     ; |150| 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 151,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B7,A4,A3          ; |151| <0,12> 

           SUB     .L1     A9,1,A9           ; |150| <0,13> 
||         EXT     .S1     A3,31,31,A16      ; |151| <0,13> 

           CMPEQ   .L2X    A5,B8,B4          ; |151| <0,14> 
||         AND     .L1     A16,A9,A3         ; |150| <0,14>  ^ 

           EXT     .S2     B4,31,31,B6       ; |151| <0,15> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 150,column 31,is_stmt,isa 0
           AND     .L2X    B6,A3,B4          ; |150| <0,16>  ^ 
           MV      .L2     B4,B0             ; |150| <0,17> 
           NOP             2
           NOP             1

           SPKERNEL 0,0
||         ADD     .L1     1,A7,A7           ; |150| <0,21> 

$C$DW$L$VLIB_originalfast9_detectCorners_d$41$E:
;** --------------------------------------------------------------------------*
$C$L17:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$43$B:
;          EXCLUSIVE CPU CYCLES: 9
           CMPEQ   .L2X    A16,0,B4
           CMPEQ   .L1X    B6,0,A3
           OR      .L1X    B4,A3,A0

   [!A0]   B       .S2     $C$L19
||         MV      .L1     A0,A2             ; branch predicate copy
|| [ A0]   ZERO    .S1     A12               ; |153| 
||         MV      .D1     A0,A1             ; guard predicate rewrite
|| [ A0]   LDW     .D2T1   *+SP(52),A0       ; |153| 

   [!A2]   MVKL    .S1     est_test,A4
|| [!A2]   ADD     .L2X    B11,A13,B4        ; |172| 
|| [!A2]   STW     .D2T2   B10,*+SP(20)      ; |172| 
|| [!A2]   MVK     .L1     1,A3              ; |169| 
|| [!A1]   MVK     .D1     0x1,A0            ; |153| nullify predicate

   [!A2]   MVKH    .S1     est_test,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 172,column 13,is_stmt,isa 0
   [!A2]   LDHU    .D2T2   *+B4(16),B7       ; |172| 

   [!A2]   LDW     .D2T2   *+B4(28),B5       ; |172| 
|| [!A2]   STW     .D1T1   A3,*A4            ; |169| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 154,column 29,is_stmt,isa 0
   [!A0]   B       .S1     $C$L19            ; |154| 
           ; BRANCHCC OCCURS {$C$L19}  
$C$DW$L$VLIB_originalfast9_detectCorners_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$44$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 153	-----------------------    status_nat_vs_ref = 0;
;** 154	-----------------------    if ( !LevelOfFeedback ) goto g37;

   [!A0]   MVKL    .S1     est_test,A4
|| [!A0]   STW     .D2T2   B10,*+SP(20)      ; |172| 
|| [!A0]   ADD     .L2X    B11,A13,B4        ; |172| 
|| [!A0]   MVK     .L1     1,A3              ; |169| 

$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("printf")
	.dwattr $C$DW$166, DW_AT_TI_call

   [ A0]   CALL    .S2     printf            ; |155| 
|| [!A0]   MVKH    .S1     est_test,A4
|| [!A0]   LDW     .D2T2   *+B4(28),B5       ; |172| 

   [!A0]   LDHU    .D2T2   *+B4(16),B7       ; |172| 
|| [!A0]   STW     .D1T1   A3,*A4            ; |169| 

   [ A0]   MVKL    .S2     $C$SL2+0,B4
   [ A0]   MVKH    .S2     $C$SL2+0,B4
           ; BRANCHCC OCCURS {$C$L19}        ; |154| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$45$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 155	-----------------------    printf((const char *)" Mismatch in Index = %u \n", i);
;** 155	-----------------------    goto g37;
;**	-----------------------g36:
;** 161	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 155,column 33,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |155| 

           STW     .D2T1   A7,*+SP(8)        ; |155| 
||         ADDKPC  .S2     $C$RL21,B3,0      ; |155| 

$C$RL21:   ; CALL OCCURS {printf} {0}        ; |155| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$45$E:
;** --------------------------------------------------------------------------*
$C$L18:    
$C$DW$L$VLIB_originalfast9_detectCorners_d$46$B:
;          EXCLUSIVE CPU CYCLES: 4

           ADD     .L2X    B11,A13,B4        ; |172| 
||         STW     .D2T2   B10,*+SP(20)      ; |172| 

           LDHU    .D2T2   *+B4(16),B7       ; |172| 
||         MVKL    .S1     est_test,A4

           LDW     .D2T2   *+B4(28),B5       ; |172| 
||         MVKH    .S1     est_test,A4
||         MVK     .L1     1,A3              ; |169| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 169,column 13,is_stmt,isa 0
           STW     .D1T1   A3,*A4            ; |169| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$46$E:
;** --------------------------------------------------------------------------*
$C$L19:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 148,column 13,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$47$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g37:
;** 169	-----------------------    est_test = 1;
;** 172	-----------------------    C$7 = U$12+v$1;
;** 172	-----------------------    sprintf(K$197, (const char *)"%s generated input | Opt and NatC results compared | img_width= %d, img_height= %d, n_features found= %d, %s", K$62, (int)(*C$7).imageWidth, (int)(*C$7).imageHeight, U$43, (*C$7).desc);
;** 175	-----------------------    VLIB_formula_add_test((int)_mpyu((*U$13).imageWidth, (*U$13).imageHeight), 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$197, 0);
;** 177	-----------------------    goto g42;
;**	-----------------------g38:
;**  	-----------------------    v$1 = prm;
;**  	-----------------------    goto g41;

           LDHU    .D2T2   *+B4(18),B6       ; |172| 
||         MVKL    .S2     testPatternString,B4

           MVKL    .S2     $C$SL3+0,B8
||         MVKL    .S1     desc,A4

$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x08)
	.dwattr $C$DW$167, DW_AT_name("sprintf")
	.dwattr $C$DW$167, DW_AT_TI_call

           MVKH    .S2     testPatternString,B4
||         STW     .D2T2   B7,*+SP(12)       ; |172| 
||         CALL    .S1     sprintf           ; |172| 

           MVKH    .S2     $C$SL3+0,B8
||         STW     .D2T2   B5,*+SP(24)       ; |172| 
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 172,column 13,is_stmt,isa 0
           STW     .D2T2   B8,*+SP(4)        ; |172| 
           STW     .D2T2   B6,*+SP(16)       ; |172| 
           STW     .D2T2   B4,*+SP(8)        ; |172| 
           ADDKPC  .S2     $C$RL22,B3,0      ; |172| 
$C$RL22:   ; CALL OCCURS {sprintf} {0}       ; |172| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$47$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$48$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 175,column 13,is_stmt,isa 0
           LDHU    .D1T1   *+A11(16),A4      ; |175| 
           LDHU    .D1T1   *+A11(18),A3      ; |175| 
           CMPEQ   .L1     A12,0,A5          ; |175| 
           CMPEQ   .L2     B12,0,B4          ; |175| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |175| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$168, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MPYU    .M1     A4,A3,A4          ; |175| 
||         OR      .L2X    A5,B4,B6          ; |175| 
||         ZERO    .D2     B4                ; |175| 
||         MVKH    .S1     desc,A8
||         ZERO    .L1     A6                ; |175| 

$C$RL23:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |175| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$48$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$49$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S1     $C$L24,2          ; |177| 
||         LDW     .D2T2   *+SP(60),B4
||         MVKL    .S2     0x16903,B5

           MVKH    .S2     0x16903,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 185,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 185 | VLIB_free(orbInput->prefimage);                                        
;----------------------------------------------------------------------
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("VLIB_free")
	.dwattr $C$DW$169, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |185| 
           LDW     .D2T1   *+B4[B5],A4       ; |185| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 177,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L24}          ; |177| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$49$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 86,column 9,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$50$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g39:
;**  	-----------------------    v$1 = prm;
;**  	-----------------------    goto g41;
           NOP             1
           ; BRANCH OCCURS {$C$L22}  
$C$DW$L$VLIB_originalfast9_detectCorners_d$50$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_originalfast9_detectCorners_d$51$B:
;**	-----------------------g40:
;**  	-----------------------    v$1 = prm;
$C$DW$L$VLIB_originalfast9_detectCorners_d$51$E:
;** --------------------------------------------------------------------------*
$C$L22:    
$C$DW$L$VLIB_originalfast9_detectCorners_d$52$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 179,column 13,is_stmt,isa 0
           ADD     .L1X    B11,A13,A3        ; |179| 
           LDHU    .D1T1   *+A3(18),A4       ; |179| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$52$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 86,column 9,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$53$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g41:
;** 179	-----------------------    C$6 = U$12+v$1;
;** 179	-----------------------    sprintf(K$197, (const char *)"img_width= %d, img_height= %d", (int)(*C$6).imageWidth, (int)(*C$6).imageHeight);
;** 181	-----------------------    VLIB_skip_test(K$197);
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x04)
	.dwattr $C$DW$170, DW_AT_name("sprintf")
	.dwattr $C$DW$170, DW_AT_TI_call

           LDHU    .D1T1   *+A3(16),A3       ; |179| 
||         CALL    .S1     sprintf           ; |179| 

           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 179,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |179| 

           STW     .D2T1   A4,*+SP(12)       ; |179| 
||         MVKL    .S1     desc,A4

           STW     .D2T1   A3,*+SP(8)        ; |179| 
||         MVKH    .S1     desc,A4
||         ADDKPC  .S2     $C$RL24,B3,0      ; |179| 

$C$RL24:   ; CALL OCCURS {sprintf} {0}       ; |179| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$54$B:
;          EXCLUSIVE CPU CYCLES: 13
           MVKL    .S1     desc,A4
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$171, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 181,column 13,is_stmt,isa 0
$C$RL25:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |181| 
           LDW     .D2T2   *+SP(60),B4
           MVKL    .S2     0x16903,B5
           MVKH    .S2     0x16903,B5
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 185,column 9,is_stmt,isa 0
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("VLIB_free")
	.dwattr $C$DW$172, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |185| 
           LDW     .D2T1   *+B4[B5],A4       ; |185| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$54$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 177,column 9,is_stmt,isa 0
$C$DW$L$VLIB_originalfast9_detectCorners_d$55$B:
;          EXCLUSIVE CPU CYCLES: 4
;**	-----------------------g42:
;** 185	-----------------------    VLIB_free((*orbInput).prefimage);
;** 186	-----------------------    free((*orbOutput_cn).features);
;** 187	-----------------------    free((*orbOutput).features);
;** 188	-----------------------    free((void *)orbOutput_cn);
;** 189	-----------------------    VLIB_free((void *)orbOutput);
;** 190	-----------------------    free((void *)orbInput);
;** 51	-----------------------    U$12 += 32;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 185,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL26,B3,3      ; |185| 
$C$RL26:   ; CALL OCCURS {VLIB_free} {0}     ; |185| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$55$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$56$B:
;          EXCLUSIVE CPU CYCLES: 40
           LDW     .D2T1   *+SP(68),A3       ; |185| 
           NOP             4
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("free")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D1T1   *A3,A4            ; |186| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 186,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 186 | free(orbOutput_cn->features);                                          
;----------------------------------------------------------------------
$C$RL27:   ; CALL OCCURS {free} {0}          ; |186| 
           LDW     .D2T1   *+SP(64),A3       ; |186| 
           NOP             4
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("free")
	.dwattr $C$DW$174, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D1T1   *A3,A4            ; |187| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 187,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 187 | free(orbOutput->features);                                             
;----------------------------------------------------------------------
$C$RL28:   ; CALL OCCURS {free} {0}          ; |187| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("free")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(68),A4       ; |188| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 188,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 188 | free(orbOutput_cn);                                                    
;----------------------------------------------------------------------
$C$RL29:   ; CALL OCCURS {free} {0}          ; |188| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("VLIB_free")
	.dwattr $C$DW$176, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(64),A4       ; |189| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 189,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 189 | VLIB_free(orbOutput);                                                  
;----------------------------------------------------------------------
$C$RL30:   ; CALL OCCURS {VLIB_free} {0}     ; |189| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("free")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(60),A4       ; |190| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 190,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 190 | free(orbInput);                                                        
;----------------------------------------------------------------------
$C$RL31:   ; CALL OCCURS {free} {0}          ; |190| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_originalfast9_detectCorners_d$57$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |51| 
           ADD     .L1     1,A14,A14         ; |51| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 62,column 21,is_stmt,isa 0
           ADDK    .S1     32,A11            ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 51,column 17,is_stmt,isa 0
           ADDK    .S1     32,A13            ; |51| 
           NOP             1

           CMPGT   .L1     A3,A14,A0         ; |51| 
||         ADDAW   .D1X    SP,8,A3           ; |65| 

   [ A0]   BNOP    .S1     $C$L1,2           ; |51| 
|| [ A0]   LDW     .D1T1   *+A11(24),A10     ; |62| 
|| [ A0]   MVK     .S2     0x14,B6           ; |65| 
|| [ A0]   MVK     .L1     0xa,A6            ; |65| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 65,column 33,is_stmt,isa 0
   [ A0]   LDHU    .D1T2   *+A11(18),B4      ; |65| 
   [ A0]   LDHU    .D1T1   *+A11(16),A4      ; |65| 
           MV      .L1     A10,A8            ; |65| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_originalfast9_detectCorners_d$57$E:
;** --------------------------------------------------------------------------*
$C$L25:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g43:
;** 194	-----------------------    VLIB_profile_cycle_report(1, NULL, "number of input pixels (img_width*img_height); Performance is data dependent.");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [17]
;** 168	-----------------------    VLIB_stack_memory();  // [17]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL5+0,A6
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$178, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL5+0,A6
||         MVK     .L1     0x1,A4            ; |194| 
||         ZERO    .L2     B4                ; |194| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 194,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 194 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 195 |                           NULL,                                        
; 196 |                           "number of input pixels (img_width*img_height
;     | ); Performance is data dependent.");                                   
; 199 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL32:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |194| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL6+0,B4
           MVKH    .S2     $C$SL6+0,B4
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("printf")
	.dwattr $C$DW$179, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$180, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c",line 200,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(88),B3      ; |200| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |200| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$182	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$182, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.se66:$C$L1:1:1443280381")
	.dwattr $C$DW$182, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$182, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$182, DW_AT_TI_end_line(0xbf)
$C$DW$183	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$183, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$4$B)
	.dwattr $C$DW$183, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$4$E)
$C$DW$184	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$184, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$50$B)
	.dwattr $C$DW$184, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$50$E)
$C$DW$185	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$185, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$51$B)
	.dwattr $C$DW$185, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$51$E)
$C$DW$186	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$186, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$52$B)
	.dwattr $C$DW$186, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$52$E)
$C$DW$187	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$187, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$53$B)
	.dwattr $C$DW$187, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$53$E)
$C$DW$188	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$188, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$45$B)
	.dwattr $C$DW$188, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$45$E)
$C$DW$189	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$189, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$34$B)
	.dwattr $C$DW$189, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$34$E)
$C$DW$190	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$190, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$33$B)
	.dwattr $C$DW$190, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$33$E)
$C$DW$191	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$191, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$35$B)
	.dwattr $C$DW$191, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$35$E)
$C$DW$192	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$192, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$16$B)
	.dwattr $C$DW$192, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$16$E)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$7$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$7$E)
$C$DW$194	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$194, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$8$B)
	.dwattr $C$DW$194, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$8$E)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$5$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$5$E)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$6$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$6$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$9$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$9$E)
$C$DW$198	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$198, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$10$B)
	.dwattr $C$DW$198, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$10$E)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$11$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$11$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$12$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$12$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$13$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$13$E)
$C$DW$202	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$202, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$14$B)
	.dwattr $C$DW$202, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$14$E)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$15$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$15$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$25$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$25$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$26$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$26$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$27$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$27$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$28$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$28$E)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$32$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$32$E)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$36$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$36$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$37$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$37$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$38$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$38$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$39$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$39$E)
$C$DW$213	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$43$B)
	.dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$43$E)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$44$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$44$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$46$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$46$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$47$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$47$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$48$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$48$E)
$C$DW$218	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$218, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$49$B)
	.dwattr $C$DW$218, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$49$E)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$54$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$54$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$55$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$55$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$56$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$56$E)
$C$DW$222	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$57$B)
	.dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$57$E)

$C$DW$223	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$223, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.se66:$C$L3:2:1443280381")
	.dwattr $C$DW$223, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$223, DW_AT_TI_begin_line(0x65)
	.dwattr $C$DW$223, DW_AT_TI_end_line(0x74)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$17$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$17$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$18$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$18$E)
$C$DW$226	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$226, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$19$B)
	.dwattr $C$DW$226, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$19$E)
$C$DW$227	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$227, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$24$B)
	.dwattr $C$DW$227, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$24$E)

$C$DW$228	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$228, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.se66:$C$L4:3:1443280381")
	.dwattr $C$DW$228, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$228, DW_AT_TI_begin_line(0x66)
	.dwattr $C$DW$228, DW_AT_TI_end_line(0x73)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$20$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$20$E)
$C$DW$230	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$230, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$21$B)
	.dwattr $C$DW$230, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$21$E)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$22$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$22$E)
$C$DW$232	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$232, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$23$B)
	.dwattr $C$DW$232, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$23$E)
	.dwendtag $C$DW$228

	.dwendtag $C$DW$223


$C$DW$233	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$233, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.se66:$C$L10:2:1443280381")
	.dwattr $C$DW$233, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$233, DW_AT_TI_begin_line(0x85)
	.dwattr $C$DW$233, DW_AT_TI_end_line(0x8e)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$30$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$30$E)
	.dwendtag $C$DW$233


$C$DW$235	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$235, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.se66:$C$L16:2:1443280381")
	.dwattr $C$DW$235, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$235, DW_AT_TI_begin_line(0x96)
	.dwattr $C$DW$235, DW_AT_TI_end_line(0x9f)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$41$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_originalfast9_detectCorners_d$41$E)
	.dwendtag $C$DW$235

	.dwendtag $C$DW$182

	.dwattr $C$DW$87, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_originalfast9_detectCorners/VLIB_originalfast9_detectCorners_d.c")
	.dwattr $C$DW$87, DW_AT_TI_end_line(0xc8)
	.dwattr $C$DW$87, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$87

;; Inlined function references:
;; [ 14] VLIB_profile_start
;; [ 15] VLIB_profile_stop
;; [ 17] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_originalfast9_detectCorners",0
$C$SL2:	.string	" Mismatch in Index = %u ",10,0
$C$SL3:	.string	"%s generated input | Opt and NatC results compared | img_wi"
	.string	"dth= %d, img_height= %d, n_features found= %d, %s",0
$C$SL4:	.string	"img_width= %d, img_height= %d",0
$C$SL5:	.string	"number of input pixels (img_width*img_height); Performance "
	.string	"is data dependent.",0
$C$SL6:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	getCORBParameters
	.global	VLIB_originalfast9_detectCorners
	.global	VLIB_originalfast9_detectCorners_cn
	.global	originalfast9_detectCorners_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$65	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x04)
$C$DW$237	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$237, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$237, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$237, DW_AT_decl_column(0x05)
$C$DW$238	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$238, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$238, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$238, DW_AT_decl_column(0x05)
$C$DW$239	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$239, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$239, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$239, DW_AT_decl_column(0x05)
$C$DW$240	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$240, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$240, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$240, DW_AT_decl_column(0x05)
$C$DW$241	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$241, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$241, DW_AT_decl_column(0x05)
$C$DW$242	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$242, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$242, DW_AT_decl_column(0x05)
$C$DW$243	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x80)
	.dwattr $C$DW$243, DW_AT_decl_column(0x05)
$C$DW$244	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x81)
	.dwattr $C$DW$244, DW_AT_decl_column(0x05)
$C$DW$245	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x82)
	.dwattr $C$DW$245, DW_AT_decl_column(0x05)
$C$DW$246	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$246, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x83)
	.dwattr $C$DW$246, DW_AT_decl_column(0x05)
$C$DW$247	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$247, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x84)
	.dwattr $C$DW$247, DW_AT_decl_column(0x05)
$C$DW$248	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$248, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x85)
	.dwattr $C$DW$248, DW_AT_decl_column(0x05)
$C$DW$249	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$249, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x86)
	.dwattr $C$DW$249, DW_AT_decl_column(0x05)
$C$DW$250	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$250, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x87)
	.dwattr $C$DW$250, DW_AT_decl_column(0x05)
$C$DW$251	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$251, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x88)
	.dwattr $C$DW$251, DW_AT_decl_column(0x05)
$C$DW$252	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$252, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x89)
	.dwattr $C$DW$252, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$65

	.dwattr $C$DW$T$65, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$65, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$65, DW_AT_decl_column(0x0e)
$C$DW$T$66	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$66, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$T$66, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$66, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$66, DW_AT_decl_column(0x03)

$C$DW$T$67	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x04)
$C$DW$253	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$253, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$253, DW_AT_decl_column(0x05)
$C$DW$254	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$254, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$254, DW_AT_decl_column(0x05)
$C$DW$255	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$255, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$255, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$67

	.dwattr $C$DW$T$67, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$T$67, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$67, DW_AT_decl_column(0x06)

$C$DW$T$68	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x04)
$C$DW$256	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$256, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$256, DW_AT_decl_line(0x72)
	.dwattr $C$DW$256, DW_AT_decl_column(0x05)
$C$DW$257	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$257, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$257, DW_AT_decl_line(0x73)
	.dwattr $C$DW$257, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$68

	.dwattr $C$DW$T$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$T$68, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$68, DW_AT_decl_column(0x06)

$C$DW$T$69	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x04)
$C$DW$258	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_FALSE"), DW_AT_const_value(0x00)
	.dwattr $C$DW$258, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$258, DW_AT_decl_line(0x8f)
	.dwattr $C$DW$258, DW_AT_decl_column(0x05)
$C$DW$259	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_TRUE"), DW_AT_const_value(0x01)
	.dwattr $C$DW$259, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$259, DW_AT_decl_line(0x90)
	.dwattr $C$DW$259, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$69

	.dwattr $C$DW$T$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$69, DW_AT_decl_line(0x8e)
	.dwattr $C$DW$T$69, DW_AT_decl_column(0x0e)
$C$DW$T$70	.dwtag  DW_TAG_typedef, DW_AT_name("CORB_Bool")
	.dwattr $C$DW$T$70, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$70, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$70, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$70, DW_AT_decl_line(0x91)
	.dwattr $C$DW$T$70, DW_AT_decl_column(0x02)

$C$DW$T$71	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x04)
$C$DW$260	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_OK"), DW_AT_const_value(0x00)
	.dwattr $C$DW$260, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0xa2)
	.dwattr $C$DW$260, DW_AT_decl_column(0x05)
$C$DW$261	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_FAIL"), DW_AT_const_value(-1)
	.dwattr $C$DW$261, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0xa3)
	.dwattr $C$DW$261, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$71

	.dwattr $C$DW$T$71, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$71, DW_AT_decl_line(0xa1)
	.dwattr $C$DW$T$71, DW_AT_decl_column(0x0e)
$C$DW$T$72	.dwtag  DW_TAG_typedef, DW_AT_name("CORBResult")
	.dwattr $C$DW$T$72, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$72, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$72, DW_AT_decl_line(0xa4)
	.dwattr $C$DW$T$72, DW_AT_decl_column(0x02)

$C$DW$T$21	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$21, DW_AT_byte_size(0x14)
$C$DW$262	.dwtag  DW_TAG_member
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$262, DW_AT_name("width")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$262, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0xaa)
	.dwattr $C$DW$262, DW_AT_decl_column(0x0d)
$C$DW$263	.dwtag  DW_TAG_member
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$263, DW_AT_name("height")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$263, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0xab)
	.dwattr $C$DW$263, DW_AT_decl_column(0x0d)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$264, DW_AT_name("marginPixels")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("marginPixels")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0xac)
	.dwattr $C$DW$264, DW_AT_decl_column(0x0d)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$265, DW_AT_name("fastDifferenceThreshold")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("fastDifferenceThreshold")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0xae)
	.dwattr $C$DW$265, DW_AT_decl_column(0x0d)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$266, DW_AT_name("n_features_desired")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("n_features_desired")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$266, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$21

	.dwattr $C$DW$T$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0xa9)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x10)
$C$DW$T$74	.dwtag  DW_TAG_typedef, DW_AT_name("CORBParameters")
	.dwattr $C$DW$T$74, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$74, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$74, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$74, DW_AT_decl_line(0xb3)
	.dwattr $C$DW$T$74, DW_AT_decl_column(0x02)
$C$DW$T$75	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$75, DW_AT_type(*$C$DW$T$74)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x38)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$267, DW_AT_name("x")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0xdc)
	.dwattr $C$DW$267, DW_AT_decl_column(0x0d)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$268, DW_AT_name("y")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0xde)
	.dwattr $C$DW$268, DW_AT_decl_column(0x0d)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$269, DW_AT_name("octave")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0xe0)
	.dwattr $C$DW$269, DW_AT_decl_column(0x0d)
$C$DW$270	.dwtag  DW_TAG_member
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$270, DW_AT_name("angle")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("angle")
	.dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$270, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0xe3)
	.dwattr $C$DW$270, DW_AT_decl_column(0x0e)
$C$DW$271	.dwtag  DW_TAG_member
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$271, DW_AT_name("fastResponse")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("fastResponse")
	.dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0xe4)
	.dwattr $C$DW$271, DW_AT_decl_column(0x0e)
$C$DW$272	.dwtag  DW_TAG_member
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$272, DW_AT_name("harrisResponse")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("harrisResponse")
	.dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$272, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0xe5)
	.dwattr $C$DW$272, DW_AT_decl_column(0x0e)
$C$DW$273	.dwtag  DW_TAG_member
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$273, DW_AT_name("descriptor")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("descriptor")
	.dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$273, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0xe6)
	.dwattr $C$DW$273, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0xdb)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("CORBFeature")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0xe7)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x02)
$C$DW$T$49	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$49, DW_AT_address_class(0x20)
$C$DW$T$79	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$79, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$79, DW_AT_address_class(0x20)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x20)
$C$DW$274	.dwtag  DW_TAG_member
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$274, DW_AT_name("testPattern")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$274, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x25)
	.dwattr $C$DW$274, DW_AT_decl_column(0x0f)
$C$DW$275	.dwtag  DW_TAG_member
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$275, DW_AT_name("staticIn")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$275, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x26)
	.dwattr $C$DW$275, DW_AT_decl_column(0x0f)
$C$DW$276	.dwtag  DW_TAG_member
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$276, DW_AT_name("staticOut")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$276, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x27)
	.dwattr $C$DW$276, DW_AT_decl_column(0x0f)
$C$DW$277	.dwtag  DW_TAG_member
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$277, DW_AT_name("out_n_features")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("out_n_features")
	.dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$277, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x28)
	.dwattr $C$DW$277, DW_AT_decl_column(0x0f)
$C$DW$278	.dwtag  DW_TAG_member
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$278, DW_AT_name("imageWidth")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$278, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x29)
	.dwattr $C$DW$278, DW_AT_decl_column(0x0f)
$C$DW$279	.dwtag  DW_TAG_member
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$279, DW_AT_name("imageHeight")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$279, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$279, DW_AT_decl_column(0x0f)
$C$DW$280	.dwtag  DW_TAG_member
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$280, DW_AT_name("imagePitch")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("imagePitch")
	.dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$280, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$280, DW_AT_decl_column(0x0f)
$C$DW$281	.dwtag  DW_TAG_member
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$281, DW_AT_name("max_num_features")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("max_num_features")
	.dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$281, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$281, DW_AT_decl_column(0x0f)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$282, DW_AT_name("desc")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$282, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$80	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$80, DW_AT_address_class(0x20)
$C$DW$T$82	.dwtag  DW_TAG_typedef, DW_AT_name("originalfast9_detectCorners_testParams_t")
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$82, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\VLIB_originalfast9_detectCorners_idat.h")
	.dwattr $C$DW$T$82, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$82, DW_AT_decl_column(0x03)
$C$DW$T$83	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$83, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$T$83, DW_AT_address_class(0x20)
$C$DW$T$84	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$T$84, DW_AT_address_class(0x20)

$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x5a008)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$283, DW_AT_name("octave")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0xb9)
	.dwattr $C$DW$283, DW_AT_decl_column(0x0d)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$284, DW_AT_name("relative_patterns")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("relative_patterns")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0xbb)
	.dwattr $C$DW$284, DW_AT_decl_column(0x0d)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$285, DW_AT_name("rotated_patterns")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("rotated_patterns")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c004]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$285, DW_AT_decl_column(0x0d)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$286, DW_AT_name("integralImageWidth")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("integralImageWidth")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a004]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0xbd)
	.dwattr $C$DW$286, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x10)
$C$DW$T$41	.dwtag  DW_TAG_typedef, DW_AT_name("CORBPatterns")
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0xbe)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x02)

$C$DW$T$40	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x400)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$287, DW_AT_name("orientation_horizontal_offsets")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("orientation_horizontal_offsets")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0xc4)
	.dwattr $C$DW$287, DW_AT_decl_column(0x0d)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$288, DW_AT_name("orientation_vertical_offsets")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("orientation_vertical_offsets")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x1e0]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0xc5)
	.dwattr $C$DW$288, DW_AT_decl_column(0x0d)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$289, DW_AT_name("u_max")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("u_max")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c0]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0xc6)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0xc3)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x10)
$C$DW$T$42	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOrientationOffsets")
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$T$42, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0xc7)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x02)

$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x5a420)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$290, DW_AT_name("patterns")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("patterns")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0xcd)
	.dwattr $C$DW$290, DW_AT_decl_column(0x1c)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$291, DW_AT_name("offsets")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("offsets")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a008]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0xce)
	.dwattr $C$DW$291, DW_AT_decl_column(0x1c)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$292, DW_AT_name("image")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("image")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a408]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0xcf)
	.dwattr $C$DW$292, DW_AT_decl_column(0x1c)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$293, DW_AT_name("prefimage")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("prefimage")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a40c]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0xd0)
	.dwattr $C$DW$293, DW_AT_decl_column(0x1c)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$294, DW_AT_name("harrisImage")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("harrisImage")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a410]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0xd1)
	.dwattr $C$DW$294, DW_AT_decl_column(0x1c)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$295, DW_AT_name("integralImage")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("integralImage")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a414]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0xd2)
	.dwattr $C$DW$295, DW_AT_decl_column(0x1c)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$296, DW_AT_name("scratchBuffer")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("scratchBuffer")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a418]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0xd3)
	.dwattr $C$DW$296, DW_AT_decl_column(0x1c)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$297, DW_AT_name("orbPattern31")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("orbPattern31")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a41c]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0xd4)
	.dwattr $C$DW$297, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$47

	.dwattr $C$DW$T$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0xcc)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x10)
$C$DW$T$85	.dwtag  DW_TAG_typedef, DW_AT_name("CORBInput")
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$T$85, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$85, DW_AT_decl_line(0xd5)
	.dwattr $C$DW$T$85, DW_AT_decl_column(0x02)
$C$DW$T$86	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$T$86, DW_AT_address_class(0x20)

$C$DW$T$50	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x08)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$298, DW_AT_name("features")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("features")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0xed)
	.dwattr $C$DW$298, DW_AT_decl_column(0x12)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$299, DW_AT_name("n_features")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("n_features")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0xee)
	.dwattr $C$DW$299, DW_AT_decl_column(0x12)
	.dwendtag $C$DW$T$50

	.dwattr $C$DW$T$50, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0xec)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x10)
$C$DW$T$88	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOutput")
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$T$88, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\VLIB_orb.h")
	.dwattr $C$DW$T$88, DW_AT_decl_line(0xef)
	.dwattr $C$DW$T$88, DW_AT_decl_column(0x02)
$C$DW$T$89	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$89, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$T$89, DW_AT_address_class(0x20)

$C$DW$T$52	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x18)
$C$DW$300	.dwtag  DW_TAG_member
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$300, DW_AT_name("fd")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$300, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$300, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$300, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0x49)
	.dwattr $C$DW$300, DW_AT_decl_column(0x0b)
$C$DW$301	.dwtag  DW_TAG_member
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$301, DW_AT_name("buf")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$301, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$301, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$301, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$301, DW_AT_decl_column(0x16)
$C$DW$302	.dwtag  DW_TAG_member
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$302, DW_AT_name("pos")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$302, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$302, DW_AT_decl_column(0x16)
$C$DW$303	.dwtag  DW_TAG_member
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$303, DW_AT_name("bufend")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$303, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$303, DW_AT_decl_column(0x16)
$C$DW$304	.dwtag  DW_TAG_member
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$304, DW_AT_name("buff_stop")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$304, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$304, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$304, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$304, DW_AT_decl_column(0x16)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$305, DW_AT_name("flags")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$305, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$52

	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x10)
$C$DW$T$91	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$91, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$T$91, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$91, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$91, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$91, DW_AT_decl_column(0x03)

$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x08)
$C$DW$306	.dwtag  DW_TAG_member
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$306, DW_AT_name("quot")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$306, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$306, DW_AT_decl_column(0x16)
$C$DW$307	.dwtag  DW_TAG_member
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$307, DW_AT_name("rem")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$307, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$307, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$53

	.dwattr $C$DW$T$53, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x10)
$C$DW$T$92	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$92, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$92, DW_AT_decl_column(0x23)

$C$DW$T$54	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x08)
$C$DW$308	.dwtag  DW_TAG_member
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$308, DW_AT_name("quot")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$308, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x40)
	.dwattr $C$DW$308, DW_AT_decl_column(0x17)
$C$DW$309	.dwtag  DW_TAG_member
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$309, DW_AT_name("rem")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$309, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x40)
	.dwattr $C$DW$309, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$54

	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x10)
$C$DW$T$93	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$93, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$93, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$93, DW_AT_decl_column(0x24)

$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x10)
$C$DW$310	.dwtag  DW_TAG_member
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$310, DW_AT_name("quot")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$310, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x43)
	.dwattr $C$DW$310, DW_AT_decl_column(0x1c)
$C$DW$311	.dwtag  DW_TAG_member
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$311, DW_AT_name("rem")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$311, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x43)
	.dwattr $C$DW$311, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$55

	.dwattr $C$DW$T$55, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x10)
$C$DW$T$94	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$94, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$94, DW_AT_decl_column(0x29)

$C$DW$T$56	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x24)
$C$DW$312	.dwtag  DW_TAG_member
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$312, DW_AT_name("area")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$312, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x69)
	.dwattr $C$DW$312, DW_AT_decl_column(0x0d)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$313, DW_AT_name("xsum")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$313, DW_AT_decl_column(0x0d)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$314, DW_AT_name("ysum")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$314, DW_AT_decl_column(0x0d)
$C$DW$315	.dwtag  DW_TAG_member
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$315, DW_AT_name("xmin")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$315, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$315, DW_AT_decl_column(0x0d)
$C$DW$316	.dwtag  DW_TAG_member
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$316, DW_AT_name("ymin")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$316, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$316, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$316, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$316, DW_AT_decl_column(0x0d)
$C$DW$317	.dwtag  DW_TAG_member
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$317, DW_AT_name("xmax")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$317, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$317, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$317, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$317, DW_AT_decl_column(0x0d)
$C$DW$318	.dwtag  DW_TAG_member
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$318, DW_AT_name("ymax")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$318, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$318, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$318, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x70)
	.dwattr $C$DW$318, DW_AT_decl_column(0x0d)
$C$DW$319	.dwtag  DW_TAG_member
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$319, DW_AT_name("seedx")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$319, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$319, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$319, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x72)
	.dwattr $C$DW$319, DW_AT_decl_column(0x0d)
$C$DW$320	.dwtag  DW_TAG_member
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$320, DW_AT_name("seedy")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$320, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$320, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$320, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x73)
	.dwattr $C$DW$320, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$56

	.dwattr $C$DW$T$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x10)
$C$DW$T$95	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$95, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$95, DW_AT_decl_column(0x03)

$C$DW$T$58	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x10)
$C$DW$321	.dwtag  DW_TAG_member
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$321, DW_AT_name("daylight")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$321, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x52)
	.dwattr $C$DW$321, DW_AT_decl_column(0x0b)
$C$DW$322	.dwtag  DW_TAG_member
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$322, DW_AT_name("timezone")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$322, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x53)
	.dwattr $C$DW$322, DW_AT_decl_column(0x0b)
$C$DW$323	.dwtag  DW_TAG_member
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$323, DW_AT_name("tzname")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$323, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$323, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$323, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x54)
	.dwattr $C$DW$323, DW_AT_decl_column(0x0b)
$C$DW$324	.dwtag  DW_TAG_member
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$324, DW_AT_name("dstname")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$324, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$324, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$324, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x55)
	.dwattr $C$DW$324, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$58

	.dwattr $C$DW$T$58, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$58, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$58, DW_AT_decl_column(0x01)
$C$DW$T$96	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$96, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$96, DW_AT_decl_column(0x03)

$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x20)
$C$DW$325	.dwtag  DW_TAG_member
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$325, DW_AT_name("val")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("val")
	.dwattr $C$DW$325, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$325, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$325, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x25)
	.dwattr $C$DW$325, DW_AT_decl_column(0x0c)
	.dwendtag $C$DW$T$61

	.dwattr $C$DW$T$61, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$T$61, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$61, DW_AT_decl_column(0x10)
$C$DW$T$97	.dwtag  DW_TAG_typedef, DW_AT_name("RotationMatrix")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$97, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\../common/VLIB_orb_utilities.h")
	.dwattr $C$DW$T$97, DW_AT_decl_line(0x26)
	.dwattr $C$DW$T$97, DW_AT_decl_column(0x02)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$98	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$98, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$98, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$133	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$133, DW_AT_address_class(0x20)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x1d)
$C$DW$T$46	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$46, DW_AT_address_class(0x20)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$51	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$51, DW_AT_address_class(0x20)
$C$DW$T$125	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$6)
$C$DW$T$126	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$126, DW_AT_type(*$C$DW$T$125)
	.dwattr $C$DW$T$126, DW_AT_address_class(0x20)
$C$DW$T$20	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$20, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$20, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$20, DW_AT_decl_column(0x1c)

$C$DW$T$24	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$24, DW_AT_byte_size(0x20)
$C$DW$326	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$326, DW_AT_upper_bound(0x1f)
	.dwendtag $C$DW$T$24

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)
$C$DW$T$119	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$20)
$C$DW$T$120	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$119)
	.dwattr $C$DW$T$120, DW_AT_address_class(0x20)
$C$DW$T$121	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$120)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1d)
$C$DW$T$43	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$43, DW_AT_address_class(0x20)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)
$C$DW$T$27	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$27, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x1c)
$C$DW$T$28	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$28, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$28, DW_AT_address_class(0x20)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x16)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$127	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$127, DW_AT_address_class(0x20)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x0d)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1d)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x11)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x2000)
$C$DW$327	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$327, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$33


$C$DW$T$34	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$34, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x3c000)
$C$DW$328	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$328, DW_AT_upper_bound(0x1d)
$C$DW$329	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$329, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$34


$C$DW$T$35	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$35, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x1000)
$C$DW$330	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$330, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$35


$C$DW$T$36	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x1e000)
$C$DW$331	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$331, DW_AT_upper_bound(0x1d)
$C$DW$332	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$332, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$36


$C$DW$T$38	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$38, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$38, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x1e0)
$C$DW$333	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$333, DW_AT_upper_bound(0x77)
	.dwendtag $C$DW$T$38


$C$DW$T$39	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x40)
$C$DW$334	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$334, DW_AT_upper_bound(0x0f)
	.dwendtag $C$DW$T$39


$C$DW$T$62	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$62, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$62, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x10)
$C$DW$335	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$335, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$62

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x17)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x17)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x17)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x17)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x17)
$C$DW$T$179	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$179, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$179, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$179, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$179, DW_AT_decl_column(0x16)
$C$DW$T$99	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$99, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$99, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$99, DW_AT_decl_column(0x19)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x16)
$C$DW$T$29	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$29, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$29, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x1c)
$C$DW$T$44	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$44, DW_AT_address_class(0x20)
$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x16)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x16)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x16)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x16)
$C$DW$T$178	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$178, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$178, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$178, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$178, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$180	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$180, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$180, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$180, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$180, DW_AT_decl_column(0x21)
$C$DW$T$181	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$181, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$181, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$181, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$181, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$181, DW_AT_decl_column(0x17)
$C$DW$T$182	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$182, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$182, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$182, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$182, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$182, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$183	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$183, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$183, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$183, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$183, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$183, DW_AT_decl_column(0x20)
$C$DW$T$184	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$183)
	.dwattr $C$DW$T$184, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$184, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$184, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$184, DW_AT_decl_column(0x16)
$C$DW$T$185	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$185, DW_AT_type(*$C$DW$T$183)
	.dwattr $C$DW$T$185, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$185, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$185, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$185, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$187	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$187, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$187, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$187, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$187, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$187, DW_AT_decl_column(0x21)
$C$DW$T$188	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$188, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$188, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$188, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$188, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$188, DW_AT_decl_column(0x17)
$C$DW$T$189	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$189, DW_AT_type(*$C$DW$T$187)
	.dwattr $C$DW$T$189, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$189, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$189, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$189, DW_AT_decl_column(0x17)
$C$DW$T$190	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$190, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$190, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$190, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$190, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$190, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$192	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$192, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$192, DW_AT_address_class(0x20)
$C$DW$T$193	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$193, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$193, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$193, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$193, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$193, DW_AT_decl_column(0x20)

$C$DW$T$194	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$194, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$T$194, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$194, DW_AT_byte_size(0x10)
$C$DW$336	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$336, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$194

$C$DW$T$195	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$T$195, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$195, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$195, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$195, DW_AT_decl_column(0x16)
$C$DW$T$196	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$196, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$T$196, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$196, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$196, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$196, DW_AT_decl_column(0x16)
$C$DW$T$197	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$197, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$197, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$197, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$197, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$22	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x0f)
$C$DW$T$198	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$198, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$198, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$198, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$198, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$199	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$199, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$199, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$199, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_originalfast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$199, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$199, DW_AT_decl_column(0x10)

$C$DW$T$59	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$59, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$59, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x10)
$C$DW$337	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$337, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$60, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x20)
$C$DW$338	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$338, DW_AT_upper_bound(0x01)
$C$DW$339	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$339, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$60

$C$DW$T$200	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$200, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$200, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$200, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$200, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$200, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$30	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$30, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$30, DW_AT_name("signed char")
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x01)
$C$DW$T$31	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$31, DW_AT_address_class(0x20)
$C$DW$T$201	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$201, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$201, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$201, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$201, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$201, DW_AT_decl_column(0x12)

$C$DW$T$57	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$57, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$57, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x04)
$C$DW$340	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$340, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$57

$C$DW$T$151	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$30)
$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$202	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$202, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$202, DW_AT_language(DW_LANG_C)
$C$DW$341	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$202


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x10)
$C$DW$342	.dwtag  DW_TAG_member
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$342, DW_AT_name("_v")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$342, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$342, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$342, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$342, DW_AT_decl_line(0x44)
	.dwattr $C$DW$342, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$63

	.dwattr $C$DW$T$63, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$63, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$63, DW_AT_decl_column(0x01)
$C$DW$T$203	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$203, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$T$203, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$203, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$203, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$203, DW_AT_decl_column(0x01)
$C$DW$T$204	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$204, DW_AT_type(*$C$DW$T$203)
	.dwattr $C$DW$T$204, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$204, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$204, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$204, DW_AT_decl_column(0x13)

$C$DW$T$64	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$64, DW_AT_name("tm")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x24)
$C$DW$343	.dwtag  DW_TAG_member
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$343, DW_AT_name("tm_sec")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$343, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$343, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$343, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$343, DW_AT_decl_line(0x41)
	.dwattr $C$DW$343, DW_AT_decl_column(0x09)
$C$DW$344	.dwtag  DW_TAG_member
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$344, DW_AT_name("tm_min")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$344, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$344, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$344, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$344, DW_AT_decl_line(0x42)
	.dwattr $C$DW$344, DW_AT_decl_column(0x09)
$C$DW$345	.dwtag  DW_TAG_member
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$345, DW_AT_name("tm_hour")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$345, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$345, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$345, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$345, DW_AT_decl_line(0x43)
	.dwattr $C$DW$345, DW_AT_decl_column(0x09)
$C$DW$346	.dwtag  DW_TAG_member
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$346, DW_AT_name("tm_mday")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$346, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$346, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$346, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$346, DW_AT_decl_line(0x44)
	.dwattr $C$DW$346, DW_AT_decl_column(0x09)
$C$DW$347	.dwtag  DW_TAG_member
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$347, DW_AT_name("tm_mon")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$347, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$347, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$347, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$347, DW_AT_decl_line(0x45)
	.dwattr $C$DW$347, DW_AT_decl_column(0x09)
$C$DW$348	.dwtag  DW_TAG_member
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$348, DW_AT_name("tm_year")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$348, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$348, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$348, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$348, DW_AT_decl_line(0x46)
	.dwattr $C$DW$348, DW_AT_decl_column(0x09)
$C$DW$349	.dwtag  DW_TAG_member
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$349, DW_AT_name("tm_wday")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$349, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$349, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$349, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$349, DW_AT_decl_line(0x47)
	.dwattr $C$DW$349, DW_AT_decl_column(0x09)
$C$DW$350	.dwtag  DW_TAG_member
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$350, DW_AT_name("tm_yday")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$350, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$350, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$350, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$350, DW_AT_decl_line(0x48)
	.dwattr $C$DW$350, DW_AT_decl_column(0x09)
$C$DW$351	.dwtag  DW_TAG_member
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$351, DW_AT_name("tm_isdst")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$351, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$351, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$351, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$351, DW_AT_decl_line(0x49)
	.dwattr $C$DW$351, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$64

	.dwattr $C$DW$T$64, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$64, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$64, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

