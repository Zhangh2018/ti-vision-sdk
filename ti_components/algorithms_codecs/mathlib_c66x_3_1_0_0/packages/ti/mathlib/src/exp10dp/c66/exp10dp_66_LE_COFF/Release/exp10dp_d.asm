;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Mon Nov 04 22:32:50 2013                                *
;******************************************************************************
	.compiler_opts --abi=coffabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=40 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=coff --silicon_version=6600 --symdebug:none 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : Disabled                                             *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : No Debug Info                                        *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss

;*****************************************************************************
;* CINIT RECORDS                                                             *
;*****************************************************************************
	.sect	".cinit"
	.align	8
	.field  	$C$IR_1,32
	.field  	_a+0,32
	.word	0715831f0h,0401d05aah		; _a[0] @ 0
	.word	0b02c8316h,040205f6ch		; _a[1] @ 64
	.word	0cf893fafh,0401f009dh		; _a[2] @ 128
	.word	0ee334ee2h,040138517h		; _a[3] @ 192
	.word	00509543dh,0c022cf5bh		; _a[4] @ 256
	.word	091cfa0bdh,0bffeeba6h		; _a[5] @ 320
	.word	093e87fb1h,03fe6ef26h		; _a[6] @ 384
	.word	0e9325e21h,0c005ff4ah		; _a[7] @ 448
	.word	051ed329eh,04011196eh		; _a[8] @ 512
	.word	03be8e45bh,0c009b609h		; _a[9] @ 576
	.word	06d762520h,0c010f76fh		; _a[10] @ 640
	.word	007a7942eh,0400b0e60h		; _a[11] @ 704
	.word	068dc626ch,04017785bh		; _a[12] @ 768
	.word	09b31494eh,0400d4c5bh		; _a[13] @ 832
	.word	036dc3520h,04021d942h		; _a[14] @ 896
	.word	034084549h,0c021777dh		; _a[15] @ 960
	.word	000523557h,0c023bcd6h		; _a[16] @ 1024
	.word	0502fc33ch,0c01421adh		; _a[17] @ 1088
	.word	0502d3efdh,0c01b259ch		; _a[18] @ 1152
	.word	0df0c6a72h,040162167h		; _a[19] @ 1216
	.word	0b7c92f89h,04020742dh		; _a[20] @ 1280
	.word	0b8ad5b17h,0400e20ddh		; _a[21] @ 1344
	.word	0e9043af8h,0bff6ccbdh		; _a[22] @ 1408
	.word	087ecc8ech,0401f0a33h		; _a[23] @ 1472
	.word	0c8dd5404h,0402150e1h		; _a[24] @ 1536
	.word	02060c898h,03fd3c963h		; _a[25] @ 1600
	.word	046de0ae3h,0c020ceb9h		; _a[26] @ 1664
	.word	0c29f4c61h,0c00c2ab6h		; _a[27] @ 1728
	.word	06f70d123h,0c00c1a23h		; _a[28] @ 1792
	.word	0d80aee71h,0c0217f69h		; _a[29] @ 1856
	.word	09766b972h,0c0101c14h		; _a[30] @ 1920
	.word	05a9a8049h,0401bbeb6h		; _a[31] @ 1984
	.word	01593e5fbh,0c018c5c3h		; _a[32] @ 2048
	.word	0c2dc8902h,03fe045a9h		; _a[33] @ 2112
	.word	04ab2abb9h,0c01f3b44h		; _a[34] @ 2176
	.word	0323bbc6fh,0c0217f56h		; _a[35] @ 2240
	.word	0d3d5d58ah,0bfdad2fdh		; _a[36] @ 2304
	.word	036460d2bh,040211ea1h		; _a[37] @ 2368
	.word	0bfa3189eh,0c0030fe1h		; _a[38] @ 2432
	.word	090c33143h,0bff319e6h		; _a[39] @ 2496
	.word	033f19f14h,04022fae4h		; _a[40] @ 2560
	.word	04fba5277h,0c01bbbe9h		; _a[41] @ 2624
	.word	02f2ec1b4h,04019ed65h		; _a[42] @ 2688
	.word	0ae7d566dh,0c01312b6h		; _a[43] @ 2752
	.word	0d70cc1afh,0c00e0cb4h		; _a[44] @ 2816
	.word	0cff1447bh,04020d0b1h		; _a[45] @ 2880
	.word	00153bd16h,04023a0f7h		; _a[46] @ 2944
	.word	03a2595bch,0400b5ccbh		; _a[47] @ 3008
	.word	04c2eacbch,04022d94bh		; _a[48] @ 3072
	.word	03d70a3d7h,04017070ah		; _a[49] @ 3136
	.word	0b61a02e1h,0c010ff77h		; _a[50] @ 3200
	.word	0782ee5c7h,040091a87h		; _a[51] @ 3264
	.word	08d4ad6beh,0c0125e75h		; _a[52] @ 3328
	.word	0bcf0b6b7h,0c01abc54h		; _a[53] @ 3392
	.word	00b559e98h,04021d091h		; _a[54] @ 3456
	.word	082b04909h,0c021f429h		; _a[55] @ 3520
	.word	090c40802h,0c0033341h		; _a[56] @ 3584
	.word	0cb394ed6h,0c00f58d1h		; _a[57] @ 3648
	.word	0ed1a4a2eh,0c0215b02h		; _a[58] @ 3712
	.word	0926196f4h,03fdb8780h		; _a[59] @ 3776
	.word	0e74caad3h,0c00fa679h		; _a[60] @ 3840
	.word	095604ef5h,0c00ffe66h		; _a[61] @ 3904
	.word	0e3d1cc10h,03ff5b6f7h		; _a[62] @ 3968
	.word	00275fc06h,03ffbe1f5h		; _a[63] @ 4032
	.word	0cecc814dh,0401f8fa2h		; _a[64] @ 4096
	.word	00521a7f0h,0c020aeaah		; _a[65] @ 4160
	.word	0cbc9978eh,0c01571f5h		; _a[66] @ 4224
	.word	055eff69eh,040007c86h		; _a[67] @ 4288
	.word	07b6bb129h,0401bb5bbh		; _a[68] @ 4352
	.word	0f5c0e1ddh,0bff04972h		; _a[69] @ 4416
	.word	084ec636bh,0400b7097h		; _a[70] @ 4480
	.word	000431bdfh,040165c70h		; _a[71] @ 4544
	.word	0728a6117h,040103469h		; _a[72] @ 4608
	.word	0d0e48982h,0c02365c7h		; _a[73] @ 4672
	.word	069a1844ah,0c007cee4h		; _a[74] @ 4736
	.word	0ff45c5ddh,0c01afb15h		; _a[75] @ 4800
	.word	06e993acfh,0401b7dc8h		; _a[76] @ 4864
	.word	0987ee767h,0c01468ceh		; _a[77] @ 4928
	.word	03d1e6e80h,03ff82234h		; _a[78] @ 4992
	.word	0d0884330h,040062cadh		; _a[79] @ 5056
	.word	00f8b8e3eh,0bfa6de58h		; _a[80] @ 5120
	.word	0e5a865e5h,0bfe86762h		; _a[81] @ 5184
	.word	07d970494h,0bfb4770dh		; _a[82] @ 5248
	.word	066f0cfe1h,04022160dh		; _a[83] @ 5312
	.word	0a1f3046fh,040133f55h		; _a[84] @ 5376
	.word	064e70a66h,04019b2f3h		; _a[85] @ 5440
	.word	05c68b6a3h,0c01ff193h		; _a[86] @ 5504
	.word	088ee50abh,0400b0254h		; _a[87] @ 5568
	.word	05dc5adf5h,0bfd4fd73h		; _a[88] @ 5632
	.word	0f6697e49h,0c00c81e5h		; _a[89] @ 5696
	.word	0cab67217h,0c015b55dh		; _a[90] @ 5760
	.word	036600e5eh,0c01604a6h		; _a[91] @ 5824
	.word	0c967bd7eh,0bfdc3088h		; _a[92] @ 5888
	.word	051cd522eh,04018cdech		; _a[93] @ 5952
	.word	04dbfa674h,03ff2c935h		; _a[94] @ 6016
	.word	0ca4609d0h,0401e1fbbh		; _a[95] @ 6080
	.word	0bb044d6dh,0c009e8abh		; _a[96] @ 6144
	.word	0c28f5c29h,04022e0f5h		; _a[97] @ 6208
	.word	0b92626dbh,04002c40dh		; _a[98] @ 6272
	.word	04608220dh,040133114h		; _a[99] @ 6336
	.word	0fb3d22a0h,03fbff680h		; _a[100] @ 6400
	.word	0a0abdc92h,0c00aa6b3h		; _a[101] @ 6464
	.word	001711948h,04015f468h		; _a[102] @ 6528
	.word	05d0eced0h,040154df5h		; _a[103] @ 6592
	.word	09fdafc3ah,0c0128530h		; _a[104] @ 6656
	.word	058cc49f0h,0c01153d9h		; _a[105] @ 6720
	.word	089da08f5h,0c014cf37h		; _a[106] @ 6784
	.word	05a3adef9h,040146430h		; _a[107] @ 6848
	.word	0e8bdc41bh,04014aae1h		; _a[108] @ 6912
	.word	022c1cbe8h,0c0229975h		; _a[109] @ 6976
	.word	00e7868c7h,0c02151c0h		; _a[110] @ 7040
	.word	061e77ba5h,0c008e2b2h		; _a[111] @ 7104
	.word	05ddc5429h,04022960ch		; _a[112] @ 7168
	.word	057eaa2a1h,04007cf3ah		; _a[113] @ 7232
	.word	03199d5ffh,0c01b75bbh		; _a[114] @ 7296
	.word	0f504fa3bh,0c02325d2h		; _a[115] @ 7360
	.word	0f534cae3h,0400e2f15h		; _a[116] @ 7424
	.word	06209e054h,0c022ae45h		; _a[117] @ 7488
	.word	04940bbb2h,0c0136581h		; _a[118] @ 7552
	.word	0b3fc1b6fh,0c01e73d5h		; _a[119] @ 7616
	.word	024180d3dh,04001aa7dh		; _a[120] @ 7680
	.word	045430030h,04021ba8bh		; _a[121] @ 7744
	.word	04dc9b76fh,040218579h		; _a[122] @ 7808
	.word	041729117h,0401858c7h		; _a[123] @ 7872
	.word	081c490beh,0c0154746h		; _a[124] @ 7936
	.word	03f309778h,04022d6dch		; _a[125] @ 8000
	.word	097e8bf72h,04007ee2dh		; _a[126] @ 8064
	.word	08f4de63dh,0c02042b7h		; _a[127] @ 8128
	.word	06ab14ec2h,040204a10h		; _a[128] @ 8192
	.word	05e61b527h,03fee6991h		; _a[129] @ 8256
	.word	00f9fb034h,040098ee0h		; _a[130] @ 8320
	.word	086013661h,0401bcfe5h		; _a[131] @ 8384
	.word	0f284ed3ah,0401af799h		; _a[132] @ 8448
	.word	01230842ch,04022b035h		; _a[133] @ 8512
	.word	0bfb663d5h,0c020f70eh		; _a[134] @ 8576
	.word	087df5cf2h,040156483h		; _a[135] @ 8640
	.word	0eaba1d9eh,0c021d04bh		; _a[136] @ 8704
	.word	02a8a1746h,0c008dcb2h		; _a[137] @ 8768
	.word	00da935efh,0401dcaf3h		; _a[138] @ 8832
	.word	088418281h,0bffbfb1ah		; _a[139] @ 8896
	.word	0bd09e12ah,0bff264feh		; _a[140] @ 8960
	.word	06d1e108ch,04009311ch		; _a[141] @ 9024
	.word	016a2d9b4h,0401bd394h		; _a[142] @ 9088
	.word	01036aee9h,0c01af2dch		; _a[143] @ 9152
	.word	07eb511c5h,040127544h		; _a[144] @ 9216
	.word	073548b73h,040113b14h		; _a[145] @ 9280
	.word	035b771f2h,040099433h		; _a[146] @ 9344
	.word	08891339ah,0c013f3dfh		; _a[147] @ 9408
	.word	000093a3bh,0bfc1f6e9h		; _a[148] @ 9472
	.word	03c68661bh,0c019a411h		; _a[149] @ 9536
	.word	064302b41h,040173b75h		; _a[150] @ 9600
	.word	0060857bdh,040158f6bh		; _a[151] @ 9664
	.word	0d14e3bcdh,0c01c9491h		; _a[152] @ 9728
	.word	02d0f2cc4h,03feb570dh		; _a[153] @ 9792
	.word	024bc77ebh,03ffb0429h		; _a[154] @ 9856
	.word	0487fcb92h,04004edbfh		; _a[155] @ 9920
	.word	0bac7e78bh,040217b13h		; _a[156] @ 9984
	.word	0d9846b34h,0c01bb95fh		; _a[157] @ 10048
	.word	0bc0427adh,0c016ce16h		; _a[158] @ 10112
	.word	0b701896dh,04000bd93h		; _a[159] @ 10176
	.word	0bdd68fc4h,0402337bah		; _a[160] @ 10240
	.word	0697437e0h,0c01805b2h		; _a[161] @ 10304
	.word	04cf14a5bh,0401123c3h		; _a[162] @ 10368
	.word	0c9bfd213h,0c0108edbh		; _a[163] @ 10432
	.word	055d7a2eah,0c016ed37h		; _a[164] @ 10496
	.word	0b9595282h,040115ebch		; _a[165] @ 10560
	.word	09399a558h,04021b3bch		; _a[166] @ 10624
	.word	04d495eefh,0c01aca16h		; _a[167] @ 10688
	.word	06ebc763dh,0bff71eb6h		; _a[168] @ 10752
	.word	0f4d2a554h,03ff8a87eh		; _a[169] @ 10816
	.word	0f31bebefh,040031b95h		; _a[170] @ 10880
	.word	08bd159fah,03fc0447fh		; _a[171] @ 10944
	.word	008f49b48h,0c012f87fh		; _a[172] @ 11008
	.word	0b61a02e1h,0bf9f5777h		; _a[173] @ 11072
	.word	0ffd10617h,0c0109c17h		; _a[174] @ 11136
	.word	013107dfdh,0bfe8be1eh		; _a[175] @ 11200
	.word	0cde19fc3h,0c018cc1ah		; _a[176] @ 11264
	.word	01c6088d7h,0c0223e5ch		; _a[177] @ 11328
	.word	0ab8122aah,0c005b7e1h		; _a[178] @ 11392
	.word	05a5abf69h,0c02343b2h		; _a[179] @ 11456
	.word	07d5df9b0h,03fe47ae1h		; _a[180] @ 11520
	.word	072268e09h,04004631ch		; _a[181] @ 11584
	.word	06191eb4fh,0c020bc70h		; _a[182] @ 11648
	.word	0f3b56ee2h,0c023efa2h		; _a[183] @ 11712
	.word	090a6abd1h,0bfecbbd0h		; _a[184] @ 11776
	.word	00187bf7dh,0bfba2101h		; _a[185] @ 11840
	.word	05a7a9fd9h,03fe11334h		; _a[186] @ 11904
	.word	003ab862bh,0c020b220h		; _a[187] @ 11968
	.word	0774aba38h,040229dd7h		; _a[188] @ 12032
	.word	0eb173aafh,040132ec0h		; _a[189] @ 12096
	.word	0bc423b0eh,04004b264h		; _a[190] @ 12160
	.word	0faa623ech,040171284h		; _a[191] @ 12224
	.word	0b57313f4h,04020d1bah		; _a[192] @ 12288
	.word	0aec65189h,0c01010a3h		; _a[193] @ 12352
	.word	006324928h,0c01aa331h		; _a[194] @ 12416
	.word	09cf7f2ebh,0bfe5ab05h		; _a[195] @ 12480
	.word	079d75c73h,0c023c465h		; _a[196] @ 12544
	.word	01e349e6dh,040224eb6h		; _a[197] @ 12608
	.word	0f955c1d3h,040143af9h		; _a[198] @ 12672
	.word	00d0d2ebdh,0c00bced5h		; _a[199] @ 12736
	.word	01acb5d61h,040159babh		; _a[200] @ 12800
$C$IR_1:	.set	1608

	.global	_a
_a:	.usect	".far",1608,8
;	C:\MATHLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\c6000_7.4.2\bin\opt6x.exe C:\\DOCUME~1\\a0868396\\LOCALS~1\\Temp\\119082 C:\\DOCUME~1\\a0868396\\LOCALS~1\\Temp\\119084 
	.sect	".text"
	.clink
	.global	_main

;******************************************************************************
;* FUNCTION NAME: main                                                        *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 8 Args + 236 Auto + 56 Save = 300 byte               *
;******************************************************************************
_main:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           STW     .D2T1   A11,*SP--(8)      ; |109| 
           STW     .D2T1   A10,*SP--(8)      ; |109| 
           STDW    .D2T2   B13:B12,*SP--     ; |109| 
           STDW    .D2T2   B11:B10,*SP--     ; |109| 
           STDW    .D2T1   A15:A14,*SP--     ; |109| 
           STDW    .D2T1   A13:A12,*SP--     ; |109| 
           STW     .D2T2   B3,*SP--(8)       ; |109| 

           MVKL    .S1     $C$SL1+0,A4
||         ADDK    .S2     -248,SP           ; |109| 

           CALLP   .S2     _driver_init,B3
||         MVKH    .S1     $C$SL1+0,A4

$C$RL0:    ; CALL OCCURS {_driver_init} {0}  ; |117| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 3
           MVKL    .S1     _a,A11
           MVKH    .S1     _a,A11

           CALL    .S2     _exp10            ; |126| 
||         MV      .L1     A11,A10
||         ZERO    .L2     B10
||         MVK     .S1     0xc9,A12

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L1:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A10++,A5:A4      ; |126| 
           ADDKPC  .S2     $C$RL1,B3,3       ; |126| 
$C$RL1:    ; CALL OCCURS {_exp10} {0}        ; |126| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 9

           MVKL    .S2     _output,B4
||         SUB     .L1     A12,1,A0          ; |125| 
||         SUB     .S1     A12,1,A12         ; |125| 

           MVKH    .S2     _output,B4
           LDW     .D2T2   *B4,B4            ; |126| 
   [ A0]   BNOP    .S1     $C$L1,3           ; |125| 

           ADD     .L2     B10,B4,B4         ; |126| 
||         ADD     .S2     8,B10,B10         ; |125| 

   [ A0]   CALL    .S1     _exp10            ; |126| 
||         STDW    .D2T1   A5:A4,*B4         ; |126| 
|| [!A0]   MVKL    .S2     _output,B4

           ; BRANCHCC OCCURS {$C$L1}         ; |125| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 3

           MVKH    .S2     _output,B4
||         ZERO    .L2     B10
||         MVK     .S1     0xc9,A10

           ADD     .L2     4,B4,B4

           STW     .D2T2   B4,*+SP(20)
||         CALL    .S1     _exp10dp          ; |129| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L2:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A11++,A5:A4      ; |129| 
           ADDKPC  .S2     $C$RL2,B3,3       ; |129| 
$C$RL2:    ; CALL OCCURS {_exp10dp} {0}      ; |129| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T2   *+SP(20),B4       ; |129| 
           SUB     .L1     A10,1,A0          ; |128| 
           SUB     .L1     A10,1,A10         ; |128| 
           NOP             2
           LDW     .D2T2   *B4,B4            ; |129| 
   [ A0]   BNOP    .S1     $C$L2,3           ; |128| 

           ADD     .L2     B10,B4,B4         ; |129| 
||         ADD     .S2     8,B10,B10         ; |128| 

   [ A0]   CALL    .S1     _exp10dp          ; |129| 
||         STDW    .D2T1   A5:A4,*B4         ; |129| 

           ; BRANCHCC OCCURS {$C$L2}         ; |128| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7
           LDW     .D2T2   *+SP(20),B4
           ZERO    .L2     B10
           MVKL    .S1     _a,A11
           MVKH    .S1     _a,A11
           MVK     .S1     0xc9,A10
           ADD     .L2     4,B4,B4

           STW     .D2T2   B4,*+SP(24)
||         CALL    .S1     _exp10dp_c        ; |132| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L3:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A11++,A5:A4      ; |132| 
           ADDKPC  .S2     $C$RL3,B3,3       ; |132| 
$C$RL3:    ; CALL OCCURS {_exp10dp_c} {0}    ; |132| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T2   *+SP(24),B4       ; |132| 
           SUB     .L1     A10,1,A0          ; |131| 
           SUB     .L1     A10,1,A10         ; |131| 
           NOP             2
           LDW     .D2T2   *B4,B4            ; |132| 
   [ A0]   BNOP    .S1     $C$L3,3           ; |131| 

           ADD     .L2     B10,B4,B4         ; |132| 
||         ADD     .S2     8,B10,B10         ; |131| 

   [ A0]   CALL    .S1     _exp10dp_c        ; |132| 
||         STDW    .D2T1   A5:A4,*B4         ; |132| 

           ; BRANCHCC OCCURS {$C$L3}         ; |131| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 28

           ZERO    .L2     B4
||         LDW     .D2T2   *+SP(24),B5       ; |55| 
||         MVKL    .S1     0x3fac718e,A12
||         MVKL    .S2     0x6fde3809,B29
||         ZERO    .L1     A3
||         ZERO    .D1     A1                ; |55| 

           SET     .S2     B4,0x15,0x1d,B6
||         ZERO    .L2     B4
||         MVKH    .S1     0x3fac718e,A12
||         ZERO    .D2     B20               ; |55| 
||         ZERO    .L1     A18               ; |55| 

           SET     .S2     B4,0x1e,0x1e,B7
||         MVKL    .S1     0x46f72a46,A13
||         STW     .D2T2   B6,*+SP(88)       ; |55| 
||         ZERO    .L2     B22               ; |55| 

           MVKL    .S2     0x510ea7e7,B4
||         MVKL    .S1     0xc0733a71,A15
||         STW     .D2T2   B7,*+SP(92)       ; |55| 
||         MV      .L2     B7,B21

           MVKH    .S2     0x510ea7e7,B4
||         MVKL    .S1     0x3fe63000,A26
||         MV      .L2     B7,B17
||         MV      .D2     B7,B23

           STW     .D2T2   B4,*+SP(84)       ; |55| 
||         MV      .L2     B4,B18
||         MVKL    .S2     0x40026bb1,B4
||         MVKL    .S1     0x6fb3f6e0,A30

           MVKH    .S2     0x40026bb1,B4
||         MVKL    .S1     0x6f58dc1c,A28
||         ADD     .L2     4,B5,B12
||         ZERO    .D2     B16               ; |55| 

           MVKL    .S2     0x40734413,B13
||         MVKL    .S1     0x652b82fe,A19
||         STW     .D2T2   B4,*+SP(28)       ; |55| 

           MVK     .S2     0x400,B8
||         MVKL    .S1     0x3f7c70e4,A31
||         LDW     .D2T1   *B12,A11

           MVKL    .S2     0x5c610ca8,B27
||         MVKL    .S1     0xbbb55516,A9
||         STW     .D2T2   B8,*+SP(12)

           MVKL    .S2     0x3f403f99,B30
||         MVKL    .S1     0x3ff71547,A24
||         MV      .L1X    B8,A14            ; |55| 

           MVKL    .S2     0x714251b3,B31
||         MVKL    .S1     0x3ef152a4,A29

           MVKL    .S2     0xbf2bd010,B28
||         MVKH    .S1     0x46f72a46,A13

           MVKH    .S2     0x6fde3809,B29
||         MVKH    .S1     0xc0733a71,A15
||         MV      .L1     A13,A16

           MVKH    .S2     0x40734413,B13
||         MVKH    .S1     0x3fe63000,A26
||         STW     .D2T2   B29,*+SP(76)      ; |55| 
||         MV      .L1     A15,A17
||         MV      .L2     B29,B24

           MVKH    .S2     0x5c610ca8,B27
||         MVKH    .S1     0x6fb3f6e0,A30
||         MV      .L1     A26,A27
||         STW     .D2T1   A26,*+SP(40)      ; |55| 
||         ZERO    .D1     A26               ; |55| 
||         MV      .L2     B6,B29

           MVKH    .S2     0x3f403f99,B30
||         MVKH    .S1     0x6f58dc1c,A28
||         STW     .D2T2   B27,*+SP(44)      ; |55| 
||         MV      .L1     A30,A22
||         MV      .L2     B13,B19

           MVKH    .S2     0x714251b3,B31
||         MVKH    .S1     0x652b82fe,A19
||         STW     .D2T1   A28,*+SP(64)      ; |55| 
||         MV      .L1     A28,A20
||         MV      .L2     B30,B25

           MVKH    .S1     0x3f7c70e4,A31
||         MVKH    .S2     0xbf2bd010,B28
||         MV      .L1     A19,A28
||         STW     .D2T1   A19,*+SP(32)      ; |55| 
||         MV      .D1X    B6,A19
||         MV      .L2     B31,B26

           MVKH    .S1     0xbbb55516,A9
||         MVK     .S2     0xc9,B9
||         STW     .D2T1   A31,*+SP(60)      ; |55| 
||         MV      .L1     A31,A23
||         MV      .D1X    B4,A31

           MVKH    .S1     0x3ff71547,A24
||         STW     .D2T2   B30,*+SP(80)      ; |55| 
||         DINT                              ; interrupts off
||         MV      .L2     B27,B30

           MVKH    .S1     0x3ef152a4,A29
||         STW     .D2T1   A30,*+SP(56)      ; |55| 
||         MV      .L1     A9,A30            ; |55| 
||         SUB     .L2     B9,1,B1
||         MV      .S2X    A12,B27

           MVKH    .S1     0x3fd00000,A3
||         STW     .D2T2   B31,*+SP(72)      ; |55| 
||         MV      .L1     A29,A21
||         MV      .L2     B28,B31

           MVKL    .S1     _a,A10
||         STW     .D2T1   A9,*+SP(16)       ; |55| 
||         MV      .L1     A3,A25

           STW     .D2T1   A24,*+SP(36)      ; |55| 
||         MVKH    .S1     _a,A10

           STW     .D2T1   A29,*+SP(68)      ; |55| 
||         MV      .L1     A24,A29
||         ZERO    .S1     A24               ; |55| 

           STW     .D2T1   A3,*+SP(52)       ; |55| 

           STW     .D2T2   B28,*+SP(48)      ; |55| 
||         ZERO    .L2     B28               ; |55| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : C:/builds/DEV_TI_MATHLIB_3_1_0_0/mathlib/ti/mathlib/src/exp10dp/exp10dp_d.c
;*      Loop source line                 : 134
;*      Loop opening brace source line   : 134
;*      Loop closing brace source line   : 136
;*      Known Minimum Trip Count         : 201                    
;*      Known Maximum Trip Count         : 201                    
;*      Known Max Trip Count Factor      : 201
;*      Loop Carried Dependency Bound(^) : 107
;*      Unpartitioned Resource Bound     : 9
;*      Partitioned Resource Bound(*)    : 9
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        3     
;*      .S units                     5        5     
;*      .D units                     1        1     
;*      .M units                     9*       9*    
;*      .X cross paths               5        1     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           8        4     (.L or .S unit)
;*      Addition ops (.LSD)          3        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             7        6     
;*      Bound(.L .S .D .LS .LSD)     6        5     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 107 Schedule found with 1 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: | *        **  * ****************| *              ****************|
;*       1: | *        **  * ****************| *              ****************|
;*       2: | *        **  * ****************| *              ****************|
;*       3: | *        **  * ****************| *              ****************|
;*       4: | *        **  * ****************| *              ****************|
;*       5: | *      ****  * ****************| *              ****************|
;*       6: | *      ****  * ****************| *              ****************|
;*       7: |**      ****  * ****************| *              ****************|
;*       8: |**      ****  * ****************| *              ****************|
;*       9: |****    ****  * ****************| *              ****************|
;*      10: |****    ****  * ****************| *              ****************|
;*      11: |****    ****  * ****************| *              ****************|
;*      12: |****    ****  * ****************| *              ****************|
;*      13: |******  ****  * ****************| *              ****************|
;*      14: |****    ****  * ****************| *              ****************|
;*      15: |****    ****  * ****************| *              ****************|
;*      16: |****    ****  * ****************| *              ****************|
;*      17: |*****   ****  * ****************| *              ****************|
;*      18: |*****   ****  * ****************| *              ****************|
;*      19: |**** *  ****  * ****************| *              ****************|
;*      20: |**** *  ****  * ****************| *              ****************|
;*      21: |**** *  ****  * ****************| *              ****************|
;*      22: |**** *******  * ****************| *              ****************|
;*      23: |**** *******  * ****************| *              ****************|
;*      24: |**** *  ****  * ****************| *              ****************|
;*      25: |**** *  ****  * ****************| *              ****************|
;*      26: |**** *******  * ****************| *              ****************|
;*      27: |**   *  ****  * ****************| *  **          ****************|
;*      28: |**   *  ****  * ****************| *  **          ****************|
;*      29: |**   *******  * ****************| *  **          ****************|
;*      30: |**   *  ****  * ****************| *              ****************|
;*      31: |**   *  ****  * ****************| *              ****************|
;*      32: |**   *******  * ****************| *              ****************|
;*      33: |**   *******  * ****************| *              ****************|
;*      34: |**   *******  * ****************| *              ****************|
;*      35: |**   *******  * ****************| *              ****************|
;*      36: |**** *******  * ****************| *              ****************|
;*      37: |**** *******  * ****************| *              ****************|
;*      38: |**** *******  * ****************| *              ****************|
;*      39: |**** *******  * ****************| *              ****************|
;*      40: |**** ********** ****************| *              ****************|
;*      41: |**** *******  * ****************| *              ****************|
;*      42: |**** *******  * ****************| *              ****************|
;*      43: |**** ********** ****************| *              ****************|
;*      44: |**** *******  * ****************| *              ****************|
;*      45: |**** *******  * ****************| *  **          ****************|
;*      46: |**** *******  * ****************| *              ****************|
;*      47: |**** ********** ****************| *              ****************|
;*      48: |**** *******  * ****************| *  **          ****************|
;*      49: |**   *******  * ****************| *              ****************|
;*      50: |**** *******  * ****************| *              ****************|
;*      51: |**   *  ****  * ****************| *              ****************|
;*      52: |**   *  ****  * ****************| *  **          ****************|
;*      53: |**   *  ****  * ****************| *              ****************|
;*      54: |**   *******  * ****************| *              ****************|
;*      55: |**   *******  * ****************| *  **          ****************|
;*      56: |**   *******  * ****************| *              ****************|
;*      57: |**   *******  * ****************| *              ****************|
;*      58: |**   *******  * ****************| *      **      ****************|
;*      59: |**   *******  * ****************| *      **      ****************|
;*      60: |**   *******  * ****************| *    ****      ****************|
;*      61: |**   *******  * ****************| *    ****      ****************|
;*      62: |**   *******  * ****************| *    ****      ****************|
;*      63: |**   *******  * ****************| *    ****      ****************|
;*      64: |**   *******  * ****************| *  ******      ****************|
;*      65: |**   *******  * ****************| *    ****      ****************|
;*      66: |**   *******  * ****************| *    ****      ****************|
;*      67: |**   *******  * ****************| *  ******      ****************|
;*      68: |**   *******  * ****************| *      **      ****************|
;*      69: |**   *******  * ****************| *      **      ****************|
;*      70: |**   *******  * ****************| *      **      ****************|
;*      71: |**   *******  * ****************| *    ****      ****************|
;*      72: |**   *******  * ****************| *    ****      ****************|
;*      73: |**   *******  * ****************| *    ****      ****************|
;*      74: |**   *******  * ****************| *    ****      ****************|
;*      75: |**   *******  * ****************| *  ******      ****************|
;*      76: |**   *******  * ****************| *    ****      ****************|
;*      77: |**   *******  * ****************| *    ****      ****************|
;*      78: |**   *******  * ****************| *  ******      ****************|
;*      79: |**   *******  * ****************| *      **      ****************|
;*      80: |**   *******  * ****************| *      **      ****************|
;*      81: |**   *******  * ****************| *      **      ****************|
;*      82: |**   *******  * ****************| *  **  **      ****************|
;*      83: |**   *******  * ****************| *  **          ****************|
;*      84: |**   *******  * ****************| *  **          ****************|
;*      85: |**   *******  * ****************| *  **          ****************|
;*      86: |**   *******  * ****************| *  ****        ****************|
;*      87: |**   *******  * ****************| *  **          ****************|
;*      88: |**   *******  * ****************| *  **          ****************|
;*      89: |**   *******  * ****************| *  ****        ****************|
;*      90: |**   *******  * ****************| *              ****************|
;*      91: |**   *******  * ****************| *              ****************|
;*      92: |**   *******  * ****************| *              ****************|
;*      93: |**   *******  * ****************| *  **          ****************|
;*      94: |**   *******  * ****************| *  **          ****************|
;*      95: |**   *  ****  * ****************| *              ****************|
;*      96: |**   *  ****  * ****************| *              ****************|
;*      97: |**   *  ****  * ****************| *              ****************|
;*      98: |**   *******  * ****************| *              ****************|
;*      99: |**   *  ****  * ****************| *              ****************|
;*      100: |**   *  ****  * ****************| *              ****************|
;*      101: |**  ****  **  * ****************|**              ****************|
;*      102: |**  **    **  * ****************|**              ****************|
;*      103: |**  **    **  * ****************| *              ****************|
;*      104: |**  **    **  * ****************| *              ****************|
;*      105: |**  **    **  * ****************| *              ****************|
;*      106: | *  **    **  * ****************| *              ****************|
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*
;*      Minimum safe trip count       : 1
;*
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 0 + min_trip_cnt * 107 = 21507        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  SUB             B1,1,B1
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C79:
;*   0              LDDW    .D1T1   *A10++,A9:A8      ; |55|  ^ 
;*   1              NOP             4
;*   5              FMPYDP  .M1     A31:A30,A9:A8,A3:A2 ; |55|  ^ 
;*     ||           CMPLTDP .S1     A9:A8,A17:A16,A0  ; |55| 
;*   6              NOP             3
;*   9              FMPYDP  .M1     A29:A28,A3:A2,A5:A4 ; |55|  ^ 
;*  10              NOP             3
;*  13              DPINT   .L1     A5:A4,A4          ; |55|  ^ 
;*  14              NOP             3
;*  17              INTDP   .L1     A4,A7:A6          ; |55|  ^ 
;*     ||           ADD     .S1     A14,A4,A4         ; |55| 
;*  18              SHL     .S1     A4,20,A5          ; |55| 
;*  19              NOP             3
;*  22              FMPYDP  .M1     A27:A26,A7:A6,A7:A6 ; |55|  ^ 
;*  23              FMPYDP  .M2X    B31:B30,A7:A6,B5:B4 ; |55| 
;*  24              NOP             2
;*  26              FSUBDP  .L1     A3:A2,A7:A6,A7:A6 ; |55|  ^ 
;*  27              NOP             2
;*  29              FSUBDP  .L1X    A7:A6,B5:B4,A7:A6 ; |55|  ^ 
;*  30              NOP             2
;*  32              FMPYDP  .M1     A7:A6,A7:A6,A3:A2 ; |55|  ^ 
;*  33              NOP             3
;*  36              FMPYDP  .M1     A21:A20,A3:A2,A13:A12 ; |55|  ^ 
;*  37              NOP             3
;*  40              FADDDP  .L1     A23:A22,A13:A12,A13:A12 ; |55|  ^ 
;*  41              FMPYDP  .M2X    B25:B24,A3:A2,B5:B4 ; |55| 
;*  42              NOP             1
;*  43              FMPYDP  .M1     A3:A2,A13:A12,A13:A12 ; |55|  ^ 
;*  44              NOP             1
;*  45              FADDDP  .L2     B27:B26,B5:B4,B5:B4 ; |55| 
;*  46              NOP             1
;*  47              FADDDP  .L1     A25:A24,A13:A12,A3:A2 ; |55|  ^ 
;*  48              FMPYDP  .M2X    A3:A2,B5:B4,B5:B4 ; |55| 
;*  49              NOP             1
;*  50              FMPYDP  .M1     A7:A6,A3:A2,A7:A6 ; |55|  ^ 
;*  51              NOP             1
;*  52              FADDDP  .L2     B29:B28,B5:B4,B5:B4 ; |55| 
;*  53              NOP             2
;*  55              FSUBDP  .L2X    B5:B4,A7:A6,B9:B8 ; |55|  ^ 
;*  56              NOP             2
;*  58              RCPDP   .S2     B9:B8,B7:B6       ; |55|  ^ 
;*  59              NOP             1
;*  60              FMPYDP  .M2     B7:B6,B9:B8,B5:B4 ; |55|  ^ 
;*  61              NOP             3
;*  64              FSUBDP  .L2     B23:B22,B5:B4,B5:B4 ; |55|  ^ 
;*  65              NOP             2
;*  67              FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |55|  ^ 
;*  68              NOP             3
;*  71              FMPYDP  .M2     B7:B6,B9:B8,B5:B4 ; |55|  ^ 
;*  72              NOP             3
;*  75              FSUBDP  .L2     B21:B20,B5:B4,B5:B4 ; |55|  ^ 
;*  76              NOP             2
;*  78              FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |55|  ^ 
;*  79              NOP             3
;*  82              FMPYDP  .M2     B5:B4,B9:B8,B7:B6 ; |55|  ^ 
;*  83              NOP             3
;*  86              FSUBDP  .L2     B17:B16,B7:B6,B7:B6 ; |55|  ^ 
;*  87              NOP             2
;*  89              FMPYDP  .M2     B5:B4,B7:B6,B5:B4 ; |55|  ^ 
;*  90              NOP             4
;*  94              FMPYDP  .M1X    A7:A6,B5:B4,A7:A6 ; |55|  ^ 
;*  95              NOP             3
;*  98              FADDDP  .L1     A19:A18,A7:A6,A7:A6 ; |55|  ^ 
;*  99              CMPGTDP .S2X    A9:A8,B19:B18,B0  ; |55| 
;*  100              MV      .S1     A1,A4             ; |55| 
;*  101      [ B0]   MVK     .L1     0xffffffff,A4     ; |55| 
;*     ||   [ B0]   MVKL    .S1     0x7fefffff,A5
;*     ||   [!B0]   FMPYDP  .M1     A5:A4,A7:A6,A5:A4 ; |55|  ^ 
;*     ||   [ B1]   BDEC    .S2     $C$C79,B1         ; |134| 
;*  102      [ B0]   MVKH    .S1     0x7fefffff,A5
;*  103              NOP             2
;*  105      [ A0]   ZERO    .L1     A5:A4             ; |55|  ^ 
;*  106              STDW    .D1T1   A5:A4,*A11++      ; |55|  ^ 
;*  107              ; BRANCHCC OCCURS {$C$C79}        ; |134| 
;*----------------------------------------------------------------------------*
$C$L4:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L5:    ; PIPED LOOP KERNEL
;          EXCLUSIVE CPU CYCLES: 107
           LDDW    .D1T1   *A10++,A9:A8      ; |55| <0,0>  ^ 
           NOP             4

           CMPLTDP .S1     A9:A8,A17:A16,A0  ; |55| <0,5> 
||         FMPYDP  .M1     A31:A30,A9:A8,A3:A2 ; |55| <0,5>  ^ 

           NOP             3
           FMPYDP  .M1     A29:A28,A3:A2,A5:A4 ; |55| <0,9>  ^ 
           NOP             3
           DPINT   .L1     A5:A4,A4          ; |55| <0,13>  ^ 
           NOP             3

           ADD     .S1     A14,A4,A4         ; |55| <0,17> 
||         INTDP   .L1     A4,A7:A6          ; |55| <0,17>  ^ 

           SHL     .S1     A4,20,A5          ; |55| <0,18> 
           NOP             3
           FMPYDP  .M1     A27:A26,A7:A6,A7:A6 ; |55| <0,22>  ^ 
           FMPYDP  .M2X    B31:B30,A7:A6,B5:B4 ; |55| <0,23> 
           NOP             2
           FSUBDP  .L1     A3:A2,A7:A6,A7:A6 ; |55| <0,26>  ^ 
           NOP             2
           FSUBDP  .L1X    A7:A6,B5:B4,A7:A6 ; |55| <0,29>  ^ 
           NOP             2
           FMPYDP  .M1     A7:A6,A7:A6,A3:A2 ; |55| <0,32>  ^ 
           NOP             3
           FMPYDP  .M1     A21:A20,A3:A2,A13:A12 ; |55| <0,36>  ^ 
           NOP             3
           FADDDP  .L1     A23:A22,A13:A12,A13:A12 ; |55| <0,40>  ^ 
           FMPYDP  .M2X    B25:B24,A3:A2,B5:B4 ; |55| <0,41> 
           NOP             1
           FMPYDP  .M1     A3:A2,A13:A12,A13:A12 ; |55| <0,43>  ^ 
           NOP             1
           FADDDP  .L2     B27:B26,B5:B4,B5:B4 ; |55| <0,45> 
           NOP             1
           FADDDP  .L1     A25:A24,A13:A12,A3:A2 ; |55| <0,47>  ^ 
           FMPYDP  .M2X    A3:A2,B5:B4,B5:B4 ; |55| <0,48> 
           NOP             1
           FMPYDP  .M1     A7:A6,A3:A2,A7:A6 ; |55| <0,50>  ^ 
           NOP             1
           FADDDP  .L2     B29:B28,B5:B4,B5:B4 ; |55| <0,52> 
           NOP             2
           FSUBDP  .L2X    B5:B4,A7:A6,B9:B8 ; |55| <0,55>  ^ 
           NOP             2
           RCPDP   .S2     B9:B8,B7:B6       ; |55| <0,58>  ^ 
           NOP             1
           FMPYDP  .M2     B7:B6,B9:B8,B5:B4 ; |55| <0,60>  ^ 
           NOP             3
           FSUBDP  .L2     B23:B22,B5:B4,B5:B4 ; |55| <0,64>  ^ 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |55| <0,67>  ^ 
           NOP             3
           FMPYDP  .M2     B7:B6,B9:B8,B5:B4 ; |55| <0,71>  ^ 
           NOP             3
           FSUBDP  .L2     B21:B20,B5:B4,B5:B4 ; |55| <0,75>  ^ 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |55| <0,78>  ^ 
           NOP             3
           FMPYDP  .M2     B5:B4,B9:B8,B7:B6 ; |55| <0,82>  ^ 
           NOP             3
           FSUBDP  .L2     B17:B16,B7:B6,B7:B6 ; |55| <0,86>  ^ 
           NOP             2
           FMPYDP  .M2     B5:B4,B7:B6,B5:B4 ; |55| <0,89>  ^ 
           NOP             4
           FMPYDP  .M1X    A7:A6,B5:B4,A7:A6 ; |55| <0,94>  ^ 
           NOP             3
           FADDDP  .L1     A19:A18,A7:A6,A7:A6 ; |55| <0,98>  ^ 
           CMPGTDP .S2X    A9:A8,B19:B18,B0  ; |55| <0,99> 
           MV      .S1     A1,A4             ; |55| <0,100> 

   [ B0]   MVK     .L1     0xffffffff,A4     ; |55| <0,101> 
|| [ B0]   MVKL    .S1     0x7fefffff,A5     ; <0,101> 
|| [ B1]   BDEC    .S2     $C$L5,B1          ; |134| <0,101> 
|| [!B0]   FMPYDP  .M1     A5:A4,A7:A6,A5:A4 ; |55| <0,101>  ^ 

   [ B0]   MVKH    .S1     0x7fefffff,A5     ; <0,102> 
           NOP             2
   [ A0]   ZERO    .L1     A5:A4             ; |55| <0,105>  ^ 
           STDW    .D1T1   A5:A4,*A11++      ; |55| <0,106>  ^ 
;** --------------------------------------------------------------------------*
$C$L6:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 25
           STW     .D2T2   B30,*+SP(44)
           STW     .D2T2   B26,*+SP(72)
           STW     .D2T2   B25,*+SP(80)
           STW     .D2T2   B24,*+SP(76)
           STW     .D2T2   B18,*+SP(84)
           STW     .D2T2   B17,*+SP(92)
           STW     .D2T1   A31,*+SP(28)
           STW     .D2T1   A30,*+SP(16)
           STW     .D2T1   A29,*+SP(36)
           STW     .D2T1   A28,*+SP(32)
           STW     .D2T1   A27,*+SP(40)
           STW     .D2T1   A25,*+SP(52)
           STW     .D2T1   A23,*+SP(60)
           STW     .D2T1   A22,*+SP(56)
           STW     .D2T1   A21,*+SP(68)
           STW     .D2T1   A20,*+SP(64)

           MVKL    .S2     _output,B4
||         STW     .D2T1   A19,*+SP(88)

           MVKL    .S1     _a,A4
||         RINT                              ; interrupts on
||         MV      .L2     B19,B13
||         STW     .D2T1   A14,*+SP(12)

           MVKH    .S2     _output,B4
||         MV      .L1     A16,A13
||         MV      .L2     B23,B10
||         STW     .D2T2   B31,*+SP(48)
||         MVK     .S1     0xc9,A6           ; |137| 

           CALLP   .S2     _exp10dp_v,B3
||         LDW     .D2T2   *+B4(16),B4       ; |137| 
||         MVKH    .S1     _a,A4
||         MV      .L1     A17,A15
||         MV      .D1X    B27,A12
||         MV      .L2     B29,B11

$C$RL4:    ; CALL OCCURS {_exp10dp_v} {0}    ; |137| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 54
           MVKL    .S2     _output,B4
           MVKL    .S2     _output,B5
           MVKL    .S2     0xd9d7bdbb,B6
           MVKL    .S2     0x3ddb7cdf,B7
           MVKH    .S2     _output,B4
           MVKH    .S2     _output,B5
           MVKH    .S2     0xd9d7bdbb,B6

           LDW     .D2T2   *+B4(4),B4        ; |66| 
||         MVKH    .S2     0x3ddb7cdf,B7

           CALLP   .S2     _isequal,B3
||         LDW     .D2T1   *B5,A4            ; |66| 
||         MVK     .S1     0xc9,A6           ; |66| 
||         MVK     .L1     0x1,A8            ; |66| 

$C$RL5:    ; CALL OCCURS {_isequal} {0}      ; |66| 
           MVKL    .S2     _output,B4
           MVKL    .S2     _fcn_pass,B6
           MVKH    .S2     _output,B4

           LDW     .D2T2   *B4,B5            ; |67| 
||         MVKL    .S2     0x3ddb7cdf,B7

           MVKH    .S2     _fcn_pass,B6
           MVKH    .S2     0x3ddb7cdf,B7

           STW     .D2T1   A4,*+B6(4)        ; |66| 
||         MVKL    .S2     0xd9d7bdbb,B6

           MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T2   *+B4(8),B4        ; |67| 
||         MV      .L1X    B5,A4             ; |67| 
||         MVK     .S1     0xc9,A6           ; |67| 
||         MVK     .D1     0x1,A8            ; |67| 

$C$RL6:    ; CALL OCCURS {_isequal} {0}      ; |67| 
           MVKL    .S2     _fcn_pass,B6

           MVKL    .S1     _output,A3
||         MVKL    .S2     0x3ddb7cdf,B7

           MVKH    .S1     _output,A3
||         MVKH    .S2     _fcn_pass,B6

           MVKH    .S2     0x3ddb7cdf,B7

           MV      .L2X    A3,B4
||         STW     .D2T1   A4,*+B6(8)        ; |67| 
||         MVKL    .S2     0xd9d7bdbb,B6

           MV      .L2X    A3,B5
||         LDW     .D2T2   *+B4(12),B4       ; |68| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T1   *B5,A4            ; |68| 
||         MVK     .S1     0xc9,A6           ; |68| 
||         MVK     .L1     0x1,A8            ; |68| 

$C$RL7:    ; CALL OCCURS {_isequal} {0}      ; |68| 
           MVKL    .S2     _fcn_pass,B4
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     _fcn_pass,B4
           MVKL    .S2     _output,B31
           MVKH    .S2     0x3ddb7cdf,B7

           ADD     .L1X    4,B12,A3
||         STW     .D2T1   A4,*+B4(12)       ; |68| 
||         MVKH    .S2     0xd9d7bdbb,B6

           MVKH    .S2     _output,B31
||         STW     .D2T1   A3,*+SP(96)

           CALLP   .S2     _isequal,B3
||         LDW     .D1T2   *A3,B4            ; |69| 
||         LDW     .D2T1   *B31,A4           ; |69| 
||         MVK     .S1     0xc9,A6           ; |69| 
||         MVK     .L1     0x1,A8            ; |69| 

$C$RL8:    ; CALL OCCURS {_isequal} {0}      ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     _fcn_pass,A3
||         MVKL    .S2     _fcn_pass,B5

           MVKH    .S1     _fcn_pass,A3
||         MVKH    .S2     _fcn_pass,B5

           ADD     .L1     4,A3,A3
           LDW     .D1T1   *A3,A0            ; |72| 
           ADD     .L2     8,B5,B4
           STW     .D2T1   A4,*+B5(16)       ; |69| 
           STW     .D2T2   B4,*+SP(104)      ; |69| 
           STW     .D2T1   A3,*+SP(100)

   [!A0]   B       .S1     $C$L7             ; |72| 
|| [ A0]   LDW     .D2T2   *B4,B0            ; |72| 

   [!A0]   CALL    .S1     _print_test_results ; |141| 
   [ A0]   ADD     .L2     4,B4,B4
   [!A0]   MVKL    .S1     _all_pass,A3
   [!A0]   ZERO    .L2     B4                ; |72| 
   [!A0]   MVKH    .S1     _all_pass,A3
           ; BRANCHCC OCCURS {$C$L7}         ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 10
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
   [!B0]   ZERO    .L1     A0                ; |72| 
           NOP             1
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1

   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
||         MVK     .L2     0x1,B4            ; |72| 

   [!A0]   ZERO    .L2     B4                ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     _print_test_results ; |141| 
           MVKL    .S1     _all_pass,A3
           MVKH    .S1     _all_pass,A3
           NOP             2
;** --------------------------------------------------------------------------*
$C$L7:    
;          EXCLUSIVE CPU CYCLES: 1

           MVK     .L1     0x1,A4            ; |141| 
||         STW     .D1T2   B4,*A3            ; |72| 
||         ADDKPC  .S2     $C$RL9,B3,0       ; |141| 

$C$RL9:    ; CALL OCCURS {_print_test_results} {0}  ; |141| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 55
           LDW     .D2T1   *+SP(16),A2
           LDW     .D2T1   *+SP(28),A18
           LDW     .D2T1   *+SP(32),A19
           LDW     .D2T1   *+SP(36),A20
           LDW     .D2T1   *+SP(44),A21
           LDW     .D2T1   *+SP(48),A22      ; |55| 
           LDW     .D2T1   *+SP(40),A23      ; |55| 
           LDW     .D2T1   *+SP(64),A24      ; |55| 
           LDW     .D2T1   *+SP(68),A25      ; |55| 
           LDW     .D2T1   *+SP(56),A26      ; |55| 
           LDW     .D2T1   *+SP(60),A27      ; |55| 
           LDW     .D2T1   *+SP(52),A28      ; |55| 
           LDW     .D2T1   *+SP(76),A29      ; |55| 
           LDW     .D2T1   *+SP(80),A30      ; |55| 
           LDW     .D2T1   *+SP(72),A31      ; |55| 
           LDW     .D2T1   *+SP(84),A3       ; |96| 
           STW     .D2T2   B11,*+SP(228)     ; |55| 
           STW     .D2T2   B11,*+SP(180)     ; |55| 
           STW     .D2T2   B10,*+SP(220)     ; |55| 
           STW     .D2T2   B10,*+SP(212)     ; |55| 
           STW     .D2T2   B10,*+SP(204)     ; |55| 
           STW     .D2T1   A15,*+SP(244)     ; |96| 
           STW     .D2T1   A13,*+SP(240)     ; |96| 

           STW     .D2T2   B13,*+SP(236)     ; |96| 
||         MVKL    .S2     _a_sc,B4
||         MVK     .L2     0xffffffff,B7     ; |154| 

           STW     .D2T1   A12,*+SP(188)     ; |55| 
||         MV      .L2     B7,B6             ; |154| 
||         MVKH    .S2     _a_sc,B4

           STDW    .D2T2   B7:B6,*+B4(48)    ; |154| 
||         ZERO    .L1     A1                ; |153| 

           STW     .D2T1   A1,*+SP(136)      ; |150| 

           STW     .D2T1   A1,*+SP(152)      ; |149| 
||         ZERO    .L2     B31               ; |153| 

           STW     .D2T2   B31,*+SP(200)     ; |150| 

           STW     .D2T2   B31,*+SP(216)     ; |149| 
||         ZERO    .L1     A4                ; |153| 

           STW     .D2T1   A4,*+SP(224)      ; |149| 
||         ZERO    .L1     A17:A16           ; |148| 

           STDW    .D2T1   A17:A16,*B4       ; |148| 
           STW     .D2T1   A2,*+SP(120)
           STW     .D2T1   A18,*+SP(124)
           STW     .D2T1   A19,*+SP(128)
           STW     .D2T1   A20,*+SP(132)
           STW     .D2T1   A21,*+SP(144)
           STW     .D2T1   A22,*+SP(148)
           STW     .D2T1   A23,*+SP(140)     ; |55| 
           STW     .D2T1   A24,*+SP(168)     ; |55| 
           STW     .D2T1   A25,*+SP(172)     ; |55| 
           STW     .D2T1   A26,*+SP(160)     ; |55| 
           STW     .D2T1   A27,*+SP(164)     ; |55| 
           STW     .D2T1   A28,*+SP(156)     ; |55| 
           STW     .D2T1   A29,*+SP(192)     ; |55| 
           STW     .D2T1   A30,*+SP(196)     ; |55| 

           STW     .D2T1   A31,*+SP(184)     ; |55| 
||         ZERO    .L2     B9

           STW     .D2T1   A3,*+SP(232)      ; |96| 
||         SET     .S2     B9,0x14,0x1d,B9
||         ZERO    .L1     A7
||         ZERO    .L2     B8                ; |153| 

           MV      .L2     B4,B6             ; |148| 
||         STDW    .D2T2   B9:B8,*+B4(32)    ; |152| 
||         MVKH    .S1     0xfff00000,A7
||         ZERO    .L1     A5
||         ZERO    .D1     A6                ; |153| 

           MVK     .L2     0x7,B6
||         STDW    .D2T1   A7:A6,*+B6(24)    ; |151| 
||         MV      .L1X    B4,A10            ; |148| 
||         MVKH    .S1     0xbff00000,A5

           MV      .L2     B8,B4             ; |152| 
||         STDW    .D2T1   A5:A4,*+B4(40)    ; |153| 
||         ZERO    .S2     B5

           MV      .L2X    A10,B6            ; |151| 
||         STW     .D2T2   B4,*+SP(176)      ; |150| 
||         MV      .L1X    B6,A14            ; |151| 
||         SET     .S2     B5,0x14,0x1e,B5
||         ZERO    .S1     A9

           MV      .L2     B6,B4             ; |150| 
||         STDW    .D2T2   B5:B4,*+B6(16)    ; |150| 
||         MVKH    .S1     0x80000000,A9
||         ZERO    .L1     A8                ; |153| 

           MV      .L2     B31,B4            ; |149| 
||         STDW    .D2T1   A9:A8,*+B4(8)     ; |149| 
||         MVKL    .S2     _output,B11

           CALL    .S1     _exp10            ; |156| 
||         STW     .D2T2   B4,*+SP(208)      ; |149| 
||         MVKH    .S2     _output,B11
||         ZERO    .L2     B10               ; |153| 
||         ZERO    .L1     A11               ; |153| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L8:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A10,A5:A4        ; |156| 
           ADDKPC  .S2     $C$RL10,B3,3      ; |156| 
$C$RL10:   ; CALL OCCURS {_exp10} {0}        ; |156| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 26
           LDW     .D2T2   *B11,B4           ; |156| 
           NOP             4
           ADD     .L2     B10,B4,B4         ; |156| 
           STDW    .D2T1   A5:A4,*B4         ; |156| 

           CALLP   .S2     _exp10dp,B3
||         LDDW    .D1T1   *A10,A5:A4        ; |157| 

$C$RL11:   ; CALL OCCURS {_exp10dp} {0}      ; |157| 
           LDW     .D2T2   *+B11(4),B4       ; |157| 
           NOP             4
           ADD     .L2     B10,B4,B4         ; |157| 
           STDW    .D2T1   A5:A4,*B4         ; |157| 

           CALLP   .S2     _exp10dp_c,B3
||         LDDW    .D1T1   *A10,A5:A4        ; |158| 

$C$RL12:   ; CALL OCCURS {_exp10dp_c} {0}    ; |158| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 122
           LDW     .D2T2   *+B11(8),B4       ; |158| 
           LDDW    .D2T1   *+SP(120),A7:A6
           LDDW    .D2T1   *+SP(136),A17:A16
           LDDW    .D2T2   *+SP(184),B7:B6
           LDW     .D2T1   *+SP(12),A31      ; |96| 
           ADD     .L2     B10,B4,B4         ; |158| 
           STDW    .D2T1   A5:A4,*B4         ; |158| 
           LDDW    .D1T1   *A10++,A5:A4      ; |159| 
           LDDW    .D2T2   *+SP(144),B5:B4
           SUB     .L1     A14,1,A2          ; |155| 
           SUB     .L1     A14,1,A14         ; |155| 
           LDW     .D2T2   *B12,B31          ; |159| 

           FMPYDP  .M1     A7:A6,A5:A4,A9:A8 ; |55| 
||         LDDW    .D2T1   *+SP(128),A7:A6

           NOP             4
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |55| 
           ADD     .L2     B10,B31,B30       ; |159| 
           ADD     .L2     8,B10,B10         ; |155| 
           NOP             1
           DPINT   .L1     A7:A6,A3          ; |55| 
           NOP             3
           INTDP   .L1     A3,A7:A6          ; |55| 
           ADD     .L1     A31,A3,A3         ; |96| 
           NOP             3
           FMPYDP  .M1     A17:A16,A7:A6,A17:A16 ; |55| 
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |55| 
           NOP             2
           FSUBDP  .L1     A9:A8,A17:A16,A7:A6 ; |55| 
           NOP             2
           FSUBDP  .L1X    A7:A6,B5:B4,A17:A16 ; |55| 
           LDDW    .D2T1   *+SP(168),A7:A6
           LDDW    .D2T2   *+SP(192),B5:B4   ; |55| 
           FMPYDP  .M1     A17:A16,A17:A16,A9:A8 ; |55| 
           NOP             3

           FMPYDP  .M1     A7:A6,A9:A8,A19:A18 ; |55| 
||         LDDW    .D2T1   *+SP(160),A7:A6

           FMPYDP  .M2X    B5:B4,A9:A8,B5:B4 ; |55| 
           NOP             3
           FADDDP  .L1     A7:A6,A19:A18,A7:A6 ; |55| 
           FADDDP  .L2     B7:B6,B5:B4,B5:B4 ; |55| 
           LDDW    .D2T2   *+SP(176),B7:B6

           FMPYDP  .M1     A9:A8,A7:A6,A19:A18 ; |55| 
||         LDDW    .D2T1   *+SP(152),A7:A6

           FMPYDP  .M2X    A9:A8,B5:B4,B5:B4 ; |55| 
           MV      .L1     A11,A8            ; |96| 
           SHL     .S1     A3,20,A9          ; |96| 
           NOP             1
           FADDDP  .L1     A7:A6,A19:A18,A7:A6 ; |55| 
           FADDDP  .L2     B7:B6,B5:B4,B5:B4 ; |55| 
           NOP             1
           FMPYDP  .M1     A17:A16,A7:A6,A7:A6 ; |55| 
           NOP             4
           FSUBDP  .L2X    B5:B4,A7:A6,B7:B6 ; |55| 
           LDDW    .D2T2   *+SP(200),B5:B4
           NOP             1
           RCPDP   .S2     B7:B6,B9:B8       ; |55| 
           NOP             1
           FMPYDP  .M2     B9:B8,B7:B6,B17:B16 ; |55| 
           NOP             3
           FSUBDP  .L2     B5:B4,B17:B16,B5:B4 ; |55| 
           NOP             2
           FMPYDP  .M2     B9:B8,B5:B4,B9:B8 ; |55| 
           LDDW    .D2T2   *+SP(208),B5:B4
           NOP             2
           FMPYDP  .M2     B9:B8,B7:B6,B17:B16 ; |55| 
           NOP             3
           FSUBDP  .L2     B5:B4,B17:B16,B5:B4 ; |55| 
           NOP             2
           FMPYDP  .M2     B5:B4,B9:B8,B9:B8 ; |55| 
           LDDW    .D2T2   *+SP(216),B5:B4
           NOP             2
           FMPYDP  .M2     B9:B8,B7:B6,B7:B6 ; |55| 
           NOP             3
           FSUBDP  .L2     B5:B4,B7:B6,B5:B4 ; |55| 
           NOP             2
           FMPYDP  .M2     B9:B8,B5:B4,B5:B4 ; |55| 
           NOP             4

           FMPYDP  .M1X    A7:A6,B5:B4,A17:A16 ; |55| 
||         LDDW    .D2T1   *+SP(224),A7:A6   ; |96| 

           LDDW    .D2T2   *+SP(232),B5:B4   ; |96| 
           NOP             3
           FADDDP  .L1     A7:A6,A17:A16,A7:A6 ; |96| 
           CMPGTDP .S2X    A5:A4,B5:B4,B0    ; |99| 
           NOP             1

           FMPYDP  .M1     A9:A8,A7:A6,A7:A6 ; |96| 
||         LDDW    .D2T1   *+SP(240),A9:A8   ; |96| 

           NOP             3

   [ A2]   B       .S2     $C$L8             ; |155| 
|| [ B0]   MVKL    .S1     0x7fefffff,A7

           CMPLTDP .S1     A5:A4,A9:A8,A0    ; |104| 
   [ B0]   MVK     .L1     0xffffffff,A6     ; |100| 
   [ B0]   MVKH    .S1     0x7fefffff,A7
   [ A0]   ZERO    .L1     A7:A6             ; |105| 

   [ A2]   CALL    .S1     _exp10            ; |156| 
||         STDW    .D2T1   A7:A6,*B30        ; |159| 

           ; BRANCHCC OCCURS {$C$L8}         ; |155| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 6
           CALL    .S1     _exp10dp_v        ; |161| 
           LDW     .D2T2   *+B11(16),B4      ; |161| 
           MVKL    .S1     _a_sc,A4
           MVKH    .S1     _a_sc,A4
           ADDKPC  .S2     $C$RL13,B3,0      ; |161| 
           MVK     .L1     0x7,A6            ; |161| 
$C$RL13:   ; CALL OCCURS {_exp10dp_v} {0}    ; |161| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 46
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     0x3ddb7cdf,B7

           LDW     .D2T1   *B11,A4           ; |66| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T2   *+B11(4),B4       ; |66| 
||         MVK     .L1     0x7,A6            ; |66| 
||         MVK     .S1     0x1,A8            ; |66| 

$C$RL14:   ; CALL OCCURS {_isequal} {0}      ; |66| 
           MVKL    .S2     _fcn_pass,B6
           MVKL    .S2     0x3ddb7cdf,B7
           MVKH    .S2     _fcn_pass,B6
           MVKH    .S2     0x3ddb7cdf,B7

           STW     .D2T1   A4,*+B6(4)        ; |66| 
||         MVKL    .S2     0xd9d7bdbb,B6

           LDW     .D2T2   *+B11(8),B4       ; |67| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T1   *B11,A4           ; |67| 
||         MVK     .L1     0x7,A6            ; |67| 
||         MVK     .S1     0x1,A8            ; |67| 

$C$RL15:   ; CALL OCCURS {_isequal} {0}      ; |67| 
           MVKL    .S2     _fcn_pass,B5
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     _fcn_pass,B5
           MVKH    .S2     0x3ddb7cdf,B7

           MV      .L1X    B11,A3            ; |161| 
||         STW     .D2T1   A4,*+B5(8)        ; |67| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D1T1   *A3,A4            ; |68| 
||         LDW     .D2T2   *+B11(12),B4      ; |68| 
||         MVK     .L1     0x7,A6            ; |68| 
||         MVK     .S1     0x1,A8            ; |68| 

$C$RL16:   ; CALL OCCURS {_isequal} {0}      ; |68| 

           LDW     .D2T1   *+SP(96),A3       ; |68| 
||         MVKL    .S2     _fcn_pass,B4

           MVKL    .S2     0xd9d7bdbb,B6
           MVKL    .S2     0x3ddb7cdf,B7
           MVKH    .S2     _fcn_pass,B4

           STW     .D2T1   A4,*+B4(12)       ; |68| 
||         MVKH    .S2     0xd9d7bdbb,B6

           MV      .L2     B11,B31           ; |69| 
||         STW     .D2T1   A3,*+SP(108)      ; |68| 
||         MVKH    .S2     0x3ddb7cdf,B7

           CALLP   .S2     _isequal,B3
||         LDW     .D1T2   *A3,B4            ; |69| 
||         LDW     .D2T1   *B31,A4           ; |69| 
||         MVK     .L1     0x7,A6            ; |69| 
||         MVK     .S1     0x1,A8            ; |69| 

$C$RL17:   ; CALL OCCURS {_isequal} {0}      ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 17
           LDW     .D2T1   *+SP(100),A3      ; |69| 
           MVKL    .S2     _fcn_pass,B31
           MVKH    .S2     _fcn_pass,B31
           STW     .D2T1   A4,*+B31(16)      ; |69| 
           NOP             1

           MV      .L2X    A3,B4             ; |69| 
||         STW     .D2T1   A3,*+SP(112)      ; |69| 

           LDW     .D2T2   *B4,B0            ; |72| 
           LDW     .D2T1   *+SP(104),A3
           NOP             3

   [!B0]   B       .S2     $C$L9             ; |72| 
|| [!B0]   MVKL    .S1     _all_pass,A4
||         MV      .L2     B0,B1             ; guard predicate rewrite

   [!B0]   CALL    .S2     _print_test_results ; |165| 
|| [ B0]   MV      .L2X    A3,B4
|| [!B0]   MVKH    .S1     _all_pass,A4
||         STW     .D2T1   A3,*+SP(116)      ; |72| 
|| [!B0]   MV      .L1     A11,A3

   [ B0]   LDW     .D2T2   *B4,B0            ; |72| 
   [ B1]   ADD     .L2     4,B4,B4
           NOP             2
           ; BRANCHCC OCCURS {$C$L9}         ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 11
           CMPEQ   .L1     A4,0,A3           ; |72| 
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
   [!B0]   MV      .L1     A11,A0            ; |72| 
           NOP             2
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1

   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
||         MVK     .S1     0x1,A3            ; |72| 

   [!A0]   MV      .L1     A11,A3
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     _print_test_results ; |165| 
           MVKL    .S1     _all_pass,A4
           MVKH    .S1     _all_pass,A4
           NOP             2
;** --------------------------------------------------------------------------*
$C$L9:    
;          EXCLUSIVE CPU CYCLES: 1

           STW     .D1T1   A3,*A4            ; |72| 
||         MVK     .L1     0x3,A4            ; |165| 
||         ADDKPC  .S2     $C$RL18,B3,0      ; |165| 

$C$RL18:   ; CALL OCCURS {_print_test_results} {0}  ; |165| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 49
           STW     .D2T1   A12,*+SP(180)     ; |55| 
           LDW     .D2T1   *+SP(16),A12
           LDW     .D2T1   *+SP(32),A16
           LDW     .D2T1   *+SP(36),A17
           LDW     .D2T1   *+SP(44),A18
           LDW     .D2T1   *+SP(48),A19      ; |55| 
           LDW     .D2T1   *+SP(40),A20      ; |55| 
           LDW     .D2T1   *+SP(64),A21      ; |55| 
           LDW     .D2T1   *+SP(68),A22      ; |55| 
           LDW     .D2T1   *+SP(56),A23      ; |55| 
           LDW     .D2T1   *+SP(60),A24      ; |55| 
           LDW     .D2T1   *+SP(52),A25      ; |55| 
           LDW     .D2T1   *+SP(76),A26      ; |55| 
           LDW     .D2T1   *+SP(80),A27      ; |55| 
           LDW     .D2T1   *+SP(72),A28      ; |55| 
           LDW     .D2T1   *+SP(88),A29      ; |55| 

           LDW     .D2T1   *+SP(92),A30      ; |96| 
||         ZERO    .L1     A4

           STW     .D2T1   A4,*+SP(144)      ; |168| 
||         ZERO    .L1     A9

           STW     .D2T1   A9,*+SP(128)

           STW     .D2T1   A9,*+SP(216)      ; |168| 
||         ZERO    .L2     B5

           STW     .D2T2   B5,*+SP(168)
||         ZERO    .L2     B6

           STW     .D2T2   B6,*+SP(192)
           STW     .D2T2   B5,*+SP(208)      ; |168| 

           LDW     .D2T1   *+SP(28),A13
||         MV      .L2     B5,B31            ; |168| 
||         MVKL    .S1     0xcccccccd,A31
||         MV      .L1     A13,A10           ; |96| 

           STW     .D2T2   B31,*+SP(200)     ; |168| 
||         MVKL    .S1     0xc000cccc,A3
||         MVK     .S2     0x777,B7

           STW     .D2T2   B7,*+SP(16)
||         MVKH    .S1     0xcccccccd,A31

           STW     .D2T1   A31,*+SP(224)     ; |174| 
||         MVKH    .S1     0xc000cccc,A3

           STW     .D2T1   A3,*+SP(228)      ; |174| 
           STW     .D2T1   A16,*+SP(120)
           STW     .D2T1   A17,*+SP(124)
           STW     .D2T1   A18,*+SP(136)
           STW     .D2T1   A19,*+SP(140)
           STW     .D2T1   A20,*+SP(132)     ; |55| 
           STW     .D2T1   A21,*+SP(160)     ; |55| 
           STW     .D2T1   A22,*+SP(164)     ; |55| 
           STW     .D2T1   A23,*+SP(152)     ; |55| 
           STW     .D2T1   A24,*+SP(156)     ; |55| 
           STW     .D2T1   A25,*+SP(148)     ; |55| 
           STW     .D2T1   A26,*+SP(184)     ; |55| 
           STW     .D2T1   A27,*+SP(188)     ; |55| 
           STW     .D2T1   A28,*+SP(176)     ; |55| 
           STW     .D2T1   A29,*+SP(172)     ; |55| 
           STW     .D2T1   A29,*+SP(220)     ; |55| 

           STW     .D2T1   A30,*+SP(196)     ; |55| 
||         MVKL    .S2     _a_ext,B4

           STW     .D2T1   A30,*+SP(204)     ; |55| 
||         MVKH    .S2     _a_ext,B4
||         ZERO    .L1     A5

           STW     .D2T1   A30,*+SP(212)     ; |55| 
||         SET     .S1     A5,0x14,0x14,A5

           CALL    .S1     _exp10            ; |170| 
||         STDW    .D2T1   A5:A4,*B4         ; |168| 
||         MV      .L1X    B4,A15            ; |168| 
||         MV      .D1     A15,A11           ; |96| 

           LDDW    .D1T1   *A15,A5:A4        ; |170| 
||         LDW     .D2T2   *+SP(84),B10      ; |96| 

           ZERO    .L2     B13
||         ZERO    .L1     A14
||         MV      .S2     B13,B11           ; |96| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L10:    
;          EXCLUSIVE CPU CYCLES: 3
           ADDKPC  .S2     $C$RL19,B3,2      ; |170| 
$C$RL19:   ; CALL OCCURS {_exp10} {0}        ; |170| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 30
           MVKL    .S2     _output,B4
           MVKH    .S2     _output,B4
           LDW     .D2T2   *B4,B4            ; |170| 
           NOP             4
           ADD     .L2     B13,B4,B4         ; |170| 
           STDW    .D2T1   A5:A4,*B4         ; |170| 

           CALLP   .S2     _exp10dp,B3
||         LDDW    .D1T1   *A15,A5:A4        ; |171| 

$C$RL20:   ; CALL OCCURS {_exp10dp} {0}      ; |171| 
           MVKL    .S2     _output,B4
           MVKH    .S2     _output,B4
           LDW     .D2T2   *+B4(4),B4        ; |171| 
           NOP             4
           ADD     .L2     B13,B4,B4         ; |171| 
           STDW    .D2T1   A5:A4,*B4         ; |171| 

           CALLP   .S2     _exp10dp_c,B3
||         LDDW    .D1T1   *A15,A5:A4        ; |172| 

$C$RL21:   ; CALL OCCURS {_exp10dp_c} {0}    ; |172| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 132
           MVKL    .S2     _output,B4
           MVKH    .S2     _output,B4
           LDW     .D2T2   *+B4(8),B4        ; |172| 
           LDDW    .D2T1   *+SP(120),A7:A6
           LDDW    .D2T1   *+SP(152),A19:A18
           LDDW    .D2T2   *+SP(176),B7:B6
           LDW     .D2T1   *+SP(12),A31      ; |96| 
           ADD     .L2     B13,B4,B4         ; |172| 
           STDW    .D2T1   A5:A4,*B4         ; |172| 
           LDDW    .D1T1   *A15,A5:A4        ; |173| 
           LDDW    .D2T2   *+SP(136),B5:B4
           LDW     .D2T2   *B12,B31          ; |173| 
           NOP             2
           FMPYDP  .M1     A13:A12,A5:A4,A17:A16 ; |55| 
           CMPLTDP .S1     A5:A4,A11:A10,A0  ; |104| 
           CMPGTDP .S2X    A5:A4,B11:B10,B0  ; |99| 
           LDDW    .D2T1   *+SP(224),A5:A4
           FMPYDP  .M1     A7:A6,A17:A16,A7:A6 ; |55| 
           NOP             3
           DPINT   .L1     A7:A6,A3          ; |55| 
           LDDW    .D2T1   *+SP(128),A7:A6
           NOP             2
           INTDP   .L1     A3,A9:A8          ; |55| 
           ADD     .L1     A31,A3,A3         ; |96| 
           NOP             3
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |55| 
           FMPYDP  .M2X    B5:B4,A9:A8,B5:B4 ; |55| 
           NOP             2
           FSUBDP  .L1     A17:A16,A7:A6,A7:A6 ; |55| 
           NOP             2
           FSUBDP  .L1X    A7:A6,B5:B4,A17:A16 ; |55| 
           LDDW    .D2T1   *+SP(160),A7:A6
           LDDW    .D2T2   *+SP(184),B5:B4   ; |55| 
           FMPYDP  .M1     A17:A16,A17:A16,A9:A8 ; |55| 
           NOP             3
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |55| 
           FMPYDP  .M2X    B5:B4,A9:A8,B5:B4 ; |55| 
           NOP             2
           FADDDP  .L1     A19:A18,A7:A6,A7:A6 ; |55| 
           FADDDP  .L2     B7:B6,B5:B4,B5:B4 ; |55| 
           LDDW    .D2T2   *+SP(168),B7:B6

           FMPYDP  .M1     A9:A8,A7:A6,A19:A18 ; |55| 
||         LDDW    .D2T1   *+SP(144),A7:A6

           FMPYDP  .M2X    A9:A8,B5:B4,B5:B4 ; |55| 
           MV      .L1     A14,A8            ; |96| 
           SHL     .S1     A3,20,A9          ; |96| 
           NOP             1
           FADDDP  .L1     A7:A6,A19:A18,A7:A6 ; |55| 
           FADDDP  .L2     B7:B6,B5:B4,B5:B4 ; |55| 
           NOP             1
           FMPYDP  .M1     A17:A16,A7:A6,A7:A6 ; |55| 
           NOP             4
           FSUBDP  .L2X    B5:B4,A7:A6,B17:B16 ; |55| 
           LDDW    .D2T2   *+SP(192),B5:B4
           NOP             1
           RCPDP   .S2     B17:B16,B7:B6     ; |55| 
           NOP             1
           FMPYDP  .M2     B7:B6,B17:B16,B9:B8 ; |55| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |55| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |55| 
           LDDW    .D2T2   *+SP(200),B5:B4
           NOP             2
           FMPYDP  .M2     B7:B6,B17:B16,B9:B8 ; |55| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |55| 
           NOP             2
           FMPYDP  .M2     B5:B4,B7:B6,B7:B6 ; |55| 
           LDDW    .D2T2   *+SP(208),B5:B4
           NOP             2
           FMPYDP  .M2     B7:B6,B17:B16,B9:B8 ; |55| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |55| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |55| 
           NOP             4

           FMPYDP  .M1X    A7:A6,B5:B4,A17:A16 ; |55| 
||         LDDW    .D2T1   *+SP(216),A7:A6   ; |96| 

           ADD     .L2     B13,B31,B4        ; |173| 
           ADD     .L2     8,B13,B13         ; |169| 
           NOP             2
           FADDDP  .L1     A7:A6,A17:A16,A7:A6 ; |96| 
           NOP             2
           FMPYDP  .M1     A9:A8,A7:A6,A7:A6 ; |96| 
           NOP             3

   [ B0]   MVKL    .S1     0x7fefffff,A7
|| [ B0]   MVK     .L1     0xffffffff,A6     ; |100| 

   [ B0]   MVKH    .S1     0x7fefffff,A7
   [ A0]   ZERO    .L1     A7:A6             ; |105| 
           STDW    .D2T1   A7:A6,*B4         ; |173| 

           LDDW    .D1T1   *A15,A7:A6        ; |174| 
||         LDW     .D2T2   *+SP(16),B4

           NOP             4

           FMPYDP  .M1     A5:A4,A7:A6,A5:A4 ; |174| 
||         SUB     .L1X    B4,1,A0           ; |169| 
||         SUB     .L2     B4,1,B4           ; |169| 

   [ A0]   BNOP    .S1     $C$L10,1          ; |169| 
|| [!A0]   MVKL    .S2     _output,B10

   [!A0]   MVKH    .S2     _output,B10

   [ A0]   CALL    .S2     _exp10            ; |170| 
||         STDW    .D1T1   A5:A4,*++A15      ; |174| 
||         STW     .D2T2   B4,*+SP(16)       ; |174| 
|| [!A0]   MVKL    .S1     _a_ext,A4

   [!A0]   CALL    .S1     _exp10dp_v        ; |176| 
|| [ A0]   LDDW    .D1T1   *A15,A5:A4        ; |170| 

   [!A0]   LDW     .D2T2   *+B10(16),B4      ; |176| 
           ; BRANCHCC OCCURS {$C$L10}        ; |169| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 4
           MVKH    .S1     _a_ext,A4
           MVK     .S1     0x777,A6          ; |176| 
           ADDKPC  .S2     $C$RL22,B3,1      ; |176| 
$C$RL22:   ; CALL OCCURS {_exp10dp_v} {0}    ; |176| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 43
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     0x3ddb7cdf,B7

           LDW     .D2T1   *B10,A4           ; |66| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T2   *+B10(4),B4       ; |66| 
||         MVK     .S1     0x777,A6          ; |66| 
||         MVK     .L1     0x1,A8            ; |66| 

$C$RL23:   ; CALL OCCURS {_isequal} {0}      ; |66| 
           MVKL    .S2     _fcn_pass,B11
           MVKL    .S2     0x3ddb7cdf,B7
           MVKH    .S2     _fcn_pass,B11
           MVKL    .S2     0xd9d7bdbb,B6

           LDW     .D2T2   *+B10(8),B4       ; |67| 
||         MVKH    .S2     0x3ddb7cdf,B7

           STW     .D2T1   A4,*+B11(4)       ; |66| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T1   *B10,A4           ; |67| 
||         MVK     .S1     0x777,A6          ; |67| 
||         MVK     .L1     0x1,A8            ; |67| 

$C$RL24:   ; CALL OCCURS {_isequal} {0}      ; |67| 
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     0x3ddb7cdf,B7

           MV      .L1X    B10,A3            ; |67| 
||         STW     .D2T1   A4,*+B11(8)       ; |67| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D1T1   *A3,A4            ; |68| 
||         LDW     .D2T2   *+B10(12),B4      ; |68| 
||         MVK     .S1     0x777,A6          ; |68| 
||         MVK     .L1     0x1,A8            ; |68| 

$C$RL25:   ; CALL OCCURS {_isequal} {0}      ; |68| 
           LDW     .D2T1   *+SP(96),A3       ; |68| 
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     0x3ddb7cdf,B7

           MV      .L2     B10,B4            ; |68| 
||         STW     .D2T1   A4,*+B11(12)      ; |68| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D2T1   *B4,A4            ; |69| 
||         LDW     .D1T2   *A3,B4            ; |69| 
||         MVK     .S1     0x777,A6          ; |69| 
||         MVK     .L1     0x1,A8            ; |69| 

$C$RL26:   ; CALL OCCURS {_isequal} {0}      ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
           LDW     .D2T1   *+SP(100),A3      ; |69| 
           LDW     .D2T2   *+SP(104),B4
           STW     .D2T1   A4,*+B11(16)      ; |69| 
           NOP             2
           LDW     .D1T1   *A3,A0            ; |72| 
           NOP             4

   [!A0]   B       .S1     $C$L11            ; |72| 
|| [ A0]   LDW     .D2T2   *B4,B0            ; |72| 

   [!A0]   CALL    .S1     _print_test_results ; |180| 
   [ A0]   ADD     .L2     4,B4,B4
   [!A0]   MV      .L1     A14,A3
   [!A0]   MVKL    .S1     _all_pass,A4
   [!A0]   MVKH    .S1     _all_pass,A4
           ; BRANCHCC OCCURS {$C$L11}        ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 10
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
   [!B0]   MV      .L1     A14,A0            ; |72| 
           NOP             1
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1

   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
||         MVK     .S1     0x1,A3            ; |72| 

   [!A0]   MV      .L1     A14,A3
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     _print_test_results ; |180| 
           MVKL    .S1     _all_pass,A4
           MVKH    .S1     _all_pass,A4
           NOP             2
;** --------------------------------------------------------------------------*
$C$L11:    
;          EXCLUSIVE CPU CYCLES: 1

           STW     .D1T1   A3,*A4            ; |72| 
||         MVK     .L1     0x4,A4            ; |180| 
||         ADDKPC  .S2     $C$RL27,B3,0      ; |180| 

$C$RL27:   ; CALL OCCURS {_print_test_results} {0}  ; |180| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 19
           MV      .L2X    A14,B6            ; |114| 

           MV      .L2X    A14,B5            ; |114| 
||         STW     .D2T2   B6,*+SP(120)      ; |114| 

           STW     .D2T2   B5,*+SP(124)      ; |114| 
           LDDW    .D2T2   *+SP(120),B7:B6   ; |114| 
           MVKL    .S1     _cycle_counts+24,A3
           MVKH    .S1     _cycle_counts+24,A3
           MV      .L2X    A14,B4            ; |114| 
           NOP             1

           STDW    .D1T2   B7:B6,*A3         ; |114| 
||         MVC     .S2     B4,TSCL           ; |115| 

           MVC     .S2     TSCL,B6           ; |116| 
           MVC     .S2     TSCH,B7           ; |116| 
           MVKL    .S1     _t_start,A3
           MVKH    .S1     _t_start,A3

           STDW    .D1T2   B7:B6,*A3         ; |116| 
||         MVC     .S2     TSCL,B4           ; |117| 

           MVC     .S2     TSCH,B8           ; |117| 

           CALL    .S2     _gimme_random     ; |190| 
||         SUBU    .L2     B4,B6,B5:B4       ; |117| 
||         MVK     .S1     0x80,A11

           EXT     .S2     B5,24,24,B6       ; |117| 
||         SUB     .L2     B8,B7,B31         ; |117| 
||         MVKL    .S1     _t_offset,A3

           ADD     .L2     B31,B6,B5         ; |117| 
||         MVKH    .S1     _t_offset,A3
||         ZERO    .L1     A5
||         MV      .D1     A14,A12           ; |117| 

           STDW    .D1T2   B5:B4,*A3         ; |117| 
||         MV      .L2X    A14,B4            ; |190| 
||         ZERO    .S2     B5
||         MVKH    .S1     0x40340000,A5
||         MV      .L1     A14,A4            ; |190| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L12:    
;          EXCLUSIVE CPU CYCLES: 2
           MVKH    .S2     0xc0240000,B5
           ADDKPC  .S2     $C$RL28,B3,0      ; |190| 
$C$RL28:   ; CALL OCCURS {_gimme_random} {0}  ; |190| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 139
           MVKL    .S2     _input,B4
           MVKH    .S2     _input,B4
           LDW     .D2T2   *B4,B4            ; |190| 
           NOP             4
           ADD     .L1X    A12,B4,A3         ; |190| 

           STDW    .D1T1   A5:A4,*A3         ; |190| 
||         MVC     .S2     TSCL,B8           ; |122| 

           MVC     .S2     TSCH,B9           ; |122| 
           MVKL    .S1     0x40026bb1,A7
           MVKL    .S1     0xbbb55516,A6
           MVKH    .S1     0x40026bb1,A7
           MVKH    .S1     0xbbb55516,A6
           FMPYDP  .M1     A7:A6,A5:A4,A7:A6 ; |88| 
           MVKL    .S2     0x3ff71547,B5
           MVKL    .S2     0x652b82fe,B4
           MVKH    .S2     0x3ff71547,B5
           MVKH    .S2     0x652b82fe,B4
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |88| 
           ZERO    .L1     A31
           ZERO    .L2     B19
           MV      .L2X    A14,B6            ; |88| 
           DPINT   .L2     B5:B4,B16         ; |88| 
           MVKL    .S1     0xbf2bd010,A9
           MVKL    .S2     0x3fe63000,B7
           MVKL    .S1     0x5c610ca8,A8
           INTDP   .L2     B16,B5:B4         ; |88| 
           MVKH    .S2     0x3fe63000,B7
           MVKH    .S1     0xbf2bd010,A9
           MVKH    .S1     0x5c610ca8,A8
           MVKL    .S1     0x6fb3f6e0,A18
           FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |88| 
           MVKL    .S1     0x3f7c70e4,A19
           MVKH    .S1     0x6fb3f6e0,A18
           MVKH    .S1     0x3f7c70e4,A19
           FMPYDP  .M1X    A9:A8,B5:B4,A9:A8 ; |88| 
           FSUBDP  .L1X    A7:A6,B7:B6,A7:A6 ; |88| 
           MVKL    .S1     0x3f403f99,A17
           MVKL    .S1     0x6fde3809,A16
           FSUBDP  .L1     A7:A6,A9:A8,A9:A8 ; |88| 
           MVKH    .S1     0x3f403f99,A17
           MVKH    .S1     0x6fde3809,A16
           FMPYDP  .M1     A9:A8,A9:A8,A7:A6 ; |88| 
           MVKL    .S2     0x6f58dc1c,B4
           MVKL    .S2     0x3ef152a4,B5
           MVKH    .S2     0x6f58dc1c,B4
           MVKH    .S2     0x3ef152a4,B5
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |55| 
           MVKL    .S2     0x3fac718e,B7
           MVKL    .S2     0x714251b3,B6
           MVKH    .S2     0x3fac718e,B7
           FADDDP  .L2X    A19:A18,B5:B4,B5:B4 ; |55| 
           FMPYDP  .M1     A17:A16,A7:A6,A17:A16 ; |55| 
           MVKH    .S2     0x714251b3,B6
           FMPYDP  .M2X    A7:A6,B5:B4,B5:B4 ; |55| 
           MV      .L2X    A14,B18           ; |55| 
           FADDDP  .L1X    B7:B6,A17:A16,A17:A16 ; |55| 
           MVKH    .S2     0x3fd00000,B19
           FADDDP  .L2     B19:B18,B5:B4,B5:B4 ; |55| 
           FMPYDP  .M1     A7:A6,A17:A16,A7:A6 ; |55| 
           SET     .S1     A31,0x15,0x1d,A19
           MV      .L1     A14,A18           ; |55| 
           FMPYDP  .M1X    A9:A8,B5:B4,A17:A16 ; |55| 
           FADDDP  .L1     A19:A18,A7:A6,A7:A6 ; |55| 
           ZERO    .L2     B31
           SET     .S2     B31,0x1e,0x1e,B5
           FSUBDP  .L1     A7:A6,A17:A16,A9:A8 ; |55| 
           MV      .L2     B18,B4            ; |55| 
           LDW     .D2T2   *+SP(12),B29      ; |96| 
           RCPDP   .S1     A9:A8,A7:A6       ; |55| 
           ZERO    .L2     B30
           FMPYDP  .M1     A7:A6,A9:A8,A19:A18 ; |55| 
           MV      .L2X    A14,B10           ; |55| 
           SET     .S2     B30,0x1e,0x1e,B19
           ZERO    .L2     B11
           SET     .S2     B11,0x15,0x1d,B11
           FSUBDP  .L2X    B5:B4,A19:A18,B5:B4 ; |55| 
           MVKL    .S2     _t_start,B12
           MVKH    .S2     _t_start,B12
           FMPYDP  .M2X    A7:A6,B5:B4,B5:B4 ; |55| 
           STDW    .D2T2   B9:B8,*B12
           MVKL    .S1     _output+12,A3
           MVKH    .S1     _output+12,A3
           FMPYDP  .M2X    B5:B4,A9:A8,B7:B6 ; |55| 
           LDW     .D1T1   *A3,A3            ; |194| 
           NOP             2
           FSUBDP  .L2     B19:B18,B7:B6,B7:B6 ; |55| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |55| 
           ADD     .L1     A12,A3,A3         ; |194| 
           NOP             3
           FMPYDP  .M1X    B5:B4,A9:A8,A7:A6 ; |55| 
           MV      .L1     A14,A8            ; |55| 
           MV      .L1X    B19,A9            ; |55| 
           NOP             1
           FSUBDP  .L1     A9:A8,A7:A6,A9:A8 ; |55| 
           MVKL    .S1     0x510ea7e7,A6
           MVKL    .S1     0x40734413,A7
           MVKH    .S1     0x510ea7e7,A6
           FMPYDP  .M2X    B5:B4,A9:A8,B5:B4 ; |55| 
           MVKH    .S1     0x40734413,A7
           CMPGTDP .S1     A5:A4,A7:A6,A0    ; |99| 
           MV      .L1     A14,A6            ; |96| 
           FMPYDP  .M2X    A17:A16,B5:B4,B5:B4 ; |55| 
           MVKL    .S1     0xc0733a71,A9
           MVKL    .S1     0x46f72a46,A8
           MVKH    .S1     0xc0733a71,A9
           FADDDP  .L2     B11:B10,B5:B4,B7:B6 ; |96| 
           ADD     .L2     B29,B16,B4        ; |96| 
           MVKH    .S1     0x46f72a46,A8
           SHL     .S1X    B4,20,A7          ; |96| 
           FMPYDP  .M1X    A7:A6,B7:B6,A7:A6 ; |96| 
           CMPLTDP .S1     A5:A4,A9:A8,A1    ; |104| 
           NOP             2

   [ A0]   MVKL    .S1     0x7fefffff,A7
|| [ A0]   MVK     .L1     0xffffffff,A6     ; |100| 

   [ A0]   MVKH    .S1     0x7fefffff,A7
   [ A1]   ZERO    .L1     A7:A6             ; |105| 

           STDW    .D1T1   A7:A6,*A3         ; |194| 
||         MVC     .S2     TSCL,B6           ; |128| 

           MVC     .S2     TSCH,B7           ; |128| 

           MVKL    .S2     _t_offset,B4
||         MVKL    .S1     _cycle_counts+24,A3
||         SUB     .L1     A11,1,A0          ; |188| 
||         SUB     .D1     A11,1,A11         ; |188| 

           MVKH    .S2     _t_offset,B4
||         MVKH    .S1     _cycle_counts+24,A3
||         ADD     .L1     8,A12,A12         ; |188| 

           MV      .L1     A3,A10            ; |128| 
||         LDDW    .D2T2   *B4,B17:B16       ; |130| 

           MVKL    .S2     _t_stop,B10
           LDDW    .D1T1   *A3,A5:A4         ; |130| 
           MVKH    .S2     _t_stop,B10
           STDW    .D2T2   B7:B6,*B10        ; |128| 
           ADDU    .L2     B16,B8,B5:B4      ; |130| 

           ADD     .S2     B5,B17,B8         ; |130| 
|| [ A0]   B       .S1     $C$L12            ; |188| 
||         SUBU    .L2     B6,B4,B5:B4       ; |130| 

           ADD     .D2     B8,B9,B8          ; |130| 
||         EXT     .S2     B5,24,24,B9       ; |130| 
||         ADDU    .L2X    A4,B4,B5:B4       ; |130| 
|| [ A0]   MV      .L1     A14,A4            ; |190| 

   [ A0]   CALL    .S1     _gimme_random     ; |190| 
||         SUB     .L2     B7,B8,B8          ; |130| 
||         ADD     .S2X    B5,A5,B5          ; |130| 
|| [ A0]   ZERO    .L1     A5

           ADD     .L2     B8,B9,B8          ; |130| 
|| [ A0]   MVKH    .S1     0x40340000,A5

           ADD     .L2     B5,B8,B5          ; |130| 

   [!A0]   CALL    .S1     __fltllif         ; |135| 
||         STDW    .D1T2   B5:B4,*A10        ; |130| 
|| [ A0]   ZERO    .L2     B5
|| [ A0]   MV      .S2X    A14,B4            ; |190| 

           ; BRANCHCC OCCURS {$C$L12}        ; |188| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A10,A5:A4        ; |135| 
           ADDKPC  .S2     $C$RL29,B3,3      ; |135| 
$C$RL29:   ; CALL OCCURS {__fltllif} {0}     ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           ZERO    .L1     A11
           SET     .S1     A11,0x1a,0x1d,A11
           MPYSP   .M1     A11,A4,A3         ; |135| 
           MV      .L1     A14,A12           ; |135| 
           MV      .L1X    B11,A13           ; |135| 
           NOP             1
           SPDP    .S1     A3,A5:A4          ; |135| 
           NOP             1

           CALLP   .S2     __fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |135| 

$C$RL30:   ; CALL OCCURS {__fixdlli} {0}     ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 17
           LDDW    .D2T2   *+SP(120),B5:B4
           MV      .L2X    A10,B6
           STDW    .D2T1   A5:A4,*B6         ; |135| 
           SUBAW   .D2     B6,6,B11
           MV      .L2X    A14,B31           ; |114| 

           STDW    .D2T2   B5:B4,*B11        ; |114| 
||         MVC     .S2     B31,TSCL          ; |115| 

           MVC     .S2     TSCL,B8           ; |116| 
           MVC     .S2     TSCH,B4           ; |116| 

           MV      .L1X    B12,A14           ; |116| 
||         MV      .L2     B4,B9             ; |116| 

           STDW    .D1T2   B9:B8,*A14        ; |116| 
||         MVC     .S2     TSCL,B4           ; |117| 

           MVC     .S2     TSCH,B6           ; |117| 

           SUBU    .L2     B4,B8,B5:B4       ; |117| 
||         MVKL    .S2     _t_offset,B12

           EXT     .S2     B5,24,24,B6       ; |117| 
||         SUB     .L2     B6,B9,B5          ; |117| 

           ADD     .L2     B5,B6,B5          ; |117| 
||         MVKH    .S2     _t_offset,B12

           STDW    .D2T2   B5:B4,*B12        ; |117| 
||         MVK     .S2     0x80,B4

           MVKL    .S1     _input,A10

           MV      .L1X    B4,A15            ; |117| 
||         MVKH    .S1     _input,A10

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L13:    
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D1T1   *A10,A3           ; |202| 
           NOP             4

           ADD     .L1     A12,A3,A3         ; |202| 
||         CALL    .S1     _exp10            ; |202| 

           LDDW    .D1T1   *A3,A5:A4         ; |202| 
           ADDKPC  .S2     $C$RL31,B3,3      ; |202| 
$C$RL31:   ; CALL OCCURS {_exp10} {0}        ; |202| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 9

           MVKL    .S2     _output,B4
||         SUB     .L1     A15,1,A0          ; |201| 
||         SUB     .S1     A15,1,A15         ; |201| 

           MVKH    .S2     _output,B4
           LDW     .D2T2   *B4,B4            ; |202| 
   [ A0]   BNOP    .S1     $C$L13,3          ; |201| 

           ADD     .L1X    A12,B4,A3         ; |202| 
||         ADD     .S1     8,A12,A12         ; |201| 

           STDW    .D1T1   A5:A4,*A3         ; |202| 
           ; BRANCHCC OCCURS {$C$L13}        ; |201| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 18
           MVC     .S2     TSCL,B6           ; |128| 
           MVC     .S2     TSCH,B4           ; |128| 

           LDDW    .D1T1   *A14,A7:A6        ; |130| 
||         LDDW    .D2T2   *B12,B9:B8        ; |130| 

           MV      .L2     B4,B7             ; |128| 
           NOP             3
           ADDU    .L1X    B8,A6,A5:A4       ; |130| 

           ADD     .L1X    A5,B9,A3          ; |130| 
||         LDDW    .D2T2   *B11,B9:B8        ; |130| 

           ADD     .L1     A3,A7,A3          ; |130| 
||         SUBU    .L2X    B6,A4,B5:B4       ; |130| 

           EXT     .S2     B5,24,24,B16      ; |130| 
           SUB     .L2X    B7,A3,B31         ; |130| 
           CALL    .S1     __fltllif         ; |130| 

           ADDU    .L2     B8,B4,B5:B4       ; |130| 
||         ADD     .S2     B31,B16,B8        ; |130| 

           ADD     .L2     B5,B9,B5          ; |130| 
           ADD     .L2     B5,B8,B5          ; |130| 
           STDW    .D2T2   B7:B6,*B10        ; |128| 

           DADD    .L1X    0,B5:B4,A5:A4     ; |130| 
||         ADDKPC  .S2     $C$RL32,B3,0      ; |130| 

$C$RL32:   ; CALL OCCURS {__fltllif} {0}     ; |130| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 12
           MPYSP   .M1     A11,A4,A3         ; |130| 
           ZERO    .L1     A12               ; |130| 
           NOP             2
           SPDP    .S1     A3,A5:A4          ; |130| 
           NOP             1

           CALLP   .S2     __fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |130| 

$C$RL33:   ; CALL OCCURS {__fixdlli} {0}     ; |130| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 17
           LDDW    .D2T2   *+SP(120),B5:B4   ; |130| 
           MV      .L2X    A12,B31           ; |114| 
           STDW    .D2T1   A5:A4,*B11        ; |130| 
           NOP             2

           STDW    .D2T2   B5:B4,*+B11(8)    ; |114| 
||         MVC     .S2     B31,TSCL          ; |115| 

           MVC     .S2     TSCL,B6           ; |116| 
           MVC     .S2     TSCH,B4           ; |116| 
           MV      .L2     B4,B7             ; |116| 

           STDW    .D1T2   B7:B6,*A14        ; |116| 
||         MVC     .S2     TSCL,B4           ; |117| 

           MVC     .S2     TSCH,B8           ; |117| 
           SUBU    .L2     B4,B6,B5:B4       ; |117| 

           EXT     .S2     B5,24,24,B6       ; |117| 
||         SUB     .L2     B8,B7,B30         ; |117| 

           ADD     .L2     B30,B6,B5         ; |117| 

           STDW    .D2T2   B5:B4,*B12        ; |117| 
||         MVK     .S2     0x80,B4

           LDW     .D2T2   *+SP(20),B13      ; |117| 
           MV      .L1X    B4,A15            ; |117| 
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L14:    
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D1T1   *A10,A3           ; |210| 
           NOP             4

           ADD     .L1     A12,A3,A3         ; |210| 
||         CALL    .S1     _exp10dp          ; |210| 

           LDDW    .D1T1   *A3,A5:A4         ; |210| 
           ADDKPC  .S2     $C$RL34,B3,3      ; |210| 
$C$RL34:   ; CALL OCCURS {_exp10dp} {0}      ; |210| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           LDW     .D2T2   *B13,B4           ; |210| 
||         SUB     .L1     A15,1,A0          ; |209| 
||         SUB     .S1     A15,1,A15         ; |209| 

   [ A0]   BNOP    .S1     $C$L14,3          ; |209| 

           ADD     .L1X    A12,B4,A3         ; |210| 
||         ADD     .S1     8,A12,A12         ; |209| 

           STDW    .D1T1   A5:A4,*A3         ; |210| 
           ; BRANCHCC OCCURS {$C$L14}        ; |209| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
           MVC     .S2     TSCL,B8           ; |128| 
           MVC     .S2     TSCH,B4           ; |128| 

           LDDW    .D1T1   *A14,A5:A4        ; |130| 
||         LDDW    .D2T2   *B12,B7:B6        ; |130| 

           LDDW    .D2T2   *+B11(8),B17:B16  ; |130| 
           MV      .L2     B4,B9             ; |128| 
           NOP             2
           ADDU    .L1X    B6,A4,A7:A6       ; |130| 
           ADD     .L1X    A7,B7,A3          ; |130| 

           ADD     .L1     A3,A5,A3          ; |130| 
||         SUBU    .L2X    B8,A6,B5:B4       ; |130| 

           CALL    .S1     __fltllif         ; |130| 
||         ADDU    .L2     B16,B4,B7:B6      ; |130| 
||         EXT     .S2     B5,24,24,B5       ; |130| 

           SUB     .L2X    B9,A3,B4          ; |130| 
||         ADD     .S2     B7,B17,B31        ; |130| 

           ADD     .L2     B4,B5,B5          ; |130| 
||         MV      .S2     B10,B4            ; |130| 

           ADD     .L2     B31,B5,B7         ; |130| 
           STDW    .D2T2   B9:B8,*B4         ; |128| 

           DADD    .L1X    0,B7:B6,A5:A4     ; |130| 
||         ADDKPC  .S2     $C$RL35,B3,0      ; |130| 

$C$RL35:   ; CALL OCCURS {__fltllif} {0}     ; |130| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 12
           MPYSP   .M1     A11,A4,A3         ; |130| 
           ZERO    .L1     A12               ; |130| 
           NOP             2
           SPDP    .S1     A3,A5:A4          ; |130| 
           NOP             1

           CALLP   .S2     __fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |130| 

$C$RL36:   ; CALL OCCURS {__fixdlli} {0}     ; |130| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 17
           LDDW    .D2T2   *+SP(120),B5:B4
           ADDAD   .D2     B11,1,B10
           MV      .L2X    A12,B31           ; |114| 
           STDW    .D2T1   A5:A4,*B10        ; |130| 
           NOP             1

           STDW    .D2T2   B5:B4,*+B11(16)   ; |114| 
||         MVC     .S2     B31,TSCL          ; |115| 

           MVC     .S2     TSCL,B8           ; |116| 
           MVC     .S2     TSCH,B4           ; |116| 
           MV      .L2     B4,B9             ; |116| 

           STDW    .D1T2   B9:B8,*A14        ; |116| 
||         MVC     .S2     TSCL,B4           ; |117| 

           MVC     .S2     TSCH,B6           ; |117| 
           SUBU    .L2     B4,B8,B5:B4       ; |117| 

           EXT     .S2     B5,24,24,B6       ; |117| 
||         SUB     .L2     B6,B9,B5          ; |117| 

           ADD     .L2     B5,B6,B5          ; |117| 

           STDW    .D2T2   B5:B4,*B12        ; |117| 
||         MVK     .S2     0x80,B4

           MV      .L1     A12,A15

           MV      .L1X    B4,A12            ; |117| 
||         LDW     .D2T2   *+SP(24),B13      ; |117| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L15:    
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D1T1   *A10,A3           ; |218| 
           NOP             4

           ADD     .L1     A15,A3,A3         ; |218| 
||         CALL    .S1     _exp10dp_c        ; |218| 

           LDDW    .D1T1   *A3,A5:A4         ; |218| 
           ADDKPC  .S2     $C$RL37,B3,3      ; |218| 
$C$RL37:   ; CALL OCCURS {_exp10dp_c} {0}    ; |218| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           LDW     .D2T2   *B13,B4           ; |218| 
||         SUB     .L1     A12,1,A0          ; |217| 
||         SUB     .S1     A12,1,A12         ; |217| 

   [ A0]   BNOP    .S1     $C$L15,3          ; |217| 

           ADD     .L1X    A15,B4,A3         ; |218| 
||         ADD     .S1     8,A15,A15         ; |217| 

           STDW    .D1T1   A5:A4,*A3         ; |218| 
           ; BRANCHCC OCCURS {$C$L15}        ; |217| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
           MVC     .S2     TSCL,B6           ; |128| 
           MVC     .S2     TSCH,B4           ; |128| 

           LDDW    .D1T1   *A14,A5:A4        ; |130| 
||         LDDW    .D2T2   *B12,B9:B8        ; |130| 

           LDDW    .D2T2   *+B11(16),B17:B16 ; |130| 
           MV      .L2     B4,B7             ; |128| 
           NOP             2
           ADDU    .L2X    B8,A4,B5:B4       ; |130| 

           ADD     .S2     B5,B9,B8          ; |130| 
||         SUBU    .L2     B6,B4,B5:B4       ; |130| 

           ADD     .D2X    B8,A5,B8          ; |130| 
||         CALL    .S1     __fltllif         ; |130| 
||         EXT     .S2     B5,24,24,B9       ; |130| 
||         ADDU    .L2     B16,B4,B5:B4      ; |130| 

           SUB     .L2     B7,B8,B8          ; |130| 
||         ADD     .S2     B5,B17,B5         ; |130| 

           ADD     .L2     B8,B9,B8          ; |130| 

           ADD     .L2     B5,B8,B5          ; |130| 
||         MVKL    .S2     _t_stop,B8

           MVKH    .S2     _t_stop,B8

           STDW    .D2T2   B7:B6,*B8         ; |128| 
||         DADD    .L1X    0,B5:B4,A5:A4     ; |130| 
||         ADDKPC  .S2     $C$RL38,B3,0      ; |130| 

$C$RL38:   ; CALL OCCURS {__fltllif} {0}     ; |130| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 108
           MPYSP   .M1     A11,A4,A3         ; |130| 
           ZERO    .L1     A12               ; |130| 
           NOP             3
           SPDP    .S2X    A3,B5:B4          ; |130| 
           NOP             2

           CALLP   .S2     __fixdlli,B3
||         FADDDP  .L1X    A13:A12,B5:B4,A5:A4 ; |130| 

$C$RL39:   ; CALL OCCURS {__fixdlli} {0}     ; |130| 
           LDDW    .D2T2   *+SP(120),B5:B4
           ADDAD   .D2     B10,1,B13
           MV      .L2X    A12,B31           ; |114| 
           STDW    .D2T1   A5:A4,*B13        ; |130| 
           NOP             1

           STDW    .D2T2   B5:B4,*+B11(32)   ; |114| 
||         MVC     .S2     B31,TSCL          ; |115| 

           MVC     .S2     TSCL,B4           ; |116| 
           MVC     .S2     TSCH,B5           ; |116| 

           STDW    .D1T2   B5:B4,*A14        ; |116| 
||         MVC     .S2     TSCL,B6           ; |117| 

           MVC     .S2     TSCH,B8           ; |117| 
           SUBU    .L2     B6,B4,B7:B6       ; |117| 

           SUB     .L2     B8,B5,B4          ; |117| 
||         EXT     .S2     B7,24,24,B5       ; |117| 

           MVKL    .S1     _output,A15
||         ADD     .L2     B4,B5,B7          ; |117| 

           MVKH    .S1     _output,A15
||         MV      .L2X    A10,B9            ; |225| 
||         STDW    .D2T2   B7:B6,*B12        ; |117| 

           CALLP   .S2     _exp10dp_v,B3
||         LDW     .D1T2   *+A15(16),B4      ; |225| 
||         LDW     .D2T1   *B9,A4            ; |225| 
||         MVK     .S1     0x80,A6           ; |225| 

$C$RL40:   ; CALL OCCURS {_exp10dp_v} {0}    ; |225| 
           MVC     .S2     TSCL,B8           ; |128| 
           MVC     .S2     TSCH,B4           ; |128| 

           LDDW    .D1T1   *A14,A7:A6        ; |130| 
||         LDDW    .D2T2   *B12,B7:B6        ; |130| 

           MVK     .S1     16,A10
           ADD     .L1X    B13,A10,A10
           LDDW    .D1T1   *A10,A9:A8        ; |130| 
           MVKL    .S1     _t_stop,A3
           ADDU    .L1X    B6,A6,A5:A4       ; |130| 

           MVKH    .S1     _t_stop,A3
||         SUBU    .L1X    B8,A4,A17:A16     ; |130| 

           ADD     .L1X    A5,B7,A4          ; |130| 
||         MV      .L2     B4,B9             ; |128| 

           ADD     .L1     A4,A7,A4          ; |130| 
||         MV      .L2X    A3,B4             ; |128| 
||         MV      .D1     A16,A3            ; |130| 
||         EXT     .S1     A17,24,24,A6      ; |130| 

           SUB     .S1X    B9,A4,A3          ; |130| 
||         ADDU    .L1     A8,A3,A5:A4       ; |130| 

           ADD     .L1     A5,A9,A3          ; |130| 
||         ADD     .S1     A3,A6,A5          ; |130| 

           CALLP   .S2     __fltllif,B3
||         ADD     .L1     A3,A5,A5          ; |130| 
||         STDW    .D2T2   B9:B8,*B4         ; |128| 

$C$RL41:   ; CALL OCCURS {__fltllif} {0}     ; |130| 
           MPYSP   .M1     A11,A4,A3         ; |130| 
           NOP             3
           SPDP    .S1     A3,A5:A4          ; |130| 
           NOP             1

           CALLP   .S2     __fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |130| 

$C$RL42:   ; CALL OCCURS {__fixdlli} {0}     ; |130| 
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6

           STDW    .D1T1   A5:A4,*A10        ; |130| 
||         MVKH    .S2     0x3ddb7cdf,B7

           LDW     .D1T2   *+A15(4),B4       ; |66| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D1T1   *A15,A4           ; |66| 
||         MVK     .S1     0x80,A6           ; |66| 
||         MVK     .L1     0x1,A8            ; |66| 

$C$RL43:   ; CALL OCCURS {_isequal} {0}      ; |66| 
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKL    .S2     _fcn_pass,B10
           MVKH    .S2     0x3ddb7cdf,B7
           MVKH    .S2     0xd9d7bdbb,B6

           MV      .L1     A4,A3             ; |66| 
||         LDW     .D1T1   *A15,A4           ; |67| 
||         MVKH    .S2     _fcn_pass,B10

           CALLP   .S2     _isequal,B3
||         LDW     .D1T2   *+A15(8),B4       ; |67| 
||         STW     .D2T1   A3,*+B10(4)       ; |66| 
||         MVK     .S1     0x80,A6           ; |67| 
||         MVK     .L1     0x1,A8            ; |67| 

$C$RL44:   ; CALL OCCURS {_isequal} {0}      ; |67| 
           MVKL    .S2     0x3ddb7cdf,B7
           MVKL    .S2     0xd9d7bdbb,B6
           MVKH    .S2     0x3ddb7cdf,B7

           STW     .D2T1   A4,*+B10(8)       ; |67| 
||         LDW     .D1T2   *+A15(12),B4      ; |68| 
||         MVKH    .S2     0xd9d7bdbb,B6

           CALLP   .S2     _isequal,B3
||         LDW     .D1T1   *A15,A4           ; |68| 
||         MVK     .S1     0x80,A6           ; |68| 
||         MVK     .L1     0x1,A8            ; |68| 

$C$RL45:   ; CALL OCCURS {_isequal} {0}      ; |68| 
           LDW     .D2T1   *+SP(108),A3      ; |68| 
           MVKL    .S2     0xd9d7bdbb,B6
           MVKL    .S2     0x3ddb7cdf,B7

           STW     .D2T1   A4,*+B10(12)      ; |68| 
||         MVKH    .S2     0xd9d7bdbb,B6

           LDW     .D1T1   *A15,A4           ; |69| 
||         MVKH    .S2     0x3ddb7cdf,B7

           CALLP   .S2     _isequal,B3
||         LDW     .D1T2   *A3,B4            ; |69| 
||         MVK     .S1     0x80,A6           ; |69| 
||         MVK     .L1     0x1,A8            ; |69| 

$C$RL46:   ; CALL OCCURS {_isequal} {0}      ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
           LDW     .D2T2   *+SP(112),B4      ; |69| 
           STW     .D2T1   A4,*+B10(16)      ; |69| 
           NOP             3
           LDW     .D2T2   *B4,B0            ; |72| 
           LDW     .D2T2   *+SP(116),B4
           NOP             3

   [!B0]   B       .S1     $C$L16            ; |72| 
||         MV      .L2     B0,B1             ; guard predicate rewrite

   [ B0]   LDW     .D2T2   *B4,B0            ; |72| 
   [ B1]   ADD     .L2     4,B4,B4
           NOP             3
           ; BRANCHCC OCCURS {$C$L16}        ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
   [!B0]   MV      .L1     A12,A0            ; |72| 
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
           NOP             1
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1
   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
   [ A0]   B       .S1     $C$L17            ; |72| 
   [ A0]   CALL    .S1     _print_test_results ; |231| 
           MVK     .L1     0x1,A3            ; |72| 
   [ A0]   MVKL    .S1     _all_pass,A4
   [ A0]   MVKH    .S1     _all_pass,A4
           NOP             1
           ; BRANCHCC OCCURS {$C$L17}        ; |72| 
;** --------------------------------------------------------------------------*
$C$L16:    
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     _print_test_results ; |231| 
           MVKL    .S1     _all_pass,A4
           MVKH    .S1     _all_pass,A4
           MV      .L1     A12,A3
           NOP             1
;** --------------------------------------------------------------------------*
$C$L17:    
;          EXCLUSIVE CPU CYCLES: 1

           STW     .D1T1   A3,*A4            ; |72| 
||         MVK     .L1     0x2,A4            ; |231| 
||         ADDKPC  .S2     $C$RL47,B3,0      ; |231| 

$C$RL47:   ; CALL OCCURS {_print_test_results} {0}  ; |231| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 30
           MVKL    .S2     $C$SL2+0,B4
           MVKH    .S2     $C$SL2+0,B4

           CALLP   .S2     _printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |232| 

$C$RL48:   ; CALL OCCURS {_printf} {0}       ; |232| 
           MVKL    .S2     $C$SL3+0,B4
           MVKH    .S2     $C$SL3+0,B4

           CALLP   .S2     _printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |232| 

$C$RL49:   ; CALL OCCURS {_printf} {0}       ; |232| 
           MVKL    .S1     $C$SL1+0,A10
           MVKH    .S1     $C$SL1+0,A10

           CALLP   .S2     _print_profile_results,B3
||         MV      .L1     A10,A4            ; |239| 

$C$RL50:   ; CALL OCCURS {_print_profile_results} {0}  ; |239| 

           CALLP   .S2     _print_memory_results,B3
||         MV      .L1     A10,A4            ; |242| 

$C$RL51:   ; CALL OCCURS {_print_memory_results} {0}  ; |242| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 12
           ADDK    .S2     248,SP            ; |243| 
           LDW     .D2T2   *++SP(8),B3       ; |243| 
           LDDW    .D2T1   *++SP,A13:A12     ; |243| 
           LDDW    .D2T1   *++SP,A15:A14     ; |243| 
           LDDW    .D2T2   *++SP,B11:B10     ; |243| 
           LDDW    .D2T2   *++SP,B13:B12     ; |243| 

           LDW     .D2T1   *++SP(8),A10      ; |243| 
||         RET     .S2     B3                ; |243| 

           LDW     .D2T1   *++SP(8),A11      ; |243| 
           NOP             4
           ; BRANCH OCCURS {B3}              ; |243| 
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"exp10DP",0
$C$SL2:	.string	"----------------------------------------",0
$C$SL3:	.string	"----------------------------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	_printf
	.global	_exp10
	.global	_driver_init
	.global	_print_profile_results
	.global	_print_memory_results
	.global	_print_test_results
	.global	_gimme_random
	.global	_isequal
	.global	_exp10dp
	.global	_exp10dp_c
	.global	_exp10dp_v
	.global	_t_start
	.global	_t_stop
	.global	_t_offset
	.global	_cycle_counts
	.global	_fcn_pass
	.global	_all_pass
	.global	_a_ext
	.global	_a_sc
	.global	_output
	.global	_input
	.global	__fltllif
	.global	__fixdlli

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "TI", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)
