/***************************************************************************** 
*            TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION          
*                          
*   Property of Texas Instruments                  
*   For  Unrestricted  Internal  Use  Only               
*   Unauthorized reproduction and/or distribution is strictly prohibited.      
*   This product is protected under copyright law and trade secret law         
*   as an unpublished work.                    
*   Created 2005, (C) Copyright 2005 Texas Instruments.  All rights reserved.
*                      
*          ***** PROVISIONAL CODE - FOR DEMONSTRATION USE ONLY *****
*                    
*   File content:        C Header file containing all level 1 EASI
*                        macro definitions
*
*   Generated by:        EASI-GEN from Beach Solutions Ltd.
*                        
*   Generator version:   Version 3.2.0 build 304
*                        
*   Template version:    Template v1.22 Build
*                        
*   Generation time:     May 21 2005 14:09:53
*                        
*                        
*   Filename:            ICRegAcM.h
*                      
*   Description:         IC register access macros
*                      
*   Module name:         IC
*                       
*   Module version:      v0.3 - 03/07/05
*                   
*****************************************************************************/  

#ifndef _IC_REG_ACM_H
#define _IC_REG_ACM_H

#if defined(__cplusplus)
extern "C" {
#endif  /* defined(__cplusplus) */


#include "GlobalTypes.h"
#include "baseaddress.h"

//#include "EasiGlobal.h"
//#include "EasiBase.h"

#include "ICAccInt.h"


/*****************************************************************************
* EXPORTED DEFINITIONS
******************************************************************************
*/

#if defined(USE_LEVEL_1_MACROS)

#define ICEVTFLAG0ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTFLAG0EF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF0_MASK) >> \
      IC_EVTFLAG0_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF0_MASK) >> \
      IC_EVTFLAG0_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF1_MASK) >> \
      IC_EVTFLAG0_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF1_MASK) >> \
      IC_EVTFLAG0_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF2_MASK) >> \
      IC_EVTFLAG0_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF2_MASK) >> \
      IC_EVTFLAG0_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF3_MASK) >> \
      IC_EVTFLAG0_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF3_MASK) >> \
      IC_EVTFLAG0_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF4_MASK) >> \
      IC_EVTFLAG0_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF4_MASK) >> \
      IC_EVTFLAG0_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF5_MASK) >> \
      IC_EVTFLAG0_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF5_MASK) >> \
      IC_EVTFLAG0_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF6_MASK) >> \
      IC_EVTFLAG0_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF6_MASK) >> \
      IC_EVTFLAG0_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF7_MASK) >> \
      IC_EVTFLAG0_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF7_MASK) >> \
      IC_EVTFLAG0_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF8_MASK) >> \
      IC_EVTFLAG0_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF8_MASK) >> \
      IC_EVTFLAG0_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF9_MASK) >> \
      IC_EVTFLAG0_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF9_MASK) >> \
      IC_EVTFLAG0_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF10_MASK) >> \
      IC_EVTFLAG0_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF10_MASK) >> \
      IC_EVTFLAG0_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF11_MASK) >> \
      IC_EVTFLAG0_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF11_MASK) >> \
      IC_EVTFLAG0_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF12_MASK) >> \
      IC_EVTFLAG0_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF12_MASK) >> \
      IC_EVTFLAG0_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF13_MASK) >> \
      IC_EVTFLAG0_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF13_MASK) >> \
      IC_EVTFLAG0_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF14_MASK) >> \
      IC_EVTFLAG0_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF14_MASK) >> \
      IC_EVTFLAG0_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF15_MASK) >> \
      IC_EVTFLAG0_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF15_MASK) >> \
      IC_EVTFLAG0_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF16_MASK) >> \
      IC_EVTFLAG0_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF16_MASK) >> \
      IC_EVTFLAG0_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF17_MASK) >> \
      IC_EVTFLAG0_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF17_MASK) >> \
      IC_EVTFLAG0_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF18_MASK) >> \
      IC_EVTFLAG0_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF18_MASK) >> \
      IC_EVTFLAG0_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF19_MASK) >> \
      IC_EVTFLAG0_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF19_MASK) >> \
      IC_EVTFLAG0_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF20_MASK) >> \
      IC_EVTFLAG0_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF20_MASK) >> \
      IC_EVTFLAG0_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF21_MASK) >> \
      IC_EVTFLAG0_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF21_MASK) >> \
      IC_EVTFLAG0_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF22_MASK) >> \
      IC_EVTFLAG0_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF22_MASK) >> \
      IC_EVTFLAG0_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF23_MASK) >> \
      IC_EVTFLAG0_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF23_MASK) >> \
      IC_EVTFLAG0_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF24_MASK) >> \
      IC_EVTFLAG0_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF24_MASK) >> \
      IC_EVTFLAG0_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF25_MASK) >> \
      IC_EVTFLAG0_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF25_MASK) >> \
      IC_EVTFLAG0_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF26_MASK) >> \
      IC_EVTFLAG0_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF26_MASK) >> \
      IC_EVTFLAG0_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF27_MASK) >> \
      IC_EVTFLAG0_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF27_MASK) >> \
      IC_EVTFLAG0_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF28_MASK) >> \
      IC_EVTFLAG0_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF28_MASK) >> \
      IC_EVTFLAG0_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF29_MASK) >> \
      IC_EVTFLAG0_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF29_MASK) >> \
      IC_EVTFLAG0_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF30_MASK) >> \
      IC_EVTFLAG0_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF30_MASK) >> \
      IC_EVTFLAG0_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG0_EF31_MASK) >> \
      IC_EVTFLAG0_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG0EF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG0_EF31_MASK) >> \
      IC_EVTFLAG0_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTFLAG1EF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF0_MASK) >> \
      IC_EVTFLAG1_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF0_MASK) >> \
      IC_EVTFLAG1_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF1_MASK) >> \
      IC_EVTFLAG1_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF1_MASK) >> \
      IC_EVTFLAG1_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF2_MASK) >> \
      IC_EVTFLAG1_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF2_MASK) >> \
      IC_EVTFLAG1_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF3_MASK) >> \
      IC_EVTFLAG1_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF3_MASK) >> \
      IC_EVTFLAG1_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF4_MASK) >> \
      IC_EVTFLAG1_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF4_MASK) >> \
      IC_EVTFLAG1_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF5_MASK) >> \
      IC_EVTFLAG1_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF5_MASK) >> \
      IC_EVTFLAG1_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF6_MASK) >> \
      IC_EVTFLAG1_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF6_MASK) >> \
      IC_EVTFLAG1_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF7_MASK) >> \
      IC_EVTFLAG1_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF7_MASK) >> \
      IC_EVTFLAG1_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF8_MASK) >> \
      IC_EVTFLAG1_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF8_MASK) >> \
      IC_EVTFLAG1_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF9_MASK) >> \
      IC_EVTFLAG1_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF9_MASK) >> \
      IC_EVTFLAG1_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF10_MASK) >> \
      IC_EVTFLAG1_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF10_MASK) >> \
      IC_EVTFLAG1_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF11_MASK) >> \
      IC_EVTFLAG1_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF11_MASK) >> \
      IC_EVTFLAG1_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF12_MASK) >> \
      IC_EVTFLAG1_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF12_MASK) >> \
      IC_EVTFLAG1_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF13_MASK) >> \
      IC_EVTFLAG1_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF13_MASK) >> \
      IC_EVTFLAG1_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF14_MASK) >> \
      IC_EVTFLAG1_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF14_MASK) >> \
      IC_EVTFLAG1_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF15_MASK) >> \
      IC_EVTFLAG1_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF15_MASK) >> \
      IC_EVTFLAG1_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF16_MASK) >> \
      IC_EVTFLAG1_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF16_MASK) >> \
      IC_EVTFLAG1_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF17_MASK) >> \
      IC_EVTFLAG1_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF17_MASK) >> \
      IC_EVTFLAG1_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF18_MASK) >> \
      IC_EVTFLAG1_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF18_MASK) >> \
      IC_EVTFLAG1_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF19_MASK) >> \
      IC_EVTFLAG1_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF19_MASK) >> \
      IC_EVTFLAG1_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF20_MASK) >> \
      IC_EVTFLAG1_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF20_MASK) >> \
      IC_EVTFLAG1_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF21_MASK) >> \
      IC_EVTFLAG1_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF21_MASK) >> \
      IC_EVTFLAG1_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF22_MASK) >> \
      IC_EVTFLAG1_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF22_MASK) >> \
      IC_EVTFLAG1_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF23_MASK) >> \
      IC_EVTFLAG1_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF23_MASK) >> \
      IC_EVTFLAG1_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF24_MASK) >> \
      IC_EVTFLAG1_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF24_MASK) >> \
      IC_EVTFLAG1_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF25_MASK) >> \
      IC_EVTFLAG1_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF25_MASK) >> \
      IC_EVTFLAG1_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF26_MASK) >> \
      IC_EVTFLAG1_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF26_MASK) >> \
      IC_EVTFLAG1_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF27_MASK) >> \
      IC_EVTFLAG1_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF27_MASK) >> \
      IC_EVTFLAG1_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF28_MASK) >> \
      IC_EVTFLAG1_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF28_MASK) >> \
      IC_EVTFLAG1_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF29_MASK) >> \
      IC_EVTFLAG1_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF29_MASK) >> \
      IC_EVTFLAG1_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF30_MASK) >> \
      IC_EVTFLAG1_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF30_MASK) >> \
      IC_EVTFLAG1_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG1_EF31_MASK) >> \
      IC_EVTFLAG1_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG1EF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG1_EF31_MASK) >> \
      IC_EVTFLAG1_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG2ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTFLAG2EF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF0_MASK) >> \
      IC_EVTFLAG2_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF0_MASK) >> \
      IC_EVTFLAG2_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF1_MASK) >> \
      IC_EVTFLAG2_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF1_MASK) >> \
      IC_EVTFLAG2_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF2_MASK) >> \
      IC_EVTFLAG2_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF2_MASK) >> \
      IC_EVTFLAG2_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF3_MASK) >> \
      IC_EVTFLAG2_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF3_MASK) >> \
      IC_EVTFLAG2_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF4_MASK) >> \
      IC_EVTFLAG2_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF4_MASK) >> \
      IC_EVTFLAG2_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF5_MASK) >> \
      IC_EVTFLAG2_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF5_MASK) >> \
      IC_EVTFLAG2_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF6_MASK) >> \
      IC_EVTFLAG2_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF6_MASK) >> \
      IC_EVTFLAG2_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF7_MASK) >> \
      IC_EVTFLAG2_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF7_MASK) >> \
      IC_EVTFLAG2_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF8_MASK) >> \
      IC_EVTFLAG2_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF8_MASK) >> \
      IC_EVTFLAG2_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF9_MASK) >> \
      IC_EVTFLAG2_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF9_MASK) >> \
      IC_EVTFLAG2_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF10_MASK) >> \
      IC_EVTFLAG2_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF10_MASK) >> \
      IC_EVTFLAG2_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF11_MASK) >> \
      IC_EVTFLAG2_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF11_MASK) >> \
      IC_EVTFLAG2_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF12_MASK) >> \
      IC_EVTFLAG2_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF12_MASK) >> \
      IC_EVTFLAG2_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF13_MASK) >> \
      IC_EVTFLAG2_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF13_MASK) >> \
      IC_EVTFLAG2_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF14_MASK) >> \
      IC_EVTFLAG2_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF14_MASK) >> \
      IC_EVTFLAG2_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF15_MASK) >> \
      IC_EVTFLAG2_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF15_MASK) >> \
      IC_EVTFLAG2_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF16_MASK) >> \
      IC_EVTFLAG2_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF16_MASK) >> \
      IC_EVTFLAG2_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF17_MASK) >> \
      IC_EVTFLAG2_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF17_MASK) >> \
      IC_EVTFLAG2_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF18_MASK) >> \
      IC_EVTFLAG2_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF18_MASK) >> \
      IC_EVTFLAG2_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF19_MASK) >> \
      IC_EVTFLAG2_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF19_MASK) >> \
      IC_EVTFLAG2_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF20_MASK) >> \
      IC_EVTFLAG2_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF20_MASK) >> \
      IC_EVTFLAG2_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF21_MASK) >> \
      IC_EVTFLAG2_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF21_MASK) >> \
      IC_EVTFLAG2_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF22_MASK) >> \
      IC_EVTFLAG2_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF22_MASK) >> \
      IC_EVTFLAG2_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF23_MASK) >> \
      IC_EVTFLAG2_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF23_MASK) >> \
      IC_EVTFLAG2_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF24_MASK) >> \
      IC_EVTFLAG2_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF24_MASK) >> \
      IC_EVTFLAG2_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF25_MASK) >> \
      IC_EVTFLAG2_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF25_MASK) >> \
      IC_EVTFLAG2_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF26_MASK) >> \
      IC_EVTFLAG2_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF26_MASK) >> \
      IC_EVTFLAG2_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF27_MASK) >> \
      IC_EVTFLAG2_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF27_MASK) >> \
      IC_EVTFLAG2_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF28_MASK) >> \
      IC_EVTFLAG2_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF28_MASK) >> \
      IC_EVTFLAG2_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF29_MASK) >> \
      IC_EVTFLAG2_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF29_MASK) >> \
      IC_EVTFLAG2_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF30_MASK) >> \
      IC_EVTFLAG2_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF30_MASK) >> \
      IC_EVTFLAG2_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG2_EF31_MASK) >> \
      IC_EVTFLAG2_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG2EF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG2_EF31_MASK) >> \
      IC_EVTFLAG2_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG3ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTFLAG3EF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF0_MASK) >> \
      IC_EVTFLAG3_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF0_MASK) >> \
      IC_EVTFLAG3_EF0_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF1_MASK) >> \
      IC_EVTFLAG3_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF1_MASK) >> \
      IC_EVTFLAG3_EF1_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF2_MASK) >> \
      IC_EVTFLAG3_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF2_MASK) >> \
      IC_EVTFLAG3_EF2_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF3_MASK) >> \
      IC_EVTFLAG3_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF3_MASK) >> \
      IC_EVTFLAG3_EF3_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF4_MASK) >> \
      IC_EVTFLAG3_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF4_MASK) >> \
      IC_EVTFLAG3_EF4_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF5_MASK) >> \
      IC_EVTFLAG3_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF5_MASK) >> \
      IC_EVTFLAG3_EF5_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF6_MASK) >> \
      IC_EVTFLAG3_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF6_MASK) >> \
      IC_EVTFLAG3_EF6_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF7_MASK) >> \
      IC_EVTFLAG3_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF7_MASK) >> \
      IC_EVTFLAG3_EF7_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF8_MASK) >> \
      IC_EVTFLAG3_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF8_MASK) >> \
      IC_EVTFLAG3_EF8_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF9_MASK) >> \
      IC_EVTFLAG3_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF9_MASK) >> \
      IC_EVTFLAG3_EF9_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF10_MASK) >> \
      IC_EVTFLAG3_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF10_MASK) >> \
      IC_EVTFLAG3_EF10_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF11_MASK) >> \
      IC_EVTFLAG3_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF11_MASK) >> \
      IC_EVTFLAG3_EF11_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF12_MASK) >> \
      IC_EVTFLAG3_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF12_MASK) >> \
      IC_EVTFLAG3_EF12_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF13_MASK) >> \
      IC_EVTFLAG3_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF13_MASK) >> \
      IC_EVTFLAG3_EF13_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF14_MASK) >> \
      IC_EVTFLAG3_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF14_MASK) >> \
      IC_EVTFLAG3_EF14_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF15_MASK) >> \
      IC_EVTFLAG3_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF15_MASK) >> \
      IC_EVTFLAG3_EF15_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF16_MASK) >> \
      IC_EVTFLAG3_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF16_MASK) >> \
      IC_EVTFLAG3_EF16_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF17_MASK) >> \
      IC_EVTFLAG3_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF17_MASK) >> \
      IC_EVTFLAG3_EF17_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF18_MASK) >> \
      IC_EVTFLAG3_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF18_MASK) >> \
      IC_EVTFLAG3_EF18_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF19_MASK) >> \
      IC_EVTFLAG3_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF19_MASK) >> \
      IC_EVTFLAG3_EF19_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF20_MASK) >> \
      IC_EVTFLAG3_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF20_MASK) >> \
      IC_EVTFLAG3_EF20_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF21_MASK) >> \
      IC_EVTFLAG3_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF21_MASK) >> \
      IC_EVTFLAG3_EF21_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF22_MASK) >> \
      IC_EVTFLAG3_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF22_MASK) >> \
      IC_EVTFLAG3_EF22_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF23_MASK) >> \
      IC_EVTFLAG3_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF23_MASK) >> \
      IC_EVTFLAG3_EF23_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF24_MASK) >> \
      IC_EVTFLAG3_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF24_MASK) >> \
      IC_EVTFLAG3_EF24_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF25_MASK) >> \
      IC_EVTFLAG3_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF25_MASK) >> \
      IC_EVTFLAG3_EF25_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF26_MASK) >> \
      IC_EVTFLAG3_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF26_MASK) >> \
      IC_EVTFLAG3_EF26_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF27_MASK) >> \
      IC_EVTFLAG3_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF27_MASK) >> \
      IC_EVTFLAG3_EF27_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF28_MASK) >> \
      IC_EVTFLAG3_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF28_MASK) >> \
      IC_EVTFLAG3_EF28_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF29_MASK) >> \
      IC_EVTFLAG3_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF29_MASK) >> \
      IC_EVTFLAG3_EF29_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF30_MASK) >> \
      IC_EVTFLAG3_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF30_MASK) >> \
      IC_EVTFLAG3_EF30_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTFLAG3_EF31_MASK) >> \
      IC_EVTFLAG3_EF31_OFFSET))


/********************************************************************/


#define ICEVTFLAG3EF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTFLAG3_EF31_MASK) >> \
      IC_EVTFLAG3_EF31_OFFSET))


/********************************************************************/


#define ICEVTSET0WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES0_MASK);\
    newValue <<= IC_EVTSET0_ES0_OFFSET;\
    newValue &= IC_EVTSET0_ES0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES0_OFFSET) &\
      IC_EVTSET0_ES0_MASK)))


/********************************************************************/


#define ICEVTSET0ES1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES1_MASK);\
    newValue <<= IC_EVTSET0_ES1_OFFSET;\
    newValue &= IC_EVTSET0_ES1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES1_OFFSET) &\
      IC_EVTSET0_ES1_MASK)))


/********************************************************************/


#define ICEVTSET0ES2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES2_MASK);\
    newValue <<= IC_EVTSET0_ES2_OFFSET;\
    newValue &= IC_EVTSET0_ES2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES2_OFFSET) &\
      IC_EVTSET0_ES2_MASK)))


/********************************************************************/


#define ICEVTSET0ES3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES3_MASK);\
    newValue <<= IC_EVTSET0_ES3_OFFSET;\
    newValue &= IC_EVTSET0_ES3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES3_OFFSET) &\
      IC_EVTSET0_ES3_MASK)))


/********************************************************************/


#define ICEVTSET0ES4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES4_MASK);\
    newValue <<= IC_EVTSET0_ES4_OFFSET;\
    newValue &= IC_EVTSET0_ES4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES4_OFFSET) &\
      IC_EVTSET0_ES4_MASK)))


/********************************************************************/


#define ICEVTSET0ES5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES5_MASK);\
    newValue <<= IC_EVTSET0_ES5_OFFSET;\
    newValue &= IC_EVTSET0_ES5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES5_OFFSET) &\
      IC_EVTSET0_ES5_MASK)))


/********************************************************************/


#define ICEVTSET0ES6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES6_MASK);\
    newValue <<= IC_EVTSET0_ES6_OFFSET;\
    newValue &= IC_EVTSET0_ES6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES6_OFFSET) &\
      IC_EVTSET0_ES6_MASK)))


/********************************************************************/


#define ICEVTSET0ES7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES7_MASK);\
    newValue <<= IC_EVTSET0_ES7_OFFSET;\
    newValue &= IC_EVTSET0_ES7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES7_OFFSET) &\
      IC_EVTSET0_ES7_MASK)))


/********************************************************************/


#define ICEVTSET0ES8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES8_MASK);\
    newValue <<= IC_EVTSET0_ES8_OFFSET;\
    newValue &= IC_EVTSET0_ES8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES8_OFFSET) &\
      IC_EVTSET0_ES8_MASK)))


/********************************************************************/


#define ICEVTSET0ES9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES9_MASK);\
    newValue <<= IC_EVTSET0_ES9_OFFSET;\
    newValue &= IC_EVTSET0_ES9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES9_OFFSET) &\
      IC_EVTSET0_ES9_MASK)))


/********************************************************************/


#define ICEVTSET0ES10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES10_MASK);\
    newValue <<= IC_EVTSET0_ES10_OFFSET;\
    newValue &= IC_EVTSET0_ES10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES10_OFFSET) &\
      IC_EVTSET0_ES10_MASK)))


/********************************************************************/


#define ICEVTSET0ES11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES11_MASK);\
    newValue <<= IC_EVTSET0_ES11_OFFSET;\
    newValue &= IC_EVTSET0_ES11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES11_OFFSET) &\
      IC_EVTSET0_ES11_MASK)))


/********************************************************************/


#define ICEVTSET0ES12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES12_MASK);\
    newValue <<= IC_EVTSET0_ES12_OFFSET;\
    newValue &= IC_EVTSET0_ES12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES12_OFFSET) &\
      IC_EVTSET0_ES12_MASK)))


/********************************************************************/


#define ICEVTSET0ES13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES13_MASK);\
    newValue <<= IC_EVTSET0_ES13_OFFSET;\
    newValue &= IC_EVTSET0_ES13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES13_OFFSET) &\
      IC_EVTSET0_ES13_MASK)))


/********************************************************************/


#define ICEVTSET0ES14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES14_MASK);\
    newValue <<= IC_EVTSET0_ES14_OFFSET;\
    newValue &= IC_EVTSET0_ES14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES14_OFFSET) &\
      IC_EVTSET0_ES14_MASK)))


/********************************************************************/


#define ICEVTSET0ES15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES15_MASK);\
    newValue <<= IC_EVTSET0_ES15_OFFSET;\
    newValue &= IC_EVTSET0_ES15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES15_OFFSET) &\
      IC_EVTSET0_ES15_MASK)))


/********************************************************************/


#define ICEVTSET0ES16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES16_MASK);\
    newValue <<= IC_EVTSET0_ES16_OFFSET;\
    newValue &= IC_EVTSET0_ES16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES16_OFFSET) &\
      IC_EVTSET0_ES16_MASK)))


/********************************************************************/


#define ICEVTSET0ES17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES17_MASK);\
    newValue <<= IC_EVTSET0_ES17_OFFSET;\
    newValue &= IC_EVTSET0_ES17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES17_OFFSET) &\
      IC_EVTSET0_ES17_MASK)))


/********************************************************************/


#define ICEVTSET0ES18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES18_MASK);\
    newValue <<= IC_EVTSET0_ES18_OFFSET;\
    newValue &= IC_EVTSET0_ES18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES18_OFFSET) &\
      IC_EVTSET0_ES18_MASK)))


/********************************************************************/


#define ICEVTSET0ES19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES19_MASK);\
    newValue <<= IC_EVTSET0_ES19_OFFSET;\
    newValue &= IC_EVTSET0_ES19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES19_OFFSET) &\
      IC_EVTSET0_ES19_MASK)))


/********************************************************************/


#define ICEVTSET0ES20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES20_MASK);\
    newValue <<= IC_EVTSET0_ES20_OFFSET;\
    newValue &= IC_EVTSET0_ES20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES20_OFFSET) &\
      IC_EVTSET0_ES20_MASK)))


/********************************************************************/


#define ICEVTSET0ES21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES21_MASK);\
    newValue <<= IC_EVTSET0_ES21_OFFSET;\
    newValue &= IC_EVTSET0_ES21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES21_OFFSET) &\
      IC_EVTSET0_ES21_MASK)))


/********************************************************************/


#define ICEVTSET0ES22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES22_MASK);\
    newValue <<= IC_EVTSET0_ES22_OFFSET;\
    newValue &= IC_EVTSET0_ES22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES22_OFFSET) &\
      IC_EVTSET0_ES22_MASK)))


/********************************************************************/


#define ICEVTSET0ES23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES23_MASK);\
    newValue <<= IC_EVTSET0_ES23_OFFSET;\
    newValue &= IC_EVTSET0_ES23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES23_OFFSET) &\
      IC_EVTSET0_ES23_MASK)))


/********************************************************************/


#define ICEVTSET0ES24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES24_MASK);\
    newValue <<= IC_EVTSET0_ES24_OFFSET;\
    newValue &= IC_EVTSET0_ES24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES24_OFFSET) &\
      IC_EVTSET0_ES24_MASK)))


/********************************************************************/


#define ICEVTSET0ES25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES25_MASK);\
    newValue <<= IC_EVTSET0_ES25_OFFSET;\
    newValue &= IC_EVTSET0_ES25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES25_OFFSET) &\
      IC_EVTSET0_ES25_MASK)))


/********************************************************************/


#define ICEVTSET0ES26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES26_MASK);\
    newValue <<= IC_EVTSET0_ES26_OFFSET;\
    newValue &= IC_EVTSET0_ES26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES26_OFFSET) &\
      IC_EVTSET0_ES26_MASK)))


/********************************************************************/


#define ICEVTSET0ES27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES27_MASK);\
    newValue <<= IC_EVTSET0_ES27_OFFSET;\
    newValue &= IC_EVTSET0_ES27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES27_OFFSET) &\
      IC_EVTSET0_ES27_MASK)))


/********************************************************************/


#define ICEVTSET0ES28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES28_MASK);\
    newValue <<= IC_EVTSET0_ES28_OFFSET;\
    newValue &= IC_EVTSET0_ES28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES28_OFFSET) &\
      IC_EVTSET0_ES28_MASK)))


/********************************************************************/


#define ICEVTSET0ES29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES29_MASK);\
    newValue <<= IC_EVTSET0_ES29_OFFSET;\
    newValue &= IC_EVTSET0_ES29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES29_OFFSET) &\
      IC_EVTSET0_ES29_MASK)))


/********************************************************************/


#define ICEVTSET0ES30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES30_MASK);\
    newValue <<= IC_EVTSET0_ES30_OFFSET;\
    newValue &= IC_EVTSET0_ES30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES30_OFFSET) &\
      IC_EVTSET0_ES30_MASK)))


/********************************************************************/


#define ICEVTSET0ES31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET0_ES31_MASK);\
    newValue <<= IC_EVTSET0_ES31_OFFSET;\
    newValue &= IC_EVTSET0_ES31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET0ES31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET0_ES31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET0_ES31_OFFSET) &\
      IC_EVTSET0_ES31_MASK)))


/********************************************************************/


#define ICEVTSET1WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES32Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES32_MASK);\
    newValue <<= IC_EVTSET1_ES32_OFFSET;\
    newValue &= IC_EVTSET1_ES32_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES32Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES32_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES32_OFFSET) &\
      IC_EVTSET1_ES32_MASK)))


/********************************************************************/


#define ICEVTSET1ES33Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES33_MASK);\
    newValue <<= IC_EVTSET1_ES33_OFFSET;\
    newValue &= IC_EVTSET1_ES33_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES33Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES33_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES33_OFFSET) &\
      IC_EVTSET1_ES33_MASK)))


/********************************************************************/


#define ICEVTSET1ES34Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES34_MASK);\
    newValue <<= IC_EVTSET1_ES34_OFFSET;\
    newValue &= IC_EVTSET1_ES34_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES34Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES34_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES34_OFFSET) &\
      IC_EVTSET1_ES34_MASK)))


/********************************************************************/


#define ICEVTSET1ES35Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES35_MASK);\
    newValue <<= IC_EVTSET1_ES35_OFFSET;\
    newValue &= IC_EVTSET1_ES35_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES35Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES35_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES35_OFFSET) &\
      IC_EVTSET1_ES35_MASK)))


/********************************************************************/


#define ICEVTSET1ES36Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES36_MASK);\
    newValue <<= IC_EVTSET1_ES36_OFFSET;\
    newValue &= IC_EVTSET1_ES36_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES36Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES36_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES36_OFFSET) &\
      IC_EVTSET1_ES36_MASK)))


/********************************************************************/


#define ICEVTSET1ES37Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES37_MASK);\
    newValue <<= IC_EVTSET1_ES37_OFFSET;\
    newValue &= IC_EVTSET1_ES37_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES37Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES37_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES37_OFFSET) &\
      IC_EVTSET1_ES37_MASK)))


/********************************************************************/


#define ICEVTSET1ES38Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES38_MASK);\
    newValue <<= IC_EVTSET1_ES38_OFFSET;\
    newValue &= IC_EVTSET1_ES38_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES38Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES38_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES38_OFFSET) &\
      IC_EVTSET1_ES38_MASK)))


/********************************************************************/


#define ICEVTSET1ES39Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES39_MASK);\
    newValue <<= IC_EVTSET1_ES39_OFFSET;\
    newValue &= IC_EVTSET1_ES39_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES39Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES39_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES39_OFFSET) &\
      IC_EVTSET1_ES39_MASK)))


/********************************************************************/


#define ICEVTSET1ES40Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES40_MASK);\
    newValue <<= IC_EVTSET1_ES40_OFFSET;\
    newValue &= IC_EVTSET1_ES40_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES40Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES40_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES40_OFFSET) &\
      IC_EVTSET1_ES40_MASK)))


/********************************************************************/


#define ICEVTSET1ES41Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES41_MASK);\
    newValue <<= IC_EVTSET1_ES41_OFFSET;\
    newValue &= IC_EVTSET1_ES41_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES41Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES41_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES41_OFFSET) &\
      IC_EVTSET1_ES41_MASK)))


/********************************************************************/


#define ICEVTSET1ES42Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES42_MASK);\
    newValue <<= IC_EVTSET1_ES42_OFFSET;\
    newValue &= IC_EVTSET1_ES42_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES42Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES42_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES42_OFFSET) &\
      IC_EVTSET1_ES42_MASK)))


/********************************************************************/


#define ICEVTSET1ES43Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES43_MASK);\
    newValue <<= IC_EVTSET1_ES43_OFFSET;\
    newValue &= IC_EVTSET1_ES43_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES43Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES43_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES43_OFFSET) &\
      IC_EVTSET1_ES43_MASK)))


/********************************************************************/


#define ICEVTSET1ES44Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES44_MASK);\
    newValue <<= IC_EVTSET1_ES44_OFFSET;\
    newValue &= IC_EVTSET1_ES44_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES44Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES44_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES44_OFFSET) &\
      IC_EVTSET1_ES44_MASK)))


/********************************************************************/


#define ICEVTSET1ES45Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES45_MASK);\
    newValue <<= IC_EVTSET1_ES45_OFFSET;\
    newValue &= IC_EVTSET1_ES45_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES45Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES45_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES45_OFFSET) &\
      IC_EVTSET1_ES45_MASK)))


/********************************************************************/


#define ICEVTSET1ES46Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES46_MASK);\
    newValue <<= IC_EVTSET1_ES46_OFFSET;\
    newValue &= IC_EVTSET1_ES46_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES46Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES46_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES46_OFFSET) &\
      IC_EVTSET1_ES46_MASK)))


/********************************************************************/


#define ICEVTSET1ES47Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES47_MASK);\
    newValue <<= IC_EVTSET1_ES47_OFFSET;\
    newValue &= IC_EVTSET1_ES47_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES47Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES47_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES47_OFFSET) &\
      IC_EVTSET1_ES47_MASK)))


/********************************************************************/


#define ICEVTSET1ES48Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES48_MASK);\
    newValue <<= IC_EVTSET1_ES48_OFFSET;\
    newValue &= IC_EVTSET1_ES48_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES48Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES48_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES48_OFFSET) &\
      IC_EVTSET1_ES48_MASK)))


/********************************************************************/


#define ICEVTSET1ES49Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES49_MASK);\
    newValue <<= IC_EVTSET1_ES49_OFFSET;\
    newValue &= IC_EVTSET1_ES49_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES49Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES49_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES49_OFFSET) &\
      IC_EVTSET1_ES49_MASK)))


/********************************************************************/


#define ICEVTSET1ES50Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES50_MASK);\
    newValue <<= IC_EVTSET1_ES50_OFFSET;\
    newValue &= IC_EVTSET1_ES50_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES50Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES50_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES50_OFFSET) &\
      IC_EVTSET1_ES50_MASK)))


/********************************************************************/


#define ICEVTSET1ES51Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES51_MASK);\
    newValue <<= IC_EVTSET1_ES51_OFFSET;\
    newValue &= IC_EVTSET1_ES51_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES51Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES51_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES51_OFFSET) &\
      IC_EVTSET1_ES51_MASK)))


/********************************************************************/


#define ICEVTSET1ES52Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES52_MASK);\
    newValue <<= IC_EVTSET1_ES52_OFFSET;\
    newValue &= IC_EVTSET1_ES52_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES52Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES52_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES52_OFFSET) &\
      IC_EVTSET1_ES52_MASK)))


/********************************************************************/


#define ICEVTSET1ES53Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES53_MASK);\
    newValue <<= IC_EVTSET1_ES53_OFFSET;\
    newValue &= IC_EVTSET1_ES53_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES53Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES53_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES53_OFFSET) &\
      IC_EVTSET1_ES53_MASK)))


/********************************************************************/


#define ICEVTSET1ES54Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES54_MASK);\
    newValue <<= IC_EVTSET1_ES54_OFFSET;\
    newValue &= IC_EVTSET1_ES54_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES54Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES54_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES54_OFFSET) &\
      IC_EVTSET1_ES54_MASK)))


/********************************************************************/


#define ICEVTSET1ES55Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES55_MASK);\
    newValue <<= IC_EVTSET1_ES55_OFFSET;\
    newValue &= IC_EVTSET1_ES55_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES55Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES55_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES55_OFFSET) &\
      IC_EVTSET1_ES55_MASK)))


/********************************************************************/


#define ICEVTSET1ES56Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES56_MASK);\
    newValue <<= IC_EVTSET1_ES56_OFFSET;\
    newValue &= IC_EVTSET1_ES56_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES56Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES56_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES56_OFFSET) &\
      IC_EVTSET1_ES56_MASK)))


/********************************************************************/


#define ICEVTSET1ES57Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES57_MASK);\
    newValue <<= IC_EVTSET1_ES57_OFFSET;\
    newValue &= IC_EVTSET1_ES57_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES57Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES57_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES57_OFFSET) &\
      IC_EVTSET1_ES57_MASK)))


/********************************************************************/


#define ICEVTSET1ES58Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES58_MASK);\
    newValue <<= IC_EVTSET1_ES58_OFFSET;\
    newValue &= IC_EVTSET1_ES58_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES58Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES58_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES58_OFFSET) &\
      IC_EVTSET1_ES58_MASK)))


/********************************************************************/


#define ICEVTSET1ES59Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES59_MASK);\
    newValue <<= IC_EVTSET1_ES59_OFFSET;\
    newValue &= IC_EVTSET1_ES59_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES59Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES59_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES59_OFFSET) &\
      IC_EVTSET1_ES59_MASK)))


/********************************************************************/


#define ICEVTSET1ES60Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES60_MASK);\
    newValue <<= IC_EVTSET1_ES60_OFFSET;\
    newValue &= IC_EVTSET1_ES60_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES60Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES60_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES60_OFFSET) &\
      IC_EVTSET1_ES60_MASK)))


/********************************************************************/


#define ICEVTSET1ES61Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES61_MASK);\
    newValue <<= IC_EVTSET1_ES61_OFFSET;\
    newValue &= IC_EVTSET1_ES61_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES61Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES61_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES61_OFFSET) &\
      IC_EVTSET1_ES61_MASK)))


/********************************************************************/


#define ICEVTSET1ES62Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES62_MASK);\
    newValue <<= IC_EVTSET1_ES62_OFFSET;\
    newValue &= IC_EVTSET1_ES62_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES62Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES62_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES62_OFFSET) &\
      IC_EVTSET1_ES62_MASK)))


/********************************************************************/


#define ICEVTSET1ES63Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET1_ES63_MASK);\
    newValue <<= IC_EVTSET1_ES63_OFFSET;\
    newValue &= IC_EVTSET1_ES63_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET1ES63Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET1_ES63_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET1_ES63_OFFSET) &\
      IC_EVTSET1_ES63_MASK)))


/********************************************************************/


#define ICEVTSET2WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES0_MASK);\
    newValue <<= IC_EVTSET2_ES0_OFFSET;\
    newValue &= IC_EVTSET2_ES0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES0_OFFSET) &\
      IC_EVTSET2_ES0_MASK)))


/********************************************************************/


#define ICEVTSET2ES1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES1_MASK);\
    newValue <<= IC_EVTSET2_ES1_OFFSET;\
    newValue &= IC_EVTSET2_ES1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES1_OFFSET) &\
      IC_EVTSET2_ES1_MASK)))


/********************************************************************/


#define ICEVTSET2ES2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES2_MASK);\
    newValue <<= IC_EVTSET2_ES2_OFFSET;\
    newValue &= IC_EVTSET2_ES2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES2_OFFSET) &\
      IC_EVTSET2_ES2_MASK)))


/********************************************************************/


#define ICEVTSET2ES3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES3_MASK);\
    newValue <<= IC_EVTSET2_ES3_OFFSET;\
    newValue &= IC_EVTSET2_ES3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES3_OFFSET) &\
      IC_EVTSET2_ES3_MASK)))


/********************************************************************/


#define ICEVTSET2ES4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES4_MASK);\
    newValue <<= IC_EVTSET2_ES4_OFFSET;\
    newValue &= IC_EVTSET2_ES4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES4_OFFSET) &\
      IC_EVTSET2_ES4_MASK)))


/********************************************************************/


#define ICEVTSET2ES5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES5_MASK);\
    newValue <<= IC_EVTSET2_ES5_OFFSET;\
    newValue &= IC_EVTSET2_ES5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES5_OFFSET) &\
      IC_EVTSET2_ES5_MASK)))


/********************************************************************/


#define ICEVTSET2ES6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES6_MASK);\
    newValue <<= IC_EVTSET2_ES6_OFFSET;\
    newValue &= IC_EVTSET2_ES6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES6_OFFSET) &\
      IC_EVTSET2_ES6_MASK)))


/********************************************************************/


#define ICEVTSET2ES7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES7_MASK);\
    newValue <<= IC_EVTSET2_ES7_OFFSET;\
    newValue &= IC_EVTSET2_ES7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES7_OFFSET) &\
      IC_EVTSET2_ES7_MASK)))


/********************************************************************/


#define ICEVTSET2ES8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES8_MASK);\
    newValue <<= IC_EVTSET2_ES8_OFFSET;\
    newValue &= IC_EVTSET2_ES8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES8_OFFSET) &\
      IC_EVTSET2_ES8_MASK)))


/********************************************************************/


#define ICEVTSET2ES9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES9_MASK);\
    newValue <<= IC_EVTSET2_ES9_OFFSET;\
    newValue &= IC_EVTSET2_ES9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES9_OFFSET) &\
      IC_EVTSET2_ES9_MASK)))


/********************************************************************/


#define ICEVTSET2ES10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES10_MASK);\
    newValue <<= IC_EVTSET2_ES10_OFFSET;\
    newValue &= IC_EVTSET2_ES10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES10_OFFSET) &\
      IC_EVTSET2_ES10_MASK)))


/********************************************************************/


#define ICEVTSET2ES11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES11_MASK);\
    newValue <<= IC_EVTSET2_ES11_OFFSET;\
    newValue &= IC_EVTSET2_ES11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES11_OFFSET) &\
      IC_EVTSET2_ES11_MASK)))


/********************************************************************/


#define ICEVTSET2ES12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES12_MASK);\
    newValue <<= IC_EVTSET2_ES12_OFFSET;\
    newValue &= IC_EVTSET2_ES12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES12_OFFSET) &\
      IC_EVTSET2_ES12_MASK)))


/********************************************************************/


#define ICEVTSET2ES13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES13_MASK);\
    newValue <<= IC_EVTSET2_ES13_OFFSET;\
    newValue &= IC_EVTSET2_ES13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES13_OFFSET) &\
      IC_EVTSET2_ES13_MASK)))


/********************************************************************/


#define ICEVTSET2ES14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES14_MASK);\
    newValue <<= IC_EVTSET2_ES14_OFFSET;\
    newValue &= IC_EVTSET2_ES14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES14_OFFSET) &\
      IC_EVTSET2_ES14_MASK)))


/********************************************************************/


#define ICEVTSET2ES15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES15_MASK);\
    newValue <<= IC_EVTSET2_ES15_OFFSET;\
    newValue &= IC_EVTSET2_ES15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES15_OFFSET) &\
      IC_EVTSET2_ES15_MASK)))


/********************************************************************/


#define ICEVTSET2ES16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES16_MASK);\
    newValue <<= IC_EVTSET2_ES16_OFFSET;\
    newValue &= IC_EVTSET2_ES16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES16_OFFSET) &\
      IC_EVTSET2_ES16_MASK)))


/********************************************************************/


#define ICEVTSET2ES17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES17_MASK);\
    newValue <<= IC_EVTSET2_ES17_OFFSET;\
    newValue &= IC_EVTSET2_ES17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES17_OFFSET) &\
      IC_EVTSET2_ES17_MASK)))


/********************************************************************/


#define ICEVTSET2ES18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES18_MASK);\
    newValue <<= IC_EVTSET2_ES18_OFFSET;\
    newValue &= IC_EVTSET2_ES18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES18_OFFSET) &\
      IC_EVTSET2_ES18_MASK)))


/********************************************************************/


#define ICEVTSET2ES19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES19_MASK);\
    newValue <<= IC_EVTSET2_ES19_OFFSET;\
    newValue &= IC_EVTSET2_ES19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES19_OFFSET) &\
      IC_EVTSET2_ES19_MASK)))


/********************************************************************/


#define ICEVTSET2ES20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES20_MASK);\
    newValue <<= IC_EVTSET2_ES20_OFFSET;\
    newValue &= IC_EVTSET2_ES20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES20_OFFSET) &\
      IC_EVTSET2_ES20_MASK)))


/********************************************************************/


#define ICEVTSET2ES21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES21_MASK);\
    newValue <<= IC_EVTSET2_ES21_OFFSET;\
    newValue &= IC_EVTSET2_ES21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES21_OFFSET) &\
      IC_EVTSET2_ES21_MASK)))


/********************************************************************/


#define ICEVTSET2ES22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES22_MASK);\
    newValue <<= IC_EVTSET2_ES22_OFFSET;\
    newValue &= IC_EVTSET2_ES22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES22_OFFSET) &\
      IC_EVTSET2_ES22_MASK)))


/********************************************************************/


#define ICEVTSET2ES23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES23_MASK);\
    newValue <<= IC_EVTSET2_ES23_OFFSET;\
    newValue &= IC_EVTSET2_ES23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES23_OFFSET) &\
      IC_EVTSET2_ES23_MASK)))


/********************************************************************/


#define ICEVTSET2ES24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES24_MASK);\
    newValue <<= IC_EVTSET2_ES24_OFFSET;\
    newValue &= IC_EVTSET2_ES24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES24_OFFSET) &\
      IC_EVTSET2_ES24_MASK)))


/********************************************************************/


#define ICEVTSET2ES25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES25_MASK);\
    newValue <<= IC_EVTSET2_ES25_OFFSET;\
    newValue &= IC_EVTSET2_ES25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES25_OFFSET) &\
      IC_EVTSET2_ES25_MASK)))


/********************************************************************/


#define ICEVTSET2ES26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES26_MASK);\
    newValue <<= IC_EVTSET2_ES26_OFFSET;\
    newValue &= IC_EVTSET2_ES26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES26_OFFSET) &\
      IC_EVTSET2_ES26_MASK)))


/********************************************************************/


#define ICEVTSET2ES27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES27_MASK);\
    newValue <<= IC_EVTSET2_ES27_OFFSET;\
    newValue &= IC_EVTSET2_ES27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES27_OFFSET) &\
      IC_EVTSET2_ES27_MASK)))


/********************************************************************/


#define ICEVTSET2ES28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES28_MASK);\
    newValue <<= IC_EVTSET2_ES28_OFFSET;\
    newValue &= IC_EVTSET2_ES28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES28_OFFSET) &\
      IC_EVTSET2_ES28_MASK)))


/********************************************************************/


#define ICEVTSET2ES29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES29_MASK);\
    newValue <<= IC_EVTSET2_ES29_OFFSET;\
    newValue &= IC_EVTSET2_ES29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES29_OFFSET) &\
      IC_EVTSET2_ES29_MASK)))


/********************************************************************/


#define ICEVTSET2ES30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES30_MASK);\
    newValue <<= IC_EVTSET2_ES30_OFFSET;\
    newValue &= IC_EVTSET2_ES30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES30_OFFSET) &\
      IC_EVTSET2_ES30_MASK)))


/********************************************************************/


#define ICEVTSET2ES31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET2_ES31_MASK);\
    newValue <<= IC_EVTSET2_ES31_OFFSET;\
    newValue &= IC_EVTSET2_ES31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET2ES31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET2_ES31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET2_ES31_OFFSET) &\
      IC_EVTSET2_ES31_MASK)))


/********************************************************************/


#define ICEVTSET3WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES0_MASK);\
    newValue <<= IC_EVTSET3_ES0_OFFSET;\
    newValue &= IC_EVTSET3_ES0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES0_OFFSET) &\
      IC_EVTSET3_ES0_MASK)))


/********************************************************************/


#define ICEVTSET3ES1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES1_MASK);\
    newValue <<= IC_EVTSET3_ES1_OFFSET;\
    newValue &= IC_EVTSET3_ES1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES1_OFFSET) &\
      IC_EVTSET3_ES1_MASK)))


/********************************************************************/


#define ICEVTSET3ES2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES2_MASK);\
    newValue <<= IC_EVTSET3_ES2_OFFSET;\
    newValue &= IC_EVTSET3_ES2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES2_OFFSET) &\
      IC_EVTSET3_ES2_MASK)))


/********************************************************************/


#define ICEVTSET3ES3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES3_MASK);\
    newValue <<= IC_EVTSET3_ES3_OFFSET;\
    newValue &= IC_EVTSET3_ES3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES3_OFFSET) &\
      IC_EVTSET3_ES3_MASK)))


/********************************************************************/


#define ICEVTSET3ES4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES4_MASK);\
    newValue <<= IC_EVTSET3_ES4_OFFSET;\
    newValue &= IC_EVTSET3_ES4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES4_OFFSET) &\
      IC_EVTSET3_ES4_MASK)))


/********************************************************************/


#define ICEVTSET3ES5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES5_MASK);\
    newValue <<= IC_EVTSET3_ES5_OFFSET;\
    newValue &= IC_EVTSET3_ES5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES5_OFFSET) &\
      IC_EVTSET3_ES5_MASK)))


/********************************************************************/


#define ICEVTSET3ES6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES6_MASK);\
    newValue <<= IC_EVTSET3_ES6_OFFSET;\
    newValue &= IC_EVTSET3_ES6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES6_OFFSET) &\
      IC_EVTSET3_ES6_MASK)))


/********************************************************************/


#define ICEVTSET3ES7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES7_MASK);\
    newValue <<= IC_EVTSET3_ES7_OFFSET;\
    newValue &= IC_EVTSET3_ES7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES7_OFFSET) &\
      IC_EVTSET3_ES7_MASK)))


/********************************************************************/


#define ICEVTSET3ES8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES8_MASK);\
    newValue <<= IC_EVTSET3_ES8_OFFSET;\
    newValue &= IC_EVTSET3_ES8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES8_OFFSET) &\
      IC_EVTSET3_ES8_MASK)))


/********************************************************************/


#define ICEVTSET3ES9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES9_MASK);\
    newValue <<= IC_EVTSET3_ES9_OFFSET;\
    newValue &= IC_EVTSET3_ES9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES9_OFFSET) &\
      IC_EVTSET3_ES9_MASK)))


/********************************************************************/


#define ICEVTSET3ES10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES10_MASK);\
    newValue <<= IC_EVTSET3_ES10_OFFSET;\
    newValue &= IC_EVTSET3_ES10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES10_OFFSET) &\
      IC_EVTSET3_ES10_MASK)))


/********************************************************************/


#define ICEVTSET3ES11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES11_MASK);\
    newValue <<= IC_EVTSET3_ES11_OFFSET;\
    newValue &= IC_EVTSET3_ES11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES11_OFFSET) &\
      IC_EVTSET3_ES11_MASK)))


/********************************************************************/


#define ICEVTSET3ES12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES12_MASK);\
    newValue <<= IC_EVTSET3_ES12_OFFSET;\
    newValue &= IC_EVTSET3_ES12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES12_OFFSET) &\
      IC_EVTSET3_ES12_MASK)))


/********************************************************************/


#define ICEVTSET3ES13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES13_MASK);\
    newValue <<= IC_EVTSET3_ES13_OFFSET;\
    newValue &= IC_EVTSET3_ES13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES13_OFFSET) &\
      IC_EVTSET3_ES13_MASK)))


/********************************************************************/


#define ICEVTSET3ES14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES14_MASK);\
    newValue <<= IC_EVTSET3_ES14_OFFSET;\
    newValue &= IC_EVTSET3_ES14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES14_OFFSET) &\
      IC_EVTSET3_ES14_MASK)))


/********************************************************************/


#define ICEVTSET3ES15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES15_MASK);\
    newValue <<= IC_EVTSET3_ES15_OFFSET;\
    newValue &= IC_EVTSET3_ES15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES15_OFFSET) &\
      IC_EVTSET3_ES15_MASK)))


/********************************************************************/


#define ICEVTSET3ES16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES16_MASK);\
    newValue <<= IC_EVTSET3_ES16_OFFSET;\
    newValue &= IC_EVTSET3_ES16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES16_OFFSET) &\
      IC_EVTSET3_ES16_MASK)))


/********************************************************************/


#define ICEVTSET3ES17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES17_MASK);\
    newValue <<= IC_EVTSET3_ES17_OFFSET;\
    newValue &= IC_EVTSET3_ES17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES17_OFFSET) &\
      IC_EVTSET3_ES17_MASK)))


/********************************************************************/


#define ICEVTSET3ES18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES18_MASK);\
    newValue <<= IC_EVTSET3_ES18_OFFSET;\
    newValue &= IC_EVTSET3_ES18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES18_OFFSET) &\
      IC_EVTSET3_ES18_MASK)))


/********************************************************************/


#define ICEVTSET3ES19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES19_MASK);\
    newValue <<= IC_EVTSET3_ES19_OFFSET;\
    newValue &= IC_EVTSET3_ES19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES19_OFFSET) &\
      IC_EVTSET3_ES19_MASK)))


/********************************************************************/


#define ICEVTSET3ES20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES20_MASK);\
    newValue <<= IC_EVTSET3_ES20_OFFSET;\
    newValue &= IC_EVTSET3_ES20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES20_OFFSET) &\
      IC_EVTSET3_ES20_MASK)))


/********************************************************************/


#define ICEVTSET3ES21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES21_MASK);\
    newValue <<= IC_EVTSET3_ES21_OFFSET;\
    newValue &= IC_EVTSET3_ES21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES21_OFFSET) &\
      IC_EVTSET3_ES21_MASK)))


/********************************************************************/


#define ICEVTSET3ES22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES22_MASK);\
    newValue <<= IC_EVTSET3_ES22_OFFSET;\
    newValue &= IC_EVTSET3_ES22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES22_OFFSET) &\
      IC_EVTSET3_ES22_MASK)))


/********************************************************************/


#define ICEVTSET3ES23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES23_MASK);\
    newValue <<= IC_EVTSET3_ES23_OFFSET;\
    newValue &= IC_EVTSET3_ES23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES23_OFFSET) &\
      IC_EVTSET3_ES23_MASK)))


/********************************************************************/


#define ICEVTSET3ES24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES24_MASK);\
    newValue <<= IC_EVTSET3_ES24_OFFSET;\
    newValue &= IC_EVTSET3_ES24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES24_OFFSET) &\
      IC_EVTSET3_ES24_MASK)))


/********************************************************************/


#define ICEVTSET3ES25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES25_MASK);\
    newValue <<= IC_EVTSET3_ES25_OFFSET;\
    newValue &= IC_EVTSET3_ES25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES25_OFFSET) &\
      IC_EVTSET3_ES25_MASK)))


/********************************************************************/


#define ICEVTSET3ES26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES26_MASK);\
    newValue <<= IC_EVTSET3_ES26_OFFSET;\
    newValue &= IC_EVTSET3_ES26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES26_OFFSET) &\
      IC_EVTSET3_ES26_MASK)))


/********************************************************************/


#define ICEVTSET3ES27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES27_MASK);\
    newValue <<= IC_EVTSET3_ES27_OFFSET;\
    newValue &= IC_EVTSET3_ES27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES27_OFFSET) &\
      IC_EVTSET3_ES27_MASK)))


/********************************************************************/


#define ICEVTSET3ES28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES28_MASK);\
    newValue <<= IC_EVTSET3_ES28_OFFSET;\
    newValue &= IC_EVTSET3_ES28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES28_OFFSET) &\
      IC_EVTSET3_ES28_MASK)))


/********************************************************************/


#define ICEVTSET3ES29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES29_MASK);\
    newValue <<= IC_EVTSET3_ES29_OFFSET;\
    newValue &= IC_EVTSET3_ES29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES29_OFFSET) &\
      IC_EVTSET3_ES29_MASK)))


/********************************************************************/


#define ICEVTSET3ES30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES30_MASK);\
    newValue <<= IC_EVTSET3_ES30_OFFSET;\
    newValue &= IC_EVTSET3_ES30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES30_OFFSET) &\
      IC_EVTSET3_ES30_MASK)))


/********************************************************************/


#define ICEVTSET3ES31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTSET3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTSET3_ES31_MASK);\
    newValue <<= IC_EVTSET3_ES31_OFFSET;\
    newValue &= IC_EVTSET3_ES31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTSET3ES31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTSET3_ES31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTSET3_ES31_OFFSET) &\
      IC_EVTSET3_ES31_MASK)))


/********************************************************************/


#define ICEVTCLR0WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC0_MASK);\
    newValue <<= IC_EVTCLR0_EC0_OFFSET;\
    newValue &= IC_EVTCLR0_EC0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC0_OFFSET) &\
      IC_EVTCLR0_EC0_MASK)))


/********************************************************************/


#define ICEVTCLR0EC1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC1_MASK);\
    newValue <<= IC_EVTCLR0_EC1_OFFSET;\
    newValue &= IC_EVTCLR0_EC1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC1_OFFSET) &\
      IC_EVTCLR0_EC1_MASK)))


/********************************************************************/


#define ICEVTCLR0EC2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC2_MASK);\
    newValue <<= IC_EVTCLR0_EC2_OFFSET;\
    newValue &= IC_EVTCLR0_EC2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC2_OFFSET) &\
      IC_EVTCLR0_EC2_MASK)))


/********************************************************************/


#define ICEVTCLR0EC3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC3_MASK);\
    newValue <<= IC_EVTCLR0_EC3_OFFSET;\
    newValue &= IC_EVTCLR0_EC3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC3_OFFSET) &\
      IC_EVTCLR0_EC3_MASK)))


/********************************************************************/


#define ICEVTCLR0EC4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC4_MASK);\
    newValue <<= IC_EVTCLR0_EC4_OFFSET;\
    newValue &= IC_EVTCLR0_EC4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC4_OFFSET) &\
      IC_EVTCLR0_EC4_MASK)))


/********************************************************************/


#define ICEVTCLR0EC5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC5_MASK);\
    newValue <<= IC_EVTCLR0_EC5_OFFSET;\
    newValue &= IC_EVTCLR0_EC5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC5_OFFSET) &\
      IC_EVTCLR0_EC5_MASK)))


/********************************************************************/


#define ICEVTCLR0EC6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC6_MASK);\
    newValue <<= IC_EVTCLR0_EC6_OFFSET;\
    newValue &= IC_EVTCLR0_EC6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC6_OFFSET) &\
      IC_EVTCLR0_EC6_MASK)))


/********************************************************************/


#define ICEVTCLR0EC7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC7_MASK);\
    newValue <<= IC_EVTCLR0_EC7_OFFSET;\
    newValue &= IC_EVTCLR0_EC7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC7_OFFSET) &\
      IC_EVTCLR0_EC7_MASK)))


/********************************************************************/


#define ICEVTCLR0EC8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC8_MASK);\
    newValue <<= IC_EVTCLR0_EC8_OFFSET;\
    newValue &= IC_EVTCLR0_EC8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC8_OFFSET) &\
      IC_EVTCLR0_EC8_MASK)))


/********************************************************************/


#define ICEVTCLR0EC9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC9_MASK);\
    newValue <<= IC_EVTCLR0_EC9_OFFSET;\
    newValue &= IC_EVTCLR0_EC9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC9_OFFSET) &\
      IC_EVTCLR0_EC9_MASK)))


/********************************************************************/


#define ICEVTCLR0EC10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC10_MASK);\
    newValue <<= IC_EVTCLR0_EC10_OFFSET;\
    newValue &= IC_EVTCLR0_EC10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC10_OFFSET) &\
      IC_EVTCLR0_EC10_MASK)))


/********************************************************************/


#define ICEVTCLR0EC11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC11_MASK);\
    newValue <<= IC_EVTCLR0_EC11_OFFSET;\
    newValue &= IC_EVTCLR0_EC11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC11_OFFSET) &\
      IC_EVTCLR0_EC11_MASK)))


/********************************************************************/


#define ICEVTCLR0EC12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC12_MASK);\
    newValue <<= IC_EVTCLR0_EC12_OFFSET;\
    newValue &= IC_EVTCLR0_EC12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC12_OFFSET) &\
      IC_EVTCLR0_EC12_MASK)))


/********************************************************************/


#define ICEVTCLR0EC13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC13_MASK);\
    newValue <<= IC_EVTCLR0_EC13_OFFSET;\
    newValue &= IC_EVTCLR0_EC13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC13_OFFSET) &\
      IC_EVTCLR0_EC13_MASK)))


/********************************************************************/


#define ICEVTCLR0EC14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC14_MASK);\
    newValue <<= IC_EVTCLR0_EC14_OFFSET;\
    newValue &= IC_EVTCLR0_EC14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC14_OFFSET) &\
      IC_EVTCLR0_EC14_MASK)))


/********************************************************************/


#define ICEVTCLR0EC15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC15_MASK);\
    newValue <<= IC_EVTCLR0_EC15_OFFSET;\
    newValue &= IC_EVTCLR0_EC15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC15_OFFSET) &\
      IC_EVTCLR0_EC15_MASK)))


/********************************************************************/


#define ICEVTCLR0EC16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC16_MASK);\
    newValue <<= IC_EVTCLR0_EC16_OFFSET;\
    newValue &= IC_EVTCLR0_EC16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC16_OFFSET) &\
      IC_EVTCLR0_EC16_MASK)))


/********************************************************************/


#define ICEVTCLR0EC17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC17_MASK);\
    newValue <<= IC_EVTCLR0_EC17_OFFSET;\
    newValue &= IC_EVTCLR0_EC17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC17_OFFSET) &\
      IC_EVTCLR0_EC17_MASK)))


/********************************************************************/


#define ICEVTCLR0EC18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC18_MASK);\
    newValue <<= IC_EVTCLR0_EC18_OFFSET;\
    newValue &= IC_EVTCLR0_EC18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC18_OFFSET) &\
      IC_EVTCLR0_EC18_MASK)))


/********************************************************************/


#define ICEVTCLR0EC19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC19_MASK);\
    newValue <<= IC_EVTCLR0_EC19_OFFSET;\
    newValue &= IC_EVTCLR0_EC19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC19_OFFSET) &\
      IC_EVTCLR0_EC19_MASK)))


/********************************************************************/


#define ICEVTCLR0EC20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC20_MASK);\
    newValue <<= IC_EVTCLR0_EC20_OFFSET;\
    newValue &= IC_EVTCLR0_EC20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC20_OFFSET) &\
      IC_EVTCLR0_EC20_MASK)))


/********************************************************************/


#define ICEVTCLR0EC21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC21_MASK);\
    newValue <<= IC_EVTCLR0_EC21_OFFSET;\
    newValue &= IC_EVTCLR0_EC21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC21_OFFSET) &\
      IC_EVTCLR0_EC21_MASK)))


/********************************************************************/


#define ICEVTCLR0EC22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC22_MASK);\
    newValue <<= IC_EVTCLR0_EC22_OFFSET;\
    newValue &= IC_EVTCLR0_EC22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC22_OFFSET) &\
      IC_EVTCLR0_EC22_MASK)))


/********************************************************************/


#define ICEVTCLR0EC23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC23_MASK);\
    newValue <<= IC_EVTCLR0_EC23_OFFSET;\
    newValue &= IC_EVTCLR0_EC23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC23_OFFSET) &\
      IC_EVTCLR0_EC23_MASK)))


/********************************************************************/


#define ICEVTCLR0EC24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC24_MASK);\
    newValue <<= IC_EVTCLR0_EC24_OFFSET;\
    newValue &= IC_EVTCLR0_EC24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC24_OFFSET) &\
      IC_EVTCLR0_EC24_MASK)))


/********************************************************************/


#define ICEVTCLR0EC25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC25_MASK);\
    newValue <<= IC_EVTCLR0_EC25_OFFSET;\
    newValue &= IC_EVTCLR0_EC25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC25_OFFSET) &\
      IC_EVTCLR0_EC25_MASK)))


/********************************************************************/


#define ICEVTCLR0EC26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC26_MASK);\
    newValue <<= IC_EVTCLR0_EC26_OFFSET;\
    newValue &= IC_EVTCLR0_EC26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC26_OFFSET) &\
      IC_EVTCLR0_EC26_MASK)))


/********************************************************************/


#define ICEVTCLR0EC27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC27_MASK);\
    newValue <<= IC_EVTCLR0_EC27_OFFSET;\
    newValue &= IC_EVTCLR0_EC27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC27_OFFSET) &\
      IC_EVTCLR0_EC27_MASK)))


/********************************************************************/


#define ICEVTCLR0EC28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC28_MASK);\
    newValue <<= IC_EVTCLR0_EC28_OFFSET;\
    newValue &= IC_EVTCLR0_EC28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC28_OFFSET) &\
      IC_EVTCLR0_EC28_MASK)))


/********************************************************************/


#define ICEVTCLR0EC29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC29_MASK);\
    newValue <<= IC_EVTCLR0_EC29_OFFSET;\
    newValue &= IC_EVTCLR0_EC29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC29_OFFSET) &\
      IC_EVTCLR0_EC29_MASK)))


/********************************************************************/


#define ICEVTCLR0EC30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC30_MASK);\
    newValue <<= IC_EVTCLR0_EC30_OFFSET;\
    newValue &= IC_EVTCLR0_EC30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC30_OFFSET) &\
      IC_EVTCLR0_EC30_MASK)))


/********************************************************************/


#define ICEVTCLR0EC31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR0_EC31_MASK);\
    newValue <<= IC_EVTCLR0_EC31_OFFSET;\
    newValue &= IC_EVTCLR0_EC31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR0EC31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR0_EC31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR0_EC31_OFFSET) &\
      IC_EVTCLR0_EC31_MASK)))


/********************************************************************/


#define ICEVTCLR1WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC32Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC32_MASK);\
    newValue <<= IC_EVTCLR1_EC32_OFFSET;\
    newValue &= IC_EVTCLR1_EC32_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC32Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC32_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC32_OFFSET) &\
      IC_EVTCLR1_EC32_MASK)))


/********************************************************************/


#define ICEVTCLR1EC33Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC33_MASK);\
    newValue <<= IC_EVTCLR1_EC33_OFFSET;\
    newValue &= IC_EVTCLR1_EC33_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC33Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC33_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC33_OFFSET) &\
      IC_EVTCLR1_EC33_MASK)))


/********************************************************************/


#define ICEVTCLR1EC34Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC34_MASK);\
    newValue <<= IC_EVTCLR1_EC34_OFFSET;\
    newValue &= IC_EVTCLR1_EC34_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC34Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC34_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC34_OFFSET) &\
      IC_EVTCLR1_EC34_MASK)))


/********************************************************************/


#define ICEVTCLR1EC35Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC35_MASK);\
    newValue <<= IC_EVTCLR1_EC35_OFFSET;\
    newValue &= IC_EVTCLR1_EC35_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC35Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC35_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC35_OFFSET) &\
      IC_EVTCLR1_EC35_MASK)))


/********************************************************************/


#define ICEVTCLR1EC36Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC36_MASK);\
    newValue <<= IC_EVTCLR1_EC36_OFFSET;\
    newValue &= IC_EVTCLR1_EC36_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC36Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC36_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC36_OFFSET) &\
      IC_EVTCLR1_EC36_MASK)))


/********************************************************************/


#define ICEVTCLR1EC37Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC37_MASK);\
    newValue <<= IC_EVTCLR1_EC37_OFFSET;\
    newValue &= IC_EVTCLR1_EC37_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC37Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC37_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC37_OFFSET) &\
      IC_EVTCLR1_EC37_MASK)))


/********************************************************************/


#define ICEVTCLR1EC38Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC38_MASK);\
    newValue <<= IC_EVTCLR1_EC38_OFFSET;\
    newValue &= IC_EVTCLR1_EC38_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC38Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC38_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC38_OFFSET) &\
      IC_EVTCLR1_EC38_MASK)))


/********************************************************************/


#define ICEVTCLR1EC39Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC39_MASK);\
    newValue <<= IC_EVTCLR1_EC39_OFFSET;\
    newValue &= IC_EVTCLR1_EC39_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC39Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC39_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC39_OFFSET) &\
      IC_EVTCLR1_EC39_MASK)))


/********************************************************************/


#define ICEVTCLR1EC40Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC40_MASK);\
    newValue <<= IC_EVTCLR1_EC40_OFFSET;\
    newValue &= IC_EVTCLR1_EC40_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC40Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC40_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC40_OFFSET) &\
      IC_EVTCLR1_EC40_MASK)))


/********************************************************************/


#define ICEVTCLR1EC41Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC41_MASK);\
    newValue <<= IC_EVTCLR1_EC41_OFFSET;\
    newValue &= IC_EVTCLR1_EC41_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC41Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC41_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC41_OFFSET) &\
      IC_EVTCLR1_EC41_MASK)))


/********************************************************************/


#define ICEVTCLR1EC42Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC42_MASK);\
    newValue <<= IC_EVTCLR1_EC42_OFFSET;\
    newValue &= IC_EVTCLR1_EC42_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC42Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC42_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC42_OFFSET) &\
      IC_EVTCLR1_EC42_MASK)))


/********************************************************************/


#define ICEVTCLR1EC43Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC43_MASK);\
    newValue <<= IC_EVTCLR1_EC43_OFFSET;\
    newValue &= IC_EVTCLR1_EC43_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC43Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC43_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC43_OFFSET) &\
      IC_EVTCLR1_EC43_MASK)))


/********************************************************************/


#define ICEVTCLR1EC44Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC44_MASK);\
    newValue <<= IC_EVTCLR1_EC44_OFFSET;\
    newValue &= IC_EVTCLR1_EC44_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC44Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC44_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC44_OFFSET) &\
      IC_EVTCLR1_EC44_MASK)))


/********************************************************************/


#define ICEVTCLR1EC45Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC45_MASK);\
    newValue <<= IC_EVTCLR1_EC45_OFFSET;\
    newValue &= IC_EVTCLR1_EC45_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC45Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC45_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC45_OFFSET) &\
      IC_EVTCLR1_EC45_MASK)))


/********************************************************************/


#define ICEVTCLR1EC46Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC46_MASK);\
    newValue <<= IC_EVTCLR1_EC46_OFFSET;\
    newValue &= IC_EVTCLR1_EC46_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC46Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC46_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC46_OFFSET) &\
      IC_EVTCLR1_EC46_MASK)))


/********************************************************************/


#define ICEVTCLR1EC47Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC47_MASK);\
    newValue <<= IC_EVTCLR1_EC47_OFFSET;\
    newValue &= IC_EVTCLR1_EC47_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC47Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC47_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC47_OFFSET) &\
      IC_EVTCLR1_EC47_MASK)))


/********************************************************************/


#define ICEVTCLR1EC48Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC48_MASK);\
    newValue <<= IC_EVTCLR1_EC48_OFFSET;\
    newValue &= IC_EVTCLR1_EC48_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC48Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC48_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC48_OFFSET) &\
      IC_EVTCLR1_EC48_MASK)))


/********************************************************************/


#define ICEVTCLR1EC49Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC49_MASK);\
    newValue <<= IC_EVTCLR1_EC49_OFFSET;\
    newValue &= IC_EVTCLR1_EC49_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC49Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC49_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC49_OFFSET) &\
      IC_EVTCLR1_EC49_MASK)))


/********************************************************************/


#define ICEVTCLR1EC50Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC50_MASK);\
    newValue <<= IC_EVTCLR1_EC50_OFFSET;\
    newValue &= IC_EVTCLR1_EC50_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC50Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC50_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC50_OFFSET) &\
      IC_EVTCLR1_EC50_MASK)))


/********************************************************************/


#define ICEVTCLR1EC51Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC51_MASK);\
    newValue <<= IC_EVTCLR1_EC51_OFFSET;\
    newValue &= IC_EVTCLR1_EC51_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC51Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC51_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC51_OFFSET) &\
      IC_EVTCLR1_EC51_MASK)))


/********************************************************************/


#define ICEVTCLR1EC52Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC52_MASK);\
    newValue <<= IC_EVTCLR1_EC52_OFFSET;\
    newValue &= IC_EVTCLR1_EC52_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC52Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC52_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC52_OFFSET) &\
      IC_EVTCLR1_EC52_MASK)))


/********************************************************************/


#define ICEVTCLR1EC53Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC53_MASK);\
    newValue <<= IC_EVTCLR1_EC53_OFFSET;\
    newValue &= IC_EVTCLR1_EC53_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC53Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC53_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC53_OFFSET) &\
      IC_EVTCLR1_EC53_MASK)))


/********************************************************************/


#define ICEVTCLR1EC54Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC54_MASK);\
    newValue <<= IC_EVTCLR1_EC54_OFFSET;\
    newValue &= IC_EVTCLR1_EC54_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC54Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC54_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC54_OFFSET) &\
      IC_EVTCLR1_EC54_MASK)))


/********************************************************************/


#define ICEVTCLR1EC55Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC55_MASK);\
    newValue <<= IC_EVTCLR1_EC55_OFFSET;\
    newValue &= IC_EVTCLR1_EC55_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC55Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC55_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC55_OFFSET) &\
      IC_EVTCLR1_EC55_MASK)))


/********************************************************************/


#define ICEVTCLR1EC56Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC56_MASK);\
    newValue <<= IC_EVTCLR1_EC56_OFFSET;\
    newValue &= IC_EVTCLR1_EC56_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC56Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC56_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC56_OFFSET) &\
      IC_EVTCLR1_EC56_MASK)))


/********************************************************************/


#define ICEVTCLR1EC57Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC57_MASK);\
    newValue <<= IC_EVTCLR1_EC57_OFFSET;\
    newValue &= IC_EVTCLR1_EC57_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC57Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC57_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC57_OFFSET) &\
      IC_EVTCLR1_EC57_MASK)))


/********************************************************************/


#define ICEVTCLR1EC58Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC58_MASK);\
    newValue <<= IC_EVTCLR1_EC58_OFFSET;\
    newValue &= IC_EVTCLR1_EC58_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC58Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC58_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC58_OFFSET) &\
      IC_EVTCLR1_EC58_MASK)))


/********************************************************************/


#define ICEVTCLR1EC59Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC59_MASK);\
    newValue <<= IC_EVTCLR1_EC59_OFFSET;\
    newValue &= IC_EVTCLR1_EC59_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC59Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC59_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC59_OFFSET) &\
      IC_EVTCLR1_EC59_MASK)))


/********************************************************************/


#define ICEVTCLR1EC60Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC60_MASK);\
    newValue <<= IC_EVTCLR1_EC60_OFFSET;\
    newValue &= IC_EVTCLR1_EC60_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC60Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC60_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC60_OFFSET) &\
      IC_EVTCLR1_EC60_MASK)))


/********************************************************************/


#define ICEVTCLR1EC61Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC61_MASK);\
    newValue <<= IC_EVTCLR1_EC61_OFFSET;\
    newValue &= IC_EVTCLR1_EC61_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC61Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC61_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC61_OFFSET) &\
      IC_EVTCLR1_EC61_MASK)))


/********************************************************************/


#define ICEVTCLR1EC62Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC62_MASK);\
    newValue <<= IC_EVTCLR1_EC62_OFFSET;\
    newValue &= IC_EVTCLR1_EC62_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC62Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC62_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC62_OFFSET) &\
      IC_EVTCLR1_EC62_MASK)))


/********************************************************************/


#define ICEVTCLR1EC63Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR1_EC63_MASK);\
    newValue <<= IC_EVTCLR1_EC63_OFFSET;\
    newValue &= IC_EVTCLR1_EC63_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR1EC63Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR1_EC63_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR1_EC63_OFFSET) &\
      IC_EVTCLR1_EC63_MASK)))


/********************************************************************/


#define ICEVTCLR2WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC64Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC64_MASK);\
    newValue <<= IC_EVTCLR2_EC64_OFFSET;\
    newValue &= IC_EVTCLR2_EC64_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC64Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC64_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC64_OFFSET) &\
      IC_EVTCLR2_EC64_MASK)))


/********************************************************************/


#define ICEVTCLR2EC65Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC65_MASK);\
    newValue <<= IC_EVTCLR2_EC65_OFFSET;\
    newValue &= IC_EVTCLR2_EC65_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC65Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC65_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC65_OFFSET) &\
      IC_EVTCLR2_EC65_MASK)))


/********************************************************************/


#define ICEVTCLR2EC66Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC66_MASK);\
    newValue <<= IC_EVTCLR2_EC66_OFFSET;\
    newValue &= IC_EVTCLR2_EC66_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC66Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC66_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC66_OFFSET) &\
      IC_EVTCLR2_EC66_MASK)))


/********************************************************************/


#define ICEVTCLR2EC67Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC67_MASK);\
    newValue <<= IC_EVTCLR2_EC67_OFFSET;\
    newValue &= IC_EVTCLR2_EC67_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC67Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC67_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC67_OFFSET) &\
      IC_EVTCLR2_EC67_MASK)))


/********************************************************************/


#define ICEVTCLR2EC68Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC68_MASK);\
    newValue <<= IC_EVTCLR2_EC68_OFFSET;\
    newValue &= IC_EVTCLR2_EC68_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC68Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC68_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC68_OFFSET) &\
      IC_EVTCLR2_EC68_MASK)))


/********************************************************************/


#define ICEVTCLR2EC69Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC69_MASK);\
    newValue <<= IC_EVTCLR2_EC69_OFFSET;\
    newValue &= IC_EVTCLR2_EC69_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC69Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC69_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC69_OFFSET) &\
      IC_EVTCLR2_EC69_MASK)))


/********************************************************************/


#define ICEVTCLR2EC70Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC70_MASK);\
    newValue <<= IC_EVTCLR2_EC70_OFFSET;\
    newValue &= IC_EVTCLR2_EC70_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC70Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC70_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC70_OFFSET) &\
      IC_EVTCLR2_EC70_MASK)))


/********************************************************************/


#define ICEVTCLR2EC71Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC71_MASK);\
    newValue <<= IC_EVTCLR2_EC71_OFFSET;\
    newValue &= IC_EVTCLR2_EC71_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC71Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC71_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC71_OFFSET) &\
      IC_EVTCLR2_EC71_MASK)))


/********************************************************************/


#define ICEVTCLR2EC72Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC72_MASK);\
    newValue <<= IC_EVTCLR2_EC72_OFFSET;\
    newValue &= IC_EVTCLR2_EC72_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC72Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC72_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC72_OFFSET) &\
      IC_EVTCLR2_EC72_MASK)))


/********************************************************************/


#define ICEVTCLR2EC73Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC73_MASK);\
    newValue <<= IC_EVTCLR2_EC73_OFFSET;\
    newValue &= IC_EVTCLR2_EC73_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC73Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC73_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC73_OFFSET) &\
      IC_EVTCLR2_EC73_MASK)))


/********************************************************************/


#define ICEVTCLR2EC74Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC74_MASK);\
    newValue <<= IC_EVTCLR2_EC74_OFFSET;\
    newValue &= IC_EVTCLR2_EC74_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC74Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC74_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC74_OFFSET) &\
      IC_EVTCLR2_EC74_MASK)))


/********************************************************************/


#define ICEVTCLR2EC75Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC75_MASK);\
    newValue <<= IC_EVTCLR2_EC75_OFFSET;\
    newValue &= IC_EVTCLR2_EC75_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC75Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC75_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC75_OFFSET) &\
      IC_EVTCLR2_EC75_MASK)))


/********************************************************************/


#define ICEVTCLR2EC76Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC76_MASK);\
    newValue <<= IC_EVTCLR2_EC76_OFFSET;\
    newValue &= IC_EVTCLR2_EC76_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC76Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC76_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC76_OFFSET) &\
      IC_EVTCLR2_EC76_MASK)))


/********************************************************************/


#define ICEVTCLR2EC77Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC77_MASK);\
    newValue <<= IC_EVTCLR2_EC77_OFFSET;\
    newValue &= IC_EVTCLR2_EC77_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC77Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC77_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC77_OFFSET) &\
      IC_EVTCLR2_EC77_MASK)))


/********************************************************************/


#define ICEVTCLR2EC78Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC78_MASK);\
    newValue <<= IC_EVTCLR2_EC78_OFFSET;\
    newValue &= IC_EVTCLR2_EC78_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC78Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC78_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC78_OFFSET) &\
      IC_EVTCLR2_EC78_MASK)))


/********************************************************************/


#define ICEVTCLR2EC79Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC79_MASK);\
    newValue <<= IC_EVTCLR2_EC79_OFFSET;\
    newValue &= IC_EVTCLR2_EC79_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC79Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC79_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC79_OFFSET) &\
      IC_EVTCLR2_EC79_MASK)))


/********************************************************************/


#define ICEVTCLR2EC80Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC80_MASK);\
    newValue <<= IC_EVTCLR2_EC80_OFFSET;\
    newValue &= IC_EVTCLR2_EC80_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC80Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC80_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC80_OFFSET) &\
      IC_EVTCLR2_EC80_MASK)))


/********************************************************************/


#define ICEVTCLR2EC81Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC81_MASK);\
    newValue <<= IC_EVTCLR2_EC81_OFFSET;\
    newValue &= IC_EVTCLR2_EC81_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC81Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC81_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC81_OFFSET) &\
      IC_EVTCLR2_EC81_MASK)))


/********************************************************************/


#define ICEVTCLR2EC82Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC82_MASK);\
    newValue <<= IC_EVTCLR2_EC82_OFFSET;\
    newValue &= IC_EVTCLR2_EC82_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC82Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC82_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC82_OFFSET) &\
      IC_EVTCLR2_EC82_MASK)))


/********************************************************************/


#define ICEVTCLR2EC83Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC83_MASK);\
    newValue <<= IC_EVTCLR2_EC83_OFFSET;\
    newValue &= IC_EVTCLR2_EC83_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC83Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC83_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC83_OFFSET) &\
      IC_EVTCLR2_EC83_MASK)))


/********************************************************************/


#define ICEVTCLR2EC84Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC84_MASK);\
    newValue <<= IC_EVTCLR2_EC84_OFFSET;\
    newValue &= IC_EVTCLR2_EC84_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC84Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC84_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC84_OFFSET) &\
      IC_EVTCLR2_EC84_MASK)))


/********************************************************************/


#define ICEVTCLR2EC85Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC85_MASK);\
    newValue <<= IC_EVTCLR2_EC85_OFFSET;\
    newValue &= IC_EVTCLR2_EC85_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC85Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC85_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC85_OFFSET) &\
      IC_EVTCLR2_EC85_MASK)))


/********************************************************************/


#define ICEVTCLR2EC86Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC86_MASK);\
    newValue <<= IC_EVTCLR2_EC86_OFFSET;\
    newValue &= IC_EVTCLR2_EC86_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC86Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC86_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC86_OFFSET) &\
      IC_EVTCLR2_EC86_MASK)))


/********************************************************************/


#define ICEVTCLR2EC87Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC87_MASK);\
    newValue <<= IC_EVTCLR2_EC87_OFFSET;\
    newValue &= IC_EVTCLR2_EC87_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC87Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC87_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC87_OFFSET) &\
      IC_EVTCLR2_EC87_MASK)))


/********************************************************************/


#define ICEVTCLR2EC88Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC88_MASK);\
    newValue <<= IC_EVTCLR2_EC88_OFFSET;\
    newValue &= IC_EVTCLR2_EC88_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC88Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC88_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC88_OFFSET) &\
      IC_EVTCLR2_EC88_MASK)))


/********************************************************************/


#define ICEVTCLR2EC89Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC89_MASK);\
    newValue <<= IC_EVTCLR2_EC89_OFFSET;\
    newValue &= IC_EVTCLR2_EC89_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC89Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC89_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC89_OFFSET) &\
      IC_EVTCLR2_EC89_MASK)))


/********************************************************************/


#define ICEVTCLR2EC90Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC90_MASK);\
    newValue <<= IC_EVTCLR2_EC90_OFFSET;\
    newValue &= IC_EVTCLR2_EC90_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC90Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC90_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC90_OFFSET) &\
      IC_EVTCLR2_EC90_MASK)))


/********************************************************************/


#define ICEVTCLR2EC91Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC91_MASK);\
    newValue <<= IC_EVTCLR2_EC91_OFFSET;\
    newValue &= IC_EVTCLR2_EC91_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC91Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC91_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC91_OFFSET) &\
      IC_EVTCLR2_EC91_MASK)))


/********************************************************************/


#define ICEVTCLR2EC92Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC92_MASK);\
    newValue <<= IC_EVTCLR2_EC92_OFFSET;\
    newValue &= IC_EVTCLR2_EC92_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC92Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC92_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC92_OFFSET) &\
      IC_EVTCLR2_EC92_MASK)))


/********************************************************************/


#define ICEVTCLR2EC93Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC93_MASK);\
    newValue <<= IC_EVTCLR2_EC93_OFFSET;\
    newValue &= IC_EVTCLR2_EC93_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC93Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC93_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC93_OFFSET) &\
      IC_EVTCLR2_EC93_MASK)))


/********************************************************************/


#define ICEVTCLR2EC94Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC94_MASK);\
    newValue <<= IC_EVTCLR2_EC94_OFFSET;\
    newValue &= IC_EVTCLR2_EC94_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC94Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC94_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC94_OFFSET) &\
      IC_EVTCLR2_EC94_MASK)))


/********************************************************************/


#define ICEVTCLR2EC95Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR2_EC95_MASK);\
    newValue <<= IC_EVTCLR2_EC95_OFFSET;\
    newValue &= IC_EVTCLR2_EC95_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR2EC95Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR2_EC95_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR2_EC95_OFFSET) &\
      IC_EVTCLR2_EC95_MASK)))


/********************************************************************/


#define ICEVTCLR3WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC96Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC96_MASK);\
    newValue <<= IC_EVTCLR3_EC96_OFFSET;\
    newValue &= IC_EVTCLR3_EC96_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC96Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC96_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC96_OFFSET) &\
      IC_EVTCLR3_EC96_MASK)))


/********************************************************************/


#define ICEVTCLR3EC97Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC97_MASK);\
    newValue <<= IC_EVTCLR3_EC97_OFFSET;\
    newValue &= IC_EVTCLR3_EC97_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC97Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC97_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC97_OFFSET) &\
      IC_EVTCLR3_EC97_MASK)))


/********************************************************************/


#define ICEVTCLR3EC98Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC98_MASK);\
    newValue <<= IC_EVTCLR3_EC98_OFFSET;\
    newValue &= IC_EVTCLR3_EC98_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC98Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC98_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC98_OFFSET) &\
      IC_EVTCLR3_EC98_MASK)))


/********************************************************************/


#define ICEVTCLR3EC99Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC99_MASK);\
    newValue <<= IC_EVTCLR3_EC99_OFFSET;\
    newValue &= IC_EVTCLR3_EC99_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC99Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC99_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC99_OFFSET) &\
      IC_EVTCLR3_EC99_MASK)))


/********************************************************************/


#define ICEVTCLR3EC100Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC100_MASK);\
    newValue <<= IC_EVTCLR3_EC100_OFFSET;\
    newValue &= IC_EVTCLR3_EC100_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC100Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC100_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC100_OFFSET) &\
      IC_EVTCLR3_EC100_MASK)))


/********************************************************************/


#define ICEVTCLR3EC101Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC101_MASK);\
    newValue <<= IC_EVTCLR3_EC101_OFFSET;\
    newValue &= IC_EVTCLR3_EC101_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC101Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC101_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC101_OFFSET) &\
      IC_EVTCLR3_EC101_MASK)))


/********************************************************************/


#define ICEVTCLR3EC102Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC102_MASK);\
    newValue <<= IC_EVTCLR3_EC102_OFFSET;\
    newValue &= IC_EVTCLR3_EC102_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC102Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC102_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC102_OFFSET) &\
      IC_EVTCLR3_EC102_MASK)))


/********************************************************************/


#define ICEVTCLR3EC103Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC103_MASK);\
    newValue <<= IC_EVTCLR3_EC103_OFFSET;\
    newValue &= IC_EVTCLR3_EC103_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC103Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC103_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC103_OFFSET) &\
      IC_EVTCLR3_EC103_MASK)))


/********************************************************************/


#define ICEVTCLR3EC104Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC104_MASK);\
    newValue <<= IC_EVTCLR3_EC104_OFFSET;\
    newValue &= IC_EVTCLR3_EC104_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC104Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC104_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC104_OFFSET) &\
      IC_EVTCLR3_EC104_MASK)))


/********************************************************************/


#define ICEVTCLR3EC105Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC105_MASK);\
    newValue <<= IC_EVTCLR3_EC105_OFFSET;\
    newValue &= IC_EVTCLR3_EC105_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC105Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC105_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC105_OFFSET) &\
      IC_EVTCLR3_EC105_MASK)))


/********************************************************************/


#define ICEVTCLR3EC106Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC106_MASK);\
    newValue <<= IC_EVTCLR3_EC106_OFFSET;\
    newValue &= IC_EVTCLR3_EC106_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC106Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC106_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC106_OFFSET) &\
      IC_EVTCLR3_EC106_MASK)))


/********************************************************************/


#define ICEVTCLR3EC107Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC107_MASK);\
    newValue <<= IC_EVTCLR3_EC107_OFFSET;\
    newValue &= IC_EVTCLR3_EC107_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC107Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC107_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC107_OFFSET) &\
      IC_EVTCLR3_EC107_MASK)))


/********************************************************************/


#define ICEVTCLR3EC108Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC108_MASK);\
    newValue <<= IC_EVTCLR3_EC108_OFFSET;\
    newValue &= IC_EVTCLR3_EC108_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC108Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC108_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC108_OFFSET) &\
      IC_EVTCLR3_EC108_MASK)))


/********************************************************************/


#define ICEVTCLR3EC109Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC109_MASK);\
    newValue <<= IC_EVTCLR3_EC109_OFFSET;\
    newValue &= IC_EVTCLR3_EC109_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC109Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC109_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC109_OFFSET) &\
      IC_EVTCLR3_EC109_MASK)))


/********************************************************************/


#define ICEVTCLR3EC110Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC110_MASK);\
    newValue <<= IC_EVTCLR3_EC110_OFFSET;\
    newValue &= IC_EVTCLR3_EC110_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC110Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC110_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC110_OFFSET) &\
      IC_EVTCLR3_EC110_MASK)))


/********************************************************************/


#define ICEVTCLR3EC111Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC111_MASK);\
    newValue <<= IC_EVTCLR3_EC111_OFFSET;\
    newValue &= IC_EVTCLR3_EC111_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC111Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC111_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC111_OFFSET) &\
      IC_EVTCLR3_EC111_MASK)))


/********************************************************************/


#define ICEVTCLR3EC112Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC112_MASK);\
    newValue <<= IC_EVTCLR3_EC112_OFFSET;\
    newValue &= IC_EVTCLR3_EC112_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC112Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC112_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC112_OFFSET) &\
      IC_EVTCLR3_EC112_MASK)))


/********************************************************************/


#define ICEVTCLR3EC113Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC113_MASK);\
    newValue <<= IC_EVTCLR3_EC113_OFFSET;\
    newValue &= IC_EVTCLR3_EC113_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC113Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC113_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC113_OFFSET) &\
      IC_EVTCLR3_EC113_MASK)))


/********************************************************************/


#define ICEVTCLR3EC114Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC114_MASK);\
    newValue <<= IC_EVTCLR3_EC114_OFFSET;\
    newValue &= IC_EVTCLR3_EC114_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC114Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC114_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC114_OFFSET) &\
      IC_EVTCLR3_EC114_MASK)))


/********************************************************************/


#define ICEVTCLR3EC115Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC115_MASK);\
    newValue <<= IC_EVTCLR3_EC115_OFFSET;\
    newValue &= IC_EVTCLR3_EC115_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC115Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC115_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC115_OFFSET) &\
      IC_EVTCLR3_EC115_MASK)))


/********************************************************************/


#define ICEVTCLR3EC116Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC116_MASK);\
    newValue <<= IC_EVTCLR3_EC116_OFFSET;\
    newValue &= IC_EVTCLR3_EC116_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC116Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC116_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC116_OFFSET) &\
      IC_EVTCLR3_EC116_MASK)))


/********************************************************************/


#define ICEVTCLR3EC117Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC117_MASK);\
    newValue <<= IC_EVTCLR3_EC117_OFFSET;\
    newValue &= IC_EVTCLR3_EC117_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC117Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC117_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC117_OFFSET) &\
      IC_EVTCLR3_EC117_MASK)))


/********************************************************************/


#define ICEVTCLR3EC118Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC118_MASK);\
    newValue <<= IC_EVTCLR3_EC118_OFFSET;\
    newValue &= IC_EVTCLR3_EC118_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC118Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC118_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC118_OFFSET) &\
      IC_EVTCLR3_EC118_MASK)))


/********************************************************************/


#define ICEVTCLR3EC119Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC119_MASK);\
    newValue <<= IC_EVTCLR3_EC119_OFFSET;\
    newValue &= IC_EVTCLR3_EC119_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC119Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC119_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC119_OFFSET) &\
      IC_EVTCLR3_EC119_MASK)))


/********************************************************************/


#define ICEVTCLR3EC120Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC120_MASK);\
    newValue <<= IC_EVTCLR3_EC120_OFFSET;\
    newValue &= IC_EVTCLR3_EC120_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC120Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC120_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC120_OFFSET) &\
      IC_EVTCLR3_EC120_MASK)))


/********************************************************************/


#define ICEVTCLR3EC121Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC121_MASK);\
    newValue <<= IC_EVTCLR3_EC121_OFFSET;\
    newValue &= IC_EVTCLR3_EC121_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC121Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC121_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC121_OFFSET) &\
      IC_EVTCLR3_EC121_MASK)))


/********************************************************************/


#define ICEVTCLR3EC122Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC122_MASK);\
    newValue <<= IC_EVTCLR3_EC122_OFFSET;\
    newValue &= IC_EVTCLR3_EC122_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC122Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC122_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC122_OFFSET) &\
      IC_EVTCLR3_EC122_MASK)))


/********************************************************************/


#define ICEVTCLR3EC123Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC123_MASK);\
    newValue <<= IC_EVTCLR3_EC123_OFFSET;\
    newValue &= IC_EVTCLR3_EC123_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC123Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC123_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC123_OFFSET) &\
      IC_EVTCLR3_EC123_MASK)))


/********************************************************************/


#define ICEVTCLR3EC124Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC124_MASK);\
    newValue <<= IC_EVTCLR3_EC124_OFFSET;\
    newValue &= IC_EVTCLR3_EC124_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC124Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC124_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC124_OFFSET) &\
      IC_EVTCLR3_EC124_MASK)))


/********************************************************************/


#define ICEVTCLR3EC125Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC125_MASK);\
    newValue <<= IC_EVTCLR3_EC125_OFFSET;\
    newValue &= IC_EVTCLR3_EC125_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC125Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC125_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC125_OFFSET) &\
      IC_EVTCLR3_EC125_MASK)))


/********************************************************************/


#define ICEVTCLR3EC126Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC126_MASK);\
    newValue <<= IC_EVTCLR3_EC126_OFFSET;\
    newValue &= IC_EVTCLR3_EC126_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC126Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC126_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC126_OFFSET) &\
      IC_EVTCLR3_EC126_MASK)))


/********************************************************************/


#define ICEVTCLR3EC127Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTCLR3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTCLR3_EC127_MASK);\
    newValue <<= IC_EVTCLR3_EC127_OFFSET;\
    newValue &= IC_EVTCLR3_EC127_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTCLR3EC127Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTCLR3_EC127_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTCLR3_EC127_OFFSET) &\
      IC_EVTCLR3_EC127_MASK)))


/********************************************************************/


#define ICEVTMASK0ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTMASK0WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM0_MASK) >> \
      IC_EVTMASK0_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM0_MASK) >> \
      IC_EVTMASK0_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM1_MASK) >> \
      IC_EVTMASK0_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM1_MASK) >> \
      IC_EVTMASK0_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM2_MASK) >> \
      IC_EVTMASK0_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM2_MASK) >> \
      IC_EVTMASK0_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM3_MASK) >> \
      IC_EVTMASK0_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM3_MASK) >> \
      IC_EVTMASK0_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM4_MASK) >> \
      IC_EVTMASK0_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM4_MASK) >> \
      IC_EVTMASK0_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM4_MASK);\
    newValue <<= IC_EVTMASK0_EM4_OFFSET;\
    newValue &= IC_EVTMASK0_EM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM4_OFFSET) &\
      IC_EVTMASK0_EM4_MASK)))


/********************************************************************/


#define ICEVTMASK0EM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM5_MASK) >> \
      IC_EVTMASK0_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM5_MASK) >> \
      IC_EVTMASK0_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM5_MASK);\
    newValue <<= IC_EVTMASK0_EM5_OFFSET;\
    newValue &= IC_EVTMASK0_EM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM5_OFFSET) &\
      IC_EVTMASK0_EM5_MASK)))


/********************************************************************/


#define ICEVTMASK0EM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM6_MASK) >> \
      IC_EVTMASK0_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM6_MASK) >> \
      IC_EVTMASK0_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM6_MASK);\
    newValue <<= IC_EVTMASK0_EM6_OFFSET;\
    newValue &= IC_EVTMASK0_EM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM6_OFFSET) &\
      IC_EVTMASK0_EM6_MASK)))


/********************************************************************/


#define ICEVTMASK0EM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM7_MASK) >> \
      IC_EVTMASK0_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM7_MASK) >> \
      IC_EVTMASK0_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM7_MASK);\
    newValue <<= IC_EVTMASK0_EM7_OFFSET;\
    newValue &= IC_EVTMASK0_EM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM7_OFFSET) &\
      IC_EVTMASK0_EM7_MASK)))


/********************************************************************/


#define ICEVTMASK0EM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM8_MASK) >> \
      IC_EVTMASK0_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM8_MASK) >> \
      IC_EVTMASK0_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM8_MASK);\
    newValue <<= IC_EVTMASK0_EM8_OFFSET;\
    newValue &= IC_EVTMASK0_EM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM8_OFFSET) &\
      IC_EVTMASK0_EM8_MASK)))


/********************************************************************/


#define ICEVTMASK0EM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM9_MASK) >> \
      IC_EVTMASK0_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM9_MASK) >> \
      IC_EVTMASK0_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM9_MASK);\
    newValue <<= IC_EVTMASK0_EM9_OFFSET;\
    newValue &= IC_EVTMASK0_EM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM9_OFFSET) &\
      IC_EVTMASK0_EM9_MASK)))


/********************************************************************/


#define ICEVTMASK0EM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM10_MASK) >> \
      IC_EVTMASK0_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM10_MASK) >> \
      IC_EVTMASK0_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM10_MASK);\
    newValue <<= IC_EVTMASK0_EM10_OFFSET;\
    newValue &= IC_EVTMASK0_EM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM10_OFFSET) &\
      IC_EVTMASK0_EM10_MASK)))


/********************************************************************/


#define ICEVTMASK0EM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM11_MASK) >> \
      IC_EVTMASK0_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM11_MASK) >> \
      IC_EVTMASK0_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM11_MASK);\
    newValue <<= IC_EVTMASK0_EM11_OFFSET;\
    newValue &= IC_EVTMASK0_EM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM11_OFFSET) &\
      IC_EVTMASK0_EM11_MASK)))


/********************************************************************/


#define ICEVTMASK0EM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM12_MASK) >> \
      IC_EVTMASK0_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM12_MASK) >> \
      IC_EVTMASK0_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM12_MASK);\
    newValue <<= IC_EVTMASK0_EM12_OFFSET;\
    newValue &= IC_EVTMASK0_EM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM12_OFFSET) &\
      IC_EVTMASK0_EM12_MASK)))


/********************************************************************/


#define ICEVTMASK0EM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM13_MASK) >> \
      IC_EVTMASK0_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM13_MASK) >> \
      IC_EVTMASK0_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM13_MASK);\
    newValue <<= IC_EVTMASK0_EM13_OFFSET;\
    newValue &= IC_EVTMASK0_EM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM13_OFFSET) &\
      IC_EVTMASK0_EM13_MASK)))


/********************************************************************/


#define ICEVTMASK0EM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM14_MASK) >> \
      IC_EVTMASK0_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM14_MASK) >> \
      IC_EVTMASK0_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM14_MASK);\
    newValue <<= IC_EVTMASK0_EM14_OFFSET;\
    newValue &= IC_EVTMASK0_EM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM14_OFFSET) &\
      IC_EVTMASK0_EM14_MASK)))


/********************************************************************/


#define ICEVTMASK0EM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM15_MASK) >> \
      IC_EVTMASK0_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM15_MASK) >> \
      IC_EVTMASK0_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM15_MASK);\
    newValue <<= IC_EVTMASK0_EM15_OFFSET;\
    newValue &= IC_EVTMASK0_EM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM15_OFFSET) &\
      IC_EVTMASK0_EM15_MASK)))


/********************************************************************/


#define ICEVTMASK0EM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM16_MASK) >> \
      IC_EVTMASK0_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM16_MASK) >> \
      IC_EVTMASK0_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM16_MASK);\
    newValue <<= IC_EVTMASK0_EM16_OFFSET;\
    newValue &= IC_EVTMASK0_EM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM16_OFFSET) &\
      IC_EVTMASK0_EM16_MASK)))


/********************************************************************/


#define ICEVTMASK0EM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM17_MASK) >> \
      IC_EVTMASK0_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM17_MASK) >> \
      IC_EVTMASK0_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM17_MASK);\
    newValue <<= IC_EVTMASK0_EM17_OFFSET;\
    newValue &= IC_EVTMASK0_EM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM17_OFFSET) &\
      IC_EVTMASK0_EM17_MASK)))


/********************************************************************/


#define ICEVTMASK0EM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM18_MASK) >> \
      IC_EVTMASK0_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM18_MASK) >> \
      IC_EVTMASK0_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM18_MASK);\
    newValue <<= IC_EVTMASK0_EM18_OFFSET;\
    newValue &= IC_EVTMASK0_EM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM18_OFFSET) &\
      IC_EVTMASK0_EM18_MASK)))


/********************************************************************/


#define ICEVTMASK0EM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM19_MASK) >> \
      IC_EVTMASK0_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM19_MASK) >> \
      IC_EVTMASK0_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM19_MASK);\
    newValue <<= IC_EVTMASK0_EM19_OFFSET;\
    newValue &= IC_EVTMASK0_EM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM19_OFFSET) &\
      IC_EVTMASK0_EM19_MASK)))


/********************************************************************/


#define ICEVTMASK0EM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM20_MASK) >> \
      IC_EVTMASK0_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM20_MASK) >> \
      IC_EVTMASK0_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM20_MASK);\
    newValue <<= IC_EVTMASK0_EM20_OFFSET;\
    newValue &= IC_EVTMASK0_EM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM20_OFFSET) &\
      IC_EVTMASK0_EM20_MASK)))


/********************************************************************/


#define ICEVTMASK0EM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM21_MASK) >> \
      IC_EVTMASK0_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM21_MASK) >> \
      IC_EVTMASK0_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM21_MASK);\
    newValue <<= IC_EVTMASK0_EM21_OFFSET;\
    newValue &= IC_EVTMASK0_EM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM21_OFFSET) &\
      IC_EVTMASK0_EM21_MASK)))


/********************************************************************/


#define ICEVTMASK0EM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM22_MASK) >> \
      IC_EVTMASK0_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM22_MASK) >> \
      IC_EVTMASK0_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM22_MASK);\
    newValue <<= IC_EVTMASK0_EM22_OFFSET;\
    newValue &= IC_EVTMASK0_EM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM22_OFFSET) &\
      IC_EVTMASK0_EM22_MASK)))


/********************************************************************/


#define ICEVTMASK0EM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM23_MASK) >> \
      IC_EVTMASK0_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM23_MASK) >> \
      IC_EVTMASK0_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM23_MASK);\
    newValue <<= IC_EVTMASK0_EM23_OFFSET;\
    newValue &= IC_EVTMASK0_EM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM23_OFFSET) &\
      IC_EVTMASK0_EM23_MASK)))


/********************************************************************/


#define ICEVTMASK0EM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM24_MASK) >> \
      IC_EVTMASK0_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM24_MASK) >> \
      IC_EVTMASK0_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM24_MASK);\
    newValue <<= IC_EVTMASK0_EM24_OFFSET;\
    newValue &= IC_EVTMASK0_EM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM24_OFFSET) &\
      IC_EVTMASK0_EM24_MASK)))


/********************************************************************/


#define ICEVTMASK0EM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM25_MASK) >> \
      IC_EVTMASK0_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM25_MASK) >> \
      IC_EVTMASK0_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM25_MASK);\
    newValue <<= IC_EVTMASK0_EM25_OFFSET;\
    newValue &= IC_EVTMASK0_EM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM25_OFFSET) &\
      IC_EVTMASK0_EM25_MASK)))


/********************************************************************/


#define ICEVTMASK0EM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM26_MASK) >> \
      IC_EVTMASK0_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM26_MASK) >> \
      IC_EVTMASK0_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM26_MASK);\
    newValue <<= IC_EVTMASK0_EM26_OFFSET;\
    newValue &= IC_EVTMASK0_EM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM26_OFFSET) &\
      IC_EVTMASK0_EM26_MASK)))


/********************************************************************/


#define ICEVTMASK0EM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM27_MASK) >> \
      IC_EVTMASK0_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM27_MASK) >> \
      IC_EVTMASK0_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM27_MASK);\
    newValue <<= IC_EVTMASK0_EM27_OFFSET;\
    newValue &= IC_EVTMASK0_EM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM27_OFFSET) &\
      IC_EVTMASK0_EM27_MASK)))


/********************************************************************/


#define ICEVTMASK0EM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM28_MASK) >> \
      IC_EVTMASK0_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM28_MASK) >> \
      IC_EVTMASK0_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM28_MASK);\
    newValue <<= IC_EVTMASK0_EM28_OFFSET;\
    newValue &= IC_EVTMASK0_EM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM28_OFFSET) &\
      IC_EVTMASK0_EM28_MASK)))


/********************************************************************/


#define ICEVTMASK0EM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM29_MASK) >> \
      IC_EVTMASK0_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM29_MASK) >> \
      IC_EVTMASK0_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM29_MASK);\
    newValue <<= IC_EVTMASK0_EM29_OFFSET;\
    newValue &= IC_EVTMASK0_EM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM29_OFFSET) &\
      IC_EVTMASK0_EM29_MASK)))


/********************************************************************/


#define ICEVTMASK0EM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM30_MASK) >> \
      IC_EVTMASK0_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM30_MASK) >> \
      IC_EVTMASK0_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM30_MASK);\
    newValue <<= IC_EVTMASK0_EM30_OFFSET;\
    newValue &= IC_EVTMASK0_EM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM30_OFFSET) &\
      IC_EVTMASK0_EM30_MASK)))


/********************************************************************/


#define ICEVTMASK0EM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK0_EM31_MASK) >> \
      IC_EVTMASK0_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK0_EM31_MASK) >> \
      IC_EVTMASK0_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK0EM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK0_EM31_MASK);\
    newValue <<= IC_EVTMASK0_EM31_OFFSET;\
    newValue &= IC_EVTMASK0_EM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK0EM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK0_EM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK0_EM31_OFFSET) &\
      IC_EVTMASK0_EM31_MASK)))


/********************************************************************/


#define ICEVTMASK1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTMASK1WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM0_MASK) >> \
      IC_EVTMASK1_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM0_MASK) >> \
      IC_EVTMASK1_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM0_MASK);\
    newValue <<= IC_EVTMASK1_EM0_OFFSET;\
    newValue &= IC_EVTMASK1_EM0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM0_OFFSET) &\
      IC_EVTMASK1_EM0_MASK)))


/********************************************************************/


#define ICEVTMASK1EM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM1_MASK) >> \
      IC_EVTMASK1_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM1_MASK) >> \
      IC_EVTMASK1_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM1_MASK);\
    newValue <<= IC_EVTMASK1_EM1_OFFSET;\
    newValue &= IC_EVTMASK1_EM1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM1_OFFSET) &\
      IC_EVTMASK1_EM1_MASK)))


/********************************************************************/


#define ICEVTMASK1EM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM2_MASK) >> \
      IC_EVTMASK1_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM2_MASK) >> \
      IC_EVTMASK1_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM2_MASK);\
    newValue <<= IC_EVTMASK1_EM2_OFFSET;\
    newValue &= IC_EVTMASK1_EM2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM2_OFFSET) &\
      IC_EVTMASK1_EM2_MASK)))


/********************************************************************/


#define ICEVTMASK1EM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM3_MASK) >> \
      IC_EVTMASK1_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM3_MASK) >> \
      IC_EVTMASK1_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM3_MASK);\
    newValue <<= IC_EVTMASK1_EM3_OFFSET;\
    newValue &= IC_EVTMASK1_EM3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM3_OFFSET) &\
      IC_EVTMASK1_EM3_MASK)))


/********************************************************************/


#define ICEVTMASK1EM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM4_MASK) >> \
      IC_EVTMASK1_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM4_MASK) >> \
      IC_EVTMASK1_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM4_MASK);\
    newValue <<= IC_EVTMASK1_EM4_OFFSET;\
    newValue &= IC_EVTMASK1_EM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM4_OFFSET) &\
      IC_EVTMASK1_EM4_MASK)))


/********************************************************************/


#define ICEVTMASK1EM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM5_MASK) >> \
      IC_EVTMASK1_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM5_MASK) >> \
      IC_EVTMASK1_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM5_MASK);\
    newValue <<= IC_EVTMASK1_EM5_OFFSET;\
    newValue &= IC_EVTMASK1_EM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM5_OFFSET) &\
      IC_EVTMASK1_EM5_MASK)))


/********************************************************************/


#define ICEVTMASK1EM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM6_MASK) >> \
      IC_EVTMASK1_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM6_MASK) >> \
      IC_EVTMASK1_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM6_MASK);\
    newValue <<= IC_EVTMASK1_EM6_OFFSET;\
    newValue &= IC_EVTMASK1_EM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM6_OFFSET) &\
      IC_EVTMASK1_EM6_MASK)))


/********************************************************************/


#define ICEVTMASK1EM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM7_MASK) >> \
      IC_EVTMASK1_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM7_MASK) >> \
      IC_EVTMASK1_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM7_MASK);\
    newValue <<= IC_EVTMASK1_EM7_OFFSET;\
    newValue &= IC_EVTMASK1_EM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM7_OFFSET) &\
      IC_EVTMASK1_EM7_MASK)))


/********************************************************************/


#define ICEVTMASK1EM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM8_MASK) >> \
      IC_EVTMASK1_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM8_MASK) >> \
      IC_EVTMASK1_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM8_MASK);\
    newValue <<= IC_EVTMASK1_EM8_OFFSET;\
    newValue &= IC_EVTMASK1_EM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM8_OFFSET) &\
      IC_EVTMASK1_EM8_MASK)))


/********************************************************************/


#define ICEVTMASK1EM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM9_MASK) >> \
      IC_EVTMASK1_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM9_MASK) >> \
      IC_EVTMASK1_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM9_MASK);\
    newValue <<= IC_EVTMASK1_EM9_OFFSET;\
    newValue &= IC_EVTMASK1_EM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM9_OFFSET) &\
      IC_EVTMASK1_EM9_MASK)))


/********************************************************************/


#define ICEVTMASK1EM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM10_MASK) >> \
      IC_EVTMASK1_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM10_MASK) >> \
      IC_EVTMASK1_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM10_MASK);\
    newValue <<= IC_EVTMASK1_EM10_OFFSET;\
    newValue &= IC_EVTMASK1_EM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM10_OFFSET) &\
      IC_EVTMASK1_EM10_MASK)))


/********************************************************************/


#define ICEVTMASK1EM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM11_MASK) >> \
      IC_EVTMASK1_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM11_MASK) >> \
      IC_EVTMASK1_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM11_MASK);\
    newValue <<= IC_EVTMASK1_EM11_OFFSET;\
    newValue &= IC_EVTMASK1_EM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM11_OFFSET) &\
      IC_EVTMASK1_EM11_MASK)))


/********************************************************************/


#define ICEVTMASK1EM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM12_MASK) >> \
      IC_EVTMASK1_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM12_MASK) >> \
      IC_EVTMASK1_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM12_MASK);\
    newValue <<= IC_EVTMASK1_EM12_OFFSET;\
    newValue &= IC_EVTMASK1_EM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM12_OFFSET) &\
      IC_EVTMASK1_EM12_MASK)))


/********************************************************************/


#define ICEVTMASK1EM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM13_MASK) >> \
      IC_EVTMASK1_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM13_MASK) >> \
      IC_EVTMASK1_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM13_MASK);\
    newValue <<= IC_EVTMASK1_EM13_OFFSET;\
    newValue &= IC_EVTMASK1_EM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM13_OFFSET) &\
      IC_EVTMASK1_EM13_MASK)))


/********************************************************************/


#define ICEVTMASK1EM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM14_MASK) >> \
      IC_EVTMASK1_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM14_MASK) >> \
      IC_EVTMASK1_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM14_MASK);\
    newValue <<= IC_EVTMASK1_EM14_OFFSET;\
    newValue &= IC_EVTMASK1_EM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM14_OFFSET) &\
      IC_EVTMASK1_EM14_MASK)))


/********************************************************************/


#define ICEVTMASK1EM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM15_MASK) >> \
      IC_EVTMASK1_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM15_MASK) >> \
      IC_EVTMASK1_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM15_MASK);\
    newValue <<= IC_EVTMASK1_EM15_OFFSET;\
    newValue &= IC_EVTMASK1_EM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM15_OFFSET) &\
      IC_EVTMASK1_EM15_MASK)))


/********************************************************************/


#define ICEVTMASK1EM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM16_MASK) >> \
      IC_EVTMASK1_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM16_MASK) >> \
      IC_EVTMASK1_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM16_MASK);\
    newValue <<= IC_EVTMASK1_EM16_OFFSET;\
    newValue &= IC_EVTMASK1_EM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM16_OFFSET) &\
      IC_EVTMASK1_EM16_MASK)))


/********************************************************************/


#define ICEVTMASK1EM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM17_MASK) >> \
      IC_EVTMASK1_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM17_MASK) >> \
      IC_EVTMASK1_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM17_MASK);\
    newValue <<= IC_EVTMASK1_EM17_OFFSET;\
    newValue &= IC_EVTMASK1_EM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM17_OFFSET) &\
      IC_EVTMASK1_EM17_MASK)))


/********************************************************************/


#define ICEVTMASK1EM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM18_MASK) >> \
      IC_EVTMASK1_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM18_MASK) >> \
      IC_EVTMASK1_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM18_MASK);\
    newValue <<= IC_EVTMASK1_EM18_OFFSET;\
    newValue &= IC_EVTMASK1_EM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM18_OFFSET) &\
      IC_EVTMASK1_EM18_MASK)))


/********************************************************************/


#define ICEVTMASK1EM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM19_MASK) >> \
      IC_EVTMASK1_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM19_MASK) >> \
      IC_EVTMASK1_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM19_MASK);\
    newValue <<= IC_EVTMASK1_EM19_OFFSET;\
    newValue &= IC_EVTMASK1_EM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM19_OFFSET) &\
      IC_EVTMASK1_EM19_MASK)))


/********************************************************************/


#define ICEVTMASK1EM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM20_MASK) >> \
      IC_EVTMASK1_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM20_MASK) >> \
      IC_EVTMASK1_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM20_MASK);\
    newValue <<= IC_EVTMASK1_EM20_OFFSET;\
    newValue &= IC_EVTMASK1_EM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM20_OFFSET) &\
      IC_EVTMASK1_EM20_MASK)))


/********************************************************************/


#define ICEVTMASK1EM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM21_MASK) >> \
      IC_EVTMASK1_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM21_MASK) >> \
      IC_EVTMASK1_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM21_MASK);\
    newValue <<= IC_EVTMASK1_EM21_OFFSET;\
    newValue &= IC_EVTMASK1_EM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM21_OFFSET) &\
      IC_EVTMASK1_EM21_MASK)))


/********************************************************************/


#define ICEVTMASK1EM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM22_MASK) >> \
      IC_EVTMASK1_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM22_MASK) >> \
      IC_EVTMASK1_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM22_MASK);\
    newValue <<= IC_EVTMASK1_EM22_OFFSET;\
    newValue &= IC_EVTMASK1_EM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM22_OFFSET) &\
      IC_EVTMASK1_EM22_MASK)))


/********************************************************************/


#define ICEVTMASK1EM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM23_MASK) >> \
      IC_EVTMASK1_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM23_MASK) >> \
      IC_EVTMASK1_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM23_MASK);\
    newValue <<= IC_EVTMASK1_EM23_OFFSET;\
    newValue &= IC_EVTMASK1_EM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM23_OFFSET) &\
      IC_EVTMASK1_EM23_MASK)))


/********************************************************************/


#define ICEVTMASK1EM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM24_MASK) >> \
      IC_EVTMASK1_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM24_MASK) >> \
      IC_EVTMASK1_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM24_MASK);\
    newValue <<= IC_EVTMASK1_EM24_OFFSET;\
    newValue &= IC_EVTMASK1_EM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM24_OFFSET) &\
      IC_EVTMASK1_EM24_MASK)))


/********************************************************************/


#define ICEVTMASK1EM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM25_MASK) >> \
      IC_EVTMASK1_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM25_MASK) >> \
      IC_EVTMASK1_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM25_MASK);\
    newValue <<= IC_EVTMASK1_EM25_OFFSET;\
    newValue &= IC_EVTMASK1_EM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM25_OFFSET) &\
      IC_EVTMASK1_EM25_MASK)))


/********************************************************************/


#define ICEVTMASK1EM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM26_MASK) >> \
      IC_EVTMASK1_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM26_MASK) >> \
      IC_EVTMASK1_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM26_MASK);\
    newValue <<= IC_EVTMASK1_EM26_OFFSET;\
    newValue &= IC_EVTMASK1_EM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM26_OFFSET) &\
      IC_EVTMASK1_EM26_MASK)))


/********************************************************************/


#define ICEVTMASK1EM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM27_MASK) >> \
      IC_EVTMASK1_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM27_MASK) >> \
      IC_EVTMASK1_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM27_MASK);\
    newValue <<= IC_EVTMASK1_EM27_OFFSET;\
    newValue &= IC_EVTMASK1_EM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM27_OFFSET) &\
      IC_EVTMASK1_EM27_MASK)))


/********************************************************************/


#define ICEVTMASK1EM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM28_MASK) >> \
      IC_EVTMASK1_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM28_MASK) >> \
      IC_EVTMASK1_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM28_MASK);\
    newValue <<= IC_EVTMASK1_EM28_OFFSET;\
    newValue &= IC_EVTMASK1_EM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM28_OFFSET) &\
      IC_EVTMASK1_EM28_MASK)))


/********************************************************************/


#define ICEVTMASK1EM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM29_MASK) >> \
      IC_EVTMASK1_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM29_MASK) >> \
      IC_EVTMASK1_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM29_MASK);\
    newValue <<= IC_EVTMASK1_EM29_OFFSET;\
    newValue &= IC_EVTMASK1_EM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM29_OFFSET) &\
      IC_EVTMASK1_EM29_MASK)))


/********************************************************************/


#define ICEVTMASK1EM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM30_MASK) >> \
      IC_EVTMASK1_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM30_MASK) >> \
      IC_EVTMASK1_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM30_MASK);\
    newValue <<= IC_EVTMASK1_EM30_OFFSET;\
    newValue &= IC_EVTMASK1_EM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM30_OFFSET) &\
      IC_EVTMASK1_EM30_MASK)))


/********************************************************************/


#define ICEVTMASK1EM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK1_EM31_MASK) >> \
      IC_EVTMASK1_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK1_EM31_MASK) >> \
      IC_EVTMASK1_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK1EM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK1_EM31_MASK);\
    newValue <<= IC_EVTMASK1_EM31_OFFSET;\
    newValue &= IC_EVTMASK1_EM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK1EM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK1_EM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK1_EM31_OFFSET) &\
      IC_EVTMASK1_EM31_MASK)))


/********************************************************************/


#define ICEVTMASK2ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTMASK2WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM0_MASK) >> \
      IC_EVTMASK2_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM0_MASK) >> \
      IC_EVTMASK2_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM0_MASK);\
    newValue <<= IC_EVTMASK2_EM0_OFFSET;\
    newValue &= IC_EVTMASK2_EM0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM0_OFFSET) &\
      IC_EVTMASK2_EM0_MASK)))


/********************************************************************/


#define ICEVTMASK2EM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM1_MASK) >> \
      IC_EVTMASK2_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM1_MASK) >> \
      IC_EVTMASK2_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM1_MASK);\
    newValue <<= IC_EVTMASK2_EM1_OFFSET;\
    newValue &= IC_EVTMASK2_EM1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM1_OFFSET) &\
      IC_EVTMASK2_EM1_MASK)))


/********************************************************************/


#define ICEVTMASK2EM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM2_MASK) >> \
      IC_EVTMASK2_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM2_MASK) >> \
      IC_EVTMASK2_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM2_MASK);\
    newValue <<= IC_EVTMASK2_EM2_OFFSET;\
    newValue &= IC_EVTMASK2_EM2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM2_OFFSET) &\
      IC_EVTMASK2_EM2_MASK)))


/********************************************************************/


#define ICEVTMASK2EM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM3_MASK) >> \
      IC_EVTMASK2_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM3_MASK) >> \
      IC_EVTMASK2_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM3_MASK);\
    newValue <<= IC_EVTMASK2_EM3_OFFSET;\
    newValue &= IC_EVTMASK2_EM3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM3_OFFSET) &\
      IC_EVTMASK2_EM3_MASK)))


/********************************************************************/


#define ICEVTMASK2EM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM4_MASK) >> \
      IC_EVTMASK2_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM4_MASK) >> \
      IC_EVTMASK2_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM4_MASK);\
    newValue <<= IC_EVTMASK2_EM4_OFFSET;\
    newValue &= IC_EVTMASK2_EM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM4_OFFSET) &\
      IC_EVTMASK2_EM4_MASK)))


/********************************************************************/


#define ICEVTMASK2EM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM5_MASK) >> \
      IC_EVTMASK2_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM5_MASK) >> \
      IC_EVTMASK2_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM5_MASK);\
    newValue <<= IC_EVTMASK2_EM5_OFFSET;\
    newValue &= IC_EVTMASK2_EM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM5_OFFSET) &\
      IC_EVTMASK2_EM5_MASK)))


/********************************************************************/


#define ICEVTMASK2EM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM6_MASK) >> \
      IC_EVTMASK2_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM6_MASK) >> \
      IC_EVTMASK2_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM6_MASK);\
    newValue <<= IC_EVTMASK2_EM6_OFFSET;\
    newValue &= IC_EVTMASK2_EM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM6_OFFSET) &\
      IC_EVTMASK2_EM6_MASK)))


/********************************************************************/


#define ICEVTMASK2EM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM7_MASK) >> \
      IC_EVTMASK2_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM7_MASK) >> \
      IC_EVTMASK2_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM7_MASK);\
    newValue <<= IC_EVTMASK2_EM7_OFFSET;\
    newValue &= IC_EVTMASK2_EM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM7_OFFSET) &\
      IC_EVTMASK2_EM7_MASK)))


/********************************************************************/


#define ICEVTMASK2EM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM8_MASK) >> \
      IC_EVTMASK2_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM8_MASK) >> \
      IC_EVTMASK2_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM8_MASK);\
    newValue <<= IC_EVTMASK2_EM8_OFFSET;\
    newValue &= IC_EVTMASK2_EM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM8_OFFSET) &\
      IC_EVTMASK2_EM8_MASK)))


/********************************************************************/


#define ICEVTMASK2EM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM9_MASK) >> \
      IC_EVTMASK2_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM9_MASK) >> \
      IC_EVTMASK2_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM9_MASK);\
    newValue <<= IC_EVTMASK2_EM9_OFFSET;\
    newValue &= IC_EVTMASK2_EM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM9_OFFSET) &\
      IC_EVTMASK2_EM9_MASK)))


/********************************************************************/


#define ICEVTMASK2EM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM10_MASK) >> \
      IC_EVTMASK2_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM10_MASK) >> \
      IC_EVTMASK2_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM10_MASK);\
    newValue <<= IC_EVTMASK2_EM10_OFFSET;\
    newValue &= IC_EVTMASK2_EM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM10_OFFSET) &\
      IC_EVTMASK2_EM10_MASK)))


/********************************************************************/


#define ICEVTMASK2EM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM11_MASK) >> \
      IC_EVTMASK2_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM11_MASK) >> \
      IC_EVTMASK2_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM11_MASK);\
    newValue <<= IC_EVTMASK2_EM11_OFFSET;\
    newValue &= IC_EVTMASK2_EM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM11_OFFSET) &\
      IC_EVTMASK2_EM11_MASK)))


/********************************************************************/


#define ICEVTMASK2EM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM12_MASK) >> \
      IC_EVTMASK2_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM12_MASK) >> \
      IC_EVTMASK2_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM12_MASK);\
    newValue <<= IC_EVTMASK2_EM12_OFFSET;\
    newValue &= IC_EVTMASK2_EM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM12_OFFSET) &\
      IC_EVTMASK2_EM12_MASK)))


/********************************************************************/


#define ICEVTMASK2EM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM13_MASK) >> \
      IC_EVTMASK2_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM13_MASK) >> \
      IC_EVTMASK2_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM13_MASK);\
    newValue <<= IC_EVTMASK2_EM13_OFFSET;\
    newValue &= IC_EVTMASK2_EM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM13_OFFSET) &\
      IC_EVTMASK2_EM13_MASK)))


/********************************************************************/


#define ICEVTMASK2EM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM14_MASK) >> \
      IC_EVTMASK2_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM14_MASK) >> \
      IC_EVTMASK2_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM14_MASK);\
    newValue <<= IC_EVTMASK2_EM14_OFFSET;\
    newValue &= IC_EVTMASK2_EM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM14_OFFSET) &\
      IC_EVTMASK2_EM14_MASK)))


/********************************************************************/


#define ICEVTMASK2EM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM15_MASK) >> \
      IC_EVTMASK2_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM15_MASK) >> \
      IC_EVTMASK2_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM15_MASK);\
    newValue <<= IC_EVTMASK2_EM15_OFFSET;\
    newValue &= IC_EVTMASK2_EM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM15_OFFSET) &\
      IC_EVTMASK2_EM15_MASK)))


/********************************************************************/


#define ICEVTMASK2EM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM16_MASK) >> \
      IC_EVTMASK2_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM16_MASK) >> \
      IC_EVTMASK2_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM16_MASK);\
    newValue <<= IC_EVTMASK2_EM16_OFFSET;\
    newValue &= IC_EVTMASK2_EM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM16_OFFSET) &\
      IC_EVTMASK2_EM16_MASK)))


/********************************************************************/


#define ICEVTMASK2EM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM17_MASK) >> \
      IC_EVTMASK2_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM17_MASK) >> \
      IC_EVTMASK2_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM17_MASK);\
    newValue <<= IC_EVTMASK2_EM17_OFFSET;\
    newValue &= IC_EVTMASK2_EM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM17_OFFSET) &\
      IC_EVTMASK2_EM17_MASK)))


/********************************************************************/


#define ICEVTMASK2EM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM18_MASK) >> \
      IC_EVTMASK2_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM18_MASK) >> \
      IC_EVTMASK2_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM18_MASK);\
    newValue <<= IC_EVTMASK2_EM18_OFFSET;\
    newValue &= IC_EVTMASK2_EM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM18_OFFSET) &\
      IC_EVTMASK2_EM18_MASK)))


/********************************************************************/


#define ICEVTMASK2EM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM19_MASK) >> \
      IC_EVTMASK2_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM19_MASK) >> \
      IC_EVTMASK2_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM19_MASK);\
    newValue <<= IC_EVTMASK2_EM19_OFFSET;\
    newValue &= IC_EVTMASK2_EM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM19_OFFSET) &\
      IC_EVTMASK2_EM19_MASK)))


/********************************************************************/


#define ICEVTMASK2EM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM20_MASK) >> \
      IC_EVTMASK2_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM20_MASK) >> \
      IC_EVTMASK2_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM20_MASK);\
    newValue <<= IC_EVTMASK2_EM20_OFFSET;\
    newValue &= IC_EVTMASK2_EM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM20_OFFSET) &\
      IC_EVTMASK2_EM20_MASK)))


/********************************************************************/


#define ICEVTMASK2EM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM21_MASK) >> \
      IC_EVTMASK2_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM21_MASK) >> \
      IC_EVTMASK2_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM21_MASK);\
    newValue <<= IC_EVTMASK2_EM21_OFFSET;\
    newValue &= IC_EVTMASK2_EM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM21_OFFSET) &\
      IC_EVTMASK2_EM21_MASK)))


/********************************************************************/


#define ICEVTMASK2EM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM22_MASK) >> \
      IC_EVTMASK2_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM22_MASK) >> \
      IC_EVTMASK2_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM22_MASK);\
    newValue <<= IC_EVTMASK2_EM22_OFFSET;\
    newValue &= IC_EVTMASK2_EM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM22_OFFSET) &\
      IC_EVTMASK2_EM22_MASK)))


/********************************************************************/


#define ICEVTMASK2EM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM23_MASK) >> \
      IC_EVTMASK2_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM23_MASK) >> \
      IC_EVTMASK2_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM23_MASK);\
    newValue <<= IC_EVTMASK2_EM23_OFFSET;\
    newValue &= IC_EVTMASK2_EM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM23_OFFSET) &\
      IC_EVTMASK2_EM23_MASK)))


/********************************************************************/


#define ICEVTMASK2EM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM24_MASK) >> \
      IC_EVTMASK2_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM24_MASK) >> \
      IC_EVTMASK2_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM24_MASK);\
    newValue <<= IC_EVTMASK2_EM24_OFFSET;\
    newValue &= IC_EVTMASK2_EM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM24_OFFSET) &\
      IC_EVTMASK2_EM24_MASK)))


/********************************************************************/


#define ICEVTMASK2EM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM25_MASK) >> \
      IC_EVTMASK2_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM25_MASK) >> \
      IC_EVTMASK2_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM25_MASK);\
    newValue <<= IC_EVTMASK2_EM25_OFFSET;\
    newValue &= IC_EVTMASK2_EM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM25_OFFSET) &\
      IC_EVTMASK2_EM25_MASK)))


/********************************************************************/


#define ICEVTMASK2EM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM26_MASK) >> \
      IC_EVTMASK2_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM26_MASK) >> \
      IC_EVTMASK2_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM26_MASK);\
    newValue <<= IC_EVTMASK2_EM26_OFFSET;\
    newValue &= IC_EVTMASK2_EM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM26_OFFSET) &\
      IC_EVTMASK2_EM26_MASK)))


/********************************************************************/


#define ICEVTMASK2EM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM27_MASK) >> \
      IC_EVTMASK2_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM27_MASK) >> \
      IC_EVTMASK2_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM27_MASK);\
    newValue <<= IC_EVTMASK2_EM27_OFFSET;\
    newValue &= IC_EVTMASK2_EM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM27_OFFSET) &\
      IC_EVTMASK2_EM27_MASK)))


/********************************************************************/


#define ICEVTMASK2EM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM28_MASK) >> \
      IC_EVTMASK2_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM28_MASK) >> \
      IC_EVTMASK2_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM28_MASK);\
    newValue <<= IC_EVTMASK2_EM28_OFFSET;\
    newValue &= IC_EVTMASK2_EM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM28_OFFSET) &\
      IC_EVTMASK2_EM28_MASK)))


/********************************************************************/


#define ICEVTMASK2EM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM29_MASK) >> \
      IC_EVTMASK2_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM29_MASK) >> \
      IC_EVTMASK2_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM29_MASK);\
    newValue <<= IC_EVTMASK2_EM29_OFFSET;\
    newValue &= IC_EVTMASK2_EM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM29_OFFSET) &\
      IC_EVTMASK2_EM29_MASK)))


/********************************************************************/


#define ICEVTMASK2EM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM30_MASK) >> \
      IC_EVTMASK2_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM30_MASK) >> \
      IC_EVTMASK2_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM30_MASK);\
    newValue <<= IC_EVTMASK2_EM30_OFFSET;\
    newValue &= IC_EVTMASK2_EM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM30_OFFSET) &\
      IC_EVTMASK2_EM30_MASK)))


/********************************************************************/


#define ICEVTMASK2EM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK2_EM31_MASK) >> \
      IC_EVTMASK2_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK2_EM31_MASK) >> \
      IC_EVTMASK2_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK2EM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK2_EM31_MASK);\
    newValue <<= IC_EVTMASK2_EM31_OFFSET;\
    newValue &= IC_EVTMASK2_EM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK2EM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK2_EM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK2_EM31_OFFSET) &\
      IC_EVTMASK2_EM31_MASK)))


/********************************************************************/


#define ICEVTMASK3ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEVTMASK3WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM0_MASK) >> \
      IC_EVTMASK3_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM0_MASK) >> \
      IC_EVTMASK3_EM0_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM0_MASK);\
    newValue <<= IC_EVTMASK3_EM0_OFFSET;\
    newValue &= IC_EVTMASK3_EM0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM0_OFFSET) &\
      IC_EVTMASK3_EM0_MASK)))


/********************************************************************/


#define ICEVTMASK3EM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM1_MASK) >> \
      IC_EVTMASK3_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM1_MASK) >> \
      IC_EVTMASK3_EM1_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM1_MASK);\
    newValue <<= IC_EVTMASK3_EM1_OFFSET;\
    newValue &= IC_EVTMASK3_EM1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM1_OFFSET) &\
      IC_EVTMASK3_EM1_MASK)))


/********************************************************************/


#define ICEVTMASK3EM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM2_MASK) >> \
      IC_EVTMASK3_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM2_MASK) >> \
      IC_EVTMASK3_EM2_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM2_MASK);\
    newValue <<= IC_EVTMASK3_EM2_OFFSET;\
    newValue &= IC_EVTMASK3_EM2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM2_OFFSET) &\
      IC_EVTMASK3_EM2_MASK)))


/********************************************************************/


#define ICEVTMASK3EM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM3_MASK) >> \
      IC_EVTMASK3_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM3_MASK) >> \
      IC_EVTMASK3_EM3_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM3_MASK);\
    newValue <<= IC_EVTMASK3_EM3_OFFSET;\
    newValue &= IC_EVTMASK3_EM3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM3_OFFSET) &\
      IC_EVTMASK3_EM3_MASK)))


/********************************************************************/


#define ICEVTMASK3EM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM4_MASK) >> \
      IC_EVTMASK3_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM4_MASK) >> \
      IC_EVTMASK3_EM4_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM4_MASK);\
    newValue <<= IC_EVTMASK3_EM4_OFFSET;\
    newValue &= IC_EVTMASK3_EM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM4_OFFSET) &\
      IC_EVTMASK3_EM4_MASK)))


/********************************************************************/


#define ICEVTMASK3EM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM5_MASK) >> \
      IC_EVTMASK3_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM5_MASK) >> \
      IC_EVTMASK3_EM5_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM5_MASK);\
    newValue <<= IC_EVTMASK3_EM5_OFFSET;\
    newValue &= IC_EVTMASK3_EM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM5_OFFSET) &\
      IC_EVTMASK3_EM5_MASK)))


/********************************************************************/


#define ICEVTMASK3EM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM6_MASK) >> \
      IC_EVTMASK3_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM6_MASK) >> \
      IC_EVTMASK3_EM6_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM6_MASK);\
    newValue <<= IC_EVTMASK3_EM6_OFFSET;\
    newValue &= IC_EVTMASK3_EM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM6_OFFSET) &\
      IC_EVTMASK3_EM6_MASK)))


/********************************************************************/


#define ICEVTMASK3EM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM7_MASK) >> \
      IC_EVTMASK3_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM7_MASK) >> \
      IC_EVTMASK3_EM7_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM7_MASK);\
    newValue <<= IC_EVTMASK3_EM7_OFFSET;\
    newValue &= IC_EVTMASK3_EM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM7_OFFSET) &\
      IC_EVTMASK3_EM7_MASK)))


/********************************************************************/


#define ICEVTMASK3EM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM8_MASK) >> \
      IC_EVTMASK3_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM8_MASK) >> \
      IC_EVTMASK3_EM8_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM8_MASK);\
    newValue <<= IC_EVTMASK3_EM8_OFFSET;\
    newValue &= IC_EVTMASK3_EM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM8_OFFSET) &\
      IC_EVTMASK3_EM8_MASK)))


/********************************************************************/


#define ICEVTMASK3EM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM9_MASK) >> \
      IC_EVTMASK3_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM9_MASK) >> \
      IC_EVTMASK3_EM9_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM9_MASK);\
    newValue <<= IC_EVTMASK3_EM9_OFFSET;\
    newValue &= IC_EVTMASK3_EM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM9_OFFSET) &\
      IC_EVTMASK3_EM9_MASK)))


/********************************************************************/


#define ICEVTMASK3EM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM10_MASK) >> \
      IC_EVTMASK3_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM10_MASK) >> \
      IC_EVTMASK3_EM10_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM10_MASK);\
    newValue <<= IC_EVTMASK3_EM10_OFFSET;\
    newValue &= IC_EVTMASK3_EM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM10_OFFSET) &\
      IC_EVTMASK3_EM10_MASK)))


/********************************************************************/


#define ICEVTMASK3EM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM11_MASK) >> \
      IC_EVTMASK3_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM11_MASK) >> \
      IC_EVTMASK3_EM11_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM11_MASK);\
    newValue <<= IC_EVTMASK3_EM11_OFFSET;\
    newValue &= IC_EVTMASK3_EM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM11_OFFSET) &\
      IC_EVTMASK3_EM11_MASK)))


/********************************************************************/


#define ICEVTMASK3EM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM12_MASK) >> \
      IC_EVTMASK3_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM12_MASK) >> \
      IC_EVTMASK3_EM12_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM12_MASK);\
    newValue <<= IC_EVTMASK3_EM12_OFFSET;\
    newValue &= IC_EVTMASK3_EM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM12_OFFSET) &\
      IC_EVTMASK3_EM12_MASK)))


/********************************************************************/


#define ICEVTMASK3EM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM13_MASK) >> \
      IC_EVTMASK3_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM13_MASK) >> \
      IC_EVTMASK3_EM13_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM13_MASK);\
    newValue <<= IC_EVTMASK3_EM13_OFFSET;\
    newValue &= IC_EVTMASK3_EM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM13_OFFSET) &\
      IC_EVTMASK3_EM13_MASK)))


/********************************************************************/


#define ICEVTMASK3EM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM14_MASK) >> \
      IC_EVTMASK3_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM14_MASK) >> \
      IC_EVTMASK3_EM14_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM14_MASK);\
    newValue <<= IC_EVTMASK3_EM14_OFFSET;\
    newValue &= IC_EVTMASK3_EM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM14_OFFSET) &\
      IC_EVTMASK3_EM14_MASK)))


/********************************************************************/


#define ICEVTMASK3EM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM15_MASK) >> \
      IC_EVTMASK3_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM15_MASK) >> \
      IC_EVTMASK3_EM15_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM15_MASK);\
    newValue <<= IC_EVTMASK3_EM15_OFFSET;\
    newValue &= IC_EVTMASK3_EM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM15_OFFSET) &\
      IC_EVTMASK3_EM15_MASK)))


/********************************************************************/


#define ICEVTMASK3EM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM16_MASK) >> \
      IC_EVTMASK3_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM16_MASK) >> \
      IC_EVTMASK3_EM16_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM16_MASK);\
    newValue <<= IC_EVTMASK3_EM16_OFFSET;\
    newValue &= IC_EVTMASK3_EM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM16_OFFSET) &\
      IC_EVTMASK3_EM16_MASK)))


/********************************************************************/


#define ICEVTMASK3EM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM17_MASK) >> \
      IC_EVTMASK3_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM17_MASK) >> \
      IC_EVTMASK3_EM17_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM17_MASK);\
    newValue <<= IC_EVTMASK3_EM17_OFFSET;\
    newValue &= IC_EVTMASK3_EM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM17_OFFSET) &\
      IC_EVTMASK3_EM17_MASK)))


/********************************************************************/


#define ICEVTMASK3EM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM18_MASK) >> \
      IC_EVTMASK3_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM18_MASK) >> \
      IC_EVTMASK3_EM18_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM18_MASK);\
    newValue <<= IC_EVTMASK3_EM18_OFFSET;\
    newValue &= IC_EVTMASK3_EM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM18_OFFSET) &\
      IC_EVTMASK3_EM18_MASK)))


/********************************************************************/


#define ICEVTMASK3EM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM19_MASK) >> \
      IC_EVTMASK3_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM19_MASK) >> \
      IC_EVTMASK3_EM19_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM19_MASK);\
    newValue <<= IC_EVTMASK3_EM19_OFFSET;\
    newValue &= IC_EVTMASK3_EM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM19_OFFSET) &\
      IC_EVTMASK3_EM19_MASK)))


/********************************************************************/


#define ICEVTMASK3EM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM20_MASK) >> \
      IC_EVTMASK3_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM20_MASK) >> \
      IC_EVTMASK3_EM20_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM20_MASK);\
    newValue <<= IC_EVTMASK3_EM20_OFFSET;\
    newValue &= IC_EVTMASK3_EM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM20_OFFSET) &\
      IC_EVTMASK3_EM20_MASK)))


/********************************************************************/


#define ICEVTMASK3EM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM21_MASK) >> \
      IC_EVTMASK3_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM21_MASK) >> \
      IC_EVTMASK3_EM21_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM21_MASK);\
    newValue <<= IC_EVTMASK3_EM21_OFFSET;\
    newValue &= IC_EVTMASK3_EM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM21_OFFSET) &\
      IC_EVTMASK3_EM21_MASK)))


/********************************************************************/


#define ICEVTMASK3EM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM22_MASK) >> \
      IC_EVTMASK3_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM22_MASK) >> \
      IC_EVTMASK3_EM22_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM22_MASK);\
    newValue <<= IC_EVTMASK3_EM22_OFFSET;\
    newValue &= IC_EVTMASK3_EM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM22_OFFSET) &\
      IC_EVTMASK3_EM22_MASK)))


/********************************************************************/


#define ICEVTMASK3EM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM23_MASK) >> \
      IC_EVTMASK3_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM23_MASK) >> \
      IC_EVTMASK3_EM23_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM23_MASK);\
    newValue <<= IC_EVTMASK3_EM23_OFFSET;\
    newValue &= IC_EVTMASK3_EM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM23_OFFSET) &\
      IC_EVTMASK3_EM23_MASK)))


/********************************************************************/


#define ICEVTMASK3EM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM24_MASK) >> \
      IC_EVTMASK3_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM24_MASK) >> \
      IC_EVTMASK3_EM24_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM24_MASK);\
    newValue <<= IC_EVTMASK3_EM24_OFFSET;\
    newValue &= IC_EVTMASK3_EM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM24_OFFSET) &\
      IC_EVTMASK3_EM24_MASK)))


/********************************************************************/


#define ICEVTMASK3EM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM25_MASK) >> \
      IC_EVTMASK3_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM25_MASK) >> \
      IC_EVTMASK3_EM25_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM25_MASK);\
    newValue <<= IC_EVTMASK3_EM25_OFFSET;\
    newValue &= IC_EVTMASK3_EM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM25_OFFSET) &\
      IC_EVTMASK3_EM25_MASK)))


/********************************************************************/


#define ICEVTMASK3EM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM26_MASK) >> \
      IC_EVTMASK3_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM26_MASK) >> \
      IC_EVTMASK3_EM26_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM26_MASK);\
    newValue <<= IC_EVTMASK3_EM26_OFFSET;\
    newValue &= IC_EVTMASK3_EM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM26_OFFSET) &\
      IC_EVTMASK3_EM26_MASK)))


/********************************************************************/


#define ICEVTMASK3EM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM27_MASK) >> \
      IC_EVTMASK3_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM27_MASK) >> \
      IC_EVTMASK3_EM27_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM27_MASK);\
    newValue <<= IC_EVTMASK3_EM27_OFFSET;\
    newValue &= IC_EVTMASK3_EM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM27_OFFSET) &\
      IC_EVTMASK3_EM27_MASK)))


/********************************************************************/


#define ICEVTMASK3EM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM28_MASK) >> \
      IC_EVTMASK3_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM28_MASK) >> \
      IC_EVTMASK3_EM28_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM28_MASK);\
    newValue <<= IC_EVTMASK3_EM28_OFFSET;\
    newValue &= IC_EVTMASK3_EM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM28_OFFSET) &\
      IC_EVTMASK3_EM28_MASK)))


/********************************************************************/


#define ICEVTMASK3EM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM29_MASK) >> \
      IC_EVTMASK3_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM29_MASK) >> \
      IC_EVTMASK3_EM29_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM29_MASK);\
    newValue <<= IC_EVTMASK3_EM29_OFFSET;\
    newValue &= IC_EVTMASK3_EM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM29_OFFSET) &\
      IC_EVTMASK3_EM29_MASK)))


/********************************************************************/


#define ICEVTMASK3EM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM30_MASK) >> \
      IC_EVTMASK3_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM30_MASK) >> \
      IC_EVTMASK3_EM30_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM30_MASK);\
    newValue <<= IC_EVTMASK3_EM30_OFFSET;\
    newValue &= IC_EVTMASK3_EM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM30_OFFSET) &\
      IC_EVTMASK3_EM30_MASK)))


/********************************************************************/


#define ICEVTMASK3EM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EVTMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EVTMASK3_EM31_MASK) >> \
      IC_EVTMASK3_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EVTMASK3_EM31_MASK) >> \
      IC_EVTMASK3_EM31_OFFSET))


/********************************************************************/


#define ICEVTMASK3EM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTMASK3_EM31_MASK);\
    newValue <<= IC_EVTMASK3_EM31_OFFSET;\
    newValue &= IC_EVTMASK3_EM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTMASK3EM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTMASK3_EM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTMASK3_EM31_OFFSET) &\
      IC_EVTMASK3_EM31_MASK)))


/********************************************************************/


#define ICMEVTFLAG0ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEVTFLAG0MEF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF0_MASK) >> \
      IC_MEVTFLAG0_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF0_MASK) >> \
      IC_MEVTFLAG0_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF1_MASK) >> \
      IC_MEVTFLAG0_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF1_MASK) >> \
      IC_MEVTFLAG0_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF2_MASK) >> \
      IC_MEVTFLAG0_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF2_MASK) >> \
      IC_MEVTFLAG0_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF3_MASK) >> \
      IC_MEVTFLAG0_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF3_MASK) >> \
      IC_MEVTFLAG0_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF4_MASK) >> \
      IC_MEVTFLAG0_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF4_MASK) >> \
      IC_MEVTFLAG0_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF5_MASK) >> \
      IC_MEVTFLAG0_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF5_MASK) >> \
      IC_MEVTFLAG0_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF6_MASK) >> \
      IC_MEVTFLAG0_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF6_MASK) >> \
      IC_MEVTFLAG0_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF7_MASK) >> \
      IC_MEVTFLAG0_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF7_MASK) >> \
      IC_MEVTFLAG0_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF8_MASK) >> \
      IC_MEVTFLAG0_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF8_MASK) >> \
      IC_MEVTFLAG0_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF9_MASK) >> \
      IC_MEVTFLAG0_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF9_MASK) >> \
      IC_MEVTFLAG0_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF10_MASK) >> \
      IC_MEVTFLAG0_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF10_MASK) >> \
      IC_MEVTFLAG0_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF11_MASK) >> \
      IC_MEVTFLAG0_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF11_MASK) >> \
      IC_MEVTFLAG0_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF12_MASK) >> \
      IC_MEVTFLAG0_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF12_MASK) >> \
      IC_MEVTFLAG0_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF13_MASK) >> \
      IC_MEVTFLAG0_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF13_MASK) >> \
      IC_MEVTFLAG0_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF14_MASK) >> \
      IC_MEVTFLAG0_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF14_MASK) >> \
      IC_MEVTFLAG0_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF15_MASK) >> \
      IC_MEVTFLAG0_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF15_MASK) >> \
      IC_MEVTFLAG0_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF16_MASK) >> \
      IC_MEVTFLAG0_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF16_MASK) >> \
      IC_MEVTFLAG0_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF17_MASK) >> \
      IC_MEVTFLAG0_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF17_MASK) >> \
      IC_MEVTFLAG0_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF18_MASK) >> \
      IC_MEVTFLAG0_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF18_MASK) >> \
      IC_MEVTFLAG0_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF19_MASK) >> \
      IC_MEVTFLAG0_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF19_MASK) >> \
      IC_MEVTFLAG0_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF20_MASK) >> \
      IC_MEVTFLAG0_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF20_MASK) >> \
      IC_MEVTFLAG0_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF21_MASK) >> \
      IC_MEVTFLAG0_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF21_MASK) >> \
      IC_MEVTFLAG0_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF22_MASK) >> \
      IC_MEVTFLAG0_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF22_MASK) >> \
      IC_MEVTFLAG0_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF23_MASK) >> \
      IC_MEVTFLAG0_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF23_MASK) >> \
      IC_MEVTFLAG0_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF24_MASK) >> \
      IC_MEVTFLAG0_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF24_MASK) >> \
      IC_MEVTFLAG0_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF25_MASK) >> \
      IC_MEVTFLAG0_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF25_MASK) >> \
      IC_MEVTFLAG0_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF26_MASK) >> \
      IC_MEVTFLAG0_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF26_MASK) >> \
      IC_MEVTFLAG0_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF27_MASK) >> \
      IC_MEVTFLAG0_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF27_MASK) >> \
      IC_MEVTFLAG0_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF28_MASK) >> \
      IC_MEVTFLAG0_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF28_MASK) >> \
      IC_MEVTFLAG0_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF29_MASK) >> \
      IC_MEVTFLAG0_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF29_MASK) >> \
      IC_MEVTFLAG0_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF30_MASK) >> \
      IC_MEVTFLAG0_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF30_MASK) >> \
      IC_MEVTFLAG0_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG0_MEF31_MASK) >> \
      IC_MEVTFLAG0_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG0MEF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG0_MEF31_MASK) >> \
      IC_MEVTFLAG0_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEVTFLAG1MEF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF0_MASK) >> \
      IC_MEVTFLAG1_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF0_MASK) >> \
      IC_MEVTFLAG1_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF1_MASK) >> \
      IC_MEVTFLAG1_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF1_MASK) >> \
      IC_MEVTFLAG1_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF2_MASK) >> \
      IC_MEVTFLAG1_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF2_MASK) >> \
      IC_MEVTFLAG1_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF3_MASK) >> \
      IC_MEVTFLAG1_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF3_MASK) >> \
      IC_MEVTFLAG1_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF4_MASK) >> \
      IC_MEVTFLAG1_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF4_MASK) >> \
      IC_MEVTFLAG1_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF5_MASK) >> \
      IC_MEVTFLAG1_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF5_MASK) >> \
      IC_MEVTFLAG1_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF6_MASK) >> \
      IC_MEVTFLAG1_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF6_MASK) >> \
      IC_MEVTFLAG1_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF7_MASK) >> \
      IC_MEVTFLAG1_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF7_MASK) >> \
      IC_MEVTFLAG1_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF8_MASK) >> \
      IC_MEVTFLAG1_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF8_MASK) >> \
      IC_MEVTFLAG1_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF9_MASK) >> \
      IC_MEVTFLAG1_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF9_MASK) >> \
      IC_MEVTFLAG1_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF10_MASK) >> \
      IC_MEVTFLAG1_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF10_MASK) >> \
      IC_MEVTFLAG1_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF11_MASK) >> \
      IC_MEVTFLAG1_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF11_MASK) >> \
      IC_MEVTFLAG1_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF12_MASK) >> \
      IC_MEVTFLAG1_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF12_MASK) >> \
      IC_MEVTFLAG1_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF13_MASK) >> \
      IC_MEVTFLAG1_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF13_MASK) >> \
      IC_MEVTFLAG1_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF14_MASK) >> \
      IC_MEVTFLAG1_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF14_MASK) >> \
      IC_MEVTFLAG1_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF15_MASK) >> \
      IC_MEVTFLAG1_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF15_MASK) >> \
      IC_MEVTFLAG1_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF16_MASK) >> \
      IC_MEVTFLAG1_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF16_MASK) >> \
      IC_MEVTFLAG1_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF17_MASK) >> \
      IC_MEVTFLAG1_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF17_MASK) >> \
      IC_MEVTFLAG1_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF18_MASK) >> \
      IC_MEVTFLAG1_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF18_MASK) >> \
      IC_MEVTFLAG1_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF19_MASK) >> \
      IC_MEVTFLAG1_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF19_MASK) >> \
      IC_MEVTFLAG1_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF20_MASK) >> \
      IC_MEVTFLAG1_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF20_MASK) >> \
      IC_MEVTFLAG1_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF21_MASK) >> \
      IC_MEVTFLAG1_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF21_MASK) >> \
      IC_MEVTFLAG1_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF22_MASK) >> \
      IC_MEVTFLAG1_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF22_MASK) >> \
      IC_MEVTFLAG1_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF23_MASK) >> \
      IC_MEVTFLAG1_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF23_MASK) >> \
      IC_MEVTFLAG1_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF24_MASK) >> \
      IC_MEVTFLAG1_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF24_MASK) >> \
      IC_MEVTFLAG1_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF25_MASK) >> \
      IC_MEVTFLAG1_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF25_MASK) >> \
      IC_MEVTFLAG1_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF26_MASK) >> \
      IC_MEVTFLAG1_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF26_MASK) >> \
      IC_MEVTFLAG1_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF27_MASK) >> \
      IC_MEVTFLAG1_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF27_MASK) >> \
      IC_MEVTFLAG1_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF28_MASK) >> \
      IC_MEVTFLAG1_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF28_MASK) >> \
      IC_MEVTFLAG1_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF29_MASK) >> \
      IC_MEVTFLAG1_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF29_MASK) >> \
      IC_MEVTFLAG1_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF30_MASK) >> \
      IC_MEVTFLAG1_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF30_MASK) >> \
      IC_MEVTFLAG1_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG1_MEF31_MASK) >> \
      IC_MEVTFLAG1_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG1MEF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG1_MEF31_MASK) >> \
      IC_MEVTFLAG1_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEVTFLAG2MEF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF0_MASK) >> \
      IC_MEVTFLAG2_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF0_MASK) >> \
      IC_MEVTFLAG2_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF1_MASK) >> \
      IC_MEVTFLAG2_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF1_MASK) >> \
      IC_MEVTFLAG2_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF2_MASK) >> \
      IC_MEVTFLAG2_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF2_MASK) >> \
      IC_MEVTFLAG2_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF3_MASK) >> \
      IC_MEVTFLAG2_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF3_MASK) >> \
      IC_MEVTFLAG2_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF4_MASK) >> \
      IC_MEVTFLAG2_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF4_MASK) >> \
      IC_MEVTFLAG2_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF5_MASK) >> \
      IC_MEVTFLAG2_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF5_MASK) >> \
      IC_MEVTFLAG2_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF6_MASK) >> \
      IC_MEVTFLAG2_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF6_MASK) >> \
      IC_MEVTFLAG2_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF7_MASK) >> \
      IC_MEVTFLAG2_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF7_MASK) >> \
      IC_MEVTFLAG2_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF8_MASK) >> \
      IC_MEVTFLAG2_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF8_MASK) >> \
      IC_MEVTFLAG2_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF9_MASK) >> \
      IC_MEVTFLAG2_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF9_MASK) >> \
      IC_MEVTFLAG2_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF10_MASK) >> \
      IC_MEVTFLAG2_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF10_MASK) >> \
      IC_MEVTFLAG2_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF11_MASK) >> \
      IC_MEVTFLAG2_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF11_MASK) >> \
      IC_MEVTFLAG2_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF12_MASK) >> \
      IC_MEVTFLAG2_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF12_MASK) >> \
      IC_MEVTFLAG2_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF13_MASK) >> \
      IC_MEVTFLAG2_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF13_MASK) >> \
      IC_MEVTFLAG2_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF14_MASK) >> \
      IC_MEVTFLAG2_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF14_MASK) >> \
      IC_MEVTFLAG2_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF15_MASK) >> \
      IC_MEVTFLAG2_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF15_MASK) >> \
      IC_MEVTFLAG2_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF16_MASK) >> \
      IC_MEVTFLAG2_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF16_MASK) >> \
      IC_MEVTFLAG2_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF17_MASK) >> \
      IC_MEVTFLAG2_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF17_MASK) >> \
      IC_MEVTFLAG2_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF18_MASK) >> \
      IC_MEVTFLAG2_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF18_MASK) >> \
      IC_MEVTFLAG2_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF19_MASK) >> \
      IC_MEVTFLAG2_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF19_MASK) >> \
      IC_MEVTFLAG2_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF20_MASK) >> \
      IC_MEVTFLAG2_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF20_MASK) >> \
      IC_MEVTFLAG2_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF21_MASK) >> \
      IC_MEVTFLAG2_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF21_MASK) >> \
      IC_MEVTFLAG2_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF22_MASK) >> \
      IC_MEVTFLAG2_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF22_MASK) >> \
      IC_MEVTFLAG2_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF23_MASK) >> \
      IC_MEVTFLAG2_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF23_MASK) >> \
      IC_MEVTFLAG2_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF24_MASK) >> \
      IC_MEVTFLAG2_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF24_MASK) >> \
      IC_MEVTFLAG2_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF25_MASK) >> \
      IC_MEVTFLAG2_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF25_MASK) >> \
      IC_MEVTFLAG2_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF26_MASK) >> \
      IC_MEVTFLAG2_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF26_MASK) >> \
      IC_MEVTFLAG2_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF27_MASK) >> \
      IC_MEVTFLAG2_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF27_MASK) >> \
      IC_MEVTFLAG2_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF28_MASK) >> \
      IC_MEVTFLAG2_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF28_MASK) >> \
      IC_MEVTFLAG2_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF29_MASK) >> \
      IC_MEVTFLAG2_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF29_MASK) >> \
      IC_MEVTFLAG2_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF30_MASK) >> \
      IC_MEVTFLAG2_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF30_MASK) >> \
      IC_MEVTFLAG2_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG2_MEF31_MASK) >> \
      IC_MEVTFLAG2_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG2MEF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG2_MEF31_MASK) >> \
      IC_MEVTFLAG2_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEVTFLAG3MEF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF0_MASK) >> \
      IC_MEVTFLAG3_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF0_MASK) >> \
      IC_MEVTFLAG3_MEF0_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF1_MASK) >> \
      IC_MEVTFLAG3_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF1_MASK) >> \
      IC_MEVTFLAG3_MEF1_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF2_MASK) >> \
      IC_MEVTFLAG3_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF2_MASK) >> \
      IC_MEVTFLAG3_MEF2_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF3_MASK) >> \
      IC_MEVTFLAG3_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF3_MASK) >> \
      IC_MEVTFLAG3_MEF3_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF4_MASK) >> \
      IC_MEVTFLAG3_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF4_MASK) >> \
      IC_MEVTFLAG3_MEF4_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF5_MASK) >> \
      IC_MEVTFLAG3_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF5_MASK) >> \
      IC_MEVTFLAG3_MEF5_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF6_MASK) >> \
      IC_MEVTFLAG3_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF6_MASK) >> \
      IC_MEVTFLAG3_MEF6_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF7_MASK) >> \
      IC_MEVTFLAG3_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF7_MASK) >> \
      IC_MEVTFLAG3_MEF7_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF8_MASK) >> \
      IC_MEVTFLAG3_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF8_MASK) >> \
      IC_MEVTFLAG3_MEF8_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF9_MASK) >> \
      IC_MEVTFLAG3_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF9_MASK) >> \
      IC_MEVTFLAG3_MEF9_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF10_MASK) >> \
      IC_MEVTFLAG3_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF10_MASK) >> \
      IC_MEVTFLAG3_MEF10_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF11_MASK) >> \
      IC_MEVTFLAG3_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF11_MASK) >> \
      IC_MEVTFLAG3_MEF11_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF12_MASK) >> \
      IC_MEVTFLAG3_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF12_MASK) >> \
      IC_MEVTFLAG3_MEF12_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF13_MASK) >> \
      IC_MEVTFLAG3_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF13_MASK) >> \
      IC_MEVTFLAG3_MEF13_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF14_MASK) >> \
      IC_MEVTFLAG3_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF14_MASK) >> \
      IC_MEVTFLAG3_MEF14_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF15_MASK) >> \
      IC_MEVTFLAG3_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF15_MASK) >> \
      IC_MEVTFLAG3_MEF15_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF16_MASK) >> \
      IC_MEVTFLAG3_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF16_MASK) >> \
      IC_MEVTFLAG3_MEF16_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF17_MASK) >> \
      IC_MEVTFLAG3_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF17_MASK) >> \
      IC_MEVTFLAG3_MEF17_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF18_MASK) >> \
      IC_MEVTFLAG3_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF18_MASK) >> \
      IC_MEVTFLAG3_MEF18_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF19_MASK) >> \
      IC_MEVTFLAG3_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF19_MASK) >> \
      IC_MEVTFLAG3_MEF19_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF20_MASK) >> \
      IC_MEVTFLAG3_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF20_MASK) >> \
      IC_MEVTFLAG3_MEF20_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF21_MASK) >> \
      IC_MEVTFLAG3_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF21_MASK) >> \
      IC_MEVTFLAG3_MEF21_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF22_MASK) >> \
      IC_MEVTFLAG3_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF22_MASK) >> \
      IC_MEVTFLAG3_MEF22_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF23_MASK) >> \
      IC_MEVTFLAG3_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF23_MASK) >> \
      IC_MEVTFLAG3_MEF23_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF24_MASK) >> \
      IC_MEVTFLAG3_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF24_MASK) >> \
      IC_MEVTFLAG3_MEF24_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF25_MASK) >> \
      IC_MEVTFLAG3_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF25_MASK) >> \
      IC_MEVTFLAG3_MEF25_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF26_MASK) >> \
      IC_MEVTFLAG3_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF26_MASK) >> \
      IC_MEVTFLAG3_MEF26_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF27_MASK) >> \
      IC_MEVTFLAG3_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF27_MASK) >> \
      IC_MEVTFLAG3_MEF27_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF28_MASK) >> \
      IC_MEVTFLAG3_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF28_MASK) >> \
      IC_MEVTFLAG3_MEF28_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF29_MASK) >> \
      IC_MEVTFLAG3_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF29_MASK) >> \
      IC_MEVTFLAG3_MEF29_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF30_MASK) >> \
      IC_MEVTFLAG3_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF30_MASK) >> \
      IC_MEVTFLAG3_MEF30_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEVTFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEVTFLAG3_MEF31_MASK) >> \
      IC_MEVTFLAG3_MEF31_OFFSET))


/********************************************************************/


#define ICMEVTFLAG3MEF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEVTFLAG3_MEF31_MASK) >> \
      IC_MEVTFLAG3_MEF31_OFFSET))


/********************************************************************/


#define ICEXPMASK0ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEXPMASK0WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM0_MASK) >> \
      IC_EXPMASK0_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM0_MASK) >> \
      IC_EXPMASK0_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM1_MASK) >> \
      IC_EXPMASK0_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM1_MASK) >> \
      IC_EXPMASK0_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM2_MASK) >> \
      IC_EXPMASK0_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM2_MASK) >> \
      IC_EXPMASK0_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM3_MASK) >> \
      IC_EXPMASK0_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM3_MASK) >> \
      IC_EXPMASK0_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM4_MASK) >> \
      IC_EXPMASK0_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM4_MASK) >> \
      IC_EXPMASK0_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM4_MASK);\
    newValue <<= IC_EXPMASK0_XM4_OFFSET;\
    newValue &= IC_EXPMASK0_XM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM4_OFFSET) &\
      IC_EXPMASK0_XM4_MASK)))


/********************************************************************/


#define ICEXPMASK0XM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM5_MASK) >> \
      IC_EXPMASK0_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM5_MASK) >> \
      IC_EXPMASK0_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM5_MASK);\
    newValue <<= IC_EXPMASK0_XM5_OFFSET;\
    newValue &= IC_EXPMASK0_XM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM5_OFFSET) &\
      IC_EXPMASK0_XM5_MASK)))


/********************************************************************/


#define ICEXPMASK0XM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM6_MASK) >> \
      IC_EXPMASK0_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM6_MASK) >> \
      IC_EXPMASK0_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM6_MASK);\
    newValue <<= IC_EXPMASK0_XM6_OFFSET;\
    newValue &= IC_EXPMASK0_XM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM6_OFFSET) &\
      IC_EXPMASK0_XM6_MASK)))


/********************************************************************/


#define ICEXPMASK0XM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM7_MASK) >> \
      IC_EXPMASK0_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM7_MASK) >> \
      IC_EXPMASK0_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM7_MASK);\
    newValue <<= IC_EXPMASK0_XM7_OFFSET;\
    newValue &= IC_EXPMASK0_XM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM7_OFFSET) &\
      IC_EXPMASK0_XM7_MASK)))


/********************************************************************/


#define ICEXPMASK0XM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM8_MASK) >> \
      IC_EXPMASK0_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM8_MASK) >> \
      IC_EXPMASK0_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM8_MASK);\
    newValue <<= IC_EXPMASK0_XM8_OFFSET;\
    newValue &= IC_EXPMASK0_XM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM8_OFFSET) &\
      IC_EXPMASK0_XM8_MASK)))


/********************************************************************/


#define ICEXPMASK0XM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM9_MASK) >> \
      IC_EXPMASK0_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM9_MASK) >> \
      IC_EXPMASK0_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM9_MASK);\
    newValue <<= IC_EXPMASK0_XM9_OFFSET;\
    newValue &= IC_EXPMASK0_XM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM9_OFFSET) &\
      IC_EXPMASK0_XM9_MASK)))


/********************************************************************/


#define ICEXPMASK0XM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM10_MASK) >> \
      IC_EXPMASK0_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM10_MASK) >> \
      IC_EXPMASK0_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM10_MASK);\
    newValue <<= IC_EXPMASK0_XM10_OFFSET;\
    newValue &= IC_EXPMASK0_XM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM10_OFFSET) &\
      IC_EXPMASK0_XM10_MASK)))


/********************************************************************/


#define ICEXPMASK0XM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM11_MASK) >> \
      IC_EXPMASK0_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM11_MASK) >> \
      IC_EXPMASK0_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM11_MASK);\
    newValue <<= IC_EXPMASK0_XM11_OFFSET;\
    newValue &= IC_EXPMASK0_XM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM11_OFFSET) &\
      IC_EXPMASK0_XM11_MASK)))


/********************************************************************/


#define ICEXPMASK0XM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM12_MASK) >> \
      IC_EXPMASK0_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM12_MASK) >> \
      IC_EXPMASK0_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM12_MASK);\
    newValue <<= IC_EXPMASK0_XM12_OFFSET;\
    newValue &= IC_EXPMASK0_XM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM12_OFFSET) &\
      IC_EXPMASK0_XM12_MASK)))


/********************************************************************/


#define ICEXPMASK0XM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM13_MASK) >> \
      IC_EXPMASK0_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM13_MASK) >> \
      IC_EXPMASK0_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM13_MASK);\
    newValue <<= IC_EXPMASK0_XM13_OFFSET;\
    newValue &= IC_EXPMASK0_XM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM13_OFFSET) &\
      IC_EXPMASK0_XM13_MASK)))


/********************************************************************/


#define ICEXPMASK0XM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM14_MASK) >> \
      IC_EXPMASK0_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM14_MASK) >> \
      IC_EXPMASK0_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM14_MASK);\
    newValue <<= IC_EXPMASK0_XM14_OFFSET;\
    newValue &= IC_EXPMASK0_XM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM14_OFFSET) &\
      IC_EXPMASK0_XM14_MASK)))


/********************************************************************/


#define ICEXPMASK0XM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM15_MASK) >> \
      IC_EXPMASK0_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM15_MASK) >> \
      IC_EXPMASK0_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM15_MASK);\
    newValue <<= IC_EXPMASK0_XM15_OFFSET;\
    newValue &= IC_EXPMASK0_XM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM15_OFFSET) &\
      IC_EXPMASK0_XM15_MASK)))


/********************************************************************/


#define ICEXPMASK0XM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM16_MASK) >> \
      IC_EXPMASK0_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM16_MASK) >> \
      IC_EXPMASK0_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM16_MASK);\
    newValue <<= IC_EXPMASK0_XM16_OFFSET;\
    newValue &= IC_EXPMASK0_XM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM16_OFFSET) &\
      IC_EXPMASK0_XM16_MASK)))


/********************************************************************/


#define ICEXPMASK0XM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM17_MASK) >> \
      IC_EXPMASK0_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM17_MASK) >> \
      IC_EXPMASK0_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM17_MASK);\
    newValue <<= IC_EXPMASK0_XM17_OFFSET;\
    newValue &= IC_EXPMASK0_XM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM17_OFFSET) &\
      IC_EXPMASK0_XM17_MASK)))


/********************************************************************/


#define ICEXPMASK0XM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM18_MASK) >> \
      IC_EXPMASK0_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM18_MASK) >> \
      IC_EXPMASK0_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM18_MASK);\
    newValue <<= IC_EXPMASK0_XM18_OFFSET;\
    newValue &= IC_EXPMASK0_XM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM18_OFFSET) &\
      IC_EXPMASK0_XM18_MASK)))


/********************************************************************/


#define ICEXPMASK0XM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM19_MASK) >> \
      IC_EXPMASK0_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM19_MASK) >> \
      IC_EXPMASK0_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM19_MASK);\
    newValue <<= IC_EXPMASK0_XM19_OFFSET;\
    newValue &= IC_EXPMASK0_XM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM19_OFFSET) &\
      IC_EXPMASK0_XM19_MASK)))


/********************************************************************/


#define ICEXPMASK0XM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM20_MASK) >> \
      IC_EXPMASK0_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM20_MASK) >> \
      IC_EXPMASK0_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM20_MASK);\
    newValue <<= IC_EXPMASK0_XM20_OFFSET;\
    newValue &= IC_EXPMASK0_XM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM20_OFFSET) &\
      IC_EXPMASK0_XM20_MASK)))


/********************************************************************/


#define ICEXPMASK0XM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM21_MASK) >> \
      IC_EXPMASK0_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM21_MASK) >> \
      IC_EXPMASK0_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM21_MASK);\
    newValue <<= IC_EXPMASK0_XM21_OFFSET;\
    newValue &= IC_EXPMASK0_XM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM21_OFFSET) &\
      IC_EXPMASK0_XM21_MASK)))


/********************************************************************/


#define ICEXPMASK0XM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM22_MASK) >> \
      IC_EXPMASK0_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM22_MASK) >> \
      IC_EXPMASK0_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM22_MASK);\
    newValue <<= IC_EXPMASK0_XM22_OFFSET;\
    newValue &= IC_EXPMASK0_XM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM22_OFFSET) &\
      IC_EXPMASK0_XM22_MASK)))


/********************************************************************/


#define ICEXPMASK0XM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM23_MASK) >> \
      IC_EXPMASK0_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM23_MASK) >> \
      IC_EXPMASK0_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM23_MASK);\
    newValue <<= IC_EXPMASK0_XM23_OFFSET;\
    newValue &= IC_EXPMASK0_XM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM23_OFFSET) &\
      IC_EXPMASK0_XM23_MASK)))


/********************************************************************/


#define ICEXPMASK0XM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM24_MASK) >> \
      IC_EXPMASK0_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM24_MASK) >> \
      IC_EXPMASK0_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM24_MASK);\
    newValue <<= IC_EXPMASK0_XM24_OFFSET;\
    newValue &= IC_EXPMASK0_XM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM24_OFFSET) &\
      IC_EXPMASK0_XM24_MASK)))


/********************************************************************/


#define ICEXPMASK0XM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM25_MASK) >> \
      IC_EXPMASK0_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM25_MASK) >> \
      IC_EXPMASK0_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM25_MASK);\
    newValue <<= IC_EXPMASK0_XM25_OFFSET;\
    newValue &= IC_EXPMASK0_XM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM25_OFFSET) &\
      IC_EXPMASK0_XM25_MASK)))


/********************************************************************/


#define ICEXPMASK0XM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM26_MASK) >> \
      IC_EXPMASK0_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM26_MASK) >> \
      IC_EXPMASK0_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM26_MASK);\
    newValue <<= IC_EXPMASK0_XM26_OFFSET;\
    newValue &= IC_EXPMASK0_XM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM26_OFFSET) &\
      IC_EXPMASK0_XM26_MASK)))


/********************************************************************/


#define ICEXPMASK0XM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM27_MASK) >> \
      IC_EXPMASK0_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM27_MASK) >> \
      IC_EXPMASK0_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM27_MASK);\
    newValue <<= IC_EXPMASK0_XM27_OFFSET;\
    newValue &= IC_EXPMASK0_XM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM27_OFFSET) &\
      IC_EXPMASK0_XM27_MASK)))


/********************************************************************/


#define ICEXPMASK0XM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM28_MASK) >> \
      IC_EXPMASK0_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM28_MASK) >> \
      IC_EXPMASK0_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM28_MASK);\
    newValue <<= IC_EXPMASK0_XM28_OFFSET;\
    newValue &= IC_EXPMASK0_XM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM28_OFFSET) &\
      IC_EXPMASK0_XM28_MASK)))


/********************************************************************/


#define ICEXPMASK0XM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM29_MASK) >> \
      IC_EXPMASK0_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM29_MASK) >> \
      IC_EXPMASK0_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM29_MASK);\
    newValue <<= IC_EXPMASK0_XM29_OFFSET;\
    newValue &= IC_EXPMASK0_XM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM29_OFFSET) &\
      IC_EXPMASK0_XM29_MASK)))


/********************************************************************/


#define ICEXPMASK0XM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM30_MASK) >> \
      IC_EXPMASK0_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM30_MASK) >> \
      IC_EXPMASK0_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM30_MASK);\
    newValue <<= IC_EXPMASK0_XM30_OFFSET;\
    newValue &= IC_EXPMASK0_XM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM30_OFFSET) &\
      IC_EXPMASK0_XM30_MASK)))


/********************************************************************/


#define ICEXPMASK0XM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK0_XM31_MASK) >> \
      IC_EXPMASK0_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK0_XM31_MASK) >> \
      IC_EXPMASK0_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK0XM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK0_XM31_MASK);\
    newValue <<= IC_EXPMASK0_XM31_OFFSET;\
    newValue &= IC_EXPMASK0_XM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK0XM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK0_XM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK0_XM31_OFFSET) &\
      IC_EXPMASK0_XM31_MASK)))


/********************************************************************/


#define ICEXPMASK1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEXPMASK1WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM0_MASK) >> \
      IC_EXPMASK1_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM0_MASK) >> \
      IC_EXPMASK1_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM0_MASK);\
    newValue <<= IC_EXPMASK1_XM0_OFFSET;\
    newValue &= IC_EXPMASK1_XM0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM0_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM0_OFFSET) &\
      IC_EXPMASK1_XM0_MASK)))


/********************************************************************/


#define ICEXPMASK1XM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM1_MASK) >> \
      IC_EXPMASK1_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM1_MASK) >> \
      IC_EXPMASK1_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM1_MASK);\
    newValue <<= IC_EXPMASK1_XM1_OFFSET;\
    newValue &= IC_EXPMASK1_XM1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM1_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM1_OFFSET) &\
      IC_EXPMASK1_XM1_MASK)))


/********************************************************************/


#define ICEXPMASK1XM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM2_MASK) >> \
      IC_EXPMASK1_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM2_MASK) >> \
      IC_EXPMASK1_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM2_MASK);\
    newValue <<= IC_EXPMASK1_XM2_OFFSET;\
    newValue &= IC_EXPMASK1_XM2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM2_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM2_OFFSET) &\
      IC_EXPMASK1_XM2_MASK)))


/********************************************************************/


#define ICEXPMASK1XM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM3_MASK) >> \
      IC_EXPMASK1_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM3_MASK) >> \
      IC_EXPMASK1_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM3_MASK);\
    newValue <<= IC_EXPMASK1_XM3_OFFSET;\
    newValue &= IC_EXPMASK1_XM3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM3_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM3_OFFSET) &\
      IC_EXPMASK1_XM3_MASK)))


/********************************************************************/


#define ICEXPMASK1XM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM4_MASK) >> \
      IC_EXPMASK1_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM4_MASK) >> \
      IC_EXPMASK1_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM4_MASK);\
    newValue <<= IC_EXPMASK1_XM4_OFFSET;\
    newValue &= IC_EXPMASK1_XM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM4_OFFSET) &\
      IC_EXPMASK1_XM4_MASK)))


/********************************************************************/


#define ICEXPMASK1XM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM5_MASK) >> \
      IC_EXPMASK1_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM5_MASK) >> \
      IC_EXPMASK1_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM5_MASK);\
    newValue <<= IC_EXPMASK1_XM5_OFFSET;\
    newValue &= IC_EXPMASK1_XM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM5_OFFSET) &\
      IC_EXPMASK1_XM5_MASK)))


/********************************************************************/


#define ICEXPMASK1XM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM6_MASK) >> \
      IC_EXPMASK1_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM6_MASK) >> \
      IC_EXPMASK1_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM6_MASK);\
    newValue <<= IC_EXPMASK1_XM6_OFFSET;\
    newValue &= IC_EXPMASK1_XM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM6_OFFSET) &\
      IC_EXPMASK1_XM6_MASK)))


/********************************************************************/


#define ICEXPMASK1XM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM7_MASK) >> \
      IC_EXPMASK1_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM7_MASK) >> \
      IC_EXPMASK1_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM7_MASK);\
    newValue <<= IC_EXPMASK1_XM7_OFFSET;\
    newValue &= IC_EXPMASK1_XM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM7_OFFSET) &\
      IC_EXPMASK1_XM7_MASK)))


/********************************************************************/


#define ICEXPMASK1XM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM8_MASK) >> \
      IC_EXPMASK1_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM8_MASK) >> \
      IC_EXPMASK1_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM8_MASK);\
    newValue <<= IC_EXPMASK1_XM8_OFFSET;\
    newValue &= IC_EXPMASK1_XM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM8_OFFSET) &\
      IC_EXPMASK1_XM8_MASK)))


/********************************************************************/


#define ICEXPMASK1XM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM9_MASK) >> \
      IC_EXPMASK1_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM9_MASK) >> \
      IC_EXPMASK1_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM9_MASK);\
    newValue <<= IC_EXPMASK1_XM9_OFFSET;\
    newValue &= IC_EXPMASK1_XM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM9_OFFSET) &\
      IC_EXPMASK1_XM9_MASK)))


/********************************************************************/


#define ICEXPMASK1XM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM10_MASK) >> \
      IC_EXPMASK1_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM10_MASK) >> \
      IC_EXPMASK1_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM10_MASK);\
    newValue <<= IC_EXPMASK1_XM10_OFFSET;\
    newValue &= IC_EXPMASK1_XM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM10_OFFSET) &\
      IC_EXPMASK1_XM10_MASK)))


/********************************************************************/


#define ICEXPMASK1XM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM11_MASK) >> \
      IC_EXPMASK1_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM11_MASK) >> \
      IC_EXPMASK1_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM11_MASK);\
    newValue <<= IC_EXPMASK1_XM11_OFFSET;\
    newValue &= IC_EXPMASK1_XM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM11_OFFSET) &\
      IC_EXPMASK1_XM11_MASK)))


/********************************************************************/


#define ICEXPMASK1XM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM12_MASK) >> \
      IC_EXPMASK1_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM12_MASK) >> \
      IC_EXPMASK1_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM12_MASK);\
    newValue <<= IC_EXPMASK1_XM12_OFFSET;\
    newValue &= IC_EXPMASK1_XM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM12_OFFSET) &\
      IC_EXPMASK1_XM12_MASK)))


/********************************************************************/


#define ICEXPMASK1XM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM13_MASK) >> \
      IC_EXPMASK1_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM13_MASK) >> \
      IC_EXPMASK1_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM13_MASK);\
    newValue <<= IC_EXPMASK1_XM13_OFFSET;\
    newValue &= IC_EXPMASK1_XM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM13_OFFSET) &\
      IC_EXPMASK1_XM13_MASK)))


/********************************************************************/


#define ICEXPMASK1XM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM14_MASK) >> \
      IC_EXPMASK1_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM14_MASK) >> \
      IC_EXPMASK1_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM14_MASK);\
    newValue <<= IC_EXPMASK1_XM14_OFFSET;\
    newValue &= IC_EXPMASK1_XM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM14_OFFSET) &\
      IC_EXPMASK1_XM14_MASK)))


/********************************************************************/


#define ICEXPMASK1XM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM15_MASK) >> \
      IC_EXPMASK1_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM15_MASK) >> \
      IC_EXPMASK1_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM15_MASK);\
    newValue <<= IC_EXPMASK1_XM15_OFFSET;\
    newValue &= IC_EXPMASK1_XM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM15_OFFSET) &\
      IC_EXPMASK1_XM15_MASK)))


/********************************************************************/


#define ICEXPMASK1XM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM16_MASK) >> \
      IC_EXPMASK1_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM16_MASK) >> \
      IC_EXPMASK1_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM16_MASK);\
    newValue <<= IC_EXPMASK1_XM16_OFFSET;\
    newValue &= IC_EXPMASK1_XM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM16_OFFSET) &\
      IC_EXPMASK1_XM16_MASK)))


/********************************************************************/


#define ICEXPMASK1XM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM17_MASK) >> \
      IC_EXPMASK1_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM17_MASK) >> \
      IC_EXPMASK1_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM17_MASK);\
    newValue <<= IC_EXPMASK1_XM17_OFFSET;\
    newValue &= IC_EXPMASK1_XM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM17_OFFSET) &\
      IC_EXPMASK1_XM17_MASK)))


/********************************************************************/


#define ICEXPMASK1XM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM18_MASK) >> \
      IC_EXPMASK1_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM18_MASK) >> \
      IC_EXPMASK1_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM18_MASK);\
    newValue <<= IC_EXPMASK1_XM18_OFFSET;\
    newValue &= IC_EXPMASK1_XM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM18_OFFSET) &\
      IC_EXPMASK1_XM18_MASK)))


/********************************************************************/


#define ICEXPMASK1XM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM19_MASK) >> \
      IC_EXPMASK1_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM19_MASK) >> \
      IC_EXPMASK1_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM19_MASK);\
    newValue <<= IC_EXPMASK1_XM19_OFFSET;\
    newValue &= IC_EXPMASK1_XM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM19_OFFSET) &\
      IC_EXPMASK1_XM19_MASK)))


/********************************************************************/


#define ICEXPMASK1XM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM20_MASK) >> \
      IC_EXPMASK1_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM20_MASK) >> \
      IC_EXPMASK1_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM20_MASK);\
    newValue <<= IC_EXPMASK1_XM20_OFFSET;\
    newValue &= IC_EXPMASK1_XM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM20_OFFSET) &\
      IC_EXPMASK1_XM20_MASK)))


/********************************************************************/


#define ICEXPMASK1XM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM21_MASK) >> \
      IC_EXPMASK1_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM21_MASK) >> \
      IC_EXPMASK1_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM21_MASK);\
    newValue <<= IC_EXPMASK1_XM21_OFFSET;\
    newValue &= IC_EXPMASK1_XM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM21_OFFSET) &\
      IC_EXPMASK1_XM21_MASK)))


/********************************************************************/


#define ICEXPMASK1XM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM22_MASK) >> \
      IC_EXPMASK1_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM22_MASK) >> \
      IC_EXPMASK1_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM22_MASK);\
    newValue <<= IC_EXPMASK1_XM22_OFFSET;\
    newValue &= IC_EXPMASK1_XM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM22_OFFSET) &\
      IC_EXPMASK1_XM22_MASK)))


/********************************************************************/


#define ICEXPMASK1XM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM23_MASK) >> \
      IC_EXPMASK1_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM23_MASK) >> \
      IC_EXPMASK1_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM23_MASK);\
    newValue <<= IC_EXPMASK1_XM23_OFFSET;\
    newValue &= IC_EXPMASK1_XM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM23_OFFSET) &\
      IC_EXPMASK1_XM23_MASK)))


/********************************************************************/


#define ICEXPMASK1XM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM24_MASK) >> \
      IC_EXPMASK1_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM24_MASK) >> \
      IC_EXPMASK1_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM24_MASK);\
    newValue <<= IC_EXPMASK1_XM24_OFFSET;\
    newValue &= IC_EXPMASK1_XM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM24_OFFSET) &\
      IC_EXPMASK1_XM24_MASK)))


/********************************************************************/


#define ICEXPMASK1XM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM25_MASK) >> \
      IC_EXPMASK1_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM25_MASK) >> \
      IC_EXPMASK1_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM25_MASK);\
    newValue <<= IC_EXPMASK1_XM25_OFFSET;\
    newValue &= IC_EXPMASK1_XM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM25_OFFSET) &\
      IC_EXPMASK1_XM25_MASK)))


/********************************************************************/


#define ICEXPMASK1XM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM26_MASK) >> \
      IC_EXPMASK1_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM26_MASK) >> \
      IC_EXPMASK1_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM26_MASK);\
    newValue <<= IC_EXPMASK1_XM26_OFFSET;\
    newValue &= IC_EXPMASK1_XM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM26_OFFSET) &\
      IC_EXPMASK1_XM26_MASK)))


/********************************************************************/


#define ICEXPMASK1XM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM27_MASK) >> \
      IC_EXPMASK1_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM27_MASK) >> \
      IC_EXPMASK1_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM27_MASK);\
    newValue <<= IC_EXPMASK1_XM27_OFFSET;\
    newValue &= IC_EXPMASK1_XM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM27_OFFSET) &\
      IC_EXPMASK1_XM27_MASK)))


/********************************************************************/


#define ICEXPMASK1XM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM28_MASK) >> \
      IC_EXPMASK1_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM28_MASK) >> \
      IC_EXPMASK1_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM28_MASK);\
    newValue <<= IC_EXPMASK1_XM28_OFFSET;\
    newValue &= IC_EXPMASK1_XM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM28_OFFSET) &\
      IC_EXPMASK1_XM28_MASK)))


/********************************************************************/


#define ICEXPMASK1XM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM29_MASK) >> \
      IC_EXPMASK1_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM29_MASK) >> \
      IC_EXPMASK1_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM29_MASK);\
    newValue <<= IC_EXPMASK1_XM29_OFFSET;\
    newValue &= IC_EXPMASK1_XM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM29_OFFSET) &\
      IC_EXPMASK1_XM29_MASK)))


/********************************************************************/


#define ICEXPMASK1XM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM30_MASK) >> \
      IC_EXPMASK1_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM30_MASK) >> \
      IC_EXPMASK1_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM30_MASK);\
    newValue <<= IC_EXPMASK1_XM30_OFFSET;\
    newValue &= IC_EXPMASK1_XM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM30_OFFSET) &\
      IC_EXPMASK1_XM30_MASK)))


/********************************************************************/


#define ICEXPMASK1XM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK1_XM31_MASK) >> \
      IC_EXPMASK1_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK1_XM31_MASK) >> \
      IC_EXPMASK1_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK1XM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK1_XM31_MASK);\
    newValue <<= IC_EXPMASK1_XM31_OFFSET;\
    newValue &= IC_EXPMASK1_XM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK1XM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK1_XM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK1_XM31_OFFSET) &\
      IC_EXPMASK1_XM31_MASK)))


/********************************************************************/


#define ICEXPMASK2ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEXPMASK2WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM0_MASK) >> \
      IC_EXPMASK2_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM0_MASK) >> \
      IC_EXPMASK2_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM0_MASK);\
    newValue <<= IC_EXPMASK2_XM0_OFFSET;\
    newValue &= IC_EXPMASK2_XM0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM0_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM0_OFFSET) &\
      IC_EXPMASK2_XM0_MASK)))


/********************************************************************/


#define ICEXPMASK2XM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM1_MASK) >> \
      IC_EXPMASK2_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM1_MASK) >> \
      IC_EXPMASK2_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM1_MASK);\
    newValue <<= IC_EXPMASK2_XM1_OFFSET;\
    newValue &= IC_EXPMASK2_XM1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM1_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM1_OFFSET) &\
      IC_EXPMASK2_XM1_MASK)))


/********************************************************************/


#define ICEXPMASK2XM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM2_MASK) >> \
      IC_EXPMASK2_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM2_MASK) >> \
      IC_EXPMASK2_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM2_MASK);\
    newValue <<= IC_EXPMASK2_XM2_OFFSET;\
    newValue &= IC_EXPMASK2_XM2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM2_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM2_OFFSET) &\
      IC_EXPMASK2_XM2_MASK)))


/********************************************************************/


#define ICEXPMASK2XM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM3_MASK) >> \
      IC_EXPMASK2_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM3_MASK) >> \
      IC_EXPMASK2_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM3_MASK);\
    newValue <<= IC_EXPMASK2_XM3_OFFSET;\
    newValue &= IC_EXPMASK2_XM3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM3_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM3_OFFSET) &\
      IC_EXPMASK2_XM3_MASK)))


/********************************************************************/


#define ICEXPMASK2XM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM4_MASK) >> \
      IC_EXPMASK2_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM4_MASK) >> \
      IC_EXPMASK2_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM4_MASK);\
    newValue <<= IC_EXPMASK2_XM4_OFFSET;\
    newValue &= IC_EXPMASK2_XM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM4_OFFSET) &\
      IC_EXPMASK2_XM4_MASK)))


/********************************************************************/


#define ICEXPMASK2XM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM5_MASK) >> \
      IC_EXPMASK2_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM5_MASK) >> \
      IC_EXPMASK2_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM5_MASK);\
    newValue <<= IC_EXPMASK2_XM5_OFFSET;\
    newValue &= IC_EXPMASK2_XM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM5_OFFSET) &\
      IC_EXPMASK2_XM5_MASK)))


/********************************************************************/


#define ICEXPMASK2XM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM6_MASK) >> \
      IC_EXPMASK2_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM6_MASK) >> \
      IC_EXPMASK2_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM6_MASK);\
    newValue <<= IC_EXPMASK2_XM6_OFFSET;\
    newValue &= IC_EXPMASK2_XM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM6_OFFSET) &\
      IC_EXPMASK2_XM6_MASK)))


/********************************************************************/


#define ICEXPMASK2XM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM7_MASK) >> \
      IC_EXPMASK2_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM7_MASK) >> \
      IC_EXPMASK2_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM7_MASK);\
    newValue <<= IC_EXPMASK2_XM7_OFFSET;\
    newValue &= IC_EXPMASK2_XM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM7_OFFSET) &\
      IC_EXPMASK2_XM7_MASK)))


/********************************************************************/


#define ICEXPMASK2XM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM8_MASK) >> \
      IC_EXPMASK2_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM8_MASK) >> \
      IC_EXPMASK2_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM8_MASK);\
    newValue <<= IC_EXPMASK2_XM8_OFFSET;\
    newValue &= IC_EXPMASK2_XM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM8_OFFSET) &\
      IC_EXPMASK2_XM8_MASK)))


/********************************************************************/


#define ICEXPMASK2XM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM9_MASK) >> \
      IC_EXPMASK2_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM9_MASK) >> \
      IC_EXPMASK2_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM9_MASK);\
    newValue <<= IC_EXPMASK2_XM9_OFFSET;\
    newValue &= IC_EXPMASK2_XM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM9_OFFSET) &\
      IC_EXPMASK2_XM9_MASK)))


/********************************************************************/


#define ICEXPMASK2XM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM10_MASK) >> \
      IC_EXPMASK2_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM10_MASK) >> \
      IC_EXPMASK2_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM10_MASK);\
    newValue <<= IC_EXPMASK2_XM10_OFFSET;\
    newValue &= IC_EXPMASK2_XM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM10_OFFSET) &\
      IC_EXPMASK2_XM10_MASK)))


/********************************************************************/


#define ICEXPMASK2XM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM11_MASK) >> \
      IC_EXPMASK2_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM11_MASK) >> \
      IC_EXPMASK2_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM11_MASK);\
    newValue <<= IC_EXPMASK2_XM11_OFFSET;\
    newValue &= IC_EXPMASK2_XM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM11_OFFSET) &\
      IC_EXPMASK2_XM11_MASK)))


/********************************************************************/


#define ICEXPMASK2XM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM12_MASK) >> \
      IC_EXPMASK2_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM12_MASK) >> \
      IC_EXPMASK2_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM12_MASK);\
    newValue <<= IC_EXPMASK2_XM12_OFFSET;\
    newValue &= IC_EXPMASK2_XM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM12_OFFSET) &\
      IC_EXPMASK2_XM12_MASK)))


/********************************************************************/


#define ICEXPMASK2XM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM13_MASK) >> \
      IC_EXPMASK2_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM13_MASK) >> \
      IC_EXPMASK2_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM13_MASK);\
    newValue <<= IC_EXPMASK2_XM13_OFFSET;\
    newValue &= IC_EXPMASK2_XM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM13_OFFSET) &\
      IC_EXPMASK2_XM13_MASK)))


/********************************************************************/


#define ICEXPMASK2XM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM14_MASK) >> \
      IC_EXPMASK2_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM14_MASK) >> \
      IC_EXPMASK2_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM14_MASK);\
    newValue <<= IC_EXPMASK2_XM14_OFFSET;\
    newValue &= IC_EXPMASK2_XM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM14_OFFSET) &\
      IC_EXPMASK2_XM14_MASK)))


/********************************************************************/


#define ICEXPMASK2XM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM15_MASK) >> \
      IC_EXPMASK2_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM15_MASK) >> \
      IC_EXPMASK2_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM15_MASK);\
    newValue <<= IC_EXPMASK2_XM15_OFFSET;\
    newValue &= IC_EXPMASK2_XM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM15_OFFSET) &\
      IC_EXPMASK2_XM15_MASK)))


/********************************************************************/


#define ICEXPMASK2XM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM16_MASK) >> \
      IC_EXPMASK2_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM16_MASK) >> \
      IC_EXPMASK2_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM16_MASK);\
    newValue <<= IC_EXPMASK2_XM16_OFFSET;\
    newValue &= IC_EXPMASK2_XM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM16_OFFSET) &\
      IC_EXPMASK2_XM16_MASK)))


/********************************************************************/


#define ICEXPMASK2XM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM17_MASK) >> \
      IC_EXPMASK2_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM17_MASK) >> \
      IC_EXPMASK2_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM17_MASK);\
    newValue <<= IC_EXPMASK2_XM17_OFFSET;\
    newValue &= IC_EXPMASK2_XM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM17_OFFSET) &\
      IC_EXPMASK2_XM17_MASK)))


/********************************************************************/


#define ICEXPMASK2XM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM18_MASK) >> \
      IC_EXPMASK2_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM18_MASK) >> \
      IC_EXPMASK2_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM18_MASK);\
    newValue <<= IC_EXPMASK2_XM18_OFFSET;\
    newValue &= IC_EXPMASK2_XM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM18_OFFSET) &\
      IC_EXPMASK2_XM18_MASK)))


/********************************************************************/


#define ICEXPMASK2XM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM19_MASK) >> \
      IC_EXPMASK2_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM19_MASK) >> \
      IC_EXPMASK2_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM19_MASK);\
    newValue <<= IC_EXPMASK2_XM19_OFFSET;\
    newValue &= IC_EXPMASK2_XM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM19_OFFSET) &\
      IC_EXPMASK2_XM19_MASK)))


/********************************************************************/


#define ICEXPMASK2XM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM20_MASK) >> \
      IC_EXPMASK2_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM20_MASK) >> \
      IC_EXPMASK2_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM20_MASK);\
    newValue <<= IC_EXPMASK2_XM20_OFFSET;\
    newValue &= IC_EXPMASK2_XM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM20_OFFSET) &\
      IC_EXPMASK2_XM20_MASK)))


/********************************************************************/


#define ICEXPMASK2XM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM21_MASK) >> \
      IC_EXPMASK2_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM21_MASK) >> \
      IC_EXPMASK2_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM21_MASK);\
    newValue <<= IC_EXPMASK2_XM21_OFFSET;\
    newValue &= IC_EXPMASK2_XM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM21_OFFSET) &\
      IC_EXPMASK2_XM21_MASK)))


/********************************************************************/


#define ICEXPMASK2XM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM22_MASK) >> \
      IC_EXPMASK2_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM22_MASK) >> \
      IC_EXPMASK2_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM22_MASK);\
    newValue <<= IC_EXPMASK2_XM22_OFFSET;\
    newValue &= IC_EXPMASK2_XM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM22_OFFSET) &\
      IC_EXPMASK2_XM22_MASK)))


/********************************************************************/


#define ICEXPMASK2XM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM23_MASK) >> \
      IC_EXPMASK2_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM23_MASK) >> \
      IC_EXPMASK2_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM23_MASK);\
    newValue <<= IC_EXPMASK2_XM23_OFFSET;\
    newValue &= IC_EXPMASK2_XM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM23_OFFSET) &\
      IC_EXPMASK2_XM23_MASK)))


/********************************************************************/


#define ICEXPMASK2XM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM24_MASK) >> \
      IC_EXPMASK2_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM24_MASK) >> \
      IC_EXPMASK2_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM24_MASK);\
    newValue <<= IC_EXPMASK2_XM24_OFFSET;\
    newValue &= IC_EXPMASK2_XM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM24_OFFSET) &\
      IC_EXPMASK2_XM24_MASK)))


/********************************************************************/


#define ICEXPMASK2XM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM25_MASK) >> \
      IC_EXPMASK2_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM25_MASK) >> \
      IC_EXPMASK2_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM25_MASK);\
    newValue <<= IC_EXPMASK2_XM25_OFFSET;\
    newValue &= IC_EXPMASK2_XM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM25_OFFSET) &\
      IC_EXPMASK2_XM25_MASK)))


/********************************************************************/


#define ICEXPMASK2XM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM26_MASK) >> \
      IC_EXPMASK2_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM26_MASK) >> \
      IC_EXPMASK2_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM26_MASK);\
    newValue <<= IC_EXPMASK2_XM26_OFFSET;\
    newValue &= IC_EXPMASK2_XM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM26_OFFSET) &\
      IC_EXPMASK2_XM26_MASK)))


/********************************************************************/


#define ICEXPMASK2XM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM27_MASK) >> \
      IC_EXPMASK2_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM27_MASK) >> \
      IC_EXPMASK2_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM27_MASK);\
    newValue <<= IC_EXPMASK2_XM27_OFFSET;\
    newValue &= IC_EXPMASK2_XM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM27_OFFSET) &\
      IC_EXPMASK2_XM27_MASK)))


/********************************************************************/


#define ICEXPMASK2XM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM28_MASK) >> \
      IC_EXPMASK2_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM28_MASK) >> \
      IC_EXPMASK2_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM28_MASK);\
    newValue <<= IC_EXPMASK2_XM28_OFFSET;\
    newValue &= IC_EXPMASK2_XM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM28_OFFSET) &\
      IC_EXPMASK2_XM28_MASK)))


/********************************************************************/


#define ICEXPMASK2XM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM29_MASK) >> \
      IC_EXPMASK2_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM29_MASK) >> \
      IC_EXPMASK2_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM29_MASK);\
    newValue <<= IC_EXPMASK2_XM29_OFFSET;\
    newValue &= IC_EXPMASK2_XM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM29_OFFSET) &\
      IC_EXPMASK2_XM29_MASK)))


/********************************************************************/


#define ICEXPMASK2XM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM30_MASK) >> \
      IC_EXPMASK2_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM30_MASK) >> \
      IC_EXPMASK2_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM30_MASK);\
    newValue <<= IC_EXPMASK2_XM30_OFFSET;\
    newValue &= IC_EXPMASK2_XM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM30_OFFSET) &\
      IC_EXPMASK2_XM30_MASK)))


/********************************************************************/


#define ICEXPMASK2XM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK2_XM31_MASK) >> \
      IC_EXPMASK2_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK2_XM31_MASK) >> \
      IC_EXPMASK2_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK2XM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK2_XM31_MASK);\
    newValue <<= IC_EXPMASK2_XM31_OFFSET;\
    newValue &= IC_EXPMASK2_XM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK2XM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK2_XM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK2_XM31_OFFSET) &\
      IC_EXPMASK2_XM31_MASK)))


/********************************************************************/


#define ICEXPMASK3ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICEXPMASK3WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM0_MASK) >> \
      IC_EXPMASK3_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM0_MASK) >> \
      IC_EXPMASK3_XM0_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM0_MASK);\
    newValue <<= IC_EXPMASK3_XM0_OFFSET;\
    newValue &= IC_EXPMASK3_XM0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM0_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM0_OFFSET) &\
      IC_EXPMASK3_XM0_MASK)))


/********************************************************************/


#define ICEXPMASK3XM1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM1_MASK) >> \
      IC_EXPMASK3_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM1_MASK) >> \
      IC_EXPMASK3_XM1_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM1_MASK);\
    newValue <<= IC_EXPMASK3_XM1_OFFSET;\
    newValue &= IC_EXPMASK3_XM1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM1_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM1_OFFSET) &\
      IC_EXPMASK3_XM1_MASK)))


/********************************************************************/


#define ICEXPMASK3XM2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM2_MASK) >> \
      IC_EXPMASK3_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM2_MASK) >> \
      IC_EXPMASK3_XM2_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM2_MASK);\
    newValue <<= IC_EXPMASK3_XM2_OFFSET;\
    newValue &= IC_EXPMASK3_XM2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM2_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM2_OFFSET) &\
      IC_EXPMASK3_XM2_MASK)))


/********************************************************************/


#define ICEXPMASK3XM3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM3_MASK) >> \
      IC_EXPMASK3_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM3_MASK) >> \
      IC_EXPMASK3_XM3_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM3_MASK);\
    newValue <<= IC_EXPMASK3_XM3_OFFSET;\
    newValue &= IC_EXPMASK3_XM3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM3_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM3_OFFSET) &\
      IC_EXPMASK3_XM3_MASK)))


/********************************************************************/


#define ICEXPMASK3XM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM4_MASK) >> \
      IC_EXPMASK3_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM4_MASK) >> \
      IC_EXPMASK3_XM4_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM4_MASK);\
    newValue <<= IC_EXPMASK3_XM4_OFFSET;\
    newValue &= IC_EXPMASK3_XM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM4_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM4_OFFSET) &\
      IC_EXPMASK3_XM4_MASK)))


/********************************************************************/


#define ICEXPMASK3XM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM5_MASK) >> \
      IC_EXPMASK3_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM5_MASK) >> \
      IC_EXPMASK3_XM5_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM5_MASK);\
    newValue <<= IC_EXPMASK3_XM5_OFFSET;\
    newValue &= IC_EXPMASK3_XM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM5_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM5_OFFSET) &\
      IC_EXPMASK3_XM5_MASK)))


/********************************************************************/


#define ICEXPMASK3XM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM6_MASK) >> \
      IC_EXPMASK3_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM6_MASK) >> \
      IC_EXPMASK3_XM6_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM6_MASK);\
    newValue <<= IC_EXPMASK3_XM6_OFFSET;\
    newValue &= IC_EXPMASK3_XM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM6_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM6_OFFSET) &\
      IC_EXPMASK3_XM6_MASK)))


/********************************************************************/


#define ICEXPMASK3XM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM7_MASK) >> \
      IC_EXPMASK3_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM7_MASK) >> \
      IC_EXPMASK3_XM7_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM7_MASK);\
    newValue <<= IC_EXPMASK3_XM7_OFFSET;\
    newValue &= IC_EXPMASK3_XM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM7_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM7_OFFSET) &\
      IC_EXPMASK3_XM7_MASK)))


/********************************************************************/


#define ICEXPMASK3XM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM8_MASK) >> \
      IC_EXPMASK3_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM8_MASK) >> \
      IC_EXPMASK3_XM8_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM8_MASK);\
    newValue <<= IC_EXPMASK3_XM8_OFFSET;\
    newValue &= IC_EXPMASK3_XM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM8_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM8_OFFSET) &\
      IC_EXPMASK3_XM8_MASK)))


/********************************************************************/


#define ICEXPMASK3XM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM9_MASK) >> \
      IC_EXPMASK3_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM9_MASK) >> \
      IC_EXPMASK3_XM9_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM9_MASK);\
    newValue <<= IC_EXPMASK3_XM9_OFFSET;\
    newValue &= IC_EXPMASK3_XM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM9_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM9_OFFSET) &\
      IC_EXPMASK3_XM9_MASK)))


/********************************************************************/


#define ICEXPMASK3XM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM10_MASK) >> \
      IC_EXPMASK3_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM10_MASK) >> \
      IC_EXPMASK3_XM10_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM10_MASK);\
    newValue <<= IC_EXPMASK3_XM10_OFFSET;\
    newValue &= IC_EXPMASK3_XM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM10_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM10_OFFSET) &\
      IC_EXPMASK3_XM10_MASK)))


/********************************************************************/


#define ICEXPMASK3XM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM11_MASK) >> \
      IC_EXPMASK3_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM11_MASK) >> \
      IC_EXPMASK3_XM11_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM11_MASK);\
    newValue <<= IC_EXPMASK3_XM11_OFFSET;\
    newValue &= IC_EXPMASK3_XM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM11_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM11_OFFSET) &\
      IC_EXPMASK3_XM11_MASK)))


/********************************************************************/


#define ICEXPMASK3XM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM12_MASK) >> \
      IC_EXPMASK3_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM12_MASK) >> \
      IC_EXPMASK3_XM12_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM12_MASK);\
    newValue <<= IC_EXPMASK3_XM12_OFFSET;\
    newValue &= IC_EXPMASK3_XM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM12_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM12_OFFSET) &\
      IC_EXPMASK3_XM12_MASK)))


/********************************************************************/


#define ICEXPMASK3XM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM13_MASK) >> \
      IC_EXPMASK3_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM13_MASK) >> \
      IC_EXPMASK3_XM13_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM13_MASK);\
    newValue <<= IC_EXPMASK3_XM13_OFFSET;\
    newValue &= IC_EXPMASK3_XM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM13_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM13_OFFSET) &\
      IC_EXPMASK3_XM13_MASK)))


/********************************************************************/


#define ICEXPMASK3XM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM14_MASK) >> \
      IC_EXPMASK3_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM14_MASK) >> \
      IC_EXPMASK3_XM14_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM14_MASK);\
    newValue <<= IC_EXPMASK3_XM14_OFFSET;\
    newValue &= IC_EXPMASK3_XM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM14_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM14_OFFSET) &\
      IC_EXPMASK3_XM14_MASK)))


/********************************************************************/


#define ICEXPMASK3XM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM15_MASK) >> \
      IC_EXPMASK3_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM15_MASK) >> \
      IC_EXPMASK3_XM15_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM15_MASK);\
    newValue <<= IC_EXPMASK3_XM15_OFFSET;\
    newValue &= IC_EXPMASK3_XM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM15_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM15_OFFSET) &\
      IC_EXPMASK3_XM15_MASK)))


/********************************************************************/


#define ICEXPMASK3XM16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM16_MASK) >> \
      IC_EXPMASK3_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM16_MASK) >> \
      IC_EXPMASK3_XM16_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM16Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM16_MASK);\
    newValue <<= IC_EXPMASK3_XM16_OFFSET;\
    newValue &= IC_EXPMASK3_XM16_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM16Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM16_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM16_OFFSET) &\
      IC_EXPMASK3_XM16_MASK)))


/********************************************************************/


#define ICEXPMASK3XM17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM17_MASK) >> \
      IC_EXPMASK3_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM17_MASK) >> \
      IC_EXPMASK3_XM17_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM17Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM17_MASK);\
    newValue <<= IC_EXPMASK3_XM17_OFFSET;\
    newValue &= IC_EXPMASK3_XM17_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM17Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM17_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM17_OFFSET) &\
      IC_EXPMASK3_XM17_MASK)))


/********************************************************************/


#define ICEXPMASK3XM18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM18_MASK) >> \
      IC_EXPMASK3_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM18_MASK) >> \
      IC_EXPMASK3_XM18_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM18Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM18_MASK);\
    newValue <<= IC_EXPMASK3_XM18_OFFSET;\
    newValue &= IC_EXPMASK3_XM18_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM18Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM18_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM18_OFFSET) &\
      IC_EXPMASK3_XM18_MASK)))


/********************************************************************/


#define ICEXPMASK3XM19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM19_MASK) >> \
      IC_EXPMASK3_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM19_MASK) >> \
      IC_EXPMASK3_XM19_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM19Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM19_MASK);\
    newValue <<= IC_EXPMASK3_XM19_OFFSET;\
    newValue &= IC_EXPMASK3_XM19_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM19Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM19_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM19_OFFSET) &\
      IC_EXPMASK3_XM19_MASK)))


/********************************************************************/


#define ICEXPMASK3XM20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM20_MASK) >> \
      IC_EXPMASK3_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM20_MASK) >> \
      IC_EXPMASK3_XM20_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM20Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM20_MASK);\
    newValue <<= IC_EXPMASK3_XM20_OFFSET;\
    newValue &= IC_EXPMASK3_XM20_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM20Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM20_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM20_OFFSET) &\
      IC_EXPMASK3_XM20_MASK)))


/********************************************************************/


#define ICEXPMASK3XM21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM21_MASK) >> \
      IC_EXPMASK3_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM21_MASK) >> \
      IC_EXPMASK3_XM21_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM21Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM21_MASK);\
    newValue <<= IC_EXPMASK3_XM21_OFFSET;\
    newValue &= IC_EXPMASK3_XM21_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM21Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM21_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM21_OFFSET) &\
      IC_EXPMASK3_XM21_MASK)))


/********************************************************************/


#define ICEXPMASK3XM22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM22_MASK) >> \
      IC_EXPMASK3_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM22_MASK) >> \
      IC_EXPMASK3_XM22_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM22Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM22_MASK);\
    newValue <<= IC_EXPMASK3_XM22_OFFSET;\
    newValue &= IC_EXPMASK3_XM22_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM22Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM22_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM22_OFFSET) &\
      IC_EXPMASK3_XM22_MASK)))


/********************************************************************/


#define ICEXPMASK3XM23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM23_MASK) >> \
      IC_EXPMASK3_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM23_MASK) >> \
      IC_EXPMASK3_XM23_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM23Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM23_MASK);\
    newValue <<= IC_EXPMASK3_XM23_OFFSET;\
    newValue &= IC_EXPMASK3_XM23_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM23Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM23_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM23_OFFSET) &\
      IC_EXPMASK3_XM23_MASK)))


/********************************************************************/


#define ICEXPMASK3XM24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM24_MASK) >> \
      IC_EXPMASK3_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM24_MASK) >> \
      IC_EXPMASK3_XM24_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM24Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM24_MASK);\
    newValue <<= IC_EXPMASK3_XM24_OFFSET;\
    newValue &= IC_EXPMASK3_XM24_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM24Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM24_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM24_OFFSET) &\
      IC_EXPMASK3_XM24_MASK)))


/********************************************************************/


#define ICEXPMASK3XM25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM25_MASK) >> \
      IC_EXPMASK3_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM25_MASK) >> \
      IC_EXPMASK3_XM25_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM25Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM25_MASK);\
    newValue <<= IC_EXPMASK3_XM25_OFFSET;\
    newValue &= IC_EXPMASK3_XM25_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM25Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM25_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM25_OFFSET) &\
      IC_EXPMASK3_XM25_MASK)))


/********************************************************************/


#define ICEXPMASK3XM26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM26_MASK) >> \
      IC_EXPMASK3_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM26_MASK) >> \
      IC_EXPMASK3_XM26_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM26Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM26_MASK);\
    newValue <<= IC_EXPMASK3_XM26_OFFSET;\
    newValue &= IC_EXPMASK3_XM26_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM26Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM26_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM26_OFFSET) &\
      IC_EXPMASK3_XM26_MASK)))


/********************************************************************/


#define ICEXPMASK3XM27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM27_MASK) >> \
      IC_EXPMASK3_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM27_MASK) >> \
      IC_EXPMASK3_XM27_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM27Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM27_MASK);\
    newValue <<= IC_EXPMASK3_XM27_OFFSET;\
    newValue &= IC_EXPMASK3_XM27_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM27Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM27_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM27_OFFSET) &\
      IC_EXPMASK3_XM27_MASK)))


/********************************************************************/


#define ICEXPMASK3XM28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM28_MASK) >> \
      IC_EXPMASK3_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM28_MASK) >> \
      IC_EXPMASK3_XM28_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM28Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM28_MASK);\
    newValue <<= IC_EXPMASK3_XM28_OFFSET;\
    newValue &= IC_EXPMASK3_XM28_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM28Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM28_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM28_OFFSET) &\
      IC_EXPMASK3_XM28_MASK)))


/********************************************************************/


#define ICEXPMASK3XM29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM29_MASK) >> \
      IC_EXPMASK3_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM29_MASK) >> \
      IC_EXPMASK3_XM29_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM29Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM29_MASK);\
    newValue <<= IC_EXPMASK3_XM29_OFFSET;\
    newValue &= IC_EXPMASK3_XM29_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM29Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM29_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM29_OFFSET) &\
      IC_EXPMASK3_XM29_MASK)))


/********************************************************************/


#define ICEXPMASK3XM30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM30_MASK) >> \
      IC_EXPMASK3_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM30_MASK) >> \
      IC_EXPMASK3_XM30_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM30Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM30_MASK);\
    newValue <<= IC_EXPMASK3_XM30_OFFSET;\
    newValue &= IC_EXPMASK3_XM30_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM30Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM30_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM30_OFFSET) &\
      IC_EXPMASK3_XM30_MASK)))


/********************************************************************/


#define ICEXPMASK3XM31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_EXPMASK3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_EXPMASK3_XM31_MASK) >> \
      IC_EXPMASK3_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_EXPMASK3_XM31_MASK) >> \
      IC_EXPMASK3_XM31_OFFSET))


/********************************************************************/


#define ICEXPMASK3XM31Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EXPMASK3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EXPMASK3_XM31_MASK);\
    newValue <<= IC_EXPMASK3_XM31_OFFSET;\
    newValue &= IC_EXPMASK3_XM31_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEXPMASK3XM31Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EXPMASK3_XM31_MASK)) |\
      ((((UWORD32)(value)) << IC_EXPMASK3_XM31_OFFSET) &\
      IC_EXPMASK3_XM31_MASK)))


/********************************************************************/


#define ICMEXPFLAG0ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEXPFLAG0MXF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF0_MASK) >> \
      IC_MEXPFLAG0_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF0_MASK) >> \
      IC_MEXPFLAG0_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF1_MASK) >> \
      IC_MEXPFLAG0_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF1_MASK) >> \
      IC_MEXPFLAG0_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF2_MASK) >> \
      IC_MEXPFLAG0_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF2_MASK) >> \
      IC_MEXPFLAG0_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF3_MASK) >> \
      IC_MEXPFLAG0_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF3_MASK) >> \
      IC_MEXPFLAG0_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF4_MASK) >> \
      IC_MEXPFLAG0_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF4_MASK) >> \
      IC_MEXPFLAG0_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF5_MASK) >> \
      IC_MEXPFLAG0_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF5_MASK) >> \
      IC_MEXPFLAG0_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF6_MASK) >> \
      IC_MEXPFLAG0_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF6_MASK) >> \
      IC_MEXPFLAG0_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF7_MASK) >> \
      IC_MEXPFLAG0_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF7_MASK) >> \
      IC_MEXPFLAG0_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF8_MASK) >> \
      IC_MEXPFLAG0_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF8_MASK) >> \
      IC_MEXPFLAG0_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF9_MASK) >> \
      IC_MEXPFLAG0_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF9_MASK) >> \
      IC_MEXPFLAG0_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF10_MASK) >> \
      IC_MEXPFLAG0_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF10_MASK) >> \
      IC_MEXPFLAG0_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF11_MASK) >> \
      IC_MEXPFLAG0_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF11_MASK) >> \
      IC_MEXPFLAG0_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF12_MASK) >> \
      IC_MEXPFLAG0_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF12_MASK) >> \
      IC_MEXPFLAG0_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF13_MASK) >> \
      IC_MEXPFLAG0_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF13_MASK) >> \
      IC_MEXPFLAG0_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF14_MASK) >> \
      IC_MEXPFLAG0_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF14_MASK) >> \
      IC_MEXPFLAG0_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF15_MASK) >> \
      IC_MEXPFLAG0_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF15_MASK) >> \
      IC_MEXPFLAG0_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF16_MASK) >> \
      IC_MEXPFLAG0_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF16_MASK) >> \
      IC_MEXPFLAG0_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF17_MASK) >> \
      IC_MEXPFLAG0_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF17_MASK) >> \
      IC_MEXPFLAG0_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF18_MASK) >> \
      IC_MEXPFLAG0_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF18_MASK) >> \
      IC_MEXPFLAG0_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF19_MASK) >> \
      IC_MEXPFLAG0_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF19_MASK) >> \
      IC_MEXPFLAG0_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF20_MASK) >> \
      IC_MEXPFLAG0_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF20_MASK) >> \
      IC_MEXPFLAG0_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF21_MASK) >> \
      IC_MEXPFLAG0_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF21_MASK) >> \
      IC_MEXPFLAG0_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF22_MASK) >> \
      IC_MEXPFLAG0_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF22_MASK) >> \
      IC_MEXPFLAG0_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF23_MASK) >> \
      IC_MEXPFLAG0_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF23_MASK) >> \
      IC_MEXPFLAG0_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF24_MASK) >> \
      IC_MEXPFLAG0_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF24_MASK) >> \
      IC_MEXPFLAG0_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF25_MASK) >> \
      IC_MEXPFLAG0_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF25_MASK) >> \
      IC_MEXPFLAG0_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF26_MASK) >> \
      IC_MEXPFLAG0_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF26_MASK) >> \
      IC_MEXPFLAG0_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF27_MASK) >> \
      IC_MEXPFLAG0_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF27_MASK) >> \
      IC_MEXPFLAG0_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF28_MASK) >> \
      IC_MEXPFLAG0_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF28_MASK) >> \
      IC_MEXPFLAG0_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF29_MASK) >> \
      IC_MEXPFLAG0_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF29_MASK) >> \
      IC_MEXPFLAG0_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF30_MASK) >> \
      IC_MEXPFLAG0_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF30_MASK) >> \
      IC_MEXPFLAG0_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG0_MXF31_MASK) >> \
      IC_MEXPFLAG0_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG0MXF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG0_MXF31_MASK) >> \
      IC_MEXPFLAG0_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEXPFLAG1MXF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF0_MASK) >> \
      IC_MEXPFLAG1_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF0_MASK) >> \
      IC_MEXPFLAG1_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF1_MASK) >> \
      IC_MEXPFLAG1_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF1_MASK) >> \
      IC_MEXPFLAG1_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF2_MASK) >> \
      IC_MEXPFLAG1_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF2_MASK) >> \
      IC_MEXPFLAG1_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF3_MASK) >> \
      IC_MEXPFLAG1_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF3_MASK) >> \
      IC_MEXPFLAG1_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF4_MASK) >> \
      IC_MEXPFLAG1_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF4_MASK) >> \
      IC_MEXPFLAG1_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF5_MASK) >> \
      IC_MEXPFLAG1_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF5_MASK) >> \
      IC_MEXPFLAG1_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF6_MASK) >> \
      IC_MEXPFLAG1_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF6_MASK) >> \
      IC_MEXPFLAG1_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF7_MASK) >> \
      IC_MEXPFLAG1_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF7_MASK) >> \
      IC_MEXPFLAG1_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF8_MASK) >> \
      IC_MEXPFLAG1_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF8_MASK) >> \
      IC_MEXPFLAG1_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF9_MASK) >> \
      IC_MEXPFLAG1_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF9_MASK) >> \
      IC_MEXPFLAG1_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF10_MASK) >> \
      IC_MEXPFLAG1_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF10_MASK) >> \
      IC_MEXPFLAG1_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF11_MASK) >> \
      IC_MEXPFLAG1_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF11_MASK) >> \
      IC_MEXPFLAG1_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF12_MASK) >> \
      IC_MEXPFLAG1_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF12_MASK) >> \
      IC_MEXPFLAG1_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF13_MASK) >> \
      IC_MEXPFLAG1_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF13_MASK) >> \
      IC_MEXPFLAG1_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF14_MASK) >> \
      IC_MEXPFLAG1_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF14_MASK) >> \
      IC_MEXPFLAG1_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF15_MASK) >> \
      IC_MEXPFLAG1_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF15_MASK) >> \
      IC_MEXPFLAG1_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF16_MASK) >> \
      IC_MEXPFLAG1_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF16_MASK) >> \
      IC_MEXPFLAG1_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF17_MASK) >> \
      IC_MEXPFLAG1_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF17_MASK) >> \
      IC_MEXPFLAG1_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF18_MASK) >> \
      IC_MEXPFLAG1_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF18_MASK) >> \
      IC_MEXPFLAG1_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF19_MASK) >> \
      IC_MEXPFLAG1_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF19_MASK) >> \
      IC_MEXPFLAG1_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF20_MASK) >> \
      IC_MEXPFLAG1_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF20_MASK) >> \
      IC_MEXPFLAG1_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF21_MASK) >> \
      IC_MEXPFLAG1_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF21_MASK) >> \
      IC_MEXPFLAG1_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF22_MASK) >> \
      IC_MEXPFLAG1_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF22_MASK) >> \
      IC_MEXPFLAG1_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF23_MASK) >> \
      IC_MEXPFLAG1_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF23_MASK) >> \
      IC_MEXPFLAG1_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF24_MASK) >> \
      IC_MEXPFLAG1_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF24_MASK) >> \
      IC_MEXPFLAG1_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF25_MASK) >> \
      IC_MEXPFLAG1_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF25_MASK) >> \
      IC_MEXPFLAG1_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF26_MASK) >> \
      IC_MEXPFLAG1_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF26_MASK) >> \
      IC_MEXPFLAG1_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF27_MASK) >> \
      IC_MEXPFLAG1_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF27_MASK) >> \
      IC_MEXPFLAG1_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF28_MASK) >> \
      IC_MEXPFLAG1_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF28_MASK) >> \
      IC_MEXPFLAG1_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF29_MASK) >> \
      IC_MEXPFLAG1_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF29_MASK) >> \
      IC_MEXPFLAG1_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF30_MASK) >> \
      IC_MEXPFLAG1_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF30_MASK) >> \
      IC_MEXPFLAG1_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG1_MXF31_MASK) >> \
      IC_MEXPFLAG1_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG1MXF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG1_MXF31_MASK) >> \
      IC_MEXPFLAG1_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEXPFLAG2MXF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF0_MASK) >> \
      IC_MEXPFLAG2_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF0_MASK) >> \
      IC_MEXPFLAG2_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF1_MASK) >> \
      IC_MEXPFLAG2_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF1_MASK) >> \
      IC_MEXPFLAG2_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF2_MASK) >> \
      IC_MEXPFLAG2_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF2_MASK) >> \
      IC_MEXPFLAG2_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF3_MASK) >> \
      IC_MEXPFLAG2_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF3_MASK) >> \
      IC_MEXPFLAG2_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF4_MASK) >> \
      IC_MEXPFLAG2_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF4_MASK) >> \
      IC_MEXPFLAG2_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF5_MASK) >> \
      IC_MEXPFLAG2_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF5_MASK) >> \
      IC_MEXPFLAG2_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF6_MASK) >> \
      IC_MEXPFLAG2_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF6_MASK) >> \
      IC_MEXPFLAG2_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF7_MASK) >> \
      IC_MEXPFLAG2_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF7_MASK) >> \
      IC_MEXPFLAG2_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF8_MASK) >> \
      IC_MEXPFLAG2_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF8_MASK) >> \
      IC_MEXPFLAG2_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF9_MASK) >> \
      IC_MEXPFLAG2_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF9_MASK) >> \
      IC_MEXPFLAG2_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF10_MASK) >> \
      IC_MEXPFLAG2_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF10_MASK) >> \
      IC_MEXPFLAG2_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF11_MASK) >> \
      IC_MEXPFLAG2_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF11_MASK) >> \
      IC_MEXPFLAG2_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF12_MASK) >> \
      IC_MEXPFLAG2_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF12_MASK) >> \
      IC_MEXPFLAG2_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF13_MASK) >> \
      IC_MEXPFLAG2_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF13_MASK) >> \
      IC_MEXPFLAG2_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF14_MASK) >> \
      IC_MEXPFLAG2_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF14_MASK) >> \
      IC_MEXPFLAG2_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF15_MASK) >> \
      IC_MEXPFLAG2_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF15_MASK) >> \
      IC_MEXPFLAG2_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF16_MASK) >> \
      IC_MEXPFLAG2_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF16_MASK) >> \
      IC_MEXPFLAG2_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF17_MASK) >> \
      IC_MEXPFLAG2_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF17_MASK) >> \
      IC_MEXPFLAG2_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF18_MASK) >> \
      IC_MEXPFLAG2_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF18_MASK) >> \
      IC_MEXPFLAG2_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF19_MASK) >> \
      IC_MEXPFLAG2_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF19_MASK) >> \
      IC_MEXPFLAG2_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF20_MASK) >> \
      IC_MEXPFLAG2_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF20_MASK) >> \
      IC_MEXPFLAG2_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF21_MASK) >> \
      IC_MEXPFLAG2_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF21_MASK) >> \
      IC_MEXPFLAG2_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF22_MASK) >> \
      IC_MEXPFLAG2_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF22_MASK) >> \
      IC_MEXPFLAG2_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF23_MASK) >> \
      IC_MEXPFLAG2_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF23_MASK) >> \
      IC_MEXPFLAG2_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF24_MASK) >> \
      IC_MEXPFLAG2_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF24_MASK) >> \
      IC_MEXPFLAG2_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF25_MASK) >> \
      IC_MEXPFLAG2_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF25_MASK) >> \
      IC_MEXPFLAG2_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF26_MASK) >> \
      IC_MEXPFLAG2_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF26_MASK) >> \
      IC_MEXPFLAG2_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF27_MASK) >> \
      IC_MEXPFLAG2_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF27_MASK) >> \
      IC_MEXPFLAG2_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF28_MASK) >> \
      IC_MEXPFLAG2_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF28_MASK) >> \
      IC_MEXPFLAG2_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF29_MASK) >> \
      IC_MEXPFLAG2_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF29_MASK) >> \
      IC_MEXPFLAG2_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF30_MASK) >> \
      IC_MEXPFLAG2_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF30_MASK) >> \
      IC_MEXPFLAG2_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG2_MXF31_MASK) >> \
      IC_MEXPFLAG2_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG2MXF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG2_MXF31_MASK) >> \
      IC_MEXPFLAG2_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICMEXPFLAG3MXF0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF0_MASK) >> \
      IC_MEXPFLAG3_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF0_MASK) >> \
      IC_MEXPFLAG3_MXF0_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF1_MASK) >> \
      IC_MEXPFLAG3_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF1_MASK) >> \
      IC_MEXPFLAG3_MXF1_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF2_MASK) >> \
      IC_MEXPFLAG3_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF2_MASK) >> \
      IC_MEXPFLAG3_MXF2_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF3_MASK) >> \
      IC_MEXPFLAG3_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF3_MASK) >> \
      IC_MEXPFLAG3_MXF3_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF4_MASK) >> \
      IC_MEXPFLAG3_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF4_MASK) >> \
      IC_MEXPFLAG3_MXF4_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF5_MASK) >> \
      IC_MEXPFLAG3_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF5_MASK) >> \
      IC_MEXPFLAG3_MXF5_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF6_MASK) >> \
      IC_MEXPFLAG3_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF6_MASK) >> \
      IC_MEXPFLAG3_MXF6_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF7_MASK) >> \
      IC_MEXPFLAG3_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF7_MASK) >> \
      IC_MEXPFLAG3_MXF7_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF8_MASK) >> \
      IC_MEXPFLAG3_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF8_MASK) >> \
      IC_MEXPFLAG3_MXF8_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF9_MASK) >> \
      IC_MEXPFLAG3_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF9_MASK) >> \
      IC_MEXPFLAG3_MXF9_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF10_MASK) >> \
      IC_MEXPFLAG3_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF10_MASK) >> \
      IC_MEXPFLAG3_MXF10_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF11_MASK) >> \
      IC_MEXPFLAG3_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF11_MASK) >> \
      IC_MEXPFLAG3_MXF11_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF12_MASK) >> \
      IC_MEXPFLAG3_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF12_MASK) >> \
      IC_MEXPFLAG3_MXF12_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF13_MASK) >> \
      IC_MEXPFLAG3_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF13_MASK) >> \
      IC_MEXPFLAG3_MXF13_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF14_MASK) >> \
      IC_MEXPFLAG3_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF14_MASK) >> \
      IC_MEXPFLAG3_MXF14_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF15_MASK) >> \
      IC_MEXPFLAG3_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF15_MASK) >> \
      IC_MEXPFLAG3_MXF15_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF16Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF16_MASK) >> \
      IC_MEXPFLAG3_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF16Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF16_MASK) >> \
      IC_MEXPFLAG3_MXF16_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF17Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF17_MASK) >> \
      IC_MEXPFLAG3_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF17Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF17_MASK) >> \
      IC_MEXPFLAG3_MXF17_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF18Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF18_MASK) >> \
      IC_MEXPFLAG3_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF18Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF18_MASK) >> \
      IC_MEXPFLAG3_MXF18_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF19Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF19_MASK) >> \
      IC_MEXPFLAG3_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF19Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF19_MASK) >> \
      IC_MEXPFLAG3_MXF19_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF20Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF20_MASK) >> \
      IC_MEXPFLAG3_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF20Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF20_MASK) >> \
      IC_MEXPFLAG3_MXF20_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF21Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF21_MASK) >> \
      IC_MEXPFLAG3_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF21Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF21_MASK) >> \
      IC_MEXPFLAG3_MXF21_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF22Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF22_MASK) >> \
      IC_MEXPFLAG3_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF22Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF22_MASK) >> \
      IC_MEXPFLAG3_MXF22_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF23Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF23_MASK) >> \
      IC_MEXPFLAG3_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF23Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF23_MASK) >> \
      IC_MEXPFLAG3_MXF23_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF24Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF24_MASK) >> \
      IC_MEXPFLAG3_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF24Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF24_MASK) >> \
      IC_MEXPFLAG3_MXF24_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF25Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF25_MASK) >> \
      IC_MEXPFLAG3_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF25Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF25_MASK) >> \
      IC_MEXPFLAG3_MXF25_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF26Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF26_MASK) >> \
      IC_MEXPFLAG3_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF26Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF26_MASK) >> \
      IC_MEXPFLAG3_MXF26_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF27Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF27_MASK) >> \
      IC_MEXPFLAG3_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF27Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF27_MASK) >> \
      IC_MEXPFLAG3_MXF27_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF28Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF28_MASK) >> \
      IC_MEXPFLAG3_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF28Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF28_MASK) >> \
      IC_MEXPFLAG3_MXF28_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF29Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF29_MASK) >> \
      IC_MEXPFLAG3_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF29Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF29_MASK) >> \
      IC_MEXPFLAG3_MXF29_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF30Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF30_MASK) >> \
      IC_MEXPFLAG3_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF30Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF30_MASK) >> \
      IC_MEXPFLAG3_MXF30_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF31Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_MEXPFLAG3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_MEXPFLAG3_MXF31_MASK) >> \
      IC_MEXPFLAG3_MXF31_OFFSET))


/********************************************************************/


#define ICMEXPFLAG3MXF31Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_MEXPFLAG3_MXF31_MASK) >> \
      IC_MEXPFLAG3_MXF31_OFFSET))


/********************************************************************/


#define ICINTMUX1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICINTMUX1WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX1INTSEL4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX1_INTSEL4_MASK) >> \
      IC_INTMUX1_INTSEL4_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX1_INTSEL4_MASK) >> \
      IC_INTMUX1_INTSEL4_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX1_INTSEL4_MASK);\
    newValue <<= IC_INTMUX1_INTSEL4_OFFSET;\
    newValue &= IC_INTMUX1_INTSEL4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX1INTSEL4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX1_INTSEL4_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX1_INTSEL4_OFFSET) &\
      IC_INTMUX1_INTSEL4_MASK)))


/********************************************************************/


#define ICINTMUX1INTSEL5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX1_INTSEL5_MASK) >> \
      IC_INTMUX1_INTSEL5_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX1_INTSEL5_MASK) >> \
      IC_INTMUX1_INTSEL5_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX1_INTSEL5_MASK);\
    newValue <<= IC_INTMUX1_INTSEL5_OFFSET;\
    newValue &= IC_INTMUX1_INTSEL5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX1INTSEL5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX1_INTSEL5_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX1_INTSEL5_OFFSET) &\
      IC_INTMUX1_INTSEL5_MASK)))


/********************************************************************/


#define ICINTMUX1INTSEL6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX1_INTSEL6_MASK) >> \
      IC_INTMUX1_INTSEL6_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX1_INTSEL6_MASK) >> \
      IC_INTMUX1_INTSEL6_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX1_INTSEL6_MASK);\
    newValue <<= IC_INTMUX1_INTSEL6_OFFSET;\
    newValue &= IC_INTMUX1_INTSEL6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX1INTSEL6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX1_INTSEL6_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX1_INTSEL6_OFFSET) &\
      IC_INTMUX1_INTSEL6_MASK)))


/********************************************************************/


#define ICINTMUX1INTSEL7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX1_INTSEL7_MASK) >> \
      IC_INTMUX1_INTSEL7_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX1_INTSEL7_MASK) >> \
      IC_INTMUX1_INTSEL7_OFFSET))


/********************************************************************/


#define ICINTMUX1INTSEL7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX1_INTSEL7_MASK);\
    newValue <<= IC_INTMUX1_INTSEL7_OFFSET;\
    newValue &= IC_INTMUX1_INTSEL7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX1INTSEL7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX1_INTSEL7_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX1_INTSEL7_OFFSET) &\
      IC_INTMUX1_INTSEL7_MASK)))


/********************************************************************/


#define ICINTMUX2ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX2_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICINTMUX2WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX2INTSEL8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX2_INTSEL8_MASK) >> \
      IC_INTMUX2_INTSEL8_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX2_INTSEL8_MASK) >> \
      IC_INTMUX2_INTSEL8_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX2_INTSEL8_MASK);\
    newValue <<= IC_INTMUX2_INTSEL8_OFFSET;\
    newValue &= IC_INTMUX2_INTSEL8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX2INTSEL8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX2_INTSEL8_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX2_INTSEL8_OFFSET) &\
      IC_INTMUX2_INTSEL8_MASK)))


/********************************************************************/


#define ICINTMUX2INTSEL9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX2_INTSEL9_MASK) >> \
      IC_INTMUX2_INTSEL9_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX2_INTSEL9_MASK) >> \
      IC_INTMUX2_INTSEL9_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX2_INTSEL9_MASK);\
    newValue <<= IC_INTMUX2_INTSEL9_OFFSET;\
    newValue &= IC_INTMUX2_INTSEL9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX2INTSEL9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX2_INTSEL9_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX2_INTSEL9_OFFSET) &\
      IC_INTMUX2_INTSEL9_MASK)))


/********************************************************************/


#define ICINTMUX2INTSEL10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX2_INTSEL10_MASK) >> \
      IC_INTMUX2_INTSEL10_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX2_INTSEL10_MASK) >> \
      IC_INTMUX2_INTSEL10_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX2_INTSEL10_MASK);\
    newValue <<= IC_INTMUX2_INTSEL10_OFFSET;\
    newValue &= IC_INTMUX2_INTSEL10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX2INTSEL10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX2_INTSEL10_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX2_INTSEL10_OFFSET) &\
      IC_INTMUX2_INTSEL10_MASK)))


/********************************************************************/


#define ICINTMUX2INTSEL11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX2_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX2_INTSEL11_MASK) >> \
      IC_INTMUX2_INTSEL11_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX2_INTSEL11_MASK) >> \
      IC_INTMUX2_INTSEL11_OFFSET))


/********************************************************************/


#define ICINTMUX2INTSEL11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX2_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX2_INTSEL11_MASK);\
    newValue <<= IC_INTMUX2_INTSEL11_OFFSET;\
    newValue &= IC_INTMUX2_INTSEL11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX2INTSEL11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX2_INTSEL11_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX2_INTSEL11_OFFSET) &\
      IC_INTMUX2_INTSEL11_MASK)))


/********************************************************************/


#define ICINTMUX3ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX3_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICINTMUX3WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX3INTSEL12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX3_INTSEL12_MASK) >> \
      IC_INTMUX3_INTSEL12_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX3_INTSEL12_MASK) >> \
      IC_INTMUX3_INTSEL12_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX3_INTSEL12_MASK);\
    newValue <<= IC_INTMUX3_INTSEL12_OFFSET;\
    newValue &= IC_INTMUX3_INTSEL12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX3INTSEL12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX3_INTSEL12_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX3_INTSEL12_OFFSET) &\
      IC_INTMUX3_INTSEL12_MASK)))


/********************************************************************/


#define ICINTMUX3INTSEL13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX3_INTSEL13_MASK) >> \
      IC_INTMUX3_INTSEL13_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX3_INTSEL13_MASK) >> \
      IC_INTMUX3_INTSEL13_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX3_INTSEL13_MASK);\
    newValue <<= IC_INTMUX3_INTSEL13_OFFSET;\
    newValue &= IC_INTMUX3_INTSEL13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX3INTSEL13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX3_INTSEL13_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX3_INTSEL13_OFFSET) &\
      IC_INTMUX3_INTSEL13_MASK)))


/********************************************************************/


#define ICINTMUX3INTSEL14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX3_INTSEL14_MASK) >> \
      IC_INTMUX3_INTSEL14_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX3_INTSEL14_MASK) >> \
      IC_INTMUX3_INTSEL14_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX3_INTSEL14_MASK);\
    newValue <<= IC_INTMUX3_INTSEL14_OFFSET;\
    newValue &= IC_INTMUX3_INTSEL14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX3INTSEL14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX3_INTSEL14_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX3_INTSEL14_OFFSET) &\
      IC_INTMUX3_INTSEL14_MASK)))


/********************************************************************/


#define ICINTMUX3INTSEL15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTMUX3_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTMUX3_INTSEL15_MASK) >> \
      IC_INTMUX3_INTSEL15_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTMUX3_INTSEL15_MASK) >> \
      IC_INTMUX3_INTSEL15_OFFSET))


/********************************************************************/


#define ICINTMUX3INTSEL15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTMUX3_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTMUX3_INTSEL15_MASK);\
    newValue <<= IC_INTMUX3_INTSEL15_OFFSET;\
    newValue &= IC_INTMUX3_INTSEL15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTMUX3INTSEL15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTMUX3_INTSEL15_MASK)) |\
      ((((UWORD32)(value)) << IC_INTMUX3_INTSEL15_OFFSET) &\
      IC_INTMUX3_INTSEL15_MASK)))


/********************************************************************/


#define ICAEGMUX0ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX0_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICAEGMUX0WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX0AEGSEL0Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX0_AEGSEL0_MASK) >> \
      IC_AEGMUX0_AEGSEL0_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL0Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX0_AEGSEL0_MASK) >> \
      IC_AEGMUX0_AEGSEL0_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX0_AEGSEL0_MASK);\
    newValue <<= IC_AEGMUX0_AEGSEL0_OFFSET;\
    newValue &= IC_AEGMUX0_AEGSEL0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX0AEGSEL0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX0_AEGSEL0_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX0_AEGSEL0_OFFSET) &\
      IC_AEGMUX0_AEGSEL0_MASK)))


/********************************************************************/


#define ICAEGMUX0AEGSEL1Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX0_AEGSEL1_MASK) >> \
      IC_AEGMUX0_AEGSEL1_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL1Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX0_AEGSEL1_MASK) >> \
      IC_AEGMUX0_AEGSEL1_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX0_AEGSEL1_MASK);\
    newValue <<= IC_AEGMUX0_AEGSEL1_OFFSET;\
    newValue &= IC_AEGMUX0_AEGSEL1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX0AEGSEL1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX0_AEGSEL1_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX0_AEGSEL1_OFFSET) &\
      IC_AEGMUX0_AEGSEL1_MASK)))


/********************************************************************/


#define ICAEGMUX0AEGSEL2Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX0_AEGSEL2_MASK) >> \
      IC_AEGMUX0_AEGSEL2_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL2Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX0_AEGSEL2_MASK) >> \
      IC_AEGMUX0_AEGSEL2_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX0_AEGSEL2_MASK);\
    newValue <<= IC_AEGMUX0_AEGSEL2_OFFSET;\
    newValue &= IC_AEGMUX0_AEGSEL2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX0AEGSEL2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX0_AEGSEL2_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX0_AEGSEL2_OFFSET) &\
      IC_AEGMUX0_AEGSEL2_MASK)))


/********************************************************************/


#define ICAEGMUX0AEGSEL3Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX0_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX0_AEGSEL3_MASK) >> \
      IC_AEGMUX0_AEGSEL3_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL3Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX0_AEGSEL3_MASK) >> \
      IC_AEGMUX0_AEGSEL3_OFFSET))


/********************************************************************/


#define ICAEGMUX0AEGSEL3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX0_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX0_AEGSEL3_MASK);\
    newValue <<= IC_AEGMUX0_AEGSEL3_OFFSET;\
    newValue &= IC_AEGMUX0_AEGSEL3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX0AEGSEL3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX0_AEGSEL3_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX0_AEGSEL3_OFFSET) &\
      IC_AEGMUX0_AEGSEL3_MASK)))


/********************************************************************/


#define ICAEGMUX1ReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX1_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICAEGMUX1WriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX1AEGSEL4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX1_AEGSEL4_MASK) >> \
      IC_AEGMUX1_AEGSEL4_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX1_AEGSEL4_MASK) >> \
      IC_AEGMUX1_AEGSEL4_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX1_AEGSEL4_MASK);\
    newValue <<= IC_AEGMUX1_AEGSEL4_OFFSET;\
    newValue &= IC_AEGMUX1_AEGSEL4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX1AEGSEL4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX1_AEGSEL4_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX1_AEGSEL4_OFFSET) &\
      IC_AEGMUX1_AEGSEL4_MASK)))


/********************************************************************/


#define ICAEGMUX1AEGSEL5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX1_AEGSEL5_MASK) >> \
      IC_AEGMUX1_AEGSEL5_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX1_AEGSEL5_MASK) >> \
      IC_AEGMUX1_AEGSEL5_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX1_AEGSEL5_MASK);\
    newValue <<= IC_AEGMUX1_AEGSEL5_OFFSET;\
    newValue &= IC_AEGMUX1_AEGSEL5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX1AEGSEL5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX1_AEGSEL5_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX1_AEGSEL5_OFFSET) &\
      IC_AEGMUX1_AEGSEL5_MASK)))


/********************************************************************/


#define ICAEGMUX1AEGSEL6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX1_AEGSEL6_MASK) >> \
      IC_AEGMUX1_AEGSEL6_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX1_AEGSEL6_MASK) >> \
      IC_AEGMUX1_AEGSEL6_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX1_AEGSEL6_MASK);\
    newValue <<= IC_AEGMUX1_AEGSEL6_OFFSET;\
    newValue &= IC_AEGMUX1_AEGSEL6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX1AEGSEL6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX1_AEGSEL6_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX1_AEGSEL6_OFFSET) &\
      IC_AEGMUX1_AEGSEL6_MASK)))


/********************************************************************/


#define ICAEGMUX1AEGSEL7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_AEGMUX1_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_AEGMUX1_AEGSEL7_MASK) >> \
      IC_AEGMUX1_AEGSEL7_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_AEGMUX1_AEGSEL7_MASK) >> \
      IC_AEGMUX1_AEGSEL7_OFFSET))


/********************************************************************/


#define ICAEGMUX1AEGSEL7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_AEGMUX1_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_AEGMUX1_AEGSEL7_MASK);\
    newValue <<= IC_AEGMUX1_AEGSEL7_OFFSET;\
    newValue &= IC_AEGMUX1_AEGSEL7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICAEGMUX1AEGSEL7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_AEGMUX1_AEGSEL7_MASK)) |\
      ((((UWORD32)(value)) << IC_AEGMUX1_AEGSEL7_OFFSET) &\
      IC_AEGMUX1_AEGSEL7_MASK)))


/********************************************************************/


#define ICINTXSTATReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICINTXSTATDROPRead32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_DROP_MASK) >> \
      IC_INTXSTAT_DROP_OFFSET))


/********************************************************************/


#define ICINTXSTATDROPGet32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTXSTAT_DROP_MASK) >> \
      IC_INTXSTAT_DROP_OFFSET))


/********************************************************************/


#define ICINTXSTATCPUINTRead32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT032(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT0==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT132(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT1==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT232(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT2==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT332(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT3==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT432(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT4==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT532(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT5==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT632(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT6==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT732(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT7==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT832(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT8==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT932(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT9==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT1032(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT10==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT1132(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT11==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT1232(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT12==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT1332(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT13==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT1432(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT14==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTReadIsCPUINT1532(baseAddress, bank)\
    (      (ICINTXSTATCPUINTCPUINT15==(ICINTXSTATCPUINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTGet32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT032(var)\
    (      (ICINTXSTATCPUINTCPUINT0==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT132(var)\
    (      (ICINTXSTATCPUINTCPUINT1==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT232(var)\
    (      (ICINTXSTATCPUINTCPUINT2==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT332(var)\
    (      (ICINTXSTATCPUINTCPUINT3==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT432(var)\
    (      (ICINTXSTATCPUINTCPUINT4==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT532(var)\
    (      (ICINTXSTATCPUINTCPUINT5==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT632(var)\
    (      (ICINTXSTATCPUINTCPUINT6==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT732(var)\
    (      (ICINTXSTATCPUINTCPUINT7==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT832(var)\
    (      (ICINTXSTATCPUINTCPUINT8==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT932(var)\
    (      (ICINTXSTATCPUINTCPUINT9==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT1032(var)\
    (      (ICINTXSTATCPUINTCPUINT10==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT1132(var)\
    (      (ICINTXSTATCPUINTCPUINT11==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT1232(var)\
    (      (ICINTXSTATCPUINTCPUINT12==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT1332(var)\
    (      (ICINTXSTATCPUINTCPUINT13==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT1432(var)\
    (      (ICINTXSTATCPUINTCPUINT14==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATCPUINTIsCPUINT1532(var)\
    (      (ICINTXSTATCPUINTCPUINT15==(ICINTXSTATCPUINTE)((((UWORD32)(var)) & IC_INTXSTAT_CPUINT_MASK) >> \
      IC_INTXSTAT_CPUINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTRead32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT0==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT1==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT2==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT3==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT4==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT5==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT6==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT7==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT8==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT9==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT10==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT11==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT12==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT13==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT14==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT15==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT16==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT17==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT18==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT1932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT19==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT20==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT21==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT22==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT23==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT24==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT25==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT26==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT27==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT28==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT2932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT29==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT30==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT31==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT32==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT33==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT34==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT35==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT36==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT37==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT38==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT3932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT39==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT40==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT41==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT42==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT43==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT44==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT45==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT46==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT47==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT48==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT4932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT49==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT50==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT51==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT52==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT53==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT54==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT55==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT56==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT57==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT58==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT5932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT59==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT60==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT61==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT62==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT63==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT64==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT65==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT66==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT67==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT68==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT6932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT69==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT70==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT71==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT72==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT73==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT74==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT75==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT76==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT77==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT78==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT7932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT79==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT80==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT81==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT82==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT83==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT84==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT85==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT86==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT87==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT88==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT8932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT89==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT90==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT91==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT92==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT93==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT94==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT95==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT96==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT97==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT98==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT9932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT99==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT100==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT101==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT102==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT103==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT104==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT105==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT106==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT107==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT108==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT10932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT109==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT110==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT111==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT112==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT113==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT114==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT115==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT116==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT117==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11832(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT118==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT11932(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT119==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12032(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT120==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12132(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT121==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12232(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT122==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12332(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT123==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12432(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT124==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12532(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT125==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12632(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT126==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTReadIsEVT12732(baseAddress, bank)\
    (      (ICINTXSTATSYSINTEVT127==(ICINTXSTATSYSINTE)\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTXSTAT_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTGet32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT032(var)\
    (      (ICINTXSTATSYSINTEVT0==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT132(var)\
    (      (ICINTXSTATSYSINTEVT1==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT232(var)\
    (      (ICINTXSTATSYSINTEVT2==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT332(var)\
    (      (ICINTXSTATSYSINTEVT3==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT432(var)\
    (      (ICINTXSTATSYSINTEVT4==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT532(var)\
    (      (ICINTXSTATSYSINTEVT5==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT632(var)\
    (      (ICINTXSTATSYSINTEVT6==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT732(var)\
    (      (ICINTXSTATSYSINTEVT7==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT832(var)\
    (      (ICINTXSTATSYSINTEVT8==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT932(var)\
    (      (ICINTXSTATSYSINTEVT9==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1032(var)\
    (      (ICINTXSTATSYSINTEVT10==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1132(var)\
    (      (ICINTXSTATSYSINTEVT11==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1232(var)\
    (      (ICINTXSTATSYSINTEVT12==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1332(var)\
    (      (ICINTXSTATSYSINTEVT13==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1432(var)\
    (      (ICINTXSTATSYSINTEVT14==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1532(var)\
    (      (ICINTXSTATSYSINTEVT15==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1632(var)\
    (      (ICINTXSTATSYSINTEVT16==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1732(var)\
    (      (ICINTXSTATSYSINTEVT17==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1832(var)\
    (      (ICINTXSTATSYSINTEVT18==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT1932(var)\
    (      (ICINTXSTATSYSINTEVT19==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2032(var)\
    (      (ICINTXSTATSYSINTEVT20==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2132(var)\
    (      (ICINTXSTATSYSINTEVT21==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2232(var)\
    (      (ICINTXSTATSYSINTEVT22==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2332(var)\
    (      (ICINTXSTATSYSINTEVT23==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2432(var)\
    (      (ICINTXSTATSYSINTEVT24==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2532(var)\
    (      (ICINTXSTATSYSINTEVT25==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2632(var)\
    (      (ICINTXSTATSYSINTEVT26==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2732(var)\
    (      (ICINTXSTATSYSINTEVT27==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2832(var)\
    (      (ICINTXSTATSYSINTEVT28==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT2932(var)\
    (      (ICINTXSTATSYSINTEVT29==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3032(var)\
    (      (ICINTXSTATSYSINTEVT30==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3132(var)\
    (      (ICINTXSTATSYSINTEVT31==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3232(var)\
    (      (ICINTXSTATSYSINTEVT32==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3332(var)\
    (      (ICINTXSTATSYSINTEVT33==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3432(var)\
    (      (ICINTXSTATSYSINTEVT34==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3532(var)\
    (      (ICINTXSTATSYSINTEVT35==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3632(var)\
    (      (ICINTXSTATSYSINTEVT36==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3732(var)\
    (      (ICINTXSTATSYSINTEVT37==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3832(var)\
    (      (ICINTXSTATSYSINTEVT38==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT3932(var)\
    (      (ICINTXSTATSYSINTEVT39==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4032(var)\
    (      (ICINTXSTATSYSINTEVT40==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4132(var)\
    (      (ICINTXSTATSYSINTEVT41==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4232(var)\
    (      (ICINTXSTATSYSINTEVT42==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4332(var)\
    (      (ICINTXSTATSYSINTEVT43==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4432(var)\
    (      (ICINTXSTATSYSINTEVT44==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4532(var)\
    (      (ICINTXSTATSYSINTEVT45==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4632(var)\
    (      (ICINTXSTATSYSINTEVT46==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4732(var)\
    (      (ICINTXSTATSYSINTEVT47==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4832(var)\
    (      (ICINTXSTATSYSINTEVT48==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT4932(var)\
    (      (ICINTXSTATSYSINTEVT49==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5032(var)\
    (      (ICINTXSTATSYSINTEVT50==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5132(var)\
    (      (ICINTXSTATSYSINTEVT51==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5232(var)\
    (      (ICINTXSTATSYSINTEVT52==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5332(var)\
    (      (ICINTXSTATSYSINTEVT53==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5432(var)\
    (      (ICINTXSTATSYSINTEVT54==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5532(var)\
    (      (ICINTXSTATSYSINTEVT55==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5632(var)\
    (      (ICINTXSTATSYSINTEVT56==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5732(var)\
    (      (ICINTXSTATSYSINTEVT57==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5832(var)\
    (      (ICINTXSTATSYSINTEVT58==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT5932(var)\
    (      (ICINTXSTATSYSINTEVT59==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6032(var)\
    (      (ICINTXSTATSYSINTEVT60==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6132(var)\
    (      (ICINTXSTATSYSINTEVT61==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6232(var)\
    (      (ICINTXSTATSYSINTEVT62==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6332(var)\
    (      (ICINTXSTATSYSINTEVT63==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6432(var)\
    (      (ICINTXSTATSYSINTEVT64==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6532(var)\
    (      (ICINTXSTATSYSINTEVT65==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6632(var)\
    (      (ICINTXSTATSYSINTEVT66==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6732(var)\
    (      (ICINTXSTATSYSINTEVT67==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6832(var)\
    (      (ICINTXSTATSYSINTEVT68==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT6932(var)\
    (      (ICINTXSTATSYSINTEVT69==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7032(var)\
    (      (ICINTXSTATSYSINTEVT70==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7132(var)\
    (      (ICINTXSTATSYSINTEVT71==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7232(var)\
    (      (ICINTXSTATSYSINTEVT72==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7332(var)\
    (      (ICINTXSTATSYSINTEVT73==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7432(var)\
    (      (ICINTXSTATSYSINTEVT74==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7532(var)\
    (      (ICINTXSTATSYSINTEVT75==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7632(var)\
    (      (ICINTXSTATSYSINTEVT76==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7732(var)\
    (      (ICINTXSTATSYSINTEVT77==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7832(var)\
    (      (ICINTXSTATSYSINTEVT78==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT7932(var)\
    (      (ICINTXSTATSYSINTEVT79==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8032(var)\
    (      (ICINTXSTATSYSINTEVT80==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8132(var)\
    (      (ICINTXSTATSYSINTEVT81==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8232(var)\
    (      (ICINTXSTATSYSINTEVT82==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8332(var)\
    (      (ICINTXSTATSYSINTEVT83==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8432(var)\
    (      (ICINTXSTATSYSINTEVT84==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8532(var)\
    (      (ICINTXSTATSYSINTEVT85==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8632(var)\
    (      (ICINTXSTATSYSINTEVT86==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8732(var)\
    (      (ICINTXSTATSYSINTEVT87==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8832(var)\
    (      (ICINTXSTATSYSINTEVT88==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT8932(var)\
    (      (ICINTXSTATSYSINTEVT89==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9032(var)\
    (      (ICINTXSTATSYSINTEVT90==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9132(var)\
    (      (ICINTXSTATSYSINTEVT91==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9232(var)\
    (      (ICINTXSTATSYSINTEVT92==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9332(var)\
    (      (ICINTXSTATSYSINTEVT93==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9432(var)\
    (      (ICINTXSTATSYSINTEVT94==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9532(var)\
    (      (ICINTXSTATSYSINTEVT95==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9632(var)\
    (      (ICINTXSTATSYSINTEVT96==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9732(var)\
    (      (ICINTXSTATSYSINTEVT97==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9832(var)\
    (      (ICINTXSTATSYSINTEVT98==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT9932(var)\
    (      (ICINTXSTATSYSINTEVT99==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10032(var)\
    (      (ICINTXSTATSYSINTEVT100==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10132(var)\
    (      (ICINTXSTATSYSINTEVT101==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10232(var)\
    (      (ICINTXSTATSYSINTEVT102==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10332(var)\
    (      (ICINTXSTATSYSINTEVT103==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10432(var)\
    (      (ICINTXSTATSYSINTEVT104==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10532(var)\
    (      (ICINTXSTATSYSINTEVT105==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10632(var)\
    (      (ICINTXSTATSYSINTEVT106==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10732(var)\
    (      (ICINTXSTATSYSINTEVT107==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10832(var)\
    (      (ICINTXSTATSYSINTEVT108==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT10932(var)\
    (      (ICINTXSTATSYSINTEVT109==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11032(var)\
    (      (ICINTXSTATSYSINTEVT110==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11132(var)\
    (      (ICINTXSTATSYSINTEVT111==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11232(var)\
    (      (ICINTXSTATSYSINTEVT112==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11332(var)\
    (      (ICINTXSTATSYSINTEVT113==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11432(var)\
    (      (ICINTXSTATSYSINTEVT114==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11532(var)\
    (      (ICINTXSTATSYSINTEVT115==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11632(var)\
    (      (ICINTXSTATSYSINTEVT116==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11732(var)\
    (      (ICINTXSTATSYSINTEVT117==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11832(var)\
    (      (ICINTXSTATSYSINTEVT118==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT11932(var)\
    (      (ICINTXSTATSYSINTEVT119==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12032(var)\
    (      (ICINTXSTATSYSINTEVT120==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12132(var)\
    (      (ICINTXSTATSYSINTEVT121==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12232(var)\
    (      (ICINTXSTATSYSINTEVT122==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12332(var)\
    (      (ICINTXSTATSYSINTEVT123==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12432(var)\
    (      (ICINTXSTATSYSINTEVT124==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12532(var)\
    (      (ICINTXSTATSYSINTEVT125==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12632(var)\
    (      (ICINTXSTATSYSINTEVT126==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXSTATSYSINTIsEVT12732(var)\
    (      (ICINTXSTATSYSINTEVT127==(ICINTXSTATSYSINTE)((((UWORD32)(var)) & IC_INTXSTAT_SYSINT_MASK) >> \
      IC_INTXSTAT_SYSINT_OFFSET)))


/********************************************************************/


#define ICINTXCLRWriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTXCLR_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICINTXCLRCLEARWrite32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTXCLR_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTXCLR_CLEAR_MASK);\
    newValue <<= IC_INTXCLR_CLEAR_OFFSET;\
    newValue &= IC_INTXCLR_CLEAR_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTXCLRCLEARSet32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTXCLR_CLEAR_MASK)) |\
      ((((UWORD32)(value)) << IC_INTXCLR_CLEAR_OFFSET) &\
      IC_INTXCLR_CLEAR_MASK)))


/********************************************************************/


#define ICINTDMASKReadRegister32(baseAddress, bank)\
    (\
      RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET +((bank) * IC_InterruptController_STEP))))


/********************************************************************/


#define ICINTDMASKWriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM4Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM4_MASK) >> \
      IC_INTDMASK_IDM4_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM4Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM4_MASK) >> \
      IC_INTDMASK_IDM4_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM4_MASK);\
    newValue <<= IC_INTDMASK_IDM4_OFFSET;\
    newValue &= IC_INTDMASK_IDM4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM4_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM4_OFFSET) &\
      IC_INTDMASK_IDM4_MASK)))


/********************************************************************/


#define ICINTDMASKIDM5Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM5_MASK) >> \
      IC_INTDMASK_IDM5_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM5Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM5_MASK) >> \
      IC_INTDMASK_IDM5_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM5_MASK);\
    newValue <<= IC_INTDMASK_IDM5_OFFSET;\
    newValue &= IC_INTDMASK_IDM5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM5_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM5_OFFSET) &\
      IC_INTDMASK_IDM5_MASK)))


/********************************************************************/


#define ICINTDMASKIDM6Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM6_MASK) >> \
      IC_INTDMASK_IDM6_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM6Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM6_MASK) >> \
      IC_INTDMASK_IDM6_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM6_MASK);\
    newValue <<= IC_INTDMASK_IDM6_OFFSET;\
    newValue &= IC_INTDMASK_IDM6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM6_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM6_OFFSET) &\
      IC_INTDMASK_IDM6_MASK)))


/********************************************************************/


#define ICINTDMASKIDM7Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM7_MASK) >> \
      IC_INTDMASK_IDM7_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM7Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM7_MASK) >> \
      IC_INTDMASK_IDM7_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM7_MASK);\
    newValue <<= IC_INTDMASK_IDM7_OFFSET;\
    newValue &= IC_INTDMASK_IDM7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM7_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM7_OFFSET) &\
      IC_INTDMASK_IDM7_MASK)))


/********************************************************************/


#define ICINTDMASKIDM8Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM8_MASK) >> \
      IC_INTDMASK_IDM8_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM8Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM8_MASK) >> \
      IC_INTDMASK_IDM8_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM8Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM8_MASK);\
    newValue <<= IC_INTDMASK_IDM8_OFFSET;\
    newValue &= IC_INTDMASK_IDM8_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM8Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM8_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM8_OFFSET) &\
      IC_INTDMASK_IDM8_MASK)))


/********************************************************************/


#define ICINTDMASKIDM9Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM9_MASK) >> \
      IC_INTDMASK_IDM9_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM9Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM9_MASK) >> \
      IC_INTDMASK_IDM9_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM9Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM9_MASK);\
    newValue <<= IC_INTDMASK_IDM9_OFFSET;\
    newValue &= IC_INTDMASK_IDM9_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM9Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM9_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM9_OFFSET) &\
      IC_INTDMASK_IDM9_MASK)))


/********************************************************************/


#define ICINTDMASKIDM10Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM10_MASK) >> \
      IC_INTDMASK_IDM10_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM10Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM10_MASK) >> \
      IC_INTDMASK_IDM10_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM10Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM10_MASK);\
    newValue <<= IC_INTDMASK_IDM10_OFFSET;\
    newValue &= IC_INTDMASK_IDM10_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM10Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM10_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM10_OFFSET) &\
      IC_INTDMASK_IDM10_MASK)))


/********************************************************************/


#define ICINTDMASKIDM11Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM11_MASK) >> \
      IC_INTDMASK_IDM11_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM11Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM11_MASK) >> \
      IC_INTDMASK_IDM11_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM11Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM11_MASK);\
    newValue <<= IC_INTDMASK_IDM11_OFFSET;\
    newValue &= IC_INTDMASK_IDM11_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM11Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM11_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM11_OFFSET) &\
      IC_INTDMASK_IDM11_MASK)))


/********************************************************************/


#define ICINTDMASKIDM12Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM12_MASK) >> \
      IC_INTDMASK_IDM12_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM12Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM12_MASK) >> \
      IC_INTDMASK_IDM12_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM12Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM12_MASK);\
    newValue <<= IC_INTDMASK_IDM12_OFFSET;\
    newValue &= IC_INTDMASK_IDM12_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM12Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM12_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM12_OFFSET) &\
      IC_INTDMASK_IDM12_MASK)))


/********************************************************************/


#define ICINTDMASKIDM13Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM13_MASK) >> \
      IC_INTDMASK_IDM13_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM13Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM13_MASK) >> \
      IC_INTDMASK_IDM13_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM13Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM13_MASK);\
    newValue <<= IC_INTDMASK_IDM13_OFFSET;\
    newValue &= IC_INTDMASK_IDM13_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM13Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM13_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM13_OFFSET) &\
      IC_INTDMASK_IDM13_MASK)))


/********************************************************************/


#define ICINTDMASKIDM14Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM14_MASK) >> \
      IC_INTDMASK_IDM14_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM14Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM14_MASK) >> \
      IC_INTDMASK_IDM14_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM14Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM14_MASK);\
    newValue <<= IC_INTDMASK_IDM14_OFFSET;\
    newValue &= IC_INTDMASK_IDM14_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM14Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM14_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM14_OFFSET) &\
      IC_INTDMASK_IDM14_MASK)))


/********************************************************************/


#define ICINTDMASKIDM15Read32(baseAddress, bank)\
    (\
      (((RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+(IC_InterruptController_OFFSET +\
      IC_INTDMASK_OFFSET+((bank)*IC_InterruptController_STEP)))) &\
      IC_INTDMASK_IDM15_MASK) >> \
      IC_INTDMASK_IDM15_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM15Get32(var)\
    (\
      (UWORD32)((((UWORD32)(var)) & IC_INTDMASK_IDM15_MASK) >> \
      IC_INTDMASK_IDM15_OFFSET))


/********************************************************************/


#define ICINTDMASKIDM15Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_INTDMASK_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_INTDMASK_IDM15_MASK);\
    newValue <<= IC_INTDMASK_IDM15_OFFSET;\
    newValue &= IC_INTDMASK_IDM15_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICINTDMASKIDM15Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_INTDMASK_IDM15_MASK)) |\
      ((((UWORD32)(value)) << IC_INTDMASK_IDM15_OFFSET) &\
      IC_INTDMASK_IDM15_MASK)))


/********************************************************************/


#define ICEVTASRTWriteRegister32(baseAddress, bank,  value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 newValue = ((UWORD32)(value));\
    WR_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF0Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF0_MASK);\
    newValue <<= IC_EVTASRT_MXF0_OFFSET;\
    newValue &= IC_EVTASRT_MXF0_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF0Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF0_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF0_OFFSET) &\
      IC_EVTASRT_MXF0_MASK)))


/********************************************************************/


#define ICEVTASRTMXF1Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF1_MASK);\
    newValue <<= IC_EVTASRT_MXF1_OFFSET;\
    newValue &= IC_EVTASRT_MXF1_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF1Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF1_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF1_OFFSET) &\
      IC_EVTASRT_MXF1_MASK)))


/********************************************************************/


#define ICEVTASRTMXF2Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF2_MASK);\
    newValue <<= IC_EVTASRT_MXF2_OFFSET;\
    newValue &= IC_EVTASRT_MXF2_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF2Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF2_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF2_OFFSET) &\
      IC_EVTASRT_MXF2_MASK)))


/********************************************************************/


#define ICEVTASRTMXF3Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF3_MASK);\
    newValue <<= IC_EVTASRT_MXF3_OFFSET;\
    newValue &= IC_EVTASRT_MXF3_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF3Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF3_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF3_OFFSET) &\
      IC_EVTASRT_MXF3_MASK)))


/********************************************************************/


#define ICEVTASRTMXF4Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF4_MASK);\
    newValue <<= IC_EVTASRT_MXF4_OFFSET;\
    newValue &= IC_EVTASRT_MXF4_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF4Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF4_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF4_OFFSET) &\
      IC_EVTASRT_MXF4_MASK)))


/********************************************************************/


#define ICEVTASRTMXF5Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF5_MASK);\
    newValue <<= IC_EVTASRT_MXF5_OFFSET;\
    newValue &= IC_EVTASRT_MXF5_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF5Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF5_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF5_OFFSET) &\
      IC_EVTASRT_MXF5_MASK)))


/********************************************************************/


#define ICEVTASRTMXF6Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF6_MASK);\
    newValue <<= IC_EVTASRT_MXF6_OFFSET;\
    newValue &= IC_EVTASRT_MXF6_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF6Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF6_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF6_OFFSET) &\
      IC_EVTASRT_MXF6_MASK)))


/********************************************************************/


#define ICEVTASRTMXF7Write32(baseAddress, bank, value)\
{\
    const UWORD32 offset = IC_InterruptController_OFFSET +\
                             IC_EVTASRT_OFFSET +\
                             ((bank) * IC_InterruptController_STEP);\
    register UWORD32 data = RD_MEM_32_VOLATILE(((UWORD32)(baseAddress))+offset);\
    register UWORD32 newValue = ((UWORD32)(value));\
    data &= ~(IC_EVTASRT_MXF7_MASK);\
    newValue <<= IC_EVTASRT_MXF7_OFFSET;\
    newValue &= IC_EVTASRT_MXF7_MASK;\
    newValue |= data;\
    WR_MEM_32_VOLATILE((UWORD32)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define ICEVTASRTMXF7Set32(var, value)\
    (\
      ((((UWORD32)(var)) & ~(IC_EVTASRT_MXF7_MASK)) |\
      ((((UWORD32)(value)) << IC_EVTASRT_MXF7_OFFSET) &\
      IC_EVTASRT_MXF7_MASK)))


/********************************************************************/


#endif  /* USE_LEVEL_1_MACROS */


/*****************************************************************************
* EXPORTED TYPES
******************************************************************************
*/

/*****************************************************************************
* EXPORTED VARIABLES
******************************************************************************
*/

/*****************************************************************************
* EXPORTED FUNCTIONS
******************************************************************************
*/


#if defined(__cplusplus)
}  /* End of C++ extern block */
#endif /* defined(__cplusplus) */

#endif /* _IC_REG_ACM_H */
/* EOF */

