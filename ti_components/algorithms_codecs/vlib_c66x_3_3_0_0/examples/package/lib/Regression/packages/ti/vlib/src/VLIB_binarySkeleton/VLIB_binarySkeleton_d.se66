;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:07:28 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$121)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$67)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$121)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$11, DW_AT_decl_column(0x16)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$3)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$10)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x82)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x86)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x58)
	.dwattr $C$DW$19, DW_AT_decl_column(0x05)

$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_create32BitPackedBinImage")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_create32BitPackedBinImage")
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x80)
	.dwattr $C$DW$20, DW_AT_decl_column(0x06)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$20)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$23)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$23)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$62)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$19)
	.dwendtag $C$DW$20


$C$DW$26	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_unpack32BitPackedBinImage")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("VLIB_unpack32BitPackedBinImage")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwattr $C$DW$26, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$26, DW_AT_decl_line(0x85)
	.dwattr $C$DW$26, DW_AT_decl_column(0x06)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$62)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$23)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$23)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$26


$C$DW$31	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external
	.dwattr $C$DW$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$31, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$31, DW_AT_decl_column(0x06)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$10)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$67)
	.dwendtag $C$DW$31


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$10)
$C$DW$36	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$10)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$10)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$10)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$67)
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$34


$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$41, DW_AT_decl_column(0x06)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$67)
	.dwendtag $C$DW$41


$C$DW$43	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwattr $C$DW$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$43, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$43, DW_AT_decl_column(0x06)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$10)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$67)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$67)
	.dwendtag $C$DW$43


$C$DW$47	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwattr $C$DW$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$47, DW_AT_decl_line(0x80)
	.dwattr $C$DW$47, DW_AT_decl_column(0x06)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$61)
	.dwendtag $C$DW$47


$C$DW$49	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwattr $C$DW$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$49, DW_AT_decl_line(0x81)
	.dwattr $C$DW$49, DW_AT_decl_column(0x06)

$C$DW$50	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwattr $C$DW$50, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$50, DW_AT_decl_line(0x82)
	.dwattr $C$DW$50, DW_AT_decl_column(0x0a)

$C$DW$51	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
	.dwattr $C$DW$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$51, DW_AT_decl_line(0x83)
	.dwattr $C$DW$51, DW_AT_decl_column(0x06)

$C$DW$52	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("VLIB_compare_mem")
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwattr $C$DW$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h")
	.dwattr $C$DW$52, DW_AT_decl_line(0x72)
	.dwattr $C$DW$52, DW_AT_decl_column(0x11)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$53)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$53)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$30)
	.dwendtag $C$DW$52


$C$DW$56	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwattr $C$DW$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h")
	.dwattr $C$DW$56, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$56, DW_AT_decl_column(0x06)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$19)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$19)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$3)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$3)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$23)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$23)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$23)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$19)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$67)
	.dwendtag $C$DW$56


$C$DW$66	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
	.dwattr $C$DW$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h")
	.dwattr $C$DW$66, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$66, DW_AT_decl_column(0x07)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$54)
	.dwendtag $C$DW$66


$C$DW$68	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
	.dwattr $C$DW$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h")
	.dwattr $C$DW$68, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$68, DW_AT_decl_column(0x07)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$68


$C$DW$70	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_binarySkeleton")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("VLIB_binarySkeleton")
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
	.dwattr $C$DW$70, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\c66/VLIB_binarySkeleton.h")
	.dwattr $C$DW$70, DW_AT_decl_line(0xe0)
	.dwattr $C$DW$70, DW_AT_decl_column(0x09)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$86)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$87)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$87)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$89)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$89)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$23)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$23)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$19)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$70


$C$DW$80	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_binarySkeleton_cn")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("VLIB_binarySkeleton_cn")
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
	.dwattr $C$DW$80, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_cn.h")
	.dwattr $C$DW$80, DW_AT_decl_line(0x29)
	.dwattr $C$DW$80, DW_AT_decl_column(0x09)
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$86)
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$87)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$87)
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$89)
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$89)
$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$23)
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$23)
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$19)
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$80


$C$DW$90	.dwtag  DW_TAG_subprogram, DW_AT_name("binarySkeleton_getTestParams")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("binarySkeleton_getTestParams")
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$90, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$90, DW_AT_decl_column(0x06)
$C$DW$91	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$46)
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$92)
	.dwendtag $C$DW$90

$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
	.dwattr $C$DW$93, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$93, DW_AT_decl_line(0x60)
	.dwattr $C$DW$93, DW_AT_decl_column(0x13)
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external
	.dwattr $C$DW$94, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$94, DW_AT_decl_line(0x62)
	.dwattr $C$DW$94, DW_AT_decl_column(0x13)
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
	.dwattr $C$DW$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$95, DW_AT_decl_line(0x63)
	.dwattr $C$DW$95, DW_AT_decl_column(0x13)
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
	.dwattr $C$DW$96, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$96, DW_AT_decl_line(0x64)
	.dwattr $C$DW$96, DW_AT_decl_column(0x13)
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwattr $C$DW$97, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$97, DW_AT_decl_line(0x75)
	.dwattr $C$DW$97, DW_AT_decl_column(0x14)
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwattr $C$DW$98, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$98, DW_AT_decl_line(0x76)
	.dwattr $C$DW$98, DW_AT_decl_column(0x14)
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwattr $C$DW$99, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$99, DW_AT_decl_line(0x77)
	.dwattr $C$DW$99, DW_AT_decl_column(0x14)
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwattr $C$DW$100, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$100, DW_AT_decl_line(0x78)
	.dwattr $C$DW$100, DW_AT_decl_column(0x14)
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$166)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwattr $C$DW$101, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h")
	.dwattr $C$DW$101, DW_AT_decl_line(0x79)
	.dwattr $C$DW$101, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021724 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\021726 
	.sect	".text"
	.clink
	.global	VLIB_binarySkeleton_d

$C$DW$102	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_binarySkeleton_d")
	.dwattr $C$DW$102, DW_AT_low_pc(VLIB_binarySkeleton_d)
	.dwattr $C$DW$102, DW_AT_high_pc(0x00)
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("VLIB_binarySkeleton_d")
	.dwattr $C$DW$102, DW_AT_external
	.dwattr $C$DW$102, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$102, DW_AT_TI_begin_line(0x26)
	.dwattr $C$DW$102, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$102, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$102, DW_AT_decl_line(0x26)
	.dwattr $C$DW$102, DW_AT_decl_column(0x06)
	.dwattr $C$DW$102, DW_AT_TI_max_frame_size(0x88)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 39,column 1,is_stmt,address VLIB_binarySkeleton_d,isa 0

	.dwfde $C$DW$CIE, VLIB_binarySkeleton_d
$C$DW$103	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  38 | void VLIB_binarySkeleton_d(uint8_t LevelOfFeedback)                    
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_binarySkeleton_d                                       *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 52 Auto + 56 Save = 132 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_binarySkeleton_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 45	-----------------------    binarySkeleton_getTestParams(&prm, &test_cases);
;** 48	-----------------------    VLIB_profile_init(2, "VLIB_binarySkeleton");
;** 51	-----------------------    if ( test_cases <= 0 ) goto g39;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  40 | int32_t    tpi;  /* test parameter index */                            
;  43 | binarySkeleton_testParams_t   *prm;                                    
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |39| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |39| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |39| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |39| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(88)      ; |39| 
	.dwcfi	cfa_offset, 136
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C1")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C1")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg20]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C2")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C2")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg3]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg0]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg8]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg8]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg0]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg0]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg16]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg26]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$U13")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$U13")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg27]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$K60")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$K60")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg12]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$U75")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$U75")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg2]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$K90")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$K90")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg3]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$K95")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$K95")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg20]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg28]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$U23")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$U23")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg11]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$K117")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$K117")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$164)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg14]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$U125")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$U125")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg29]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$U127")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$U127")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg16]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$U108")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$U108")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg11]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$U149")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$U149")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg26]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$K163")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$K163")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg8]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$U79")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$U79")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg4]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg16]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg17]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg17]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg14]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$L5")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$L5")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg10]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("thresh")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("thresh")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg8]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_reg12]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("fail")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("fail")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 36]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("iters_cn")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("iters_cn")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_breg31 28]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("iters")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("iters")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_breg31 29]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("mask_d")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("mask_d")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_breg31 40]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("mask")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("mask")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_breg31 44]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("scratch")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("scratch")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_breg31 48]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("out_data")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("out_data")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_breg31 52]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("in_data")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("in_data")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_breg31 56]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("output_cn")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("output_cn")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_breg31 60]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("output")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("output")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_breg31 64]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("input")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("input")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_breg31 68]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("inp_size")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("inp_size")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg29]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_breg31 72]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_reg10]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 32]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_reg13]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$114)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_breg31 76]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("$O$v4")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("$O$v4")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_reg29]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("$O$U81")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("$O$U81")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg5]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("$O$U81")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("$O$U81")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg20]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("$O$U80")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("$O$U80")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_reg7]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("$O$U80")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("$O$U80")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_reg7]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("$O$U91")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("$O$U91")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_reg21]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("$O$U91")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("$O$U91")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_reg21]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("$O$U93")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("$O$U93")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_reg6]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("$O$U93")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("$O$U93")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_reg6]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_reg14]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_reg22]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_reg15]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg20]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg20]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("binarySkeleton_getTestParams")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     binarySkeleton_getTestParams,B3
||         STW     .D2T1   A4,*+SP(76)       ; |39| 
||         ADDAW   .D1X    SP,8,A4           ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | binarySkeleton_getTestParams(&prm, &test_cases);                       
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {binarySkeleton_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$166, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |48| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 48,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  48 | VLIB_profile_init(2, "VLIB_binarySkeleton");                           
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |48| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  51 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |51| 
           LDW     .D2T2   *+SP(32),B11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  54 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  55 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;----------------------------------------------------------------------
           ZERO    .L2     B12               ; |51| 
           ZERO    .L1     A13               ; |51| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 17,is_stmt,isa 0
           CMPGT   .L1     A3,0,A0           ; |51| 

   [!A0]   BNOP    .S1     $C$L16,2          ; |51| 
|| [ A0]   LDHU    .D2T2   *+B11(20),B5      ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 58,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  58 | uint32_t    inp_size =   prm[tpi].imagePitch * prm[tpi].imageHeight;   
;----------------------------------------------------------------------
   [ A0]   LDHU    .D2T2   *+B11(18),B4      ; |58| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |51| 
;** --------------------------------------------------------------------------*
;**  	-----------------------    K$60 = &testPatternString[0];
;**  	-----------------------    K$163 = &desc[0];
;**  	-----------------------    U$13 = prm;
;**  	-----------------------    U$12 = 0;
;** 51	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 10,is_stmt,isa 0
$C$DW$L$VLIB_binarySkeleton_d$5$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 58	-----------------------    inp_size = _mpyu((*U$13).imagePitch, (*U$13).imageHeight);
;** 61	-----------------------    input = malloc(inp_size);
;** 62	-----------------------    output = malloc(inp_size);
;** 63	-----------------------    output_cn = malloc(inp_size);
;** 65	-----------------------    C$9 = inp_size>>3;
;** 65	-----------------------    in_data = VLIB_malloc(C$9);
;** 66	-----------------------    out_data = VLIB_malloc(C$9);
;** 67	-----------------------    U$23 = C$9;
;** 67	-----------------------    scratch = VLIB_malloc((unsigned)((*U$13).se_num*72)+U$23);
;** 69	-----------------------    mask = VLIB_malloc((unsigned)((*U$13).se_num*9));
;** 70	-----------------------    mask_d = VLIB_malloc((unsigned)((*U$13).se_num*9));
;** 72	-----------------------    v$1 = prm;
;** 72	-----------------------    iters = (*U$13).iters;
;** 73	-----------------------    iters_cn = iters;
;** 76	-----------------------    if ( !((input != NULL)&(output != NULL)&(output_cn != NULL)&(in_data != NULL)&(out_data != NULL)&(scratch != NULL)&(mask != NULL)&(mask_d != NULL)) ) goto g37;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 61,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint8_t   *input      = (uint8_t *) malloc(inp_size);  /* Unpacked inpu
;     | t */                                                                   
;----------------------------------------------------------------------
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("malloc")
	.dwattr $C$DW$167, DW_AT_TI_call
           CALL    .S1     malloc            ; |61| 
           ADDKPC  .S2     $C$RL2,B3,0       ; |61| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 58,column 21,is_stmt,isa 0
           MPYU    .M2     B5,B4,B13         ; |58| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 61,column 20,is_stmt,isa 0
           MV      .L1X    B13,A4            ; |61| 
$C$RL2:    ; CALL OCCURS {malloc} {0}        ; |61| 
$C$DW$L$VLIB_binarySkeleton_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$6$B:
;          EXCLUSIVE CPU CYCLES: 62
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("malloc")
	.dwattr $C$DW$168, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(68)       ; |61| 
||         MV      .L1X    B13,A4            ; |62| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 62,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  62 | uint8_t   *output     = (uint8_t *) malloc(inp_size);  /* Unpacked outp
;     | ut */                                                                  
;----------------------------------------------------------------------
$C$RL3:    ; CALL OCCURS {malloc} {0}        ; |62| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("malloc")
	.dwattr $C$DW$169, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(64)       ; |62| 
||         MV      .L1X    B13,A4            ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 63,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | uint8_t   *output_cn  = (uint8_t *) malloc(inp_size);  /* Unpacked outp
;     | ut from cn */                                                          
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {malloc} {0}        ; |63| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 65,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | uint32_t   *in_data    = (uint32_t *) VLIB_malloc(inp_size / 8);       
;----------------------------------------------------------------------
           SHRU    .S2     B13,3,B10         ; |65| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 63,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(60)       ; |63| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x04)
	.dwattr $C$DW$170, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$170, DW_AT_TI_call

           MV      .L1X    B10,A4            ; |65| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 65,column 21,is_stmt,isa 0
$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |65| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$171, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(56)       ; |65| 
||         MV      .L1X    B10,A4            ; |66| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 66,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | uint32_t   *out_data   = (uint32_t *) VLIB_malloc(inp_size / 8);       
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |66| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 67,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | uint32_t   *scratch    = (uint32_t *) VLIB_malloc(inp_size / 8 + 2 * VL
;     | IB_BINSKEL_MASK_SZ * 4 * prm[tpi].se_num);                             
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(22),B4      ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 66,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(52)       ; |66| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 67,column 21,is_stmt,isa 0
           MV      .L1X    B4,A4             ; |67| Define a twin register
           SHL     .S1X    B4,6,A3           ; |67| 
           ADDAD   .D1     A3,A4,A3          ; |67| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$172, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         ADD     .L1X    B10,A3,A4         ; |67| 

$C$RL7:    ; CALL OCCURS {VLIB_malloc} {0}   ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 69,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | uint8_t   *mask       = (uint8_t *) VLIB_malloc(VLIB_BINSKEL_MASK_SZ *
;     | prm[tpi].se_num);                                                      
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(22),B4      ; |69| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 67,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(48)       ; |67| 
           NOP             3
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x04)
	.dwattr $C$DW$173, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$173, DW_AT_TI_call

           MPYSU   .M1X    9,B4,A4           ; |69| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 69,column 20,is_stmt,isa 0
$C$RL8:    ; CALL OCCURS {VLIB_malloc} {0}   ; |69| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 70,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | uint8_t   *mask_d     = (uint8_t *) VLIB_malloc(VLIB_BINSKEL_MASK_SZ *
;     | prm[tpi].se_num);                                                      
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(22),B4      ; |70| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 69,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(44)       ; |69| 
           NOP             3
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x04)
	.dwattr $C$DW$174, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$174, DW_AT_TI_call

           MPYSU   .M1X    9,B4,A4           ; |70| 
||         CALLP   .S2     VLIB_malloc,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 70,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  72 | uint8_t    iters = prm[tpi].iters;                                     
;  73 | uint8_t    iters_cn = prm[tpi].iters;                                  
;----------------------------------------------------------------------
$C$RL9:    ; CALL OCCURS {VLIB_malloc} {0}   ; |70| 
$C$DW$L$VLIB_binarySkeleton_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$7$B:
;          EXCLUSIVE CPU CYCLES: 24

           LDW     .D2T1   *+SP(64),A0       ; |76| 
||         ZERO    .L2     B4                ; |76| 
||         ZERO    .L1     A3                ; |76| 
||         MV      .S1X    B10,A11           ; |67| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 76,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | if( input && output && output_cn && in_data && out_data && scratch && m
;     | ask && mask_d ) {                                                      
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(68),A2       ; |76| 
           LDW     .D2T2   *+SP(60),B0       ; |76| 
           LDW     .D2T1   *+SP(56),A1       ; |76| 
           LDW     .D2T2   *+SP(52),B2       ; |76| 

   [ A0]   MVK     .L1     0x1,A3            ; |76| 
||         STW     .D2T1   A4,*+SP(40)       ; |70| 
||         ZERO    .S1     A4                ; |76| 

   [ A2]   MVK     .L2     0x1,B4            ; |76| 
||         LDW     .D2T1   *+SP(48),A2       ; |72| 

           AND     .L2X    A3,B4,B5          ; |76| 
||         ZERO    .S2     B4                ; |76| 
|| [ B0]   MVK     .L1     0x1,A4            ; |76| 
||         ZERO    .S1     A3                ; |76| 
||         LDBU    .D2T2   *+B11(24),B6      ; |72| 

   [ A1]   MVK     .L2     0x1,B4            ; |76| 
||         LDW     .D2T1   *+SP(44),A1       ; |76| 

           AND     .L2X    A4,B5,B5          ; |76| 
||         ZERO    .L1     A4                ; |76| 
|| [ B2]   MVK     .S1     0x1,A3            ; |76| 
||         LDW     .D2T1   *+SP(32),A14      ; |72| 

           AND     .L2     B4,B5,B4          ; |76| 

   [ A2]   MVK     .L1     0x1,A4            ; |76| 
||         LDW     .D2T1   *+SP(40),A2       ; |67| 
||         AND     .L2X    A3,B4,B4          ; |76| 
||         ZERO    .S1     A3                ; |76| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 72,column 20,is_stmt,isa 0
           STB     .D2T2   B6,*+SP(29)       ; |72| 

           LDBU    .D2T2   *+SP(29),B6       ; |73| 
|| [ A1]   MVK     .L1     0x1,A3            ; |76| 
||         AND     .L2X    A4,B4,B5          ; |76| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 76,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  78 | int32_t    fail;                                                       
;  79 | int32_t    i, j;                                                       
;  80 | uint8_t    thresh = 1;                                                 
;----------------------------------------------------------------------
           ZERO    .L2     B4                ; |76| 
           AND     .L2X    A3,B5,B5          ; |76| 
   [ A2]   MVK     .L2     0x1,B4            ; |76| 
           AND     .L2     B4,B5,B0          ; |76| 

   [!B0]   B       .S1     $C$L14            ; |76| 
|| [ B0]   LDBU    .D2T1   *B11,A4           ; |83| 
|| [!B0]   ADD     .L2X    A14,B12,B4        ; |169| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 83,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  83 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
;----------------------------------------------------------------------
   [ B0]   LDHU    .D2T2   *+B11(18),B8      ; |83| 
   [ B0]   LDHU    .D2T1   *+B11(16),A8      ; |83| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 73,column 20,is_stmt,isa 0
           STB     .D2T2   B6,*+SP(28)       ; |73| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 83,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  84 | (uint8_t)1,                                                            
;  85 | input, prm[tpi].staticIn,                                              
;  86 | prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].imagePitch,        
;  87 | sizeof(uint8_t), testPatternString);                                   
;----------------------------------------------------------------------
   [ B0]   LDW     .D2T2   *+B11(4),B6       ; |83| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$175, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |83| 
|| [ B0]   LDW     .D2T1   *+SP(68),A6       ; |83| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 76,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |76| 
$C$DW$L$VLIB_binarySkeleton_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$8$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 83	-----------------------    VLIB_fillBuffer((*U$13).testPattern, 1u, (void *)input, (*U$13).staticIn, (*U$13).imageWidth, (*U$13).imageHeight, (*U$13).imagePitch, 1u, K$60);
;** 90	-----------------------    v$1 = v$1;
;** 90	-----------------------    if ( !(C$8 = (*U$13).se_num) ) goto g22;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 83,column 13,is_stmt,isa 0
           LDHU    .D2T1   *+B11(20),A10     ; |83| 
           MVKL    .S1     testPatternString,A12
           MVKH    .S1     testPatternString,A12
           MVK     .L2     0x1,B4            ; |83| 

           MV      .L2     B4,B10            ; |83| 
||         ADDKPC  .S2     $C$RL10,B3,0      ; |83| 

$C$RL10:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |83| 
$C$DW$L$VLIB_binarySkeleton_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$9$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 90,column 23,is_stmt,isa 0
;----------------------------------------------------------------------
;  90 | for( i=0; i < prm[tpi].se_num; i++ ) {                                 
;  91 |     for( j=0; j < VLIB_BINSKEL_MASK_SZ; j++ ) {                        
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(22),B0      ; |90| 
           MV      .L2X    A14,B6            ; |90| 
           LDW     .D2T1   *+SP(40),A3
           LDW     .D2T2   *+SP(44),B4
           NOP             1
   [!B0]   BNOP    .S1     $C$L7,5           ; |90| 
           ; BRANCHCC OCCURS {$C$L7}         ; |90| 
$C$DW$L$VLIB_binarySkeleton_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$10$B:
;          EXCLUSIVE CPU CYCLES: 4
;**  	-----------------------    U$75 = (mask_d-mask > 8)|(mask-mask_d > 8);
;**  	-----------------------    U$81 = U$12+v$1;
;**  	-----------------------    K$90 = 0;
;**  	-----------------------    K$95 = 1;
;** 91	-----------------------    L$1 = (int)C$8;
;**  	-----------------------    U$79 = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)

           SUB     .L2X    B4,A3,B4
||         SUB     .L1X    A3,B4,A3
||         ADD     .S2     B6,B12,B5
||         ZERO    .S1     A4

           CMPGT   .L2     B4,8,B4
||         CMPGT   .L1     A3,8,A3

           MV      .L1X    B5,A5             ; Define a twin register

           OR      .L1X    B4,A3,A2
||         MV      .L2     B10,B4
||         ZERO    .S1     A3

$C$DW$L$VLIB_binarySkeleton_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$11$B:
;          EXCLUSIVE CPU CYCLES: 1
   [!A2]   LDW     .D2T2   *+SP(44),B5
$C$DW$L$VLIB_binarySkeleton_d$11$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L2
;** --------------------------------------------------------------------------*
$C$L2:    
$C$DW$L$VLIB_binarySkeleton_d$12$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g6:
;** 91	-----------------------    if ( U$75 ) goto g14;

   [ A2]   BNOP    .S1     $C$L4,1           ; |91| 
|| [!A2]   LDW     .D2T1   *+SP(40),A6

   [ A2]   LDW     .D2T2   *+SP(44),B5
   [ A2]   LDW     .D2T1   *+SP(40),A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 92,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  92 | if( prm[tpi].se_ptr[i * VLIB_BINSKEL_MASK_SZ + j] == 1 ) {  /* foregrou
;     | nd mask value = 1 */                                                   
;----------------------------------------------------------------------
   [ A2]   LDW     .D1T1   *+A5(12),A8       ; |92| 
   [!A2]   ADD     .L2X    A4,B5,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 91,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |91| 
$C$DW$L$VLIB_binarySkeleton_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$13$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    U$80 = U$79;
;**  	-----------------------    U$91 = &mask[U$80];
;**  	-----------------------    U$93 = &mask_d[U$80];
;**  	-----------------------    L$2 = 9;
;**  	-----------------------    #pragma MUST_ITERATE(9, 9, 9)
;**  	-----------------------    #pragma LOOP_FLAGS(4104u)

           MVK     .L2     0x9,B1
||         MV      .L1     A4,A7
||         LDW     .D1T1   *+A5(12),A8       ; |92| 
||         ADD     .S1     A4,A6,A6

$C$DW$L$VLIB_binarySkeleton_d$13$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L3:    
$C$DW$L$VLIB_binarySkeleton_d$14$B:
;          EXCLUSIVE CPU CYCLES: 9
;**	-----------------------g8:
;** 92	-----------------------    if ( (C$7 = *((*U$81).se_ptr+U$80)) == 1 ) goto g12;
;** 95	-----------------------    if ( C$7 ) goto g11;
;** 96	-----------------------    *U$91 = K$90;
;** 97	-----------------------    *U$93 = K$90;
;** 98	-----------------------    goto g13;
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 92,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  93 | mask[i * VLIB_BINSKEL_MASK_SZ + j] = 1;                                
;  94 | mask_d[i * VLIB_BINSKEL_MASK_SZ + j] = 0;                              
;  95 | } else if( prm[tpi].se_ptr[i * VLIB_BINSKEL_MASK_SZ + j] == 0 ) { /* ba
;     | ckground mask value = 0 */                                             
;----------------------------------------------------------------------
           LDB     .D1T1   *+A8[A7],A0       ; |92| 
           NOP             4
$C$DW$L$VLIB_binarySkeleton_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$15$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g11:
;** 99	-----------------------    *U$91 = K$90;
;** 100	-----------------------    *U$93 = K$95;
;** 100	-----------------------    goto g13;
;**	-----------------------g12:
;** 93	-----------------------    *U$91 = K$95;
;** 94	-----------------------    *U$93 = K$90;
;**	-----------------------g13:
;** 91	-----------------------    ++U$80;
;** 91	-----------------------    ++U$91;
;** 91	-----------------------    ++U$93;
;** 91	-----------------------    if ( !__builtin_expect((long)!(L$2 = L$2-1), 0L) ) goto g8;

           CMPEQ   .L1     A0,1,A1           ; |92| 
||         SUB     .L2     B1,1,B1           ; |91| 
||         ADD     .S1     1,A7,A7           ; |91| 

   [ A1]   MV      .L1X    B10,A0            ; |92| 
|| [ A1]   STB     .D2T2   B4,*B5            ; |93| 
|| [ B1]   B       .S1     $C$L3             ; |91| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 96,column 25,is_stmt,isa 0
;----------------------------------------------------------------------
;  96 | mask[i * VLIB_BINSKEL_MASK_SZ + j] = 0;                                
;----------------------------------------------------------------------
   [!A0]   STB     .D2T1   A3,*B5            ; |96| 

   [!A0]   STB     .D1T1   A3,*A6            ; |97| 
|| [ A1]   MV      .L1     A3,A0             ; |97| 

   [ A0]   STB     .D2T1   A3,*B5            ; |99| 
|| [ A0]   STB     .D1T2   B4,*A6            ; |100| 
||         ADD     .L2     1,B5,B5           ; |91| 

   [ A1]   STB     .D1T1   A3,*A6            ; |94| 
||         ADD     .L1     1,A6,A6           ; |91| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 92,column 21,is_stmt,isa 0
   [ B1]   LDW     .D1T1   *+A5(12),A8       ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 91,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |91| 
$C$DW$L$VLIB_binarySkeleton_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$16$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 91	-----------------------    goto g21;

           B       .S1     $C$L6             ; |91| 
||         SUB     .L2     B0,1,B0           ; |90| 
||         ADD     .L1     9,A4,A4           ; |90| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 90,column 23,is_stmt,isa 0
   [ B0]   BNOP    .S1     $C$L2,4           ; |90| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 91,column 27,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L6}           ; |91| 
$C$DW$L$VLIB_binarySkeleton_d$16$E:
;** --------------------------------------------------------------------------*
$C$L4:    
$C$DW$L$VLIB_binarySkeleton_d$17$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g14:
;**  	-----------------------    U$80 = U$79;
;**  	-----------------------    U$91 = &mask[U$80];
;**  	-----------------------    U$93 = &mask_d[U$80];
;**  	-----------------------    L$3 = 9;
;**  	-----------------------    #pragma[60] (mask != mask_d;)
;**  	-----------------------    #pragma MUST_ITERATE(9, 9, 9)
;**  	-----------------------    #pragma LOOP_FLAGS(4160u)

           MVK     .L2     0x9,B1
||         MV      .L1     A4,A7

           ADD     .L2X    A4,B5,B5
           ADD     .L1     A4,A6,A6
$C$DW$L$VLIB_binarySkeleton_d$17$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L5:    
$C$DW$L$VLIB_binarySkeleton_d$18$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g15:
;** 92	-----------------------    if ( (C$6 = *((*U$81).se_ptr+U$80)) == 1 ) goto g19;
;** 95	-----------------------    if ( C$6 ) goto g18;
;** 96	-----------------------    *U$91 = K$90;
;** 97	-----------------------    *U$93 = K$90;
;** 98	-----------------------    goto g20;
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 92,column 21,is_stmt,isa 0
           LDB     .D1T1   *+A8[A7],A0       ; |92| 
           NOP             4
$C$DW$L$VLIB_binarySkeleton_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$19$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g18:
;** 99	-----------------------    *U$91 = K$90;
;** 100	-----------------------    *U$93 = K$95;
;** 100	-----------------------    goto g20;
;**	-----------------------g19:
;** 93	-----------------------    *U$91 = K$95;
;** 94	-----------------------    *U$93 = K$90;
;**	-----------------------g20:
;** 91	-----------------------    ++U$80;
;** 91	-----------------------    ++U$91;
;** 91	-----------------------    ++U$93;
;** 91	-----------------------    if ( !__builtin_expect((long)!(L$3 = L$3-1), 0L) ) goto g15;

           SUB     .L2     B1,1,B1           ; |91| 
||         CMPEQ   .L1     A0,1,A1           ; |92| 
||         ADD     .S1     1,A7,A7           ; |91| 

   [ B1]   B       .S1     $C$L5             ; |91| 
|| [ A1]   MV      .L1X    B10,A0            ; |92| 
|| [ A1]   STB     .D2T2   B4,*B5            ; |93| 
|| [ A1]   STB     .D1T1   A3,*A6            ; |94| 
|| [!B1]   SUB     .L2     B0,1,B0           ; |90| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 97,column 25,is_stmt,isa 0
;----------------------------------------------------------------------
;  97 | mask_d[i * VLIB_BINSKEL_MASK_SZ + j] = 0;                              
;  98 | } else { /* "don't care" bit should be set = 0 */                      
;  99 | mask[i * VLIB_BINSKEL_MASK_SZ + j] = 0;                                
; 100 | mask_d[i * VLIB_BINSKEL_MASK_SZ + j] = 1;                              
;----------------------------------------------------------------------
   [!A0]   STB     .D1T1   A3,*A6            ; |97| 

   [!A0]   STB     .D2T1   A3,*B5            ; |96| 
|| [ A1]   MV      .L1     A3,A0             ; |96| 

           ADD     .L1     1,A6,A6           ; |91| 
|| [ A0]   STB     .D1T2   B4,*A6            ; |100| 
|| [ A0]   STB     .D2T1   A3,*B5            ; |99| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 92,column 21,is_stmt,isa 0
   [ B1]   LDW     .D1T1   *+A5(12),A8       ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 91,column 27,is_stmt,isa 0
           ADD     .L2     1,B5,B5           ; |91| 
           ; BRANCHCC OCCURS {$C$L5}         ; |91| 
$C$DW$L$VLIB_binarySkeleton_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$20$B:
;          EXCLUSIVE CPU CYCLES: 5

   [ B0]   BNOP    .S1     $C$L2,4           ; |90| 
||         ADD     .L1     9,A4,A4           ; |90| 

$C$DW$L$VLIB_binarySkeleton_d$20$E:
;** --------------------------------------------------------------------------*
$C$L6:    
$C$DW$L$VLIB_binarySkeleton_d$21$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g21:
;** 90	-----------------------    U$79 += 9;
;** 90	-----------------------    if ( L$1 = L$1-1 ) goto g6;
   [!A2]   LDW     .D2T2   *+SP(44),B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 90,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L2}         ; |90| 
$C$DW$L$VLIB_binarySkeleton_d$21$E:
;** --------------------------------------------------------------------------*
$C$L7:    
$C$DW$L$VLIB_binarySkeleton_d$22$B:
;          EXCLUSIVE CPU CYCLES: 13
;**	-----------------------g22:
;** 106	-----------------------    U$81 = U$12+v$1;
;** 106	-----------------------    if ( (*U$81).testPattern == 3 ) goto g24;
;** 80	-----------------------    thresh = 1u;
;**  	-----------------------    goto g25;
;**	-----------------------g24:
;** 107	-----------------------    thresh = 100u;
;**	-----------------------g25:
;** 109	-----------------------    VLIB_create32BitPackedBinImage(input, (*U$81).imageWidth, (*U$81).imageHeight, in_data, thresh);
;** 131	-----------------------    memset((void *)out_data, 0, U$23);  // [21]
;** 137	-----------------------    act_kernel = 0;  // [17]
;** 140	-----------------------    VLIB_cache_inval();  // [17]
;** 143	-----------------------    initStack(getSP());  // [17]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [17]
;** 114	-----------------------    VLIB_binarySkeleton(in_data, out_data, scratch, (unsigned char (*)[9])mask, (unsigned char (*)[9])mask_d, (*U$13).imageWidth, (*U$13).imageHeight, (unsigned char)(*U$13).se_num, &iters);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [18]
;** 153	-----------------------    end_count = v$2;  // [18]
;**  	-----------------------    K$117 = &cycles[0];
;** 156	-----------------------    C$5 = act_kernel;  // [18]
;** 156	-----------------------    *((C$5<<3)+K$117) = *((C$5<<3)+K$117)+(v$2-(beg_count+overhead));  // [18]
;** 159	-----------------------    setStackDepth();  // [18]
;** 120	-----------------------    VLIB_unpack32BitPackedBinImage(out_data, (*U$13).imageWidth, (*U$13).imageHeight, output);
;** 131	-----------------------    memset((void *)out_data, 0, U$23);  // [21]
;** 137	-----------------------    act_kernel = 1;  // [17]
;** 140	-----------------------    VLIB_cache_inval();  // [17]
;** 143	-----------------------    initStack(getSP());  // [17]
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 106,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 106 | if( prm[tpi].testPattern == RANDOM ) {                                 
; 107 |     thresh = 100;                                                      
;----------------------------------------------------------------------
           ADD     .L2     B6,B12,B4         ; |106| 
           LDBU    .D2T2   *B4,B5            ; |106| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 109,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 109 | VLIB_create32BitPackedBinImage(input, prm[tpi].imageWidth, prm[tpi].ima
;     | geHeight, (uint32_t *)in_data, thresh);                                
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(68),A4       ; |109| 
           LDW     .D2T2   *+SP(56),B6       ; |109| 
           LDHU    .D2T1   *+B4(18),A6       ; |109| 
           LDHU    .D2T2   *+B4(16),B4       ; |109| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 106,column 13,is_stmt,isa 0
           CMPEQ   .L1X    B5,3,A0           ; |106| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x08)
	.dwattr $C$DW$176, DW_AT_name("VLIB_create32BitPackedBinImage")
	.dwattr $C$DW$176, DW_AT_TI_call

   [ A0]   MVK     .S1     0x64,A8           ; |107| 
|| [!A0]   MV      .L1X    B10,A8            ; |109| 
||         CALLP   .S2     VLIB_create32BitPackedBinImage,B3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 109,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 110 | VLIB_clear_memory(out_data, inp_size / 8);                             
; 113 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 114 | VLIB_binarySkeleton(in_data, out_data, scratch,                        
; 115 |                     (uint8_t(*)[VLIB_BINSKEL_MASK_SZ])mask, (uint8_t(*)
;     | [VLIB_BINSKEL_MASK_SZ])mask_d,                                         
; 116 |                     prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi]
;     | .se_num, &iters);                                                      
; 117 | VLIB_profile_stop();                                                   
; 120 | VLIB_unpack32BitPackedBinImage(out_data, prm[tpi].imageWidth, prm[tpi].
;     | imageHeight, output);                                                  
; 123 | VLIB_clear_memory(out_data, inp_size / 8);                             
; 126 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 127 | VLIB_binarySkeleton_cn(in_data, out_data, scratch,                     
; 128 |                        (uint8_t(*)[VLIB_BINSKEL_MASK_SZ])mask, (uint8_t
;     | (*)[VLIB_BINSKEL_MASK_SZ])mask_d,                                      
; 129 |                        prm[tpi].imageWidth, prm[tpi].imageHeight, prm[t
;     | pi].se_num, &iters_cn);                                                
; 130 | VLIB_profile_stop();                                                   
;----------------------------------------------------------------------
$C$RL11:   ; CALL OCCURS {VLIB_create32BitPackedBinImage} {0}  ; |109| 
$C$DW$L$VLIB_binarySkeleton_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$23$B:
;          EXCLUSIVE CPU CYCLES: 93
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("memset")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(52),A4       ; |131| 
||         ZERO    .L2     B4                ; |131| 
||         MV      .L1     A11,A6            ; |131| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h",line 131,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 133 | VLIB_unpack32BitPackedBinImage(out_data, prm[tpi].imageWidth, prm[tpi].
;     | imageHeight, output_cn);                                               
; 136 | status_nat_vs_int = VLIB_compare_mem((void *) output, (void *) output_c
;     | n, inp_size);                                                          
; 139 | if( prm[tpi].staticOut != NULL ) {                                     
;----------------------------------------------------------------------
$C$RL12:   ; CALL OCCURS {memset} {0}        ; |131| 
           MVKL    .S1     act_kernel,A15

           MVKH    .S1     act_kernel,A15
||         ZERO    .L1     A3                ; |137| 

$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$178, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A15           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 140 | status_nat_vs_ref = VLIB_compare_mem((void *) prm[tpi].staticOut, (void
;     |  *)output_cn, inp_size);                                               
;----------------------------------------------------------------------
$C$RL13:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("getSP")
	.dwattr $C$DW$179, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 144 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) ||                     
; 145 |         (status_nat_vs_ref == vlib_KERNEL_FAIL) ||                     
;----------------------------------------------------------------------
$C$RL14:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("initStack")
	.dwattr $C$DW$180, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL15:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 146 | iters != iters_cn) ? 1 : 0;                                            
; 148 | est_test=1;                                                            
; 150 | if( LevelOfFeedback > 0 ) {                                            
; 151 | for( i=0; i < prm[tpi].imageHeight; i++ ) {                            
; 152 | for( j=0; j < prm[tpi].imageWidth; j++ ) {                             
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 114,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(56),A4       ; |114| 
           LDHU    .D2T1   *+B11(18),A10     ; |114| 
           LDHU    .D2T2   *+B11(16),B8      ; |114| 
           LDBU    .D2T2   *+B11(22),B10     ; |114| 

           MVKL    .S1     beg_count,A14
||         LDW     .D2T2   *+SP(44),B6       ; |114| 

           MVKH    .S1     beg_count,A14
||         LDW     .D2T1   *+SP(40),A8       ; |114| 

           STDW    .D1T2   B5:B4,*A14        ; |146| 
||         LDW     .D2T1   *+SP(48),A6       ; |114| 

$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("VLIB_binarySkeleton")
	.dwattr $C$DW$181, DW_AT_TI_call

           CALLP   .S2     VLIB_binarySkeleton,B3
||         LDW     .D2T2   *+SP(52),B4       ; |114| 
||         ADDAB   .D1X    SP,29,A12         ; |114| 

$C$RL16:   ; CALL OCCURS {VLIB_binarySkeleton} {0}  ; |114| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 153 | printf("%d, ", output[i * prm[tpi].imageWidth + j]);                   
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B4           ; |153| 
           MVC     .S2     TSCH,B5           ; |153| 
           MVKL    .S2     overhead,B6

           LDW     .D1T1   *A15,A8           ; |156| 
||         MVKH    .S2     overhead,B6

           MVKL    .S2     cycles,B31
||         MV      .L1     A14,A10

           MVKH    .S2     cycles,B31
||         LDDW    .D2T2   *B6,B9:B8         ; |156| 
||         LDDW    .D1T1   *A10,A7:A6        ; |156| 

           MVKL    .S1     end_count,A3
           MV      .L1X    B31,A14
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 156 | printf("\n");                                                          
;----------------------------------------------------------------------
           LDDW    .D1T1   *+A14[A8],A5:A4   ; |156| 
           MVKH    .S1     end_count,A3
           ADDU    .L2X    B8,A6,B7:B6       ; |156| 

           ADD     .S2     B7,B9,B6          ; |156| 
||         SUBU    .L2     B4,B6,B9:B8       ; |156| 

           ADD     .L2X    B6,A7,B16         ; |156| 
           ADDU    .L2X    A4,B8,B7:B6       ; |156| 

           EXT     .S2     B9,24,24,B8       ; |156| 
||         SUB     .L2     B5,B16,B9         ; |156| 

           MV      .L1X    B6,A4             ; |156| 
||         ADD     .L2     B9,B8,B6          ; |156| 

           ADD     .L1X    B7,A5,A5          ; |156| 

           ADD     .L1X    A5,B6,A5          ; |156| 
||         STDW    .D1T2   B5:B4,*A3         ; |153| 

$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("setStackDepth")
	.dwattr $C$DW$182, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A14[A8]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 159 | printf("\n");                                                          
;----------------------------------------------------------------------
$C$RL17:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 120,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(64),B6       ; |120| 
           LDW     .D2T1   *+SP(52),A4       ; |120| 
           LDHU    .D2T1   *+B11(18),A6      ; |120| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("VLIB_unpack32BitPackedBinImage")
	.dwattr $C$DW$183, DW_AT_TI_call

           CALLP   .S2     VLIB_unpack32BitPackedBinImage,B3
||         LDHU    .D2T2   *+B11(16),B4      ; |120| 

$C$RL18:   ; CALL OCCURS {VLIB_unpack32BitPackedBinImage} {0}  ; |120| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("memset")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(52),A4       ; |131| 
||         ZERO    .L2     B4                ; |131| 
||         MV      .L1     A11,A6            ; |131| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h",line 131,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {memset} {0}        ; |131| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           MVK     .L1     1,A3              ; |137| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$185, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A15           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("getSP")
	.dwattr $C$DW$186, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$L$VLIB_binarySkeleton_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$24$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [17]
;** 127	-----------------------    VLIB_binarySkeleton_cn(in_data, out_data, scratch, (unsigned char (*)[9])mask, (unsigned char (*)[9])mask_d, (*U$13).imageWidth, (*U$13).imageHeight, (unsigned char)(*U$13).se_num, &iters_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [18]
;** 153	-----------------------    end_count = v$2;  // [18]
;** 156	-----------------------    C$4 = act_kernel;  // [18]
;** 156	-----------------------    *((C$4<<3)+K$117) = *((C$4<<3)+K$117)+(v$2-(beg_count+overhead));  // [18]
;** 159	-----------------------    setStackDepth();  // [18]
;** 133	-----------------------    VLIB_unpack32BitPackedBinImage(out_data, (*U$13).imageWidth, (*U$13).imageHeight, output_cn);
;** 136	-----------------------    U$125 = inp_size;
;** 136	-----------------------    status_nat_vs_int = VLIB_compare_mem((void *)output, (void *)output_cn, U$125);
;** 139	-----------------------    v$1 = prm;
;** 139	-----------------------    U$127 = (*U$13).staticOut;
;** 139	-----------------------    if ( U$127 ) goto g27;
;** 55	-----------------------    status_nat_vs_ref = 1;
;**  	-----------------------    goto g28;
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("initStack")
	.dwattr $C$DW$187, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL22:   ; CALL OCCURS {initStack} {0}     ; |143| 
$C$DW$L$VLIB_binarySkeleton_d$24$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$25$B:
;          EXCLUSIVE CPU CYCLES: 55
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 127,column 13,is_stmt,isa 0
           LDBU    .D2T2   *+B11(22),B10     ; |127| 
           LDHU    .D2T2   *+B11(16),B8      ; |127| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           LDW     .D2T1   *+SP(40),A8       ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 127,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(44),B6       ; |127| 
           LDW     .D2T1   *+SP(48),A6       ; |127| 

           MV      .L1     A10,A11           ; |146| 
||         LDW     .D2T1   *+SP(56),A4       ; |127| 

           STDW    .D1T2   B5:B4,*A11        ; |146| 
||         LDHU    .D2T1   *+B11(18),A10     ; |127| 

$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("VLIB_binarySkeleton_cn")
	.dwattr $C$DW$188, DW_AT_TI_call

           CALLP   .S2     VLIB_binarySkeleton_cn,B3
||         LDW     .D2T2   *+SP(52),B4       ; |127| 
||         ADDAW   .D1X    SP,7,A12          ; |127| 

$C$RL23:   ; CALL OCCURS {VLIB_binarySkeleton_cn} {0}  ; |127| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |153| 
           MVC     .S2     TSCH,B5           ; |153| 
           MVKL    .S1     overhead,A3
           MVKH    .S1     overhead,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A15,A8           ; |156| 
           MV      .L2X    A3,B6             ; |156| 

           LDDW    .D2T2   *B6,B9:B8         ; |156| 
||         LDDW    .D1T1   *A11,A5:A4        ; |156| 

           MVKL    .S1     end_count,A3
           MVKH    .S1     end_count,A3
           LDDW    .D1T1   *+A14[A8],A7:A6   ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           STDW    .D1T2   B5:B4,*A3         ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B8,A4,B7:B6       ; |156| 

           ADD     .S2     B7,B9,B8          ; |156| 
||         SUBU    .L2     B4,B6,B7:B6       ; |156| 

           ADD     .L2X    B8,A5,B8          ; |156| 

           ADDU    .L1X    A6,B6,A5:A4       ; |156| 
||         SUB     .L2     B5,B8,B6          ; |156| 
||         EXT     .S2     B7,24,24,B7       ; |156| 

           ADD     .L2     B6,B7,B6          ; |156| 
           ADD     .L1     A5,A7,A5          ; |156| 
           ADD     .L1X    A5,B6,A5          ; |156| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("setStackDepth")
	.dwattr $C$DW$189, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A14[A8]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL24:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 133,column 13,is_stmt,isa 0
           LDHU    .D2T1   *+B11(18),A6      ; |133| 
           LDW     .D2T2   *+SP(60),B6       ; |133| 
           LDW     .D2T1   *+SP(52),A4       ; |133| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("VLIB_unpack32BitPackedBinImage")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     VLIB_unpack32BitPackedBinImage,B3
||         LDHU    .D2T2   *+B11(16),B4      ; |133| 

$C$RL25:   ; CALL OCCURS {VLIB_unpack32BitPackedBinImage} {0}  ; |133| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 136,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(64),A4       ; |136| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$191, DW_AT_TI_call

           CALLP   .S2     VLIB_compare_mem,B3
||         LDW     .D2T2   *+SP(60),B4       ; |136| 
||         MV      .L1X    B13,A6            ; |136| 

$C$RL26:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |136| 
$C$DW$L$VLIB_binarySkeleton_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$26$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 139,column 13,is_stmt,isa 0
           LDW     .D2T2   *+B11(8),B0       ; |139| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 136,column 13,is_stmt,isa 0
           MV      .L1     A4,A10            ; |136| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 139,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(32),A15      ; |139| 
           NOP             2
   [!B0]   BNOP    .S1     $C$L8,1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 140,column 17,is_stmt,isa 0
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$192, DW_AT_TI_call
   [ B0]   CALL    .S1     VLIB_compare_mem  ; |140| 
   [ B0]   LDW     .D2T2   *+SP(60),B4       ; |140| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 55,column 20,is_stmt,isa 0
   [!B0]   MVK     .L2     0x1,B4            ; |55| 
   [!B0]   STW     .D2T2   B4,*+SP(72)       ; |55| 
           ; BRANCHCC OCCURS {$C$L8}  
$C$DW$L$VLIB_binarySkeleton_d$26$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 139,column 13,is_stmt,isa 0
$C$DW$L$VLIB_binarySkeleton_d$27$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g27:
;** 140	-----------------------    status_nat_vs_ref = VLIB_compare_mem((void *)U$127, (void *)output_cn, U$125);
;** 140	-----------------------    v$1 = prm;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 140,column 17,is_stmt,isa 0
           MV      .L1X    B0,A4             ; |140| 

           MV      .L1X    B13,A6            ; |140| 
||         ADDKPC  .S2     $C$RL27,B3,0      ; |140| 

$C$RL27:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |140| 
$C$DW$L$VLIB_binarySkeleton_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$28$B:
;          EXCLUSIVE CPU CYCLES: 2
           LDW     .D2T1   *+SP(32),A15      ; |140| 
           STW     .D2T1   A4,*+SP(72)       ; |140| 
$C$DW$L$VLIB_binarySkeleton_d$28$E:
;** --------------------------------------------------------------------------*
$C$L8:    
$C$DW$L$VLIB_binarySkeleton_d$29$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g28:
;** 144	-----------------------    v$4 = (int)iters;
;** 144	-----------------------    fail = (status_nat_vs_int == 0)|(status_nat_vs_ref == 0)|(iters != iters_cn);
;** 148	-----------------------    est_test = 1;
;** 150	-----------------------    if ( !LevelOfFeedback ) goto g36;

           LDW     .D2T2   *+SP(72),B4
||         CMPEQ   .L1     A10,0,A3          ; |144| 
||         MVKL    .S1     est_test,A4
||         MVK     .D1     1,A31             ; |148| 

           LDW     .D2T1   *+SP(76),A0       ; |144| 
||         MVKH    .S1     est_test,A4

           LDBU    .D2T2   *+SP(29),B6       ; |144| 
||         STW     .D1T1   A31,*A4           ; |148| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 144,column 13,is_stmt,isa 0
           LDBU    .D2T2   *+SP(28),B5       ; |144| 
           LDBU    .D2T2   *+SP(29),B13      ; |144| 
           CMPEQ   .L2     B4,0,B4           ; |144| 

   [!A0]   B       .S1     $C$L13            ; |150| 
||         OR      .L2X    B4,A3,B4          ; |144| 
|| [ A0]   ADD     .L1X    A15,B12,A3        ; |151| 
||         MV      .D1     A0,A1             ; branch predicate copy

   [ A0]   LDHU    .D1T1   *+A3(18),A0       ; |151| 
||         ADD     .L1X    A15,B12,A3        ; |163| 

           CMPEQ   .L2     B6,B5,B5          ; |144| 
|| [!A1]   LDHU    .D1T1   *+A3(22),A4       ; |163| 

           XOR     .L2     1,B5,B5           ; |144| 
|| [!A1]   LDHU    .D1T1   *+A3(18),A5       ; |163| 

           OR      .L2     B5,B4,B4          ; |144| 
|| [!A1]   LDHU    .D1T1   *+A3(16),A3       ; |163| 
|| [!A1]   MVKL    .S2     $C$SL4+0,B5

           STW     .D2T2   B4,*+SP(36)       ; |144| 
|| [!A1]   MVKL    .S2     testPatternString,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 150,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |150| 
$C$DW$L$VLIB_binarySkeleton_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$30$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 151	-----------------------    if ( !(C$3 = (*(U$12+v$1)).imageHeight) ) goto g35;

           SHL     .S1     A13,5,A3
|| [!A0]   B       .S2     $C$L12            ; |151| 

           SUBAW   .D1     A3,A13,A3
           ADD     .L1     A15,A3,A3
   [ A0]   LDHU    .D1T1   *+A3(16),A11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 151,column 22,is_stmt,isa 0
   [ A0]   ZERO    .L1     A12               ; |151| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 151,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |151| 
$C$DW$L$VLIB_binarySkeleton_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$31$B:
;          EXCLUSIVE CPU CYCLES: 8
;**  	-----------------------    U$108 = (v$1[tpi]).imageWidth;
;** 152	-----------------------    L$4 = (int)C$3;
;** 151	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 153,column 25,is_stmt,isa 0
           LDW     .D2T2   *+SP(64),B4       ; |153| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 152,column 26,is_stmt,isa 0
           MV      .L1     A0,A14            ; |152| 
           MPY32   .M1     A12,A11,A3
           MV      .L1     A11,A0
           NOP             3

           ADD     .L2X    B4,A3,B10
||         MVKL    .S2     $C$SL2+0,B4

$C$DW$L$VLIB_binarySkeleton_d$31$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L9
;** --------------------------------------------------------------------------*
$C$L9:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 151,column 22,is_stmt,isa 0
$C$DW$L$VLIB_binarySkeleton_d$32$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g31:
;** 152	-----------------------    if ( !U$108 ) goto g34;

   [!A0]   BNOP    .S1     $C$L11,5          ; |152| 
||         MVKH    .S2     $C$SL2+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 152,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |152| 
$C$DW$L$VLIB_binarySkeleton_d$32$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$33$B:
;          EXCLUSIVE CPU CYCLES: 2
;**  	-----------------------    U$149 = &output[U$108*i];
;** 153	-----------------------    L$5 = (int)U$108;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           STW     .D2T2   B4,*+SP(4)        ; |153| 
||         MV      .L1     A11,A10           ; |153| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 153,column 25,is_stmt,isa 0
           LDBU    .D2T2   *B10++,B4         ; |153| 
$C$DW$L$VLIB_binarySkeleton_d$33$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L10:    
$C$DW$L$VLIB_binarySkeleton_d$34$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g33:
;** 153	-----------------------    printf((const char *)"%d, ", (int)*U$149++);
;** 152	-----------------------    if ( L$5 = L$5-1 ) goto g33;
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("printf")
	.dwattr $C$DW$193, DW_AT_TI_call
           CALL    .S1     printf            ; |153| 
           ADDKPC  .S2     $C$RL28,B3,3      ; |153| 
           STW     .D2T2   B4,*+SP(8)        ; |153| 
$C$RL28:   ; CALL OCCURS {printf} {0}        ; |153| 
$C$DW$L$VLIB_binarySkeleton_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$35$B:
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1     A10,1,A0          ; |152| 
||         MVKL    .S2     $C$SL2+0,B4
||         SUB     .S1     A10,1,A10         ; |152| 

   [ A0]   BNOP    .S1     $C$L10,3          ; |152| 
||         MVKH    .S2     $C$SL2+0,B4

   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |153| 
   [ A0]   LDBU    .D2T2   *B10++,B4         ; |153| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 152,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |152| 
$C$DW$L$VLIB_binarySkeleton_d$35$E:
;** --------------------------------------------------------------------------*
$C$L11:    
$C$DW$L$VLIB_binarySkeleton_d$36$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g34:
;** 156	-----------------------    printf((const char *)"\n");
;** 151	-----------------------    ++i;
;** 151	-----------------------    if ( L$4 = L$4-1 ) goto g31;
           MVKL    .S2     $C$SL3+0,B4
           MVKH    .S2     $C$SL3+0,B4
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("printf")
	.dwattr $C$DW$194, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |156| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 156,column 21,is_stmt,isa 0
$C$RL29:   ; CALL OCCURS {printf} {0}        ; |156| 
$C$DW$L$VLIB_binarySkeleton_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$37$B:
;          EXCLUSIVE CPU CYCLES: 7

           ADD     .L1     1,A12,A12         ; |151| 
||         SUB     .S1     A14,1,A0          ; |151| 
||         LDW     .D2T2   *+SP(64),B4       ; |153| 
||         SUB     .D1     A14,1,A14         ; |151| 

   [ A0]   BNOP    .S1     $C$L9,4           ; |151| 
||         MPY32   .M1     A12,A11,A3
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   MV      .D1     A11,A0

           ADD     .L2X    B4,A3,B10
||         MVKL    .S2     $C$SL2+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 151,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |151| 
$C$DW$L$VLIB_binarySkeleton_d$37$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_binarySkeleton_d$38$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g35:
;** 159	-----------------------    printf((const char *)"\n");
           MVKL    .S2     $C$SL3+0,B4
           MVKH    .S2     $C$SL3+0,B4
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("printf")
	.dwattr $C$DW$195, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |159| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 159,column 17,is_stmt,isa 0
$C$RL30:   ; CALL OCCURS {printf} {0}        ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 163,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 163 | sprintf(desc, "%s generated input | Opt and NatC results compared | wid
;     | th=%d, height=%d, num_st=%d, iters=%d",                                
;----------------------------------------------------------------------
           ADD     .L1X    A15,B12,A3        ; |163| 
           LDHU    .D1T1   *+A3(18),A5       ; |163| 

           LDHU    .D1T1   *+A3(22),A4       ; |163| 
||         MVKL    .S2     $C$SL4+0,B5

           LDHU    .D1T1   *+A3(16),A3       ; |163| 
||         MVKL    .S2     testPatternString,B4

$C$DW$L$VLIB_binarySkeleton_d$38$E:
;** --------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 150,column 13,is_stmt,isa 0
$C$DW$L$VLIB_binarySkeleton_d$39$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g36:
;** 163	-----------------------    C$2 = U$12+v$1;
;** 163	-----------------------    sprintf(K$163, (const char *)"%s generated input | Opt and NatC results compared | width=%d, height=%d, num_st=%d, iters=%d", K$60, (int)(*C$2).imageWidth, (int)(*C$2).imageHeight, (int)(*C$2).se_num, v$4);
;** 165	-----------------------    VLIB_formula_add_test((int)_lo(_mpyli(iters, (*U$13).imageWidth*((*U$13).imageHeight-2)*(*U$13).se_num)), 0, 0, fail, K$163, 0);
;** 167	-----------------------    goto g38;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 163,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 164 | testPatternString, prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].
;     | se_num, iters);                                                        
;----------------------------------------------------------------------
           STW     .D2T2   B13,*+SP(24)      ; |163| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call
           CALL    .S1     sprintf           ; |163| 
           STW     .D2T1   A5,*+SP(16)       ; |163| 

           STW     .D2T1   A4,*+SP(20)       ; |163| 
||         MVKH    .S2     testPatternString,B4

           MVKL    .S1     desc,A4
||         MVKH    .S2     $C$SL4+0,B5
||         STW     .D2T2   B4,*+SP(8)        ; |163| 

           STW     .D2T1   A3,*+SP(12)       ; |163| 
||         MVKH    .S1     desc,A4
||         ADDKPC  .S2     $C$RL31,B3,0      ; |163| 

           STW     .D2T2   B5,*+SP(4)        ; |163| 
$C$RL31:   ; CALL OCCURS {sprintf} {0}       ; |163| 
$C$DW$L$VLIB_binarySkeleton_d$39$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$40$B:
;          EXCLUSIVE CPU CYCLES: 25
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 165,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 165 | VLIB_formula_add_test(prm[tpi].imageWidth * (prm[tpi].imageHeight - 2)
;     | * prm[tpi].se_num * iters, NULL, NULL, fail, desc, NULL);              
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B11(18),B4      ; |165| 
           LDHU    .D2T2   *+B11(16),B5      ; |165| 
           LDHU    .D2T2   *+B11(22),B31     ; |165| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |165| 
           SUB     .L2     B4,2,B6           ; |165| 
           MPY32   .M2     B6,B5,B6          ; |165| 
           LDBU    .D2T2   *+SP(29),B5       ; |165| 
           MVKH    .S1     desc,A8
           ZERO    .L1     A6                ; |165| 
           MPY32   .M2     B31,B6,B4         ; |165| 
           LDW     .D2T2   *+SP(36),B6       ; |165| 
           NOP             2
           MPYLI   .M2     B5,B4,B17:B16     ; |165| 
           ZERO    .L2     B4                ; |165| 
           NOP             3
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$197, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MV      .L1X    B16,A4            ; |165| 

$C$RL32:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |165| 
$C$DW$L$VLIB_binarySkeleton_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$41$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 167,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 167 | } else {                                                               
; 169 |     sprintf(desc, "width=%d, height=%d, num_st=%d",                    
; 170 |             prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].se_num)
;     | ;                                                                      
; 171 |     VLIB_skip_test(desc);                                              
;----------------------------------------------------------------------
           B       .S1     $C$L15            ; |167| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 175,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 175 | VLIB_free(mask_d);                                                     
;----------------------------------------------------------------------
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("VLIB_free")
	.dwattr $C$DW$198, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |175| 
           LDW     .D2T1   *+SP(40),A4       ; |175| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 167,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L15}          ; |167| 
$C$DW$L$VLIB_binarySkeleton_d$41$E:
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 76,column 9,is_stmt,isa 0
$C$DW$L$VLIB_binarySkeleton_d$42$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g37:
;** 169	-----------------------    C$1 = U$12+v$1;
;** 169	-----------------------    sprintf(K$163, (const char *)"width=%d, height=%d, num_st=%d", (int)(*C$1).imageWidth, (int)(*C$1).imageHeight, (int)(*C$1).se_num);
;** 171	-----------------------    VLIB_skip_test(K$163);

           LDHU    .D2T2   *+B4(18),B6       ; |169| 
||         MVKL    .S2     $C$SL5+0,B7
||         MVKL    .S1     desc,A4

           MVKH    .S1     desc,A4
||         LDHU    .D2T2   *+B4(22),B5       ; |169| 

$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x04)
	.dwattr $C$DW$199, DW_AT_name("sprintf")
	.dwattr $C$DW$199, DW_AT_TI_call

           LDHU    .D2T2   *+B4(16),B4       ; |169| 
||         CALL    .S1     sprintf           ; |169| 

           MVKH    .S2     $C$SL5+0,B7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 169,column 13,is_stmt,isa 0
           STW     .D2T2   B7,*+SP(4)        ; |169| 
           STW     .D2T2   B6,*+SP(12)       ; |169| 
           STW     .D2T2   B5,*+SP(16)       ; |169| 

           STW     .D2T2   B4,*+SP(8)        ; |169| 
||         ADDKPC  .S2     $C$RL33,B3,0      ; |169| 

$C$RL33:   ; CALL OCCURS {sprintf} {0}       ; |169| 
$C$DW$L$VLIB_binarySkeleton_d$42$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$43$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$200, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 171,column 13,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |171| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 175,column 9,is_stmt,isa 0
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("VLIB_free")
	.dwattr $C$DW$201, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |175| 
           LDW     .D2T1   *+SP(40),A4       ; |175| 
           NOP             3
$C$DW$L$VLIB_binarySkeleton_d$43$E:
;** --------------------------------------------------------------------------*
$C$L15:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 167,column 9,is_stmt,isa 0
$C$DW$L$VLIB_binarySkeleton_d$44$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g38:
;** 175	-----------------------    VLIB_free((void *)mask_d);
;** 176	-----------------------    VLIB_free((void *)mask);
;** 177	-----------------------    VLIB_free((void *)scratch);
;** 178	-----------------------    VLIB_free((void *)out_data);
;** 179	-----------------------    VLIB_free((void *)in_data);
;** 180	-----------------------    free((void *)output_cn);
;** 181	-----------------------    free((void *)output);
;** 182	-----------------------    free((void *)input);
;** 51	-----------------------    U$12 += 28;
;** 51	-----------------------    U$13 += 28;
;** 51	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 175,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL35,B3,0      ; |175| 
$C$RL35:   ; CALL OCCURS {VLIB_free} {0}     ; |175| 
$C$DW$L$VLIB_binarySkeleton_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$45$B:
;          EXCLUSIVE CPU CYCLES: 42
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("VLIB_free")
	.dwattr $C$DW$202, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(44),A4       ; |176| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 176,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 176 | VLIB_free(mask);                                                       
;----------------------------------------------------------------------
$C$RL36:   ; CALL OCCURS {VLIB_free} {0}     ; |176| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("VLIB_free")
	.dwattr $C$DW$203, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(48),A4       ; |177| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 177,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 177 | VLIB_free(scratch);                                                    
;----------------------------------------------------------------------
$C$RL37:   ; CALL OCCURS {VLIB_free} {0}     ; |177| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("VLIB_free")
	.dwattr $C$DW$204, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(52),A4       ; |178| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 178,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 178 | VLIB_free(out_data);                                                   
;----------------------------------------------------------------------
$C$RL38:   ; CALL OCCURS {VLIB_free} {0}     ; |178| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("VLIB_free")
	.dwattr $C$DW$205, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(56),A4       ; |179| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 179,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 179 | VLIB_free(in_data);                                                    
;----------------------------------------------------------------------
$C$RL39:   ; CALL OCCURS {VLIB_free} {0}     ; |179| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("free")
	.dwattr $C$DW$206, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(60),A4       ; |180| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 180,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 180 | free(output_cn);                                                       
;----------------------------------------------------------------------
$C$RL40:   ; CALL OCCURS {free} {0}          ; |180| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("free")
	.dwattr $C$DW$207, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(64),A4       ; |181| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 181,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 181 | free(output);                                                          
;----------------------------------------------------------------------
$C$RL41:   ; CALL OCCURS {free} {0}          ; |181| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("free")
	.dwattr $C$DW$208, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(68),A4       ; |182| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 182,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 182 | free(input);                                                           
;----------------------------------------------------------------------
$C$RL42:   ; CALL OCCURS {free} {0}          ; |182| 
$C$DW$L$VLIB_binarySkeleton_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_binarySkeleton_d$46$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |51| 
           ADDK    .S2     28,B11            ; |51| 
           ADD     .L1     1,A13,A13         ; |51| 
           ADDK    .S2     28,B12            ; |51| 
           NOP             1
           CMPGT   .L1     A3,A13,A0         ; |51| 

   [ A0]   BNOP    .S1     $C$L1,2           ; |51| 
|| [ A0]   LDHU    .D2T2   *+B11(20),B5      ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 58,column 21,is_stmt,isa 0
   [ A0]   LDHU    .D2T2   *+B11(18),B4      ; |58| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 51,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |51| 
$C$DW$L$VLIB_binarySkeleton_d$46$E:
;** --------------------------------------------------------------------------*
$C$L16:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g39:
;** 186	-----------------------    VLIB_profile_cycle_report(2, "N = width * (height - 2) * num_st * iters", "width * (height - 2) * num_st * iters");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [22]
;** 168	-----------------------    VLIB_stack_memory();  // [22]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL7+0,B4

           MVKL    .S1     $C$SL6+0,A6
||         MVKH    .S2     $C$SL7+0,B4

$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$209, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL6+0,A6
||         MVK     .L1     0x2,A4            ; |186| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 186,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 186 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 187 |                           "N = width * (height - 2) * num_st * iters", 
; 188 |                           "width * (height - 2) * num_st * iters");    
; 191 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL43:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |186| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL8+0,B4
           MVKH    .S2     $C$SL8+0,B4
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("printf")
	.dwattr $C$DW$210, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL44:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$211, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL45:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c",line 192,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(88),B3      ; |192| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |192| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$213	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$213, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.se66:$C$L1:1:1443280049")
	.dwattr $C$DW$213, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$213, DW_AT_TI_begin_line(0x33)
	.dwattr $C$DW$213, DW_AT_TI_end_line(0xb7)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$5$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$5$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$42$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$42$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$31$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$31$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$30$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$30$E)
$C$DW$218	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$218, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$27$B)
	.dwattr $C$DW$218, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$27$E)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$10$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$10$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$11$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$11$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$6$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$6$E)
$C$DW$222	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$7$B)
	.dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$7$E)
$C$DW$223	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$223, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$8$B)
	.dwattr $C$DW$223, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$8$E)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$9$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$9$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$22$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$22$E)
$C$DW$226	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$226, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$23$B)
	.dwattr $C$DW$226, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$23$E)
$C$DW$227	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$227, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$24$B)
	.dwattr $C$DW$227, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$24$E)
$C$DW$228	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$228, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$25$B)
	.dwattr $C$DW$228, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$25$E)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$26$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$26$E)
$C$DW$230	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$230, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$28$B)
	.dwattr $C$DW$230, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$28$E)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$29$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$29$E)
$C$DW$232	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$232, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$38$B)
	.dwattr $C$DW$232, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$38$E)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$39$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$39$E)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$40$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$40$E)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$41$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$41$E)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$43$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$43$E)
$C$DW$237	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$237, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$44$B)
	.dwattr $C$DW$237, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$44$E)
$C$DW$238	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$238, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$45$B)
	.dwattr $C$DW$238, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$45$E)
$C$DW$239	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$239, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$46$B)
	.dwattr $C$DW$239, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$46$E)

$C$DW$240	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$240, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.se66:$C$L9:2:1443280049")
	.dwattr $C$DW$240, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$240, DW_AT_TI_begin_line(0x97)
	.dwattr $C$DW$240, DW_AT_TI_end_line(0x9d)
$C$DW$241	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$241, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$32$B)
	.dwattr $C$DW$241, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$32$E)
$C$DW$242	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$242, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$33$B)
	.dwattr $C$DW$242, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$33$E)
$C$DW$243	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$243, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$36$B)
	.dwattr $C$DW$243, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$36$E)
$C$DW$244	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$244, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$37$B)
	.dwattr $C$DW$244, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$37$E)

$C$DW$245	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$245, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.se66:$C$L10:3:1443280049")
	.dwattr $C$DW$245, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$245, DW_AT_TI_begin_line(0x98)
	.dwattr $C$DW$245, DW_AT_TI_end_line(0x9a)
$C$DW$246	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$246, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$34$B)
	.dwattr $C$DW$246, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$34$E)
$C$DW$247	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$247, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$35$B)
	.dwattr $C$DW$247, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$35$E)
	.dwendtag $C$DW$245

	.dwendtag $C$DW$240


$C$DW$248	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$248, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.se66:$C$L2:2:1443280049")
	.dwattr $C$DW$248, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$248, DW_AT_TI_begin_line(0x5a)
	.dwattr $C$DW$248, DW_AT_TI_end_line(0x67)
$C$DW$249	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$249, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$12$B)
	.dwattr $C$DW$249, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$12$E)
$C$DW$250	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$250, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$17$B)
	.dwattr $C$DW$250, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$17$E)
$C$DW$251	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$251, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$13$B)
	.dwattr $C$DW$251, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$13$E)
$C$DW$252	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$252, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$16$B)
	.dwattr $C$DW$252, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$16$E)
$C$DW$253	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$253, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$20$B)
	.dwattr $C$DW$253, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$20$E)
$C$DW$254	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$254, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$21$B)
	.dwattr $C$DW$254, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$21$E)

$C$DW$255	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$255, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.se66:$C$L5:3:1443280049")
	.dwattr $C$DW$255, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$255, DW_AT_TI_begin_line(0x5b)
	.dwattr $C$DW$255, DW_AT_TI_end_line(0x66)
$C$DW$256	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$256, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$18$B)
	.dwattr $C$DW$256, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$18$E)
$C$DW$257	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$257, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$19$B)
	.dwattr $C$DW$257, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$19$E)
	.dwendtag $C$DW$255


$C$DW$258	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$258, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.se66:$C$L3:3:1443280049")
	.dwattr $C$DW$258, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$258, DW_AT_TI_begin_line(0x5b)
	.dwattr $C$DW$258, DW_AT_TI_end_line(0x66)
$C$DW$259	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$259, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$14$B)
	.dwattr $C$DW$259, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$14$E)
$C$DW$260	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$260, DW_AT_low_pc($C$DW$L$VLIB_binarySkeleton_d$15$B)
	.dwattr $C$DW$260, DW_AT_high_pc($C$DW$L$VLIB_binarySkeleton_d$15$E)
	.dwendtag $C$DW$258

	.dwendtag $C$DW$248

	.dwendtag $C$DW$213

	.dwattr $C$DW$102, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_binarySkeleton/VLIB_binarySkeleton_d.c")
	.dwattr $C$DW$102, DW_AT_TI_end_line(0xc0)
	.dwattr $C$DW$102, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$102

;; Inlined function references:
;; [ 17] VLIB_profile_start
;; [ 18] VLIB_profile_stop
;; [ 21] VLIB_clear_memory
;; [ 22] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_binarySkeleton",0
$C$SL2:	.string	"%d, ",0
$C$SL3:	.string	10,0
$C$SL4:	.string	"%s generated input | Opt and NatC results compared | width="
	.string	"%d, height=%d, num_st=%d, iters=%d",0
$C$SL5:	.string	"width=%d, height=%d, num_st=%d",0
$C$SL6:	.string	"width * (height - 2) * num_st * iters",0
$C$SL7:	.string	"N = width * (height - 2) * num_st * iters",0
$C$SL8:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_create32BitPackedBinImage
	.global	VLIB_unpack32BitPackedBinImage
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_compare_mem
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_binarySkeleton
	.global	VLIB_binarySkeleton_cn
	.global	binarySkeleton_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$38	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x04)
$C$DW$261	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$261, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$261, DW_AT_decl_column(0x05)
$C$DW$262	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$262, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$262, DW_AT_decl_column(0x05)
$C$DW$263	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$263, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$263, DW_AT_decl_column(0x05)
$C$DW$264	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$264, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$264, DW_AT_decl_column(0x05)
$C$DW$265	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$265, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$265, DW_AT_decl_column(0x05)
$C$DW$266	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$266, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$266, DW_AT_decl_column(0x05)
$C$DW$267	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$267, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x80)
	.dwattr $C$DW$267, DW_AT_decl_column(0x05)
$C$DW$268	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$268, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x81)
	.dwattr $C$DW$268, DW_AT_decl_column(0x05)
$C$DW$269	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$269, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x82)
	.dwattr $C$DW$269, DW_AT_decl_column(0x05)
$C$DW$270	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$270, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x83)
	.dwattr $C$DW$270, DW_AT_decl_column(0x05)
$C$DW$271	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0x84)
	.dwattr $C$DW$271, DW_AT_decl_column(0x05)
$C$DW$272	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$272, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0x85)
	.dwattr $C$DW$272, DW_AT_decl_column(0x05)
$C$DW$273	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$273, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0x86)
	.dwattr $C$DW$273, DW_AT_decl_column(0x05)
$C$DW$274	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$274, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x87)
	.dwattr $C$DW$274, DW_AT_decl_column(0x05)
$C$DW$275	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$275, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x88)
	.dwattr $C$DW$275, DW_AT_decl_column(0x05)
$C$DW$276	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$276, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x89)
	.dwattr $C$DW$276, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x0e)
$C$DW$T$39	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x03)

$C$DW$T$40	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x04)
$C$DW$277	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$277, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$277, DW_AT_decl_column(0x05)
$C$DW$278	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$278, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$278, DW_AT_decl_column(0x05)
$C$DW$279	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$279, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$279, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x06)

$C$DW$T$41	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x04)
$C$DW$280	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$280, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x72)
	.dwattr $C$DW$280, DW_AT_decl_column(0x05)
$C$DW$281	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$281, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x73)
	.dwattr $C$DW$281, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$41

	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\../common/VLIB_test.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x06)

$C$DW$T$24	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$24, DW_AT_byte_size(0x1c)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$282, DW_AT_name("testPattern")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0x24)
	.dwattr $C$DW$282, DW_AT_decl_column(0x0e)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$283, DW_AT_name("staticIn")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0x25)
	.dwattr $C$DW$283, DW_AT_decl_column(0x0e)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$284, DW_AT_name("staticOut")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0x26)
	.dwattr $C$DW$284, DW_AT_decl_column(0x0e)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$285, DW_AT_name("se_ptr")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("se_ptr")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0x27)
	.dwattr $C$DW$285, DW_AT_decl_column(0x0e)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$286, DW_AT_name("imageWidth")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0x28)
	.dwattr $C$DW$286, DW_AT_decl_column(0x0e)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$287, DW_AT_name("imageHeight")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0x29)
	.dwattr $C$DW$287, DW_AT_decl_column(0x0e)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$288, DW_AT_name("imagePitch")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("imagePitch")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$288, DW_AT_decl_column(0x0e)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$289, DW_AT_name("se_num")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("se_num")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0e)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$290, DW_AT_name("iters")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("iters")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$290, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$24

	.dwattr $C$DW$T$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$T$24, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$24, DW_AT_decl_column(0x10)
$C$DW$T$42	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$42, DW_AT_address_class(0x20)
$C$DW$T$44	.dwtag  DW_TAG_typedef, DW_AT_name("binarySkeleton_testParams_t")
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\VLIB_binarySkeleton_idat.h")
	.dwattr $C$DW$T$44, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$44, DW_AT_decl_column(0x03)
$C$DW$T$45	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$T$45, DW_AT_address_class(0x20)
$C$DW$T$46	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$46, DW_AT_address_class(0x20)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x18)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$291, DW_AT_name("fd")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x49)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0b)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$292, DW_AT_name("buf")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$292, DW_AT_decl_column(0x16)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$293, DW_AT_name("pos")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$293, DW_AT_decl_column(0x16)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$294, DW_AT_name("bufend")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$294, DW_AT_decl_column(0x16)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$295, DW_AT_name("buff_stop")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$295, DW_AT_decl_column(0x16)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$296, DW_AT_name("flags")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$296, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x03)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x08)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$297, DW_AT_name("quot")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$297, DW_AT_decl_column(0x16)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$298, DW_AT_name("rem")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$298, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x23)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x08)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$299, DW_AT_name("quot")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0x40)
	.dwattr $C$DW$299, DW_AT_decl_column(0x17)
$C$DW$300	.dwtag  DW_TAG_member
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$300, DW_AT_name("rem")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$300, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$300, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$300, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0x40)
	.dwattr $C$DW$300, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x24)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x10)
$C$DW$301	.dwtag  DW_TAG_member
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$301, DW_AT_name("quot")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$301, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$301, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$301, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x43)
	.dwattr $C$DW$301, DW_AT_decl_column(0x1c)
$C$DW$302	.dwtag  DW_TAG_member
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$302, DW_AT_name("rem")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$302, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x43)
	.dwattr $C$DW$302, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x29)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x24)
$C$DW$303	.dwtag  DW_TAG_member
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$303, DW_AT_name("area")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$303, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x69)
	.dwattr $C$DW$303, DW_AT_decl_column(0x0d)
$C$DW$304	.dwtag  DW_TAG_member
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$304, DW_AT_name("xsum")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$304, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$304, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$304, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$304, DW_AT_decl_column(0x0d)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$305, DW_AT_name("ysum")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$305, DW_AT_decl_column(0x0d)
$C$DW$306	.dwtag  DW_TAG_member
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$306, DW_AT_name("xmin")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$306, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$306, DW_AT_decl_column(0x0d)
$C$DW$307	.dwtag  DW_TAG_member
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$307, DW_AT_name("ymin")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$307, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$307, DW_AT_decl_column(0x0d)
$C$DW$308	.dwtag  DW_TAG_member
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$308, DW_AT_name("xmax")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$308, DW_AT_decl_column(0x0d)
$C$DW$309	.dwtag  DW_TAG_member
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$309, DW_AT_name("ymax")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$309, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x70)
	.dwattr $C$DW$309, DW_AT_decl_column(0x0d)
$C$DW$310	.dwtag  DW_TAG_member
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$310, DW_AT_name("seedx")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$310, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x72)
	.dwattr $C$DW$310, DW_AT_decl_column(0x0d)
$C$DW$311	.dwtag  DW_TAG_member
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$311, DW_AT_name("seedy")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$311, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x73)
	.dwattr $C$DW$311, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x03)

$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$312	.dwtag  DW_TAG_member
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$312, DW_AT_name("daylight")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$312, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x52)
	.dwattr $C$DW$312, DW_AT_decl_column(0x0b)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$313, DW_AT_name("timezone")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x53)
	.dwattr $C$DW$313, DW_AT_decl_column(0x0b)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$314, DW_AT_name("tzname")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x54)
	.dwattr $C$DW$314, DW_AT_decl_column(0x0b)
$C$DW$315	.dwtag  DW_TAG_member
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$315, DW_AT_name("dstname")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$315, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x55)
	.dwattr $C$DW$315, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x01)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$96	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$96, DW_AT_address_class(0x20)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1d)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$110	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$110, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$110, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$110, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)

$C$DW$T$88	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$88, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x09)
$C$DW$316	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$316, DW_AT_upper_bound(0x08)
	.dwendtag $C$DW$T$88

$C$DW$T$89	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$89, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$T$89, DW_AT_address_class(0x20)
$C$DW$T$114	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$19)
$C$DW$T$115	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$115, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$115, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$115, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$116	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$116, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$116, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$116, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$116, DW_AT_decl_column(0x1d)
$C$DW$T$117	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$T$117, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$117, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$117, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$117, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1c)
$C$DW$T$119	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$119, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$119, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$119, DW_AT_decl_column(0x16)
$C$DW$T$118	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$118, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$118, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$118, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$118, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x0d)
$C$DW$T$30	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x1d)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x11)

$C$DW$T$35	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$35, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x10)
$C$DW$317	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$317, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$35

$C$DW$T$92	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$92, DW_AT_address_class(0x20)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x17)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x17)
$C$DW$T$135	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$135, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$135, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$135, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$135, DW_AT_decl_column(0x17)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x17)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x17)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x16)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x19)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x16)
$C$DW$T$61	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$61, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$61, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$61, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$61, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$61, DW_AT_decl_column(0x1c)
$C$DW$T$62	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$62, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$62, DW_AT_address_class(0x20)
$C$DW$T$87	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$62)
$C$DW$T$84	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$61)
$C$DW$T$85	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$T$85, DW_AT_address_class(0x20)
$C$DW$T$86	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$85)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x16)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x16)
$C$DW$T$148	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$148, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$148, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$148, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$148, DW_AT_decl_column(0x16)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x16)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x21)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x17)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x20)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x16)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x21)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x17)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x17)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$164	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$164, DW_AT_address_class(0x20)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x20)

$C$DW$T$166	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_byte_size(0x10)
$C$DW$318	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$318, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$166

$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x16)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x16)
$C$DW$T$169	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$169, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$169, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$170	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$170, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$170, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$170, DW_AT_decl_column(0x0f)
$C$DW$T$171	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$171, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$171, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_binarySkeleton\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x10)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$32	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$32, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$32, DW_AT_name("signed char")
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x01)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$319	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$319, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$33

$C$DW$T$67	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$67, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$67, DW_AT_address_class(0x20)
$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x12)
$C$DW$T$120	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$32)
$C$DW$T$121	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$120)
	.dwattr $C$DW$T$121, DW_AT_address_class(0x20)

$C$DW$T$175	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
$C$DW$320	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$175


$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x10)
$C$DW$321	.dwtag  DW_TAG_member
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$321, DW_AT_name("_v")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$321, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x44)
	.dwattr $C$DW$321, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x01)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x01)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x13)

$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("tm")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x24)
$C$DW$322	.dwtag  DW_TAG_member
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$322, DW_AT_name("tm_sec")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$322, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x41)
	.dwattr $C$DW$322, DW_AT_decl_column(0x09)
$C$DW$323	.dwtag  DW_TAG_member
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$323, DW_AT_name("tm_min")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$323, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$323, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$323, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x42)
	.dwattr $C$DW$323, DW_AT_decl_column(0x09)
$C$DW$324	.dwtag  DW_TAG_member
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$324, DW_AT_name("tm_hour")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$324, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$324, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$324, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x43)
	.dwattr $C$DW$324, DW_AT_decl_column(0x09)
$C$DW$325	.dwtag  DW_TAG_member
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$325, DW_AT_name("tm_mday")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$325, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$325, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$325, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x44)
	.dwattr $C$DW$325, DW_AT_decl_column(0x09)
$C$DW$326	.dwtag  DW_TAG_member
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$326, DW_AT_name("tm_mon")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$326, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$326, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$326, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$326, DW_AT_decl_line(0x45)
	.dwattr $C$DW$326, DW_AT_decl_column(0x09)
$C$DW$327	.dwtag  DW_TAG_member
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$327, DW_AT_name("tm_year")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$327, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$327, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$327, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$327, DW_AT_decl_line(0x46)
	.dwattr $C$DW$327, DW_AT_decl_column(0x09)
$C$DW$328	.dwtag  DW_TAG_member
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$328, DW_AT_name("tm_wday")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$328, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$328, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$328, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$328, DW_AT_decl_line(0x47)
	.dwattr $C$DW$328, DW_AT_decl_column(0x09)
$C$DW$329	.dwtag  DW_TAG_member
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$329, DW_AT_name("tm_yday")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$329, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$329, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$329, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$329, DW_AT_decl_line(0x48)
	.dwattr $C$DW$329, DW_AT_decl_column(0x09)
$C$DW$330	.dwtag  DW_TAG_member
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$330, DW_AT_name("tm_isdst")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$330, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$330, DW_AT_decl_line(0x49)
	.dwattr $C$DW$330, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

