******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Wed Oct 07 00:50:09 2015

OUTPUT FILE NAME:   <.\elf_out\test_eveSoftISP.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  000120b0  0000df50  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00007c80  00000380  RWIX
  WMEM                  40040000   00008000  00007000  00001000  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  010035e6  00ffca1a  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006eac     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    0000021c                       : fwrite.obj (.text:fwrite)
                  80003738    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003940    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003b40    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003d24    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003ef0    000001cc                       : strtol.obj (.text:strtol)
                  800040bc    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004284    000001c8                       : fgets.obj (.text:_dofgets)
                  8000444c    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004604    000001a0                       : strtoul.obj (.text:strtoul)
                  800047a4    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004930    00000170                       : fputs.obj (.text:fputs)
                  80004aa0    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004c08    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d68    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ec4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  8000501c    00000144                       : fread.obj (.text:fread)
                  80005160    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  800052a0    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053e0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  8000551c    0000012c                       : fopen.obj (.text:_openfile)
                  80005648    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005760    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005874    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005968    000000ec                       : lowlev.obj (.text:open)
                  80005a54    000000e8                       : fputc.obj (.text:fputc)
                  80005b3c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005c18    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005ce4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005da8    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e64    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f20    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fd4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006088    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006134    000000a8                       : fopen.obj (.text:_search_fp)
                  800061dc    000000a8                       : memset.obj (.text:memset)
                  80006284    000000a0                       : lowlev.obj (.text:getdevice)
                  80006324    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063c0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000645c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064f4    00000098                       : vcop_memory.obj (.text:vcop_free)
                  8000658c    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006620    00000094                       : memory.obj (.text:mem_free)
                  800066b4    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006744    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800067d4    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006864    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800068f4    00000090                       : fseek.obj (.text:fseek)
                  80006984    00000090                       : ftell.obj (.text:ftell)
                  80006a14    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006aa0    00000088                       : lowlev.obj (.text:close)
                  80006b28    00000084                       : _printfi.obj (.text:_ecpy)
                  80006bac    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006c2c    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006cac    00000080                       : printf.obj (.text:printf)
                  80006d2c    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006da8    0000007c                       : fclose.obj (.text:_closefile)
                  80006e24    0000007c                       : atoi.obj (.text:atoi)
                  80006ea0    0000007c                       : fflush.obj (.text:fflush)
                  80006f1c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006f94    00000078                       : _printfi.obj (.text:_div)
                  8000700c    00000078                       : _printfi.obj (.text:_pconv_f)
                  80007084    00000078                       : memory.obj (.text:minit)
                  800070fc    00000074                       : trgdrv.obj (.text:HOSTclose)
                  80007170    00000074                       : fprintf.obj (.text:fprintf)
                  800071e4    00000070                       : autoinit.obj (.text:_auto_init)
                  80007254    00000070                       : vfprintf.obj (.text:vfprintf)
                  800072c4    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007330    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80007398    00000068                       : boot.obj (.text:_c_int00)
                  80007400    00000068                       : lowlev.obj (.text:lseek)
                  80007468    00000068                       : lowlev.obj (.text:read)
                  800074d0    00000068                       : lowlev.obj (.text:write)
                  80007538    00000064                       : imath64.obj (.text:_subcull)
                  8000759c    00000064                       : ltoa.obj (.text:ltoa)
                  80007600    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  80007660    00000060                       : fflush.obj (.text:_doflush)
                  800076c0    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  8000771c    0000005c                       : lowlev.obj (.text:tabinit)
                  80007778    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  800077d4    00000054                       : _printfi.obj (.text:_fcpy)
                  80007828    00000054                       : renormd.obj (.text:_renormd)
                  8000787c    00000054                       : exit.obj (.text:exit)
                  800078d0    00000050                       : fopen.obj (.text:_cleanup)
                  80007920    00000050                       : lowlev.obj (.text:finddevice)
                  80007970    00000050                       : rand.obj (.text:rand)
                  800079c0    0000004c                       : fltud.obj (.text:__arp32abi_fltud)
                  80007a0c    0000004c                       : memory.obj (.text:malloc)
                  80007a58    00000048                       : trgmsg.obj (.text:readmsg)
                  80007aa0    00000048                       : lowlev.obj (.text:unlink)
                  80007ae8    00000048                       : trgmsg.obj (.text:writemsg)
                  80007b30    00000040                       : args_main.obj (.text:_args_main)
                  80007b70    00000040                       : sprintf.obj (.text:sprintf)
                  80007bb0    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007bec    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c28    0000003c                       : fopen.obj (.text:fopen)
                  80007c64    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007c9c    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007cd4    00000038                       : sscanf.obj (.text:sscanf)
                  80007d0c    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007d40    00000030                       : fclose.obj (.text:fclose)
                  80007d70    00000030                       : rand.obj (.text:srand)
                  80007da0    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007dcc    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007df4    00000028                       : mult.obj (.text:_mpyl)
                  80007e1c    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007e40    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007e64    00000020                       : memccpy.obj (.text:memccpy)
                  80007e84    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007ea0    0000001c                       : sprintf.obj (.text:_outs)
                  80007ebc    00000018                       : fgets.obj (.text:fgets)
                  80007ed4    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007ee8    00000014                       : memory.obj (.text:free)
                  80007efc    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f0c    00000010                       : sscanf.obj (.text:_inpchar)
                  80007f1c    00000010                       : sprintf.obj (.text:_outc)
                  80007f2c    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  80007f3c    0000000c                       : fprintf.obj (.text:_outc)
                  80007f48    0000000c                       : printf.obj (.text:_outc)
                  80007f54    0000000c                       : vfprintf.obj (.text:_outc)
                  80007f60    0000000c                       : fprintf.obj (.text:_outs)
                  80007f6c    0000000c                       : printf.obj (.text:_outs)
                  80007f78    0000000c                       : vfprintf.obj (.text:_outs)
                  80007f84    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007f90    0000000c                       : remove.obj (.text:remove)
                  80007f9c    00000008                       : exit.obj (.text:abort)
                  80007fa4    00000004                       : _lock.obj (.text:_nop)
                  80007fa8    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80007fac    0000427c     
                  80007fac    000010dc     soft_isp_tb.obj (.text:softIspTest)
                  80009088    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  80009e14    00000574     soft_isp_tb.obj (.text:main)
                  8000a388    000004d8     soft_isp_ref_cn.obj (.text:soft_isp_ref_cn)
                  8000a860    000003e8     configparser.obj (.text:ParseContent)
                  8000ac48    00000310     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_rccc_to_cccc_cn)
                  8000af58    00000308     configparser.obj (.text:printparams)
                  8000b260    0000026c     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_stats_collector_dense_cn)
                  8000b4cc    00000234     eve_profile.obj (.text:profiler_end)
                  8000b700    00000198     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_gbce_interp_cn)
                  8000b898    00000188                               : vcop_soft_isp_cn.obj (.text:vcop_black_clamp_c_balance_cn)
                  8000ba20    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000bb74    0000011c     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_decompand_piecewise_linear_cn)
                  8000bc90    0000010c                               : vcop_soft_isp_cn.obj (.text:vcop_gbce_simple_cn)
                  8000bd9c    000000d8     configparser.obj (.text:readparamfile)
                  8000be74    000000c4     eve_profile.obj (.text:profiler_init)
                  8000bf38    00000088     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_soft_isp_extract_r_cn)
                  8000bfc0    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000c030    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000c09c    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000c0f4    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000c144    00000048     eve_profile.obj (.text:profiler_start)
                  8000c18c    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000c1c4    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000c1f4    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000c20c    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000c21c    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)

.bam_text 
*          0    8000c228    00003358     
                  8000c228    00000810     libevealgframework.eve.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000ca38    00000788                                : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000d1c0    00000544                                : bam_execute.obj (.text:BAM_execute)
                  8000d704    0000047c                                : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000db80    00000414                                : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000df94    00000378                                : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000e30c    000001cc                                : bam_construct.obj (.text:BAM_createGraph)
                  8000e4d8    00000158                                : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000e630    00000150                                : bam_memory.obj (.text:bam_mem_alloc)
                  8000e780    00000140                                : bam_memory.obj (.text:bam_getMemPacket)
                  8000e8c0    00000130                                : bam_execute.obj (.text:BAM_process)
                  8000e9f0    00000120                                : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000eb10    0000011c                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_setMemRecFunc)
                  8000ec2c    0000010c                                : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000ed38    000000e8                                : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000ee20    000000e8                                : bam_memory.obj (.text:bam_mem_free)
                  8000ef08    000000ac                                : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000efb4    000000a8                                : bam_memory.obj (.text:bam_minit)
                  8000f05c    00000098                                : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000f0f4    00000090                                : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000f184    0000008c                                : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000f210    00000074                                : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000f284    00000070                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel)
                  8000f2f4    00000070                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel)
                  8000f364    00000068                                : bam_memory.obj (.text:bam_mcheck)
                  8000f3cc    0000004c                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  8000f418    0000004c                                : bam_construct.obj (.text:BAM_initKernelDB)
                  8000f464    00000044                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitOutChannel)
                  8000f4a8    0000003c                                : bam_execute.obj (.text:BAM_controlNode)
                  8000f4e4    00000038                                : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000f51c    00000024                                : alg_osal.obj (.text:PRINTF)
                  8000f540    00000024                                : alg_osal.obj (.text:TEST_PRINTF)
                  8000f564    00000018                                : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000f57c    00000004                                : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    8000f580    00002a10     
                  8000f580    00000618     libevekernels.eve.lib : vcop_soft_isp_kernel.obj (.text:vcop_rccc_to_cccc_init)
                  8000fb98    000004a8                           : bam_soft_isp_exec_funcs.obj (.text:Bam_SoftIsp_initFrame)
                  80010040    0000028c                           : vcop_soft_isp_kernel.obj (.text:vcop_stats_collector_dense_init)
                  800102cc    00000260                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_interp_init)
                  8001052c    00000258                           : bam_soft_isp_helper_funcs.obj (.text:BAM_SoftIsp_getMemRecFunc)
                  80010784    0000020c                           : vcop_soft_isp_kernel.obj (.text:vcop_rccc_to_cccc_vloops)
                  80010990    0000015c                           : vcop_soft_isp_kernel.obj (.text:vcop_decompand_piecewise_linear_init)
                  80010aec    00000108                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_simple_init)
                  80010bf4    000000fc                           : vcop_soft_isp_kernel.obj (.text:vcop_black_clamp_c_balance_init)
                  80010cf0    000000f4                           : vcop_soft_isp_kernel.obj (.text:vcop_stats_collector_dense_vloops)
                  80010de4    000000c0                           : bam_soft_isp_helper_funcs.obj (.text:BAM_SoftIsp_setMemRecFunc)
                  80010ea4    000000b0                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_interp_vloops)
                  80010f54    000000a8                           : vcop_soft_isp_kernel.obj (.text:vcop_decompand_piecewise_linear_vloops)
                  80010ffc    00000074                           : vcop_soft_isp_kernel.obj (.text:vcop_soft_isp_extract_r_init)
                  80011070    0000006c                           : bam_soft_isp_exec_funcs.obj (.text:BAM_SoftIsp_control)
                  800110dc    00000064                           : vcop_soft_isp_kernel.obj (.text:vcop_black_clamp_c_balance_vloops)
                  80011140    00000040                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_simple_vloops)
                  80011180    00000030                           : bam_soft_isp_exec_funcs.obj (.text:Bam_SoftIsp_computeFrame)
                  800111b0    0000001c                           : vcop_soft_isp_kernel.obj (.text:vcop_soft_isp_extract_r_vloops)
                  800111cc    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_black_clamp_c_balance_param_count)
                  800111d4    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_decompand_piecewise_linear_param_count)
                  800111dc    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_interp_param_count)
                  800111e4    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_simple_param_count)
                  800111ec    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_rccc_to_cccc_param_count)
                  800111f4    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_stats_collector_dense_param_count)
                  800111fc    00000004                           : vcop_soft_isp_kernel.obj (.text:vcop_soft_isp_extract_r_param_count)
                  80011200    00000288     libeveSoftISP.eve.lib : soft_isp_graph.obj (.text:SOFT_ISP_TI_initKernelsArgs)
                  80011488    000001bc                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_graphCreate)
                  80011644    0000018c                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_process)
                  800117d0    00000170                           : bam_dma_custom_soft_isp_node.obj (.text:BAM_DMA_SOFT_ISP_AUTOINCREMENT_getMemRecFunc)
                  80011940    00000160                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_init)
                  80011aa0    00000158                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_dmaControl)
                  80011bf8    00000104                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_control)
                  80011cfc    000000bc                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_alloc)
                  80011db8    00000078                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_graphControl)
                  80011e30    0000005c                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_activate)
                  80011e8c    0000005c                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_deactivate)
                  80011ee8    00000050                           : soft_isp_graph.obj (.text:assignDMAautoIncrementParams)
                  80011f38    00000020                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_execute)
                  80011f58    0000001c                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_getGraphMemReq)
                  80011f74    00000018                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_free)
                  80011f8c    00000004                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_numAlloc)

.starterware_text 
*          0    80011f90    00001220     
                  80011f90    00000560     libevestarterware_eve.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  800124f0    00000288                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  80012778    000001c4                               : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8001293c    00000178                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  80012ab4    000000e8                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  80012b9c    000000dc                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerOutChannel)
                  80012c78    000000cc                               : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  80012d44    000000c0                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  80012e04    00000090                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  80012e94    00000074                               : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  80012f08    0000006c                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitOutChannel)
                  80012f74    00000050                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  80012fc4    00000048                               : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  8001300c    00000040                               : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8001304c    00000040                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8001308c    0000002c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  800130b8    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  800130e4    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  80013110    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  8001313c    00000020                               : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8001315c    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  80013174    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  8001318c    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)
                  800131a0    0000000c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  800131ac    00000004                               : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     soft_isp_tb.obj (.dmemSect)

.stack     1    40024000    00003000     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00002ffc     --HOLE--

.bam_neardata 
*          1    40027000    000003dd     
                  40027000    00000018     libevealgframework.eve.lib : bam_memory.obj (.bss) [fill = 0]
                  40027018    00000005                                : bam_memory.obj (.data)
                  4002701d    00000003     --HOLE-- [fill = 0]
                  40027020    00000008                                : bam_construct_int.obj (.rodata)
                  40027028    00000004                                : bam_execute.obj (.rodata)
                  4002702c    00000004                                : bam_memory.obj (.rodata)
                  40027030    000001f8                                : bam_dma_autoincrement_node.obj (.const:.string)
                  40027228    00000121                                : bam_construct_int.obj (.const:.string)
                  40027349    00000090                                : bam_execute.obj (.const:.string)
                  400273d9    00000001     --HOLE-- [fill = 0]
                  400273da    00000003                                : bam_construct_int.obj (.const:.string:$P$T0$1)

.algo_neardata 
*          1    400273e0    0000035f     
                  400273e0    00000054     libeveSoftISP.eve.lib : soft_isp_alg.obj (.const)
                  40027434    00000054                           : soft_isp_alg.obj (.const:.string)
                  40027488    00000030                           : soft_isp_graph.obj (.const:$P$T0$1)
                  400274b8    0000001c                           : soft_isp_graph.obj (.const:$P$T1$2)
                  400274d4    0000012f                           : soft_isp_graph.obj (.const:.string)
                  40027603    0000013c                           : bam_dma_custom_soft_isp_node.obj (.const:.string)

.rts_neardata 
*          1    40027740    00000268     
                  40027740    00000003     rtsarp32_v200.lib : assert.obj (.const:.string)
                  40027743    00000001     --HOLE-- [fill = 0]
                  40027744    00000101                       : ctype.obj (.const:.string:_ctypes_)
                  40027845    00000001     --HOLE-- [fill = 0]
                  40027846    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  4002784d    00000001     --HOLE-- [fill = 0]
                  4002784e    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  40027854    00000023                       : _printfi.obj (.const:.string)
                  40027877    00000001     --HOLE-- [fill = 0]
                  40027878    00000050                       : strtod.obj (.const:digits)
                  400278c8    00000048                       : strtod.obj (.const:powerof10)
                  40027910    00000050                       : strtold.obj (.const:digits)
                  40027960    00000048                       : strtold.obj (.const:powerof10)

.cio       1    400279a8    00000120     UNINITIALIZED
                  400279a8    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.starterware_neardata 
*          1    40027ac8    00000118     
                  40027ac8    000000a8     libevestarterware_eve.lib : dma_resource_allocator.obj (.bss) [fill = 0]
                  40027b70    00000060                               : edma_utils_state.obj (.bss) [fill = 0]
                  40027bd0    00000004                               : dma_resource_allocator.obj (.data)
                  40027bd4    00000004                               : edma_utils.obj (.data)
                  40027bd8    00000004                               : edma_utils_autoincrement.obj (.rodata)
                  40027bdc    00000004                               : edma_utils_memcpy.obj (.rodata)

.bss       1    40027be0    00000048     UNINITIALIZED
                  40027be0    00000048     eve_profile.obj (.bss)

.data      1    40027c28    00000024     
                  40027c28    00000020     boot_arp32.obj (.data)
                  40027c48    00000004     eve_profile.obj (.data)

.rodata    1    40027c4c    00000038     
                  40027c4c    00000028     ti_stats_collector.obj (.rodata)
                  40027c74    00000008     eve_profile.obj (.rodata)
                  40027c7c    00000008     soft_isp_tb.obj (.rodata)

.wmem      1    40040000    00007000     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00006ff8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    01000000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    00fffff8     --HOLE--

.fardata   1    81030000    00001800     
                  81030000    00001800     soft_isp_config.obj (.fardata:gsTokenMap_soft_isp)

.const     1    81031800    00001022     
                  81031800    000004b5     soft_isp_tb.obj (.const:.string)
                  81031cb5    000003d2     eve_profile.obj (.const:.string)
                  81032087    00000252     configparser.obj (.const:.string)
                  810322d9    0000018a     soft_isp_config.obj (.const:.string)
                  81032463    00000001     --HOLE-- [fill = 0]
                  81032464    00000128     ti_stats_collector.obj (.const:.switchtab)
                  8103258c    000000fd     report_utils.obj (.const:.string)
                  81032689    000000ee     soft_isp_ref_cn.obj (.const:.string)
                  81032777    00000053     ti_mem_manager.obj (.const:.string)
                  810327ca    00000043     ti_stats_collector.obj (.const:.string)
                  8103280d    00000001     --HOLE-- [fill = 0]
                  8103280e    0000000c     soft_isp_tb.obj (.const:.string:__FUNCTION__$1)
                  8103281a    00000008     configparser.obj (.const:.string:$P$T0$1)

.far       1    81032824    000006d8     UNINITIALIZED
                  81032824    00000680     soft_isp_config.obj (.far)
                  81032ea4    00000028     ti_stats_collector.obj (.far)
                  81032ecc    00000020     eve_profile.obj (.far)
                  81032eec    00000010     soft_isp_tb.obj (.far)

.rts_fardata 
*          1    81032efc    00000300     
                  81032efc    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  81032f9c    0000000c                       : memory.obj (.far) [fill = 0]
                  81032fa8    00000008                       : boot.obj (.far) [fill = 0]
                  81032fb0    00000008                       : trgdrv.obj (.far) [fill = 0]
                  81032fb8    000000f0                       : defs.obj (.fardata:_ftable)
                  810330a8    00000078                       : lowlev.obj (.fardata:_device)
                  81033120    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  81033184    00000050                       : lowlev.obj (.fardata:_stream)
                  810331d4    00000008                       : _lock.obj (.fardata)
                  810331dc    00000005                       : vcop_memory.obj (.fardata)
                  810331e1    00000003     --HOLE-- [fill = 0]
                  810331e4    00000004                       : defs.obj (.fardata)
                  810331e8    00000004                       : errno.obj (.fardata)
                  810331ec    00000004                       : fopen.obj (.fardata)
                  810331f0    00000004                       : lowlev.obj (.fardata)
                  810331f4    00000004                       : memory.obj (.fardata)
                  810331f8    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    810331fc    000001f4     
                  810331fc    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    810333f0    00000108     
                  810333f0    0000001c     libevekernels.eve.lib : bam_soft_isp_helper_funcs.obj (.fardata)
                  8103340c    00000018                           : bam_soft_isp_exec_funcs.obj (.fardata)
                  81033424    00000068     libeveSoftISP.eve.lib : bam_dma_custom_soft_isp_node.obj (.fardata)
                  8103348c    00000030                           : soft_isp_graph.obj (.fardata:bamSoftIspKernelExecFuncDB)
                  810334bc    00000030                           : soft_isp_graph.obj (.fardata:bamSoftIspKernelHostDB)
                  810334ec    0000000c                           : soft_isp_graph.obj (.fardata)

.bam_fardata 
*          1    810334f8    000000f0     
                  810334f8    00000078     libevealgframework.eve.lib : bam_memory.obj (.far) [fill = 0]
                  81033570    0000000c                                : bam_execute.obj (.far) [fill = 0]
                  8103357c    00000008                                : bam_construct.obj (.far) [fill = 0]
                  81033584    00000064                                : bam_memory.obj (.fardata:vcop_mem)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    
    15 PHA_PAGE 18  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000f05c   BAM_ARP32_computeWrapper
8000f3cc   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000f464   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000eb10   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000f284   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000f2f4   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
800117d0   BAM_DMA_SOFT_ISP_AUTOINCREMENT_getMemRecFunc
8000f4a8   BAM_controlNode
8000ef08   BAM_copyIntMemRec2ExtMem
8000f184   BAM_copyNodeList
8000e30c   BAM_createGraph
8000f57c   BAM_dummyKernelFunc
8000ed38   BAM_fillKernelInfo
8000ec2c   BAM_getGraphMemSize
8000f4e4   BAM_getMemPacket
8000c228   BAM_initGraph
8000f210   BAM_initGraphInstance
8000f418   BAM_initKernelDB
8000db80   BAM_optimizeGraph
8000e8c0   BAM_process
8000e4d8   BAM_updateNodes
80007f9c   C$$EXIT
80007b28   C$$IO$$
810331fc   CRED_instVirtAddr
80012778   DMA_funcs_hardwareRegSetup
80012e94   DMA_funcs_writeTransferParams
8001293c   DMA_resourceAllocator_allocateResources
8001308c   DMA_resourceAllocator_initResources
800131a0   DMA_resourceAllocator_setEdma3RmHandle
8001313c   DMA_utils_resetStateStruct
80012c78   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
800131ac   EDMA3LLD_SUPPORT_requestResources
80011f90   EDMA_UTILS_autoIncrement_configure
80012ab4   EDMA_UTILS_autoIncrement_init
80012d44   EDMA_UTILS_autoIncrement_triggerInChannel
80012b9c   EDMA_UTILS_autoIncrement_triggerOutChannel
800124f0   EDMA_UTILS_autoIncrement_update
80012f74   EDMA_UTILS_autoIncrement_waitInChannel
80012f08   EDMA_UTILS_autoIncrement_waitOutChannel
8001300c   EDMA_UTILS_globalReset
80012e04   EDMA_UTILS_memcpy2D
80012fc4   EVE_SCTM_CounterConfig
8001315c   EVE_SCTM_CounterRead
800130b8   EVE_SCTM_CounterTimerEnable
8001318c   EVE_SCTM_Enable
800130e4   EVE_SCTM_InpEvtSelect
80013174   EVE_SCTM_OverflowCheck
80013110   EVE_SCTM_SamplingSelect
800070fc   HOSTclose
80005f20   HOSTlseek
8000645c   HOSTopen
800066b4   HOSTread
80006088   HOSTrename
80006f1c   HOSTunlink
80006a14   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000f51c   PRINTF
4002740c   SOFT_ISP_TI_IRES
400273e0   SOFT_ISP_TI_VISION_FXNS
80011e30   SOFT_ISP_TI_activate
80011cfc   SOFT_ISP_TI_alloc
80011bf8   SOFT_ISP_TI_control
80011e8c   SOFT_ISP_TI_deactivate
80011aa0   SOFT_ISP_TI_dmaControl
80011f38   SOFT_ISP_TI_execute
80011f74   SOFT_ISP_TI_free
80011f58   SOFT_ISP_TI_getGraphMemReq
80011db8   SOFT_ISP_TI_graphControl
80011488   SOFT_ISP_TI_graphCreate
80011940   SOFT_ISP_TI_init
80011f8c   SOFT_ISP_TI_numAlloc
80011644   SOFT_ISP_TI_process
8000f540   TEST_PRINTF
8000c21c   TI_CreateMemoryHandle
8000c09c   TI_GetMemoryChunk
00007000   WMEM_SIZE
400279a8   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40027000   __TI_STACK_END
00003000   __TI_STACK_SIZE
40027000   __TI_STATIC_BASE
01000000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007c64   __arp32abi_abort_msg
8000444c   __arp32abi_addd
80007e84   __arp32abi_addll
80005c18   __arp32abi_cmpd
80007e1c   __arp32abi_cmplls
80007e40   __arp32abi_cmpllu
80006744   __arp32abi_cvtdf
80006bac   __arp32abi_cvtfd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80006d2c   __arp32abi_fixdi
80007330   __arp32abi_fltid
800079c0   __arp32abi_fltud
800076c0   __arp32abi_isinf
80007600   __arp32abi_llshl
80007d0c   __arp32abi_llshru
800040bc   __arp32abi_mpyd
80004ec4   __arp32abi_mpyll
80007dcc   __arp32abi_negd
80007efc   __arp32abi_negll
80007c9c   __arp32abi_remull
80007bec   __arp32abi_strasgi
80007da0   __arp32abi_subd
80007ed4   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000108   _algo_fardata_size
0000035f   _algo_neardata_size
00002a10   _algo_text_size
80007b30   _args_main
800071e4   _auto_init
000000f0   _bam_fardata_size
000003dd   _bam_neardata_size
00003358   _bam_text_size
80006324   _buff_read
80007398   _c_int00
800078d0   _cleanup
81032fa8   _cleanup_ptr
80006da8   _closefile
40027744   _ctypes_
80007660   _doflush
81032fac   _dtors_ptr
80000120   _dummy_handler
80004c08   _frcaddd
80003940   _frcdivd
80005160   _frcmpyd
810331e4   _ft_end
81032fb8   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
810331d4   _lock
80007df4   _mpyl
40027c28   _my_stack
80007fa4   _nop
800030d0   _printfi
800072c4   _rd_ok
80007828   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000268   _rts_neardata_size
00006eac   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
00000118   _starterware_neardata_size
00001220   _starterware_text_size
80030000   _sys_memory
80007fa8   _system_pre_init
0000427c   _text_size
81032efc   _tmpnams
810331d8   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006864   _wrt_ok
80007f9c   abort
80006e24   atoi
8000e780   bam_getMemPacket
8000f364   bam_mcheck
8000e630   bam_mem_alloc
8000ee20   bam_mem_free
8000efb4   bam_minit
8000f0f4   bam_releaseMemPacket
4002700c   bam_stat_num_packets
ffffffff   binit
80006aa0   close
810331e8   errno
8000787c   exit
80007d40   fclose
80006ea0   fflush
80007ebc   fgets
80007c28   fopen
80007170   fprintf
80005a54   fputc
80004930   fputs
8000501c   fread
80007ee8   free
800068f4   fseek
80006984   ftell
8000351c   fwrite
81033424   gBAM_TI_dmaSoftIspAutoIncrementReadKernel
81033438   gBAM_TI_dmaSoftIspAutoIncrementWriteKernel
8103345c   gBAM_TI_dmaSoftIspReadAutoIncrementKernelExecFunc
8103344c   gBAM_TI_dmaSoftIspReadAutoIncrementKernelHelperFunc
81033474   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelExecFunc
81033454   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelHelperFunc
8103340c   gBAM_TI_softIspExecFunc
81033404   gBAM_TI_softIspHelperFunc
810333f0   gBAM_TI_softIspKernel
81032824   gConfig_soft_isp
40027b70   gDmaUtilsStateStruct
40027bd4   gEdmaCc
810334ec   gSoftIsp_TI_BAM_kernelDBdef
81032edc   gTest_TI_profileSctm
40027c0c   gTest_TI_profileTsc
81030000   gsTokenMap_soft_isp
80007400   lseek
8000759c   ltoa
80009e14   main
80007a0c   malloc
81032eec   memObj_DMEM
80005ce4   mem_alloc
80006620   mem_free
80007e64   memccpy
80005b3c   memcpy
800061dc   memset
80007084   minit
80005968   open
80006cac   printf
8000af58   printparams
8000b4cc   profiler_end
8000c20c   profiler_end_print
8000c1f4   profiler_getSP
8000c030   profiler_getStackDepth
8000be74   profiler_init
8000c1c4   profiler_initStack
8000c18c   profiler_printStatus
8000c144   profiler_start
8000c0f4   profiler_testCaseInfo
80007970   rand
80007468   read
80007a58   readmsg
8000bd9c   readparamfile
80007f90   remove
8000ba20   report_printAppletInfo
80005648   setvbuf
80007fac   softIspTest
8000a388   soft_isp_ref_cn
80007b70   sprintf
80007d70   srand
80007cd4   sscanf
80009088   statCollectorControl
8000bfc0   statCollectorInit
800015f8   strtod
80003ef0   strtol
80001998   strtold
80001d34   strtoll
80004604   strtoul
80002e84   strtoull
40027be8   test_module_cyles
80007aa0   unlink
8000b898   vcop_black_clamp_c_balance_cn
80010bf4   vcop_black_clamp_c_balance_init
800111cc   vcop_black_clamp_c_balance_param_count
800110dc   vcop_black_clamp_c_balance_vloops
8000bb74   vcop_decompand_piecewise_linear_cn
80010990   vcop_decompand_piecewise_linear_init
800111d4   vcop_decompand_piecewise_linear_param_count
80010f54   vcop_decompand_piecewise_linear_vloops
800064f4   vcop_free
8000b700   vcop_gbce_interp_cn
800102cc   vcop_gbce_interp_init
800111dc   vcop_gbce_interp_param_count
80010ea4   vcop_gbce_interp_vloops
8000bc90   vcop_gbce_simple_cn
80010aec   vcop_gbce_simple_init
800111e4   vcop_gbce_simple_param_count
80011140   vcop_gbce_simple_vloops
80007f2c   vcop_malloc
80004aa0   vcop_memalign
80007778   vcop_minit
8000ac48   vcop_rccc_to_cccc_cn
8000f580   vcop_rccc_to_cccc_init
800111ec   vcop_rccc_to_cccc_param_count
80010784   vcop_rccc_to_cccc_vloops
8000bf38   vcop_soft_isp_extract_r_cn
80010ffc   vcop_soft_isp_extract_r_init
800111fc   vcop_soft_isp_extract_r_param_count
800111b0   vcop_soft_isp_extract_r_vloops
8000b260   vcop_stats_collector_dense_cn
80010040   vcop_stats_collector_dense_init
800111f4   vcop_stats_collector_dense_param_count
80010cf0   vcop_stats_collector_dense_vloops
80007254   vfprintf
800074d0   write
80007ae8   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000001   __TI_args_main
00000001   __TI_exit
000000f0   _bam_fardata_size
00000108   _algo_fardata_size
00000118   _starterware_neardata_size
000001f4   _starterware_fardata_size
00000268   _rts_neardata_size
00000300   _rts_fardata_size
0000035f   _algo_neardata_size
000003dd   _bam_neardata_size
00001220   _starterware_text_size
00002a10   _algo_text_size
00003000   __TI_STACK_SIZE
00003358   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
0000427c   _text_size
00006eac   _rts_text_size
00007000   WMEM_SIZE
01000000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40027000   __TI_STACK_END
40027000   __TI_STATIC_BASE
4002700c   bam_stat_num_packets
400273e0   SOFT_ISP_TI_VISION_FXNS
4002740c   SOFT_ISP_TI_IRES
40027744   _ctypes_
400279a8   __CIOBUF_
40027b70   gDmaUtilsStateStruct
40027bd4   gEdmaCc
40027be8   test_module_cyles
40027c0c   gTest_TI_profileTsc
40027c28   _my_stack
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
8000351c   fwrite
80003940   _frcdivd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80003ef0   strtol
800040bc   __arp32abi_mpyd
8000444c   __arp32abi_addd
80004604   strtoul
80004930   fputs
80004aa0   vcop_memalign
80004c08   _frcaddd
80004ec4   __arp32abi_mpyll
8000501c   fread
80005160   _frcmpyd
80005648   setvbuf
80005968   open
80005a54   fputc
80005b3c   memcpy
80005c18   __arp32abi_cmpd
80005ce4   mem_alloc
80005f20   HOSTlseek
80006088   HOSTrename
800061dc   memset
80006324   _buff_read
8000645c   HOSTopen
800064f4   vcop_free
80006620   mem_free
800066b4   HOSTread
80006744   __arp32abi_cvtdf
80006864   _wrt_ok
800068f4   fseek
80006984   ftell
80006a14   HOSTwrite
80006aa0   close
80006bac   __arp32abi_cvtfd
80006cac   printf
80006d2c   __arp32abi_fixdi
80006da8   _closefile
80006e24   atoi
80006ea0   fflush
80006f1c   HOSTunlink
80007084   minit
800070fc   HOSTclose
80007170   fprintf
800071e4   _auto_init
80007254   vfprintf
800072c4   _rd_ok
80007330   __arp32abi_fltid
80007398   _c_int00
80007400   lseek
80007468   read
800074d0   write
8000759c   ltoa
80007600   __arp32abi_llshl
80007660   _doflush
800076c0   __arp32abi_isinf
80007778   vcop_minit
80007828   _renormd
8000787c   exit
800078d0   _cleanup
80007970   rand
800079c0   __arp32abi_fltud
80007a0c   malloc
80007a58   readmsg
80007aa0   unlink
80007ae8   writemsg
80007b28   C$$IO$$
80007b30   _args_main
80007b70   sprintf
80007bec   __arp32abi_strasgi
80007c28   fopen
80007c64   __arp32abi_abort_msg
80007c9c   __arp32abi_remull
80007cd4   sscanf
80007d0c   __arp32abi_llshru
80007d40   fclose
80007d70   srand
80007da0   __arp32abi_subd
80007dcc   __arp32abi_negd
80007df4   _mpyl
80007e1c   __arp32abi_cmplls
80007e40   __arp32abi_cmpllu
80007e64   memccpy
80007e84   __arp32abi_addll
80007ebc   fgets
80007ed4   __arp32abi_subll
80007ee8   free
80007efc   __arp32abi_negll
80007f2c   vcop_malloc
80007f90   remove
80007f9c   C$$EXIT
80007f9c   abort
80007fa4   _nop
80007fa8   _system_pre_init
80007fac   softIspTest
80009088   statCollectorControl
80009e14   main
8000a388   soft_isp_ref_cn
8000ac48   vcop_rccc_to_cccc_cn
8000af58   printparams
8000b260   vcop_stats_collector_dense_cn
8000b4cc   profiler_end
8000b700   vcop_gbce_interp_cn
8000b898   vcop_black_clamp_c_balance_cn
8000ba20   report_printAppletInfo
8000bb74   vcop_decompand_piecewise_linear_cn
8000bc90   vcop_gbce_simple_cn
8000bd9c   readparamfile
8000be74   profiler_init
8000bf38   vcop_soft_isp_extract_r_cn
8000bfc0   statCollectorInit
8000c030   profiler_getStackDepth
8000c09c   TI_GetMemoryChunk
8000c0f4   profiler_testCaseInfo
8000c144   profiler_start
8000c18c   profiler_printStatus
8000c1c4   profiler_initStack
8000c1f4   profiler_getSP
8000c20c   profiler_end_print
8000c21c   TI_CreateMemoryHandle
8000c228   BAM_initGraph
8000db80   BAM_optimizeGraph
8000e30c   BAM_createGraph
8000e4d8   BAM_updateNodes
8000e630   bam_mem_alloc
8000e780   bam_getMemPacket
8000e8c0   BAM_process
8000eb10   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000ec2c   BAM_getGraphMemSize
8000ed38   BAM_fillKernelInfo
8000ee20   bam_mem_free
8000ef08   BAM_copyIntMemRec2ExtMem
8000efb4   bam_minit
8000f05c   BAM_ARP32_computeWrapper
8000f0f4   bam_releaseMemPacket
8000f184   BAM_copyNodeList
8000f210   BAM_initGraphInstance
8000f284   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000f2f4   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000f364   bam_mcheck
8000f3cc   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000f418   BAM_initKernelDB
8000f464   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000f4a8   BAM_controlNode
8000f4e4   BAM_getMemPacket
8000f51c   PRINTF
8000f540   TEST_PRINTF
8000f57c   BAM_dummyKernelFunc
8000f580   vcop_rccc_to_cccc_init
80010040   vcop_stats_collector_dense_init
800102cc   vcop_gbce_interp_init
80010784   vcop_rccc_to_cccc_vloops
80010990   vcop_decompand_piecewise_linear_init
80010aec   vcop_gbce_simple_init
80010bf4   vcop_black_clamp_c_balance_init
80010cf0   vcop_stats_collector_dense_vloops
80010ea4   vcop_gbce_interp_vloops
80010f54   vcop_decompand_piecewise_linear_vloops
80010ffc   vcop_soft_isp_extract_r_init
800110dc   vcop_black_clamp_c_balance_vloops
80011140   vcop_gbce_simple_vloops
800111b0   vcop_soft_isp_extract_r_vloops
800111cc   vcop_black_clamp_c_balance_param_count
800111d4   vcop_decompand_piecewise_linear_param_count
800111dc   vcop_gbce_interp_param_count
800111e4   vcop_gbce_simple_param_count
800111ec   vcop_rccc_to_cccc_param_count
800111f4   vcop_stats_collector_dense_param_count
800111fc   vcop_soft_isp_extract_r_param_count
80011488   SOFT_ISP_TI_graphCreate
80011644   SOFT_ISP_TI_process
800117d0   BAM_DMA_SOFT_ISP_AUTOINCREMENT_getMemRecFunc
80011940   SOFT_ISP_TI_init
80011aa0   SOFT_ISP_TI_dmaControl
80011bf8   SOFT_ISP_TI_control
80011cfc   SOFT_ISP_TI_alloc
80011db8   SOFT_ISP_TI_graphControl
80011e30   SOFT_ISP_TI_activate
80011e8c   SOFT_ISP_TI_deactivate
80011f38   SOFT_ISP_TI_execute
80011f58   SOFT_ISP_TI_getGraphMemReq
80011f74   SOFT_ISP_TI_free
80011f8c   SOFT_ISP_TI_numAlloc
80011f90   EDMA_UTILS_autoIncrement_configure
800124f0   EDMA_UTILS_autoIncrement_update
80012778   DMA_funcs_hardwareRegSetup
8001293c   DMA_resourceAllocator_allocateResources
80012ab4   EDMA_UTILS_autoIncrement_init
80012b9c   EDMA_UTILS_autoIncrement_triggerOutChannel
80012c78   DMA_utils_updateStateStruct
80012d44   EDMA_UTILS_autoIncrement_triggerInChannel
80012e04   EDMA_UTILS_memcpy2D
80012e94   DMA_funcs_writeTransferParams
80012f08   EDMA_UTILS_autoIncrement_waitOutChannel
80012f74   EDMA_UTILS_autoIncrement_waitInChannel
80012fc4   EVE_SCTM_CounterConfig
8001300c   EDMA_UTILS_globalReset
8001308c   DMA_resourceAllocator_initResources
800130b8   EVE_SCTM_CounterTimerEnable
800130e4   EVE_SCTM_InpEvtSelect
80013110   EVE_SCTM_SamplingSelect
8001313c   DMA_utils_resetStateStruct
8001315c   EVE_SCTM_CounterRead
80013174   EVE_SCTM_OverflowCheck
8001318c   EVE_SCTM_Enable
800131a0   DMA_resourceAllocator_setEdma3RmHandle
800131ac   EDMA3LLD_SUPPORT_requestResources
80030000   _sys_memory
81030000   gsTokenMap_soft_isp
81032824   gConfig_soft_isp
81032edc   gTest_TI_profileSctm
81032eec   memObj_DMEM
81032efc   _tmpnams
81032fa8   _cleanup_ptr
81032fac   _dtors_ptr
81032fb8   _ftable
810331d4   _lock
810331d8   _unlock
810331e4   _ft_end
810331e8   errno
810331fc   CRED_instVirtAddr
810333f0   gBAM_TI_softIspKernel
81033404   gBAM_TI_softIspHelperFunc
8103340c   gBAM_TI_softIspExecFunc
81033424   gBAM_TI_dmaSoftIspAutoIncrementReadKernel
81033438   gBAM_TI_dmaSoftIspAutoIncrementWriteKernel
8103344c   gBAM_TI_dmaSoftIspReadAutoIncrementKernelHelperFunc
81033454   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelHelperFunc
8103345c   gBAM_TI_dmaSoftIspReadAutoIncrementKernelExecFunc
81033474   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelExecFunc
810334ec   gSoftIsp_TI_BAM_kernelDBdef
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[288 symbols]
