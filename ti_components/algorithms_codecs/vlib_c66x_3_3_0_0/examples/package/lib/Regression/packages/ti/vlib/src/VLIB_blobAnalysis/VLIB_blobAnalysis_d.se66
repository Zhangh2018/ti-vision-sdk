;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:07:31 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("fabs")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("fabs")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$1, DW_AT_decl_column(0x11)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$17)
	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
	.dwattr $C$DW$3, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$3, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$3, DW_AT_decl_column(0x0b)
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$11)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$3


$C$DW$6	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
	.dwattr $C$DW$6, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$6, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$6, DW_AT_decl_column(0x19)
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$204)
$C$DW$8	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$6


$C$DW$9	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
	.dwattr $C$DW$9, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$9, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$9, DW_AT_decl_column(0x19)
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$159)
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$204)
$C$DW$12	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$9


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$13, DW_AT_decl_column(0x16)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$10)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$152)
	.dwendtag $C$DW$13


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x82)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$152)
	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x86)
	.dwattr $C$DW$19, DW_AT_decl_column(0x19)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$19


$C$DW$21	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwattr $C$DW$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$21, DW_AT_decl_line(0x58)
	.dwattr $C$DW$21, DW_AT_decl_column(0x05)

$C$DW$22	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwattr $C$DW$22, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$22, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$22, DW_AT_decl_column(0x06)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$159)
	.dwendtag $C$DW$22


$C$DW$25	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwattr $C$DW$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$25, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$25, DW_AT_decl_column(0x06)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$159)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$25


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$159)
	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$10)
$C$DW$36	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$159)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$159)
	.dwendtag $C$DW$34


$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x80)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$86)
	.dwendtag $C$DW$38


$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x81)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)

$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x82)
	.dwattr $C$DW$41, DW_AT_decl_column(0x0a)

$C$DW$42	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwattr $C$DW$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$42, DW_AT_decl_line(0x83)
	.dwattr $C$DW$42, DW_AT_decl_column(0x06)

$C$DW$43	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwattr $C$DW$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_memory.h")
	.dwattr $C$DW$43, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$43, DW_AT_decl_column(0x06)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$49)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$49)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$3)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$3)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$85)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$85)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$85)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$49)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$159)
	.dwendtag $C$DW$43


$C$DW$53	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwattr $C$DW$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_memory.h")
	.dwattr $C$DW$53, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$53, DW_AT_decl_column(0x07)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$152)
	.dwendtag $C$DW$53


$C$DW$55	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwattr $C$DW$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_memory.h")
	.dwattr $C$DW$55, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$55, DW_AT_decl_column(0x07)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcConnectedComponentsMaxBufferSize")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("VLIB_calcConnectedComponentsMaxBufferSize")
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwattr $C$DW$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\VLIB_Connected_Components_Labeling\c66/VLIB_Connected_Components_Labeling.h")
	.dwattr $C$DW$57, DW_AT_decl_line(0x66)
	.dwattr $C$DW$57, DW_AT_decl_column(0x0d)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$79)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$79)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$46)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$80)
	.dwendtag $C$DW$57


$C$DW$62	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_initConnectedComponentsList")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("VLIB_initConnectedComponentsList")
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
	.dwattr $C$DW$62, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\VLIB_Connected_Components_Labeling\c66/VLIB_Connected_Components_Labeling.h")
	.dwattr $C$DW$62, DW_AT_decl_line(0x75)
	.dwattr $C$DW$62, DW_AT_decl_column(0x0d)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$83)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$3)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$46)
	.dwendtag $C$DW$62


$C$DW$66	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_createConnectedComponentsList")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("VLIB_createConnectedComponentsList")
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
	.dwattr $C$DW$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\VLIB_Connected_Components_Labeling\c66/VLIB_Connected_Components_Labeling.h")
	.dwattr $C$DW$66, DW_AT_decl_line(0x88)
	.dwattr $C$DW$66, DW_AT_decl_column(0x0d)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$83)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$85)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$85)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$87)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$46)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$46)
	.dwendtag $C$DW$66


$C$DW$73	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_getNumCCs")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("VLIB_getNumCCs")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external
	.dwattr $C$DW$73, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\VLIB_Connected_Components_Labeling\c66/VLIB_Connected_Components_Labeling.h")
	.dwattr $C$DW$73, DW_AT_decl_line(0x99)
	.dwattr $C$DW$73, DW_AT_decl_column(0x0d)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$83)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$80)
	.dwendtag $C$DW$73


$C$DW$76	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_createCCMap8Bit")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("VLIB_createCCMap8Bit")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
	.dwattr $C$DW$76, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\VLIB_Connected_Components_Labeling\c66/VLIB_Connected_Components_Labeling.h")
	.dwattr $C$DW$76, DW_AT_decl_line(0xc0)
	.dwattr $C$DW$76, DW_AT_decl_column(0x0d)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$83)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$90)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$91)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$91)
	.dwendtag $C$DW$76


$C$DW$81	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_GetSizeOfCCHandle")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("VLIB_GetSizeOfCCHandle")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\VLIB_Connected_Components_Labeling\c66/VLIB_Connected_Components_Labeling.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0xcd)
	.dwattr $C$DW$81, DW_AT_decl_column(0x09)

$C$DW$82	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobPerimeter")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("VLIB_calcBlobPerimeter")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\VLIB_calcPerimeter.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x74)
	.dwattr $C$DW$82, DW_AT_decl_column(0x09)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$46)
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$46)
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$130)
$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$50)
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$87)
	.dwendtag $C$DW$82


$C$DW$88	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_createBlobList")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("VLIB_createBlobList")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66/VLIB_blobAnalysis.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$88, DW_AT_decl_column(0x09)
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$83)
$C$DW$90	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$214)
	.dwendtag $C$DW$88


$C$DW$91	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_getblobIIBufSize")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("VLIB_getblobIIBufSize")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
	.dwattr $C$DW$91, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66/VLIB_blobAnalysis.h")
	.dwattr $C$DW$91, DW_AT_decl_line(0x85)
	.dwattr $C$DW$91, DW_AT_decl_column(0x09)
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$85)
$C$DW$93	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$46)
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$87)
	.dwendtag $C$DW$91


$C$DW$95	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_createBlobIntervalImg")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("VLIB_createBlobIntervalImg")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
	.dwattr $C$DW$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66/VLIB_blobAnalysis.h")
	.dwattr $C$DW$95, DW_AT_decl_line(0xa9)
	.dwattr $C$DW$95, DW_AT_decl_column(0x0b)
$C$DW$96	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$83)
$C$DW$97	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$131)
$C$DW$98	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$220)
	.dwendtag $C$DW$95


$C$DW$99	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobMinEnclosedPolygon")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("VLIB_calcBlobMinEnclosedPolygon")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwattr $C$DW$99, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66/VLIB_blobAnalysis.h")
	.dwattr $C$DW$99, DW_AT_decl_line(0xd5)
	.dwattr $C$DW$99, DW_AT_decl_column(0x09)
$C$DW$100	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$130)
$C$DW$101	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$224)
$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$224)
$C$DW$103	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$80)
	.dwendtag $C$DW$99


$C$DW$104	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobMinEnclosedRect")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("VLIB_calcBlobMinEnclosedRect")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwattr $C$DW$104, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66/VLIB_blobAnalysis.h")
	.dwattr $C$DW$104, DW_AT_decl_line(0xf9)
	.dwattr $C$DW$104, DW_AT_decl_column(0x09)
$C$DW$105	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$46)
$C$DW$106	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$224)
$C$DW$107	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$228)
	.dwendtag $C$DW$104


$C$DW$108	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobMinEnclosedCircle")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("VLIB_calcBlobMinEnclosedCircle")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
	.dwattr $C$DW$108, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66/VLIB_blobAnalysis.h")
	.dwattr $C$DW$108, DW_AT_decl_line(0x11c)
	.dwattr $C$DW$108, DW_AT_decl_column(0x09)
$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$46)
$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$232)
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$234)
	.dwendtag $C$DW$108


$C$DW$112	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_createBlobList_cn")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("VLIB_createBlobList_cn")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
	.dwattr $C$DW$112, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_cn.h")
	.dwattr $C$DW$112, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$112, DW_AT_decl_column(0x09)
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$83)
$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$214)
	.dwendtag $C$DW$112


$C$DW$115	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_createBlobIntervalImg_cn")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("VLIB_createBlobIntervalImg_cn")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
	.dwattr $C$DW$115, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_cn.h")
	.dwattr $C$DW$115, DW_AT_decl_line(0x8f)
	.dwattr $C$DW$115, DW_AT_decl_column(0x0b)
$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$83)
$C$DW$117	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$131)
$C$DW$118	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$74)
	.dwendtag $C$DW$115


$C$DW$119	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobPerimeter_cn")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("VLIB_calcBlobPerimeter_cn")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
	.dwattr $C$DW$119, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_cn.h")
	.dwattr $C$DW$119, DW_AT_decl_line(0xae)
	.dwattr $C$DW$119, DW_AT_decl_column(0x09)
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$46)
$C$DW$121	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$46)
$C$DW$122	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$131)
$C$DW$123	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$50)
$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$87)
	.dwendtag $C$DW$119


$C$DW$125	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobMinEnclosedPolygon_cn")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("VLIB_calcBlobMinEnclosedPolygon_cn")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
	.dwattr $C$DW$125, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_cn.h")
	.dwattr $C$DW$125, DW_AT_decl_line(0xdc)
	.dwattr $C$DW$125, DW_AT_decl_column(0x09)
$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$131)
$C$DW$127	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$224)
$C$DW$128	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$224)
$C$DW$129	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$80)
	.dwendtag $C$DW$125


$C$DW$130	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobMinEnclosedRect_cn")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("VLIB_calcBlobMinEnclosedRect_cn")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external
	.dwattr $C$DW$130, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_cn.h")
	.dwattr $C$DW$130, DW_AT_decl_line(0x100)
	.dwattr $C$DW$130, DW_AT_decl_column(0x09)
$C$DW$131	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$46)
$C$DW$132	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$224)
$C$DW$133	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$228)
	.dwendtag $C$DW$130


$C$DW$134	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_calcBlobMinEnclosedCircle_cn")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("VLIB_calcBlobMinEnclosedCircle_cn")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
	.dwattr $C$DW$134, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_cn.h")
	.dwattr $C$DW$134, DW_AT_decl_line(0x122)
	.dwattr $C$DW$134, DW_AT_decl_column(0x09)
$C$DW$135	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$46)
$C$DW$136	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$224)
$C$DW$137	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$234)
	.dwendtag $C$DW$134


$C$DW$138	.dwtag  DW_TAG_subprogram, DW_AT_name("blobAnalysis_getTestParams")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("blobAnalysis_getTestParams")
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external
	.dwattr $C$DW$138, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$138, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$138, DW_AT_decl_column(0x06)
$C$DW$139	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$110)
$C$DW$140	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$80)
	.dwendtag $C$DW$138

$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
	.dwattr $C$DW$141, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$141, DW_AT_decl_line(0x60)
	.dwattr $C$DW$141, DW_AT_decl_column(0x13)
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$142, DW_AT_declaration
	.dwattr $C$DW$142, DW_AT_external
	.dwattr $C$DW$142, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$142, DW_AT_decl_line(0x62)
	.dwattr $C$DW$142, DW_AT_decl_column(0x13)
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$313)
	.dwattr $C$DW$143, DW_AT_declaration
	.dwattr $C$DW$143, DW_AT_external
	.dwattr $C$DW$143, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$143, DW_AT_decl_line(0x63)
	.dwattr $C$DW$143, DW_AT_decl_column(0x13)
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$313)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external
	.dwattr $C$DW$144, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$144, DW_AT_decl_line(0x64)
	.dwattr $C$DW$144, DW_AT_decl_column(0x13)
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external
	.dwattr $C$DW$145, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$145, DW_AT_decl_line(0x75)
	.dwattr $C$DW$145, DW_AT_decl_column(0x14)
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$146, DW_AT_declaration
	.dwattr $C$DW$146, DW_AT_external
	.dwattr $C$DW$146, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$146, DW_AT_decl_line(0x76)
	.dwattr $C$DW$146, DW_AT_decl_column(0x14)
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$147, DW_AT_declaration
	.dwattr $C$DW$147, DW_AT_external
	.dwattr $C$DW$147, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$147, DW_AT_decl_line(0x77)
	.dwattr $C$DW$147, DW_AT_decl_column(0x14)
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external
	.dwattr $C$DW$148, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$148, DW_AT_decl_line(0x78)
	.dwattr $C$DW$148, DW_AT_decl_column(0x14)
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external
	.dwattr $C$DW$149, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h")
	.dwattr $C$DW$149, DW_AT_decl_line(0x79)
	.dwattr $C$DW$149, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\026129 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\0261211 
	.sect	".text"
	.clink
	.global	convert_uint8_to_packedBits

$C$DW$150	.dwtag  DW_TAG_subprogram, DW_AT_name("convert_uint8_to_packedBits")
	.dwattr $C$DW$150, DW_AT_low_pc(convert_uint8_to_packedBits)
	.dwattr $C$DW$150, DW_AT_high_pc(0x00)
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("convert_uint8_to_packedBits")
	.dwattr $C$DW$150, DW_AT_external
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$150, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$150, DW_AT_TI_begin_line(0x35)
	.dwattr $C$DW$150, DW_AT_TI_begin_column(0x0a)
	.dwattr $C$DW$150, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$150, DW_AT_decl_line(0x35)
	.dwattr $C$DW$150, DW_AT_decl_column(0x0a)
	.dwattr $C$DW$150, DW_AT_TI_max_frame_size(0x00)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 58,column 1,is_stmt,address convert_uint8_to_packedBits,isa 0

	.dwfde $C$DW$CIE, convert_uint8_to_packedBits
$C$DW$151	.dwtag  DW_TAG_formal_parameter, DW_AT_name("img")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("img")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_reg4]
$C$DW$152	.dwtag  DW_TAG_formal_parameter, DW_AT_name("mask")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("mask")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg20]
$C$DW$153	.dwtag  DW_TAG_formal_parameter, DW_AT_name("imageHeight")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg6]
$C$DW$154	.dwtag  DW_TAG_formal_parameter, DW_AT_name("imageWidth")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_reg22]
;----------------------------------------------------------------------
;  53 | uint32_t convert_uint8_to_packedBits(                                  
;  54 | uint8_t *img,                                                          
;  55 | uint8_t *mask,                                                         
;  56 | int32_t imageHeight,                                                   
;  57 | int32_t imageWidth)                                                    
;  59 | int32_t     i, j, k, n, m, roundWidth;                                 
;  60 | uint32_t    wordMask, wordMask_tmp, flag;                              
;  62 | k = 0;                                                                 
;  63 | n = 0;                                                                 
;  65 | roundWidth = (imageWidth >> 5) << 5;                                   
;  66 | wordMask_tmp = 32 - (imageWidth - roundWidth);                         
;  70 | if( wordMask_tmp == 32 ) {                                             
;  71 |     wordMask = 0;                                                      
;  72 | } else {                                                               
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: convert_uint8_to_packedBits                                 *
;*                                                                            *
;*   Regs Modified     : A0,A1,A3,A4,A5,A6,A7,A8,A9,B0,B1,B2,B4,B5,B6,B7,B8,  *
;*                           B9,A16,A17,A18,A19,A20,A21,A22,A23,A24,A31,B16,  *
;*                           B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27      *
;*   Regs Used         : A0,A1,A3,A4,A5,A6,A7,A8,A9,B0,B1,B2,B3,B4,B5,B6,B7,  *
;*                           B8,B9,A16,A17,A18,A19,A20,A21,A22,A23,A24,A31,   *
;*                           B16,B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27  *
;*   Local Frame Size  : 0 Args + 0 Auto + 0 Save = 0 byte                    *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
convert_uint8_to_packedBits:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 9
;** 65	-----------------------    roundWidth = imageWidth&0xffffffe0;
;** 70	-----------------------    if ( (K$12 = ((unsigned)imageWidth&0xffffffe0u)-(unsigned)imageWidth+32u) == 32u ) goto g3;
;** 73	-----------------------    wordMask = 0xffffffffu>>K$12<<K$12;
;** 73	-----------------------    goto g4;
;**	-----------------------g3:
;** 71	-----------------------    wordMask = 0u;
;**	-----------------------g4:
;** 70	-----------------------    K$11 = 32u;
;** 76	-----------------------    if ( imageHeight <= 0 ) goto g15;
;** 77	-----------------------    L$1 = imageHeight;
;** 62	-----------------------    k = 0;
;** 63	-----------------------    n = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
	.dwcfi	cfa_offset, 0
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_reg4]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_reg20]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("$O$K12")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("$O$K12")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_reg21]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("$O$U28")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("$O$U28")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_regx 0x27]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("$O$U198")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("$O$U198")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_regx 0x29]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("$O$U233")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("$O$U233")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_regx 0x3b]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("$O$K11")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("$O$K11")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_regx 0x3c]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_regx 0x2a]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg16]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("flag")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("flag")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg4]
$C$DW$165	.dwtag  DW_TAG_variable, DW_AT_name("wordMask")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("wordMask")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg0]
$C$DW$166	.dwtag  DW_TAG_variable, DW_AT_name("roundWidth")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("roundWidth")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_regx 0x3d]
$C$DW$167	.dwtag  DW_TAG_variable, DW_AT_name("m")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("m")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_regx 0x28]
$C$DW$168	.dwtag  DW_TAG_variable, DW_AT_name("n")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("n")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_regx 0x40]
$C$DW$169	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$169, DW_AT_location[DW_OP_regx 0x3f]
$C$DW$170	.dwtag  DW_TAG_variable, DW_AT_name("img")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("img")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_regx 0x2c]
$C$DW$171	.dwtag  DW_TAG_variable, DW_AT_name("mask")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("mask")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_regx 0x2b]
$C$DW$172	.dwtag  DW_TAG_variable, DW_AT_name("imageWidth")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$261)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_regx 0x3e]
$C$DW$173	.dwtag  DW_TAG_variable, DW_AT_name("$O$I4")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("$O$I4")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg22]
$C$DW$174	.dwtag  DW_TAG_variable, DW_AT_name("$O$I3")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("$O$I3")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg7]
$C$DW$175	.dwtag  DW_TAG_variable, DW_AT_name("$O$I2")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("$O$I2")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg6]
$C$DW$176	.dwtag  DW_TAG_variable, DW_AT_name("$O$I1")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("$O$I1")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg24]
$C$DW$177	.dwtag  DW_TAG_variable, DW_AT_name("$O$U172")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("$O$U172")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_regx 0x35]
$C$DW$178	.dwtag  DW_TAG_variable, DW_AT_name("$O$U172")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("$O$U172")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_regx 0x2d]
$C$DW$179	.dwtag  DW_TAG_variable, DW_AT_name("$O$ILP$u8x8$003")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("$O$ILP$u8x8$003")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_reg8]
$C$DW$180	.dwtag  DW_TAG_variable, DW_AT_name("$O$ILP$u8x8$004")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("$O$ILP$u8x8$004")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_reg6]
$C$DW$181	.dwtag  DW_TAG_variable, DW_AT_name("$O$ILP$u8x8$005")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("$O$ILP$u8x8$005")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_reg24]
$C$DW$182	.dwtag  DW_TAG_variable, DW_AT_name("$O$ILP$u8x8$006")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("$O$ILP$u8x8$006")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_reg4]
$C$DW$183	.dwtag  DW_TAG_variable, DW_AT_name("$O$VEC$u8x4$002")
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("$O$VEC$u8x4$002")
	.dwattr $C$DW$183, DW_AT_type(*$C$DW$T$196)
	.dwattr $C$DW$183, DW_AT_location[DW_OP_regx 0x25]

           MV      .L2     B6,B25            ; |58| 
||         CMPGT   .L1     A6,0,A1           ; |76| 
||         MVK     .D2     -1,B6             ; |73| 
||         MVK     .S2     32,B7             ; |70| 
||         MV      .S1X    B4,A22            ; |58| 
||         MV      .D1     A6,A21            ; |58| 

           CLR     .S2     B25,0,4,B5        ; |70| 
||         ZERO    .L2     B27               ; |63| 
||         ZERO    .D2     B26               ; |63| 
||         MV      .L1     A4,A23            ; |58| 

           SUB     .L2     B5,B25,B5         ; |70| 
||         CLR     .S2     B25,0,4,B24       ; |65| 

           ADDAD   .D2     B5,4,B5           ; |70| 
|| [!A1]   B       .S1     $C$L10            ; |76| 
||         MVK     .S2     0x20,B23          ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 73,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  73 | wordMask =  (0xffffffff >> wordMask_tmp) << wordMask_tmp;              
;----------------------------------------------------------------------
           SHRU    .S2     B6,B5,B6          ; |73| 
           SHL     .S2     B6,B5,B6          ; |73| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 70,column 5,is_stmt,isa 0
           CMPEQ   .L2     B5,B7,B0          ; |70| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 73,column 9,is_stmt,isa 0
           MV      .L1X    B6,A0             ; |73| Define a twin register

   [ B0]   ZERO    .L1     A0                ; |71| 
|| [ A1]   CMPGT   .L2     B24,0,B0          ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 76,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | for( i = 0; i < imageHeight; i++ ) {                                   
;  77 |     for( j = 0; j < roundWidth; j+=32 ) {                              
;  78 |         flag = 0;                                                      
;  80 |         for( m = 0; m < 32; m++ ) {                                    
;  81 |             flag += (img[k + m] > 0) << (31 - m);                      
;  84 |         mask[n + 3] = (flag >> 24) & 0xff;                             
;  85 |         mask[n + 2] = (flag >> 16) & 0xff;                             
;  86 |         mask[n + 1] = (flag >> 8) & 0xff;                              
;  87 |         mask[n + 0] = (flag >> 0) & 0xff;                              
;----------------------------------------------------------------------
           ; BRANCHCC OCCURS {$C$L10}        ; |76| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 3

   [ B0]   ADD     .D2     B24,31,B4
||         MV      .L2     B0,B1             ; guard predicate rewrite

   [ B1]   CLR     .S2     B4,0,4,B5         ; |88| 
|| [ B1]   ADD     .L1X    B26,A23,A18
|| [ B1]   ADD     .L2X    B27,A22,B16

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 88,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  88 | k += 32;                                                               
;----------------------------------------------------------------------
   [ B1]   ADD     .L2     B5,B26,B26        ; |88| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 63,column 5,is_stmt,isa 0
$C$DW$L$convert_uint8_to_packedBits$3$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g6:
;** 77	-----------------------    if ( roundWidth <= 0 ) goto g10;

   [!B0]   BNOP    .S1     $C$L5,4           ; |77| 
|| [ B0]   SHR     .S2     B4,5,B0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 89,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  89 | n+=4;                                                                  
;----------------------------------------------------------------------
   [ B1]   ADDAW   .D2     B27,B0,B27        ; |89| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 77,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |77| 
$C$DW$L$convert_uint8_to_packedBits$3$E:
;** --------------------------------------------------------------------------*
$C$DW$L$convert_uint8_to_packedBits$4$B:
;**  	-----------------------    U$28 = &img[k];
;**  	-----------------------    U$172 = &mask[n];
;**  	-----------------------    C$6 = roundWidth+31;
;**  	-----------------------    L$2 = C$6>>5;
;** 89	-----------------------    n += L$2*4;
;** 88	-----------------------    k += C$6&0xffffffe0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 67108863, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g8:
;** 81	-----------------------    ILP$u8x8$003 = _memd8((void *)U$28);
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_loll((unsigned long long)ILP$u8x8$003);
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_hill((unsigned long long)ILP$u8x8$003);
;** 81	-----------------------    ILP$u8x8$004 = _memd8((void *)((unsigned char (*)[8])U$28+8));
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_loll((unsigned long long)ILP$u8x8$004);
;** 81	-----------------------    flag = (((((((((((__subvec(0u, VEC$u8x4$001) != 0)*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0))*2u+(__subvec(0u, VEC$u8x4$001) != 0))*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0))*2u+(__subvec(0u, VEC$u8x4$001) != 0))*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0)<<20;
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_hill((unsigned long long)ILP$u8x8$004);
;** 81	-----------------------    flag += (((__subvec(0u, VEC$u8x4$001) != 0)*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0)<<16;
;** 81	-----------------------    ILP$u8x8$005 = _memd8((void *)((unsigned char (*)[8])U$28+16));
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_loll((unsigned long long)ILP$u8x8$005);
;** 81	-----------------------    flag += (((__subvec(0u, VEC$u8x4$001) != 0)*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0)<<12;
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_hill((unsigned long long)ILP$u8x8$005);
;** 81	-----------------------    flag += (((__subvec(0u, VEC$u8x4$001) != 0)*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0)<<8;
;** 81	-----------------------    ILP$u8x8$006 = _memd8((void *)((unsigned char (*)[8])U$28+24));
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_loll((unsigned long long)ILP$u8x8$006);
;** 81	-----------------------    flag += (((__subvec(0u, VEC$u8x4$001) != 0)*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(__subvec(3u, VEC$u8x4$001) != 0)<<4;
;** 81	-----------------------    VEC$u8x4$001 = (unsigned char[4])_hill((unsigned long long)ILP$u8x8$006);
;** 81	-----------------------    flag += (((__subvec(0u, VEC$u8x4$001) != 0)*2u+(__subvec(1u, VEC$u8x4$001) != 0))*2u+(__subvec(2u, VEC$u8x4$001) != 0))*2u+(unsigned)(__subvec(3u, VEC$u8x4$001) != 0);
;** 84	-----------------------    U$172[3] = flag>>24;
;** 85	-----------------------    U$172[2] = flag>>16;
;** 86	-----------------------    U$172[1] = flag>>8;
;** 87	-----------------------    *U$172++{4} = flag;
;** 88	-----------------------    U$28 += 32;
;** 77	-----------------------    if ( L$2 = L$2-1 ) goto g8;
;** 81	-----------------------    K$11 = 32u;
$C$DW$L$convert_uint8_to_packedBits$4$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c
;*      Loop source line                 : 77
;*      Loop opening brace source line   : 77
;*      Loop closing brace source line   : 90
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 29
;*      Unpartitioned Resource Bound     : 29
;*      Partitioned Resource Bound(*)    : 29
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                    16       16     
;*      .S units                    29*      28     
;*      .D units                    17       17     
;*      .M units                     0        0     
;*      .X cross paths               7        6     
;*      .T address paths             6        6     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           1        1     (.L or .S unit)
;*      Addition ops (.LSD)         20       20     (.L or .S or .D unit)
;*      Bound(.L .S .LS)            23       23     
;*      Bound(.L .S .D .LS .LSD)    28       28     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 29 Did not find schedule
;*         ii = 30 Did not find schedule
;*         ii = 31 Did not find schedule
;*         ii = 32 Did not find schedule
;*         ii = 33 Did not find schedule
;*         ii = 34 Did not find schedule
;*         ii = 35 Did not find schedule
;*         ii = 36 Did not find schedule
;*         ii = 37 Did not find schedule
;*         ii = 39 Did not find schedule
;*         ii = 41 Did not find schedule
;*         ii = 43 Schedule found with 1 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |                  *             |*               *               |
;*       1: |        **        *             |*               *               |
;*       2: |        **        *             |*   **          *               |
;*       3: |        **        *             |*   **  **      *               |
;*       4: |    **  **        *             |*   **  **      *               |
;*       5: |    **  **        *             |*   **  **      *               |
;*       6: |   ***  **        *             |*   **  **      *               |
;*       7: |   *******        *             |*   **  **      *               |
;*       8: |   *******      * *             |*   **  **      *               |
;*       9: |   *******      ***             |*   **  **      *               |
;*      10: |   *******      ***             |*   *** **      *               |
;*      11: |   *******      ***             |*   ******      **              |
;*      12: |   *******      * **            |*   ******      *  *            |
;*      13: |   *******      ****            |*   ******      ** *            |
;*      14: |   *******      ***             |*   ******      ****            |
;*      15: |   *******       ***            |*   ******      ****            |
;*      16: |   *******      * **            |*   ******      ****            |
;*      17: |   *******      * *             |*   ******      * ***           |
;*      18: |   *******       **             |*   ******      *****           |
;*      19: |   *******      ***             |*   ******      ** ***          |
;*      20: |   *******      * *             |*   ******      **** *          |
;*      21: |   ******       ***             |*   ******      ******          |
;*      22: |   *******      ***             |*   ******      *** **          |
;*      23: |   *******      ***             |*   *** **      *** **          |
;*      24: |   *******       **             |*   ***  *      ******          |
;*      25: |   *******       **             |*   **** *      ** ***          |
;*      26: |   *******       **             |*   ******      ** ***          |
;*      27: |   *******       **             |*   ** **       *****           |
;*      28: |   *******        *             |*   *****       * ***           |
;*      29: |   *******        *             |*   ******      * *             |
;*      30: |   ***** *        *             |*   ******      * *             |
;*      31: |   ***   *        *             |*   ******      * *             |
;*      32: |   ***            *             |*   ******      **              |
;*      33: |   **             *             |*   ******      *               |
;*      34: |   *              *             |*   *****       *               |
;*      35: |   *              *             |*   ** *        *               |
;*      36: |   *              *             |*   *           *               |
;*      37: |   *              *             |*   *           *               |
;*      38: |    *             *             |*   *           *               |
;*      39: |   **             *             |*   *           *               |
;*      40: |   *              *             |*   **          *               |
;*      41: |   *              *             |*   *           *               |
;*      42: |                  *             |*   *           *               |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop is interruptible
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*
;*      Minimum safe trip count       : 1
;*
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 0 + trip_cnt * 43        
;*----------------------------------------------------------------------------*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C127:
;*   0              LDNDW   .D1T1   *A18++(32),A9:A8  ; |81|  ^ 
;*   1              LDNDW   .D1T2   *-A18(24),B5:B4   ; |81| 
;*   2              LDNDW   .D1T2   *-A18(16),B9:B8   ; |81| 
;*   3              LDNDW   .D1T1   *-A18(8),A5:A4    ; |81| 
;*   4              NOP             1
;*   5              EXTU    .S1     A8,16,24,A3       ; |81|  ^ 
;*   6              DADD    .L1X    0,B5:B4,A7:A6     ; |81| Define a twin register
;*     ||           EXTU    .S1     A3,24,24,A3       ; |81|  ^ 
;*     ||           EXTU    .S2     B5,16,24,B4       ; |81| 
;*   7              CMPEQ   .L1     A3,0,A16          ; |81|  ^ 
;*     ||           EXTU    .S1     A8,8,24,A3        ; |81| 
;*     ||           EXTU    .S2     B4,24,24,B4       ; |81| 
;*   8              EXTU    .S1     A8,24,24,A17      ; |81| 
;*     ||           XOR     .L1     1,A16,A16         ; |81|  ^ 
;*     ||           EXTU    .S2     B5,24,24,B4       ; |81| 
;*     ||           CMPEQ   .L2     B4,0,B5           ; |81| 
;*   9              CMPEQ   .L1     A17,0,A17         ; |81| 
;*     ||           EXTU    .S1     A3,24,24,A3       ; |81| 
;*     ||           CMPEQ   .L2     B4,0,B4           ; |81| 
;*     ||           XOR     .D2     1,B5,B6           ; |81| 
;*     ||           EXTU    .S2     B8,16,24,B5       ; |81| 
;*  10              XOR     .D1     1,A17,A17         ; |81| 
;*     ||           CMPEQ   .L1     A3,0,A3           ; |81| 
;*     ||           SHRU    .S1     A8,24,A8          ; |81| 
;*     ||           XOR     .D2     1,B4,B7           ; |81| 
;*     ||           EXTU    .S2     B5,24,24,B17      ; |81| 
;*     ||           DADD    .L2X    0,A5:A4,B5:B4     ; |81| Define a twin register
;*  11              ADDAH   .D1     A16,A17,A19       ; |81|  ^ 
;*     ||           CMPEQ   .L1     A8,0,A16          ; |81| 
;*     ||           EXTU    .S1     A9,24,24,A8       ; |81| 
;*     ||           ADDAH   .D2     B6,B7,B6          ; |81| 
;*     ||           CMPEQ   .L2     B17,0,B7          ; |81| 
;*     ||           EXTU    .S2     B9,16,24,B19      ; |81| 
;*  12              XOR     .D1     1,A3,A3           ; |81| 
;*     ||           CMPEQ   .L1     A8,0,A17          ; |81| 
;*     ||           EXTU    .S1     A9,16,24,A8       ; |81| 
;*     ||           XOR     .L2     1,B7,B17          ; |81| 
;*     ||           EXTU    .S2     B8,8,24,B7        ; |81| 
;*  13              ADDAH   .D1     A3,A19,A16        ; |81|  ^ 
;*     ||           XOR     .L1     1,A16,A3          ; |81| 
;*     ||           EXTU    .S1     A8,24,24,A8       ; |81| 
;*     ||           EXTU    .S2     B8,24,24,B18      ; |81| 
;*  14              ADDAH   .D1     A3,A16,A19        ; |81|  ^ 
;*     ||           CMPEQ   .L1     A8,0,A3           ; |81| 
;*     ||           EXTU    .S1     A9,8,24,A8        ; |81| 
;*     ||           CMPEQ   .L2     B18,0,B18         ; |81| 
;*     ||           EXTU    .S2     B19,24,24,B19     ; |81| 
;*  15              XOR     .D1     1,A17,A3          ; |81| 
;*     ||           XOR     .L1     1,A3,A8           ; |81| 
;*     ||           EXTU    .S1     A8,24,24,A16      ; |81| 
;*     ||           XOR     .D2     1,B18,B18         ; |81| 
;*     ||           EXTU    .S2     B7,24,24,B7       ; |81| 
;*     ||           CMPEQ   .L2     B19,0,B19         ; |81| 
;*  16              ADDAH   .D1     A3,A19,A16        ; |81|  ^ 
;*     ||           CMPEQ   .L1     A16,0,A3          ; |81| 
;*     ||           SHRU    .S1     A9,24,A9          ; |81| 
;*     ||           ADDAH   .D2     B17,B18,B18       ; |81| 
;*     ||           CMPEQ   .L2     B7,0,B7           ; |81| 
;*     ||           EXTU    .S2     B4,16,24,B20      ; |81| 
;*  17              ADDAH   .D1     A8,A16,A17        ; |81|  ^ 
;*     ||           CMPEQ   .L1     A9,0,A8           ; |81| 
;*     ||           EXTU    .S1     A6,16,24,A9       ; |81| 
;*     ||           XOR     .L2     1,B7,B17          ; |81| 
;*     ||           XOR     .D2     1,B19,B19         ; |81| 
;*     ||           EXTU    .S2     B9,8,24,B7        ; |81| 
;*  18              XOR     .D1     1,A3,A3           ; |81| 
;*     ||           XOR     .L1     1,A8,A16          ; |81| 
;*     ||           EXTU    .S1     A6,24,24,A8       ; |81| 
;*     ||           ADDAH   .D2     B17,B18,B21       ; |81| 
;*     ||           EXTU    .S2     B9,24,24,B17      ; |81| 
;*  19              ADDAH   .D1     A3,A17,A9         ; |81|  ^ 
;*     ||           CMPEQ   .L1     A8,0,A3           ; |81| 
;*     ||           EXTU    .S1     A9,24,24,A8       ; |81| 
;*     ||           CMPEQ   .L2     B17,0,B17         ; |81| 
;*     ||           EXTU    .S2     B20,24,24,B18     ; |81| 
;*  20              ADDAH   .D1     A16,A9,A16        ; |81|  ^ 
;*     ||           CMPEQ   .L1     A8,0,A8           ; |81| 
;*     ||           EXTU    .S1     A7,8,24,A17       ; |81| 
;*     ||           XOR     .D2     1,B17,B17         ; |81| 
;*     ||           CMPEQ   .L2     B18,0,B20         ; |81| 
;*     ||           EXTU    .S2     B4,8,24,B18       ; |81| 
;*  21              XOR     .D1     1,A3,A8           ; |81| 
;*     ||           XOR     .L1     1,A8,A9           ; |81| 
;*     ||           EXTU    .S1     A6,8,24,A3        ; |81| 
;*     ||           ADDAH   .D2     B19,B17,B17       ; |81| 
;*     ||           EXTU    .S2     B4,24,24,B4       ; |81| 
;*     ||           XOR     .L2     1,B20,B20         ; |81| 
;*  22              ADDAH   .D1     A8,A16,A8         ; |81|  ^ 
;*     ||           MV      .L1X    B6,A17            ; |81| Define a twin register
;*     ||           EXTU    .S1     A17,24,24,A16     ; |81| 
;*     ||           EXTU    .S2     B7,24,24,B4       ; |81| 
;*     ||           CMPEQ   .L2     B4,0,B6           ; |81| 
;*  23              ADDAH   .D1     A9,A8,A8          ; |81|  ^ 
;*     ||           EXTU    .S1     A3,24,24,A3       ; |81| 
;*     ||           CMPEQ   .L1     A16,0,A9          ; |81| 
;*     ||           SHRU    .S2     B8,24,B4          ; |81| 
;*     ||           CMPEQ   .L2     B4,0,B6           ; |81| 
;*     ||           XOR     .D2     1,B6,B19          ; |81| 
;*  24              CMPEQ   .L1     A3,0,A3           ; |81| 
;*     ||           XOR     .D1     1,A9,A9           ; |81| 
;*     ||           SHRU    .S1     A7,24,A7          ; |81| 
;*     ||           CMPEQ   .L2     B4,0,B4           ; |81| 
;*     ||           XOR     .D2     1,B6,B7           ; |81| 
;*     ||           EXTU    .S2     B18,24,24,B6      ; |81| 
;*  25              XOR     .D1     1,A3,A6           ; |81| 
;*     ||           SHRU    .S1     A6,24,A3          ; |81| 
;*     ||           CMPEQ   .L1     A7,0,A7           ; |81| 
;*     ||           XOR     .D2     1,B4,B4           ; |81| 
;*     ||           CMPEQ   .L2     B6,0,B8           ; |81| 
;*     ||           EXTU    .S2     B5,16,24,B6       ; |81| 
;*  26              ADDAH   .D1     A6,A8,A3          ; |81|  ^ 
;*     ||           CMPEQ   .L1     A3,0,A6           ; |81| 
;*     ||           ADDAH   .D2     B4,B21,B8         ; |81| 
;*     ||           SHRU    .S1X    B9,24,A8          ; |81| 
;*     ||           XOR     .L2     1,B8,B18          ; |81| 
;*     ||           EXTU    .S2     B6,24,24,B4       ; |81| 
;*  27              ADDAH   .D1     A9,A17,A4         ; |81| 
;*     ||           ADDAH   .D2     B7,B17,B7         ; |81| 
;*     ||           CMPEQ   .L1     A8,0,A8           ; |81| 
;*     ||           SHRU    .S1     A4,24,A9          ; |81| 
;*     ||           CMPEQ   .L2     B4,0,B6           ; |81| 
;*     ||           EXTU    .S2     B5,8,24,B4        ; |81| 
;*  28              XOR     .S1     1,A6,A7           ; |81| 
;*     ||           XOR     .D1     1,A7,A6           ; |81| 
;*     ||           ADDAH   .D2     B20,B19,B9        ; |81| 
;*     ||           CMPEQ   .L1     A9,0,A9           ; |81| 
;*     ||           EXTU    .S2     B5,24,24,B5       ; |81| 
;*     ||           XOR     .L2     1,B6,B6           ; |81| 
;*  29              ADDAH   .D1     A7,A3,A7          ; |81|  ^ 
;*     ||           SHL     .S1X    B8,12,A3          ; |81| 
;*     ||           XOR     .D2X    1,A8,B8           ; |81| 
;*     ||           CMPEQ   .L2     B5,0,B4           ; |81| 
;*     ||           EXTU    .S2     B4,24,24,B5       ; |81| 
;*  30              SHL     .S1     A7,20,A5          ; |81|  ^ 
;*     ||           ADDAH   .D1     A6,A4,A4          ; |81| 
;*     ||           ADDAH   .D2     B8,B7,B8          ; |81| 
;*     ||           CMPEQ   .L2     B5,0,B7           ; |81| 
;*     ||           SHRU    .S2X    A5,24,B5          ; |81| 
;*  31              SHL     .S1     A4,16,A4          ; |81| 
;*     ||           ADDAH   .D2     B18,B9,B9         ; |81| 
;*     ||           XOR     .L2X    1,A9,B17          ; |81| 
;*     ||           XOR     .S2     1,B4,B4           ; |81| 
;*  32              ADD     .L1     A4,A5,A4          ; |81|  ^ 
;*     ||           SHL     .S2     B8,8,B8           ; |81| 
;*     ||           ADDAH   .D2     B17,B9,B9         ; |81| 
;*     ||           CMPEQ   .L2     B5,0,B5           ; |81| 
;*  33              ADD     .L1     A3,A4,A3          ; |81|  ^ 
;*     ||           SHL     .S2     B9,4,B7           ; |81| 
;*     ||           ADDAH   .D2     B6,B4,B4          ; |81| 
;*     ||           XOR     .L2     1,B7,B6           ; |81| 
;*  34              ADD     .L1X    B8,A3,A3          ; |81|  ^ 
;*     ||           ADDAH   .D2     B6,B4,B4          ; |81| 
;*     ||           XOR     .L2     1,B5,B5           ; |81| 
;*  35              ADD     .L1X    B7,A3,A3          ; |81|  ^ 
;*     ||           ADDAH   .D2     B5,B4,B4          ; |81| 
;*  36      [ B0]   SUB     .L2     B0,1,B0           ; |77| 
;*  37              ADD     .L1X    A3,B4,A4          ; |81|  ^ 
;*     ||           ADD     .L2X    A3,B4,B4          ; |81| Define a twin register
;*     ||   [ B0]   B       .S1     $C$C127           ; |77| 
;*  38              SHRU    .S1     A4,8,A3           ; |86| 
;*  39              SHRU    .S1     A4,24,A3          ; |84| 
;*     ||           SHRU    .S2X    A4,16,B5          ; |85|  ^ 
;*     ||           STB     .D2T1   A3,*+B16(1)       ; |86| 
;*  40              STB     .D2T2   B5,*+B16(2)       ; |85|  ^ 
;*  41              STB     .D2T1   A3,*+B16(3)       ; |84| 
;*  42              STB     .D2T2   B4,*B16++(4)      ; |87|  ^ 
;*  43              ; BRANCHCC OCCURS {$C$C127}       ; |77| 
;*----------------------------------------------------------------------------*
$C$L2:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L3:    ; PIPED LOOP KERNEL
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 88,column 13,is_stmt,isa 0
$C$DW$L$convert_uint8_to_packedBits$6$B:
;          EXCLUSIVE CPU CYCLES: 43
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 81,column 17,is_stmt,isa 0
           LDNDW   .D1T1   *A18++(32),A9:A8  ; |81| <0,0>  ^ 
           LDNDW   .D1T2   *-A18(24),B5:B4   ; |81| <0,1> 
           LDNDW   .D1T2   *-A18(16),B9:B8   ; |81| <0,2> 
           LDNDW   .D1T1   *-A18(8),A5:A4    ; |81| <0,3> 
           NOP             1
           EXTU    .S1     A8,16,24,A3       ; |81| <0,5>  ^ 

           DADD    .L1X    0,B5:B4,A7:A6     ; |81| <0,6> Define a twin register
||         EXTU    .S2     B5,16,24,B4       ; |81| <0,6> 
||         EXTU    .S1     A3,24,24,A3       ; |81| <0,6>  ^ 

           EXTU    .S2     B4,24,24,B4       ; |81| <0,7> 
||         CMPEQ   .L1     A3,0,A16          ; |81| <0,7>  ^ 
||         EXTU    .S1     A8,8,24,A3        ; |81| <0,7> 

           CMPEQ   .L2     B4,0,B5           ; |81| <0,8> 
||         EXTU    .S2     B5,24,24,B4       ; |81| <0,8> 
||         XOR     .L1     1,A16,A16         ; |81| <0,8>  ^ 
||         EXTU    .S1     A8,24,24,A17      ; |81| <0,8> 

           XOR     .D2     1,B5,B6           ; |81| <0,9> 
||         EXTU    .S2     B8,16,24,B5       ; |81| <0,9> 
||         CMPEQ   .L2     B4,0,B4           ; |81| <0,9> 
||         CMPEQ   .L1     A17,0,A17         ; |81| <0,9> 
||         EXTU    .S1     A3,24,24,A3       ; |81| <0,9> 

           DADD    .L2X    0,A5:A4,B5:B4     ; |81| <0,10> Define a twin register
||         XOR     .D2     1,B4,B7           ; |81| <0,10> 
||         EXTU    .S2     B5,24,24,B17      ; |81| <0,10> 
||         SHRU    .S1     A8,24,A8          ; |81| <0,10> 
||         XOR     .D1     1,A17,A17         ; |81| <0,10> 
||         CMPEQ   .L1     A3,0,A3           ; |81| <0,10> 

           CMPEQ   .L2     B17,0,B7          ; |81| <0,11> 
||         ADDAH   .D2     B6,B7,B6          ; |81| <0,11> 
||         EXTU    .S2     B9,16,24,B19      ; |81| <0,11> 
||         EXTU    .S1     A9,24,24,A8       ; |81| <0,11> 
||         CMPEQ   .L1     A8,0,A16          ; |81| <0,11> 
||         ADDAH   .D1     A16,A17,A19       ; |81| <0,11>  ^ 

           XOR     .L2     1,B7,B17          ; |81| <0,12> 
||         EXTU    .S2     B8,8,24,B7        ; |81| <0,12> 
||         CMPEQ   .L1     A8,0,A17          ; |81| <0,12> 
||         XOR     .D1     1,A3,A3           ; |81| <0,12> 
||         EXTU    .S1     A9,16,24,A8       ; |81| <0,12> 

           EXTU    .S2     B8,24,24,B18      ; |81| <0,13> 
||         XOR     .L1     1,A16,A3          ; |81| <0,13> 
||         EXTU    .S1     A8,24,24,A8       ; |81| <0,13> 
||         ADDAH   .D1     A3,A19,A16        ; |81| <0,13>  ^ 

           CMPEQ   .L2     B18,0,B18         ; |81| <0,14> 
||         EXTU    .S2     B19,24,24,B19     ; |81| <0,14> 
||         CMPEQ   .L1     A8,0,A3           ; |81| <0,14> 
||         ADDAH   .D1     A3,A16,A19        ; |81| <0,14>  ^ 
||         EXTU    .S1     A9,8,24,A8        ; |81| <0,14> 

           XOR     .D2     1,B18,B18         ; |81| <0,15> 
||         CMPEQ   .L2     B19,0,B19         ; |81| <0,15> 
||         EXTU    .S2     B7,24,24,B7       ; |81| <0,15> 
||         XOR     .L1     1,A3,A8           ; |81| <0,15> 
||         EXTU    .S1     A8,24,24,A16      ; |81| <0,15> 
||         XOR     .D1     1,A17,A3          ; |81| <0,15> 

           ADDAH   .D2     B17,B18,B18       ; |81| <0,16> 
||         CMPEQ   .L2     B7,0,B7           ; |81| <0,16> 
||         EXTU    .S2     B4,16,24,B20      ; |81| <0,16> 
||         SHRU    .S1     A9,24,A9          ; |81| <0,16> 
||         CMPEQ   .L1     A16,0,A3          ; |81| <0,16> 
||         ADDAH   .D1     A3,A19,A16        ; |81| <0,16>  ^ 

           XOR     .L2     1,B7,B17          ; |81| <0,17> 
||         XOR     .D2     1,B19,B19         ; |81| <0,17> 
||         EXTU    .S2     B9,8,24,B7        ; |81| <0,17> 
||         CMPEQ   .L1     A9,0,A8           ; |81| <0,17> 
||         EXTU    .S1     A6,16,24,A9       ; |81| <0,17> 
||         ADDAH   .D1     A8,A16,A17        ; |81| <0,17>  ^ 

           ADDAH   .D2     B17,B18,B21       ; |81| <0,18> 
||         EXTU    .S2     B9,24,24,B17      ; |81| <0,18> 
||         XOR     .L1     1,A8,A16          ; |81| <0,18> 
||         XOR     .D1     1,A3,A3           ; |81| <0,18> 
||         EXTU    .S1     A6,24,24,A8       ; |81| <0,18> 

           CMPEQ   .L2     B17,0,B17         ; |81| <0,19> 
||         EXTU    .S2     B20,24,24,B18     ; |81| <0,19> 
||         CMPEQ   .L1     A8,0,A3           ; |81| <0,19> 
||         EXTU    .S1     A9,24,24,A8       ; |81| <0,19> 
||         ADDAH   .D1     A3,A17,A9         ; |81| <0,19>  ^ 

           XOR     .D2     1,B17,B17         ; |81| <0,20> 
||         CMPEQ   .L2     B18,0,B20         ; |81| <0,20> 
||         EXTU    .S2     B4,8,24,B18       ; |81| <0,20> 
||         CMPEQ   .L1     A8,0,A8           ; |81| <0,20> 
||         ADDAH   .D1     A16,A9,A16        ; |81| <0,20>  ^ 
||         EXTU    .S1     A7,8,24,A17       ; |81| <0,20> 

           XOR     .L2     1,B20,B20         ; |81| <0,21> 
||         ADDAH   .D2     B19,B17,B17       ; |81| <0,21> 
||         XOR     .L1     1,A8,A9           ; |81| <0,21> 
||         EXTU    .S2     B4,24,24,B4       ; |81| <0,21> 
||         XOR     .D1     1,A3,A8           ; |81| <0,21> 
||         EXTU    .S1     A6,8,24,A3        ; |81| <0,21> 

           MV      .L1X    B6,A17            ; |81| <0,22> Define a twin register
||         CMPEQ   .L2     B4,0,B6           ; |81| <0,22> 
||         EXTU    .S2     B7,24,24,B4       ; |81| <0,22> 
||         ADDAH   .D1     A8,A16,A8         ; |81| <0,22>  ^ 
||         EXTU    .S1     A17,24,24,A16     ; |81| <0,22> 

           XOR     .D2     1,B6,B19          ; |81| <0,23> 
||         CMPEQ   .L2     B4,0,B6           ; |81| <0,23> 
||         ADDAH   .D1     A9,A8,A8          ; |81| <0,23>  ^ 
||         SHRU    .S2     B8,24,B4          ; |81| <0,23> 
||         CMPEQ   .L1     A16,0,A9          ; |81| <0,23> 
||         EXTU    .S1     A3,24,24,A3       ; |81| <0,23> 

           XOR     .D2     1,B6,B7           ; |81| <0,24> 
||         XOR     .D1     1,A9,A9           ; |81| <0,24> 
||         CMPEQ   .L2     B4,0,B4           ; |81| <0,24> 
||         EXTU    .S2     B18,24,24,B6      ; |81| <0,24> 
||         SHRU    .S1     A7,24,A7          ; |81| <0,24> 
||         CMPEQ   .L1     A3,0,A3           ; |81| <0,24> 

           XOR     .D2     1,B4,B4           ; |81| <0,25> 
||         CMPEQ   .L2     B6,0,B8           ; |81| <0,25> 
||         XOR     .D1     1,A3,A6           ; |81| <0,25> 
||         EXTU    .S2     B5,16,24,B6       ; |81| <0,25> 
||         CMPEQ   .L1     A7,0,A7           ; |81| <0,25> 
||         SHRU    .S1     A6,24,A3          ; |81| <0,25> 

           XOR     .L2     1,B8,B18          ; |81| <0,26> 
||         ADDAH   .D2     B4,B21,B8         ; |81| <0,26> 
||         EXTU    .S2     B6,24,24,B4       ; |81| <0,26> 
||         ADDAH   .D1     A6,A8,A3          ; |81| <0,26>  ^ 
||         CMPEQ   .L1     A3,0,A6           ; |81| <0,26> 
||         SHRU    .S1X    B9,24,A8          ; |81| <0,26> 

           CMPEQ   .L2     B4,0,B6           ; |81| <0,27> 
||         ADDAH   .D2     B7,B17,B7         ; |81| <0,27> 
||         EXTU    .S2     B5,8,24,B4        ; |81| <0,27> 
||         ADDAH   .D1     A9,A17,A4         ; |81| <0,27> 
||         SHRU    .S1     A4,24,A9          ; |81| <0,27> 
||         CMPEQ   .L1     A8,0,A8           ; |81| <0,27> 

           XOR     .L2     1,B6,B6           ; |81| <0,28> 
||         ADDAH   .D2     B20,B19,B9        ; |81| <0,28> 
||         CMPEQ   .L1     A9,0,A9           ; |81| <0,28> 
||         EXTU    .S2     B5,24,24,B5       ; |81| <0,28> 
||         XOR     .S1     1,A6,A7           ; |81| <0,28> 
||         XOR     .D1     1,A7,A6           ; |81| <0,28> 

           SHL     .S1X    B8,12,A3          ; |81| <0,29> 
||         CMPEQ   .L2     B5,0,B4           ; |81| <0,29> 
||         EXTU    .S2     B4,24,24,B5       ; |81| <0,29> 
||         XOR     .D2X    1,A8,B8           ; |81| <0,29> 
||         ADDAH   .D1     A7,A3,A7          ; |81| <0,29>  ^ 

           SHRU    .S2X    A5,24,B5          ; |81| <0,30> 
||         CMPEQ   .L2     B5,0,B7           ; |81| <0,30> 
||         ADDAH   .D2     B8,B7,B8          ; |81| <0,30> 
||         SHL     .S1     A7,20,A5          ; |81| <0,30>  ^ 
||         ADDAH   .D1     A6,A4,A4          ; |81| <0,30> 

           XOR     .L2X    1,A9,B17          ; |81| <0,31> 
||         XOR     .S2     1,B4,B4           ; |81| <0,31> 
||         ADDAH   .D2     B18,B9,B9         ; |81| <0,31> 
||         SHL     .S1     A4,16,A4          ; |81| <0,31> 

           CMPEQ   .L2     B5,0,B5           ; |81| <0,32> 
||         ADDAH   .D2     B17,B9,B9         ; |81| <0,32> 
||         SHL     .S2     B8,8,B8           ; |81| <0,32> 
||         ADD     .L1     A4,A5,A4          ; |81| <0,32>  ^ 

           SHL     .S2     B9,4,B7           ; |81| <0,33> 
||         ADD     .L1     A3,A4,A3          ; |81| <0,33>  ^ 
||         XOR     .L2     1,B7,B6           ; |81| <0,33> 
||         ADDAH   .D2     B6,B4,B4          ; |81| <0,33> 

           ADD     .L1X    B8,A3,A3          ; |81| <0,34>  ^ 
||         XOR     .L2     1,B5,B5           ; |81| <0,34> 
||         ADDAH   .D2     B6,B4,B4          ; |81| <0,34> 

           ADD     .L1X    B7,A3,A3          ; |81| <0,35>  ^ 
||         ADDAH   .D2     B5,B4,B4          ; |81| <0,35> 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 77,column 21,is_stmt,isa 0
   [ B0]   SUB     .L2     B0,1,B0           ; |77| <0,36> 

   [ B0]   B       .S1     $C$L3             ; |77| <0,37> 
||         ADD     .L2X    A3,B4,B4          ; |81| <0,37> Define a twin register
||         ADD     .L1X    A3,B4,A4          ; |81| <0,37>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 86,column 13,is_stmt,isa 0
           SHRU    .S1     A4,8,A3           ; |86| <0,38> 

           STB     .D2T1   A3,*+B16(1)       ; |86| <0,39> 
||         SHRU    .S1     A4,24,A3          ; |84| <0,39> 
||         SHRU    .S2X    A4,16,B5          ; |85| <0,39>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 85,column 13,is_stmt,isa 0
           STB     .D2T2   B5,*+B16(2)       ; |85| <0,40>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 84,column 13,is_stmt,isa 0
           STB     .D2T1   A3,*+B16(3)       ; |84| <0,41> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 87,column 13,is_stmt,isa 0
           STB     .D2T2   B4,*B16++(4)      ; |87| <0,42>  ^ 
$C$DW$L$convert_uint8_to_packedBits$6$E:
;** --------------------------------------------------------------------------*
$C$L4:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 77,column 21,is_stmt,isa 0
$C$DW$L$convert_uint8_to_packedBits$8$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g10:
;** 92	-----------------------    if ( !wordMask ) goto g14;

   [!A0]   BNOP    .S1     $C$L9,5           ; |92| 
|| [ A0]   MVK     .L2     0x1,B2

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 92,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  92 | if( wordMask ) {                                                       
;  93 |     flag = 0;                                                          
;----------------------------------------------------------------------
           ; BRANCHCC OCCURS {$C$L9}         ; |92| 
$C$DW$L$convert_uint8_to_packedBits$8$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 95,column 18,is_stmt,isa 0
;----------------------------------------------------------------------
;  95 | for( m = 0; m < 32; m++ ) {                                            
;----------------------------------------------------------------------
$C$DW$L$convert_uint8_to_packedBits$9$B:
;**  	-----------------------    U$172 = &mask[n];
;**  	-----------------------    U$198 = &img[k];
;**  	-----------------------    U$233 = imageWidth-roundWidth;
;** 95	-----------------------    I$4 = I$3 = I$2 = I$1 = m = 0;
;**  	-----------------------    #pragma MUST_ITERATE(8, 8, 8)
;**  	-----------------------    // LOOP BELOW UNROLLED BY FACTOR(4)
;**  	-----------------------    #pragma LOOP_FLAGS(4098u)
;**	-----------------------g12:
;** 96	-----------------------    VEC$u8x4$002 = _mem4((void *)U$198);
;** 96	-----------------------    I$4 += (unsigned)(__subvec(0u, VEC$u8x4$002) != 0)<<31-m;
;** 96	-----------------------    I$3 += (unsigned)(__subvec(1u, VEC$u8x4$002) != 0)<<30-m;
;** 96	-----------------------    I$2 += (unsigned)(__subvec(2u, VEC$u8x4$002) != 0)<<29-m;
;** 96	-----------------------    I$1 += (unsigned)(__subvec(3u, VEC$u8x4$002) != 0)<<28-m;
;** 95	-----------------------    U$198 += 4;
;** 95	-----------------------    if ( (m += 4) < 32 ) goto g12;
;** 99	-----------------------    k += U$233;
$C$DW$L$convert_uint8_to_packedBits$9$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c
;*      Loop source line                 : 95
;*      Loop opening brace source line   : 95
;*      Loop closing brace source line   : 97
;*      Loop Unroll Multiple             : 4x
;*      Known Minimum Trip Count         : 8                    
;*      Known Maximum Trip Count         : 8                    
;*      Known Max Trip Count Factor      : 8
;*      Loop Carried Dependency Bound(^) : 5
;*      Unpartitioned Resource Bound     : 7
;*      Partitioned Resource Bound(*)    : 7
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     2        3     
;*      .S units                     6        4     
;*      .D units                     1        0     
;*      .M units                     0        0     
;*      .X cross paths               0        4     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        2     (.L or .S unit)
;*      Addition ops (.LSD)         10       11     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             4        5     
;*      Bound(.L .S .D .LS .LSD)     7*       7*    
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 7  Schedule found with 3 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   *  ****      *****           |* * *** **      *** *           |
;*       1: |   ** ****      *****           |* * ******      *****           |
;*       2: |   *******      *****           |* * ******      ******          |
;*       3: |   *******      *****           |* * ******      ******          |
;*       4: |   ** ****      *****           |* * ******      *** *           |
;*       5: |   *  ****      *****           |* * *** **      *** *           |
;*       6: |   *  ****      *****           |*** ******      *** *           |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 2
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh56
;*
;*      Minimum safe trip count       : 1 (after unrolling)
;*      Min. prof. trip count  (est.) : 3 (after unrolling)
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 14 + min_trip_cnt * 7 = 70        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,B2
;*                  MV              A19,B5
;*                  MV              B2,B0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C58:
;*   6              ADD     .D1     4,A20,A20
;*   7      [ B2]   LDNW    .D1T1   *-A20(4),A16      ; |96|  ^ 
;*   8              NOP             3
;*  11              ADD     .L2     4,B5,B5           ; |95| 
;*  12              MV      .D2X    A16,B7            ; |96|  ^ Define a twin register
;*     ||           EXTU    .S1     A16,16,24,A3      ; |96|  ^ 
;*     ||           CMPLT   .L2     B5,B17,B1         ; |95| 
;*  13              EXTU    .S2     B7,24,24,B4       ; |96|  ^ 
;*     ||           EXTU    .S1     A3,24,24,A3       ; |96|  ^ 
;*     ||   [!B1]   ZERO    .L2     B2                ; |95|  ^ 
;*  14              CMPEQ   .L2     B4,0,B19          ; |96|  ^ 
;*     ||           CMPEQ   .L1     A3,0,A4           ; |96|  ^ 
;*     ||           EXTU    .S1     A16,8,24,A3       ; |96|  ^ 
;*     ||           SHRU    .S2X    A16,24,B7         ; |96| 
;*     ||           MV      .D2     B2,B4             ; |95| Split a long life(pre-sched)
;*  15              SUB     .S2X    B9,A19,B19        ; |96| 
;*     ||           XOR     .D2     1,B19,B21         ; |96|  ^ 
;*     ||           SUB     .L1     A9,A19,A4         ; |96| 
;*     ||           XOR     .D1     1,A4,A5           ; |96|  ^ 
;*     ||           EXTU    .S1     A3,24,24,A3       ; |96|  ^ 
;*     ||           CMPEQ   .L2     B7,0,B7           ; |96| 
;*  16              SHL     .S2     B21,B19,B21       ; |96|  ^ 
;*     ||           SHL     .S1     A5,A4,A5          ; |96|  ^ 
;*     ||           SUB     .D1     A8,A19,A3         ; |96| 
;*     ||           CMPEQ   .L1     A3,0,A4           ; |96|  ^ 
;*     ||           SUB     .L2X    B18,A19,B7        ; |96| 
;*     ||           XOR     .D2     1,B7,B19          ; |96| 
;*  17              ADD     .L2     B21,B6,B6         ; |96|  ^ 
;*     ||           ADD     .L1     A5,A18,A18        ; |96|  ^ 
;*     ||           XOR     .S1     1,A4,A4           ; |96|  ^ 
;*     ||           SHL     .S2     B19,B7,B7         ; |96| 
;*     ||   [ B2]   SPWBR           $C$C58
;*  18              SHL     .S1     A4,A3,A3          ; |96|  ^ 
;*     ||           ADD     .S2     B7,B8,B8          ; |96| 
;*     ||   [ B0]   MV      .L1     A18,A7            ; |95|  ^ 
;*     ||   [ B0]   MV      .D2     B6,B16            ; |95|  ^ 
;*  19              ADD     .D1     A3,A17,A17        ; |96|  ^ 
;*     ||           ADD     .L1     4,A19,A19         ; |95| Define a twin register
;*     ||   [ B0]   MV      .S2     B8,B20            ; |95| 
;*  20      [ B0]   MV      .L1     A17,A6            ; |95|  ^ 
;*     ||           MV      .D2     B4,B0             ; |95|  ^ Split a long life(pre-sched)
;*  21              ; BRANCHCC OCCURS {$C$C58}        ; |95| 
;*
;*       RESTORE CODE
;*
;*                  MV              B20,B8
;*                  MV              A6,A17
;*                  MV              A7,A18
;*                  MV              B16,B6
;*----------------------------------------------------------------------------*
$C$L6:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 15
   [ B2]   SPLOOPW 7       ;21               ; (P) 
;** --------------------------------------------------------------------------*
$C$L7:    ; PIPED LOOP KERNEL
$C$DW$L$convert_uint8_to_packedBits$11$B:
;          EXCLUSIVE CPU CYCLES: 7
           NOP             5

           SPMASK          L1
||         ADD     .L1X    B26,A23,A20

           ADD     .D1     4,A20,A20         ; (P) <0,6> 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 96,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  96 | flag += (img[k + m] > 0) << (31 - m);                                  
;  99 | k += (imageWidth - roundWidth);                                        
; 100 | flag &= wordMask;                                                      
;----------------------------------------------------------------------
   [ B2]   LDNW    .D1T1   *-A20(4),A16      ; |96| (P) <0,7>  ^ 
           NOP             1

           SPMASK          L2
||         SUB     .L2     B25,B24,B22

           SPMASK          L1,S1,L2,S2,D2
||         ZERO    .L1     A19               ; |95| 
||         ZERO    .L2     B6                ; |95| 
||         MVK     .S1     29,A8             ; |96| 
||         MVK     .S2     31,B9             ; |96| 
||         ZERO    .D2     B5                ; |95| 

           SPMASK          L1,S1,D1,S2,D2
||         ADD     .L1X    B27,A22,A24
||         ZERO    .D1     A17               ; |95| 
||         ZERO    .D2     B8                ; |95| 
||         MVK     .S1     30,A9             ; |96| 
||         MVK     .S2     32,B17            ; |95| 
||         ADD     .L2     4,B5,B5           ; |95| (P) <0,11> 

           SPMASK          L1,D1,S2
||         ZERO    .L1     A7                ; |95| 
||         ZERO    .D1     A18               ; |95| 
||         MVK     .S2     28,B18            ; |96| 
||         CMPLT   .L2     B5,B17,B1         ; |95| (P) <0,12> 
||         MV      .D2X    A16,B7            ; |96| (P) <0,12>  ^ Define a twin register
||         EXTU    .S1     A16,16,24,A3      ; |96| (P) <0,12>  ^ 

           SPMASK          L1,D2
||         ZERO    .L1     A6                ; |95| 
||         MV      .D2     B2,B0
|| [!B1]   ZERO    .L2     B2                ; |95| (P) <0,13>  ^ 
||         EXTU    .S2     B7,24,24,B4       ; |96| (P) <0,13>  ^ 
||         EXTU    .S1     A3,24,24,A3       ; |96| (P) <0,13>  ^ 

           MV      .D2     B2,B4             ; |95| <0,14> Split a long life(pre-sched)
||         SHRU    .S2X    A16,24,B7         ; |96| <0,14> 
||         CMPEQ   .L2     B4,0,B19          ; |96| <0,14>  ^ 
||         CMPEQ   .L1     A3,0,A4           ; |96| <0,14>  ^ 
||         EXTU    .S1     A16,8,24,A3       ; |96| <0,14>  ^ 

           SUB     .L1     A9,A19,A4         ; |96| <0,15> 
||         SUB     .S2X    B9,A19,B19        ; |96| <0,15> 
||         CMPEQ   .L2     B7,0,B7           ; |96| <0,15> 
||         XOR     .D2     1,B19,B21         ; |96| <0,15>  ^ 
||         XOR     .D1     1,A4,A5           ; |96| <0,15>  ^ 
||         EXTU    .S1     A3,24,24,A3       ; |96| <0,15>  ^ 

           SUB     .D1     A8,A19,A3         ; |96| <0,16> 
||         SUB     .L2X    B18,A19,B7        ; |96| <0,16> 
||         XOR     .D2     1,B7,B19          ; |96| <0,16> 
||         SHL     .S2     B21,B19,B21       ; |96| <0,16>  ^ 
||         SHL     .S1     A5,A4,A5          ; |96| <0,16>  ^ 
||         CMPEQ   .L1     A3,0,A4           ; |96| <0,16>  ^ 

           SHL     .S2     B19,B7,B7         ; |96| <0,17> 
||         ADD     .L2     B21,B6,B6         ; |96| <0,17>  ^ 
||         ADD     .L1     A5,A18,A18        ; |96| <0,17>  ^ 
||         XOR     .S1     1,A4,A4           ; |96| <0,17>  ^ 

           ADD     .S2     B7,B8,B8          ; |96| <0,18> 
|| [ B0]   MV      .L1     A18,A7            ; |95| <0,18>  ^ 
|| [ B0]   MV      .D2     B6,B16            ; |95| <0,18>  ^ 
||         SHL     .S1     A4,A3,A3          ; |96| <0,18>  ^ 

           ADD     .L1     4,A19,A19         ; |95| <0,19> Define a twin register
|| [ B0]   MV      .S2     B8,B20            ; |95| <0,19> 
||         ADD     .D1     A3,A17,A17        ; |96| <0,19>  ^ 

           SPKERNEL 0,0
||         MV      .D2     B4,B0             ; |95| <0,20>  ^ Split a long life(pre-sched)
|| [ B0]   MV      .L1     A17,A6            ; |95| <0,20>  ^ 

$C$DW$L$convert_uint8_to_packedBits$11$E:
;** --------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$convert_uint8_to_packedBits$13$B:
;          EXCLUSIVE CPU CYCLES: 8
;** 101	-----------------------    C$5 = I$1+I$2+I$3+I$4&wordMask;
;** 101	-----------------------    U$172[3] = C$5>>24;
;** 102	-----------------------    U$172[2] = C$5>>16;
;** 103	-----------------------    U$172[1] = C$5>>8;
;** 104	-----------------------    *U$172 = C$5;
;** 105	-----------------------    n += 4;
;** 95	-----------------------    K$11 = 32u;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 101,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 101 | mask[n + 3] = (flag >> 24) & 0xff;                                     
; 102 | mask[n + 2] = (flag >> 16) & 0xff;                                     
; 103 | mask[n + 1] = (flag >> 8) & 0xff;                                      
; 104 | mask[n + 0] = (flag >> 0) & 0xff;                                      
; 105 | n+=4;                                                                  
; 109 | if( wordMask ) {                                                       
;----------------------------------------------------------------------
           ADD     .L1X    A6,B20,A3         ; |101| 
           ADD     .L1     A7,A3,A3          ; |101| 
           ADD     .L1X    B16,A3,A3         ; |101| 
           AND     .L1     A0,A3,A4          ; |101| 

           STB     .D1T1   A4,*A24           ; |104| 
||         SHRU    .S1     A4,24,A31         ; |101| 

           STB     .D1T1   A31,*+A24(3)      ; |101| 
||         SHRU    .S2X    A4,16,B4          ; |102| 

           STB     .D1T2   B4,*+A24(2)       ; |102| 
||         SHRU    .S1     A4,8,A3           ; |103| 

           STB     .D1T1   A3,*+A24(1)       ; |103| 
||         ADD     .L2     4,B27,B27         ; |105| 
||         ADD     .S2     B22,B26,B26       ; |99| 

$C$DW$L$convert_uint8_to_packedBits$13$E:
;** --------------------------------------------------------------------------*
$C$L9:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 92,column 9,is_stmt,isa 0
$C$DW$L$convert_uint8_to_packedBits$14$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g14:
;** 76	-----------------------    if ( L$1 = L$1-1 ) goto g6;

           SUB     .L2X    A21,1,B0          ; |76| 
||         SUB     .L1     A21,1,A21         ; |76| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 76,column 17,is_stmt,isa 0
   [ B0]   B       .S1     $C$L1             ; |76| 

           MV      .L1X    B0,A1             ; guard predicate rewrite
||         CMPGT   .L2     B24,0,B0          ; |77| 

   [ A1]   MV      .L2     B0,B1             ; guard predicate rewrite
|| [ B0]   ADD     .D2     B24,31,B4

   [ B1]   ADD     .L1X    B26,A23,A18
|| [ B1]   ADD     .L2X    B27,A22,B16

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 88,column 13,is_stmt,isa 0
   [ B1]   CLR     .S2     B4,0,4,B5         ; |88| 
   [ B1]   ADD     .L2     B5,B26,B26        ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 76,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |76| 
$C$DW$L$convert_uint8_to_packedBits$14$E:
;** --------------------------------------------------------------------------*
$C$L10:    
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g15:
;** 110	-----------------------    return wordMask ? (unsigned)roundWidth+K$11 : (unsigned)roundWidth;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 110,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 110 | return (roundWidth + 32);                                              
; 111 | } else {                                                               
; 112 | return (roundWidth);                                                   
;----------------------------------------------------------------------
           ADD     .L2     B23,B24,B4        ; |110| 
   [!A0]   MV      .L2     B24,B4            ; |110| 
           NOP             1
           MV      .L1X    B4,A4             ; |110| 
	.dwcfi	cfa_offset, 0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 114,column 1,is_stmt,isa 0
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_TI_return
           RETNOP  .S2     B3,5              ; |114| 
           ; BRANCH OCCURS {B3}              ; |114| 

$C$DW$185	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$185, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L1:1:1443280057")
	.dwattr $C$DW$185, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$185, DW_AT_TI_begin_line(0x4c)
	.dwattr $C$DW$185, DW_AT_TI_end_line(0x6b)
$C$DW$186	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$186, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$3$B)
	.dwattr $C$DW$186, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$3$E)
$C$DW$187	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$187, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$9$B)
	.dwattr $C$DW$187, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$9$E)
$C$DW$188	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$188, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$4$B)
	.dwattr $C$DW$188, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$4$E)
$C$DW$189	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$189, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$8$B)
	.dwattr $C$DW$189, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$8$E)
$C$DW$190	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$190, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$13$B)
	.dwattr $C$DW$190, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$13$E)
$C$DW$191	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$191, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$14$B)
	.dwattr $C$DW$191, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$14$E)

$C$DW$192	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$192, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L7:2:1443280057")
	.dwattr $C$DW$192, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$192, DW_AT_TI_begin_line(0x5f)
	.dwattr $C$DW$192, DW_AT_TI_end_line(0x61)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$11$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$11$E)
	.dwendtag $C$DW$192


$C$DW$194	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$194, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L3:2:1443280057")
	.dwattr $C$DW$194, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$194, DW_AT_TI_begin_line(0x4d)
	.dwattr $C$DW$194, DW_AT_TI_end_line(0x5a)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$convert_uint8_to_packedBits$6$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$convert_uint8_to_packedBits$6$E)
	.dwendtag $C$DW$194

	.dwendtag $C$DW$185

	.dwattr $C$DW$150, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$150, DW_AT_TI_end_line(0x72)
	.dwattr $C$DW$150, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$150

	.sect	".text"
	.clink
	.global	blobAnalysis_malloc

$C$DW$196	.dwtag  DW_TAG_subprogram, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$196, DW_AT_low_pc(blobAnalysis_malloc)
	.dwattr $C$DW$196, DW_AT_high_pc(0x00)
	.dwattr $C$DW$196, DW_AT_TI_symbol_name("blobAnalysis_malloc")
	.dwattr $C$DW$196, DW_AT_external
	.dwattr $C$DW$196, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$196, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$196, DW_AT_TI_begin_line(0x74)
	.dwattr $C$DW$196, DW_AT_TI_begin_column(0x0b)
	.dwattr $C$DW$196, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$196, DW_AT_decl_line(0x74)
	.dwattr $C$DW$196, DW_AT_decl_column(0x0b)
	.dwattr $C$DW$196, DW_AT_TI_max_frame_size(0x00)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 117,column 1,is_stmt,address blobAnalysis_malloc,isa 0

	.dwfde $C$DW$CIE, blobAnalysis_malloc
$C$DW$197	.dwtag  DW_TAG_formal_parameter, DW_AT_name("ptr")
	.dwattr $C$DW$197, DW_AT_TI_symbol_name("ptr")
	.dwattr $C$DW$197, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$197, DW_AT_location[DW_OP_reg4]
$C$DW$198	.dwtag  DW_TAG_formal_parameter, DW_AT_name("sizeInByte")
	.dwattr $C$DW$198, DW_AT_TI_symbol_name("sizeInByte")
	.dwattr $C$DW$198, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$198, DW_AT_location[DW_OP_reg20]
;----------------------------------------------------------------------
; 116 | uint32_t  blobAnalysis_malloc(uint32_t *ptr, int sizeInByte)           
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: blobAnalysis_malloc                                         *
;*                                                                            *
;*   Regs Modified     : A3,A4,B4                                             *
;*   Regs Used         : A3,A4,B3,B4                                          *
;*   Local Frame Size  : 0 Args + 0 Auto + 0 Save = 0 byte                    *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
blobAnalysis_malloc:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 19
;** 120	-----------------------    tmpPtr = *ptr+7u&0xfffffff8u;
;** 121	-----------------------    *ptr = (unsigned)sizeInByte+tmpPtr+7u&0xfffffff8u;
;** 122	-----------------------    return tmpPtr;
	.dwcfi	cfa_offset, 0
$C$DW$199	.dwtag  DW_TAG_variable, DW_AT_name("ptr")
	.dwattr $C$DW$199, DW_AT_TI_symbol_name("ptr")
	.dwattr $C$DW$199, DW_AT_type(*$C$DW$T$279)
	.dwattr $C$DW$199, DW_AT_location[DW_OP_reg3]
$C$DW$200	.dwtag  DW_TAG_variable, DW_AT_name("tmpPtr")
	.dwattr $C$DW$200, DW_AT_TI_symbol_name("tmpPtr")
	.dwattr $C$DW$200, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$200, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
; 118 | uint32_t    tmpPtr;                                                    
;----------------------------------------------------------------------
           MV      .L1     A4,A3             ; |117| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 120,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 120 | tmpPtr = (*ptr + 7) & 0xfffffff8;                                      
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |120| 
           NOP             4
           ADD     .L1     7,A4,A4           ; |120| 
           AND     .L1     -8,A4,A4          ; |120| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 121,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | *ptr = ((tmpPtr + sizeInByte + 7) & 0xfffffff8);                       
; 122 | return (tmpPtr);                                                       
;----------------------------------------------------------------------
           ADD     .L2X    A4,B4,B4          ; |121| 
           ADD     .L2     7,B4,B4           ; |121| 
           AND     .L2     -8,B4,B4          ; |121| 
           STW     .D1T2   B4,*A3            ; |121| 
	.dwcfi	cfa_offset, 0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 123,column 1,is_stmt,isa 0
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_TI_return
           RETNOP  .S2     B3,5              ; |123| 
           ; BRANCH OCCURS {B3}              ; |123| 
	.dwattr $C$DW$196, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$196, DW_AT_TI_end_line(0x7b)
	.dwattr $C$DW$196, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$196



; The following local variables in VLIB_blobAnalysis_d() will be grouped together
; to share stack space among distinct scoping blocks.  References
; in the source interlisting will look like "O$1.s3_1.u4_2.s4_3.l4_4" or "&$O$O1+0".
;
;    --offset--    --reference--		 --variable--
;
;         0	  O$1.s3_1.u4_2.s4_3.l4_4        struct lib_blobList imagBlobs_cn  [./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c:158]
;        20	  O$1.s3_1.u4_2.s4_3.l4_5        struct lib_blobList imagBlobs  [./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c:158]

	.sect	".text"
	.clink
	.global	VLIB_blobAnalysis_d

$C$DW$202	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_blobAnalysis_d")
	.dwattr $C$DW$202, DW_AT_low_pc(VLIB_blobAnalysis_d)
	.dwattr $C$DW$202, DW_AT_high_pc(0x00)
	.dwattr $C$DW$202, DW_AT_TI_symbol_name("VLIB_blobAnalysis_d")
	.dwattr $C$DW$202, DW_AT_external
	.dwattr $C$DW$202, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$202, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$202, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$202, DW_AT_TI_begin_column(0x09)
	.dwattr $C$DW$202, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$202, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$202, DW_AT_decl_column(0x09)
	.dwattr $C$DW$202, DW_AT_TI_max_frame_size(0x138)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 127,column 1,is_stmt,address VLIB_blobAnalysis_d,isa 0

	.dwfde $C$DW$CIE, VLIB_blobAnalysis_d
$C$DW$203	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$203, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$203, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$203, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
; 126 | int32_t VLIB_blobAnalysis_d(uint8_t LevelOfFeedback)                   
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_blobAnalysis_d                                         *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 228 Auto + 56 Save = 308 byte              *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_blobAnalysis_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 134	-----------------------    blobAnalysis_getTestParams(&prm, &test_cases);
;** 137	-----------------------    VLIB_profile_init(2, "VLIB_blobAnalysis");
;** 138	-----------------------    printf((const char *)"                                                                                      num of blobs, scratch buffer size (in bytes) for\n");
;** 139	-----------------------    printf((const char *)"                                                                                                              CCL,  Create Blob list, Blob analysis\n");
;** 129	-----------------------    status = 0;
;** 142	-----------------------    if ( test_cases <= 0 ) goto g58;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
; 128 | int32_t    tpi;  /* test parameter index */                            
; 129 | int32_t    status = 0;                                                 
; 132 | blobAnalysis_testParams_t   *prm;                                      
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |127| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |127| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |127| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |127| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |127| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |127| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(8)       ; |127| 
	.dwcfi	cfa_offset, 56
	.dwcfi	save_reg_to_mem, 19, -48
           ADDK    .S2     -256,SP           ; |127| 
	.dwcfi	cfa_offset, 312
$C$DW$204	.dwtag  DW_TAG_variable, DW_AT_name("$O$A40")
	.dwattr $C$DW$204, DW_AT_TI_symbol_name("$O$A40")
	.dwattr $C$DW$204, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$204, DW_AT_location[DW_OP_reg21]
$C$DW$205	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$205, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$205, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$205, DW_AT_location[DW_OP_reg4]
$C$DW$206	.dwtag  DW_TAG_variable, DW_AT_name("$O$C18")
	.dwattr $C$DW$206, DW_AT_TI_symbol_name("$O$C18")
	.dwattr $C$DW$206, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$206, DW_AT_location[DW_OP_reg4]
$C$DW$207	.dwtag  DW_TAG_variable, DW_AT_name("$O$C19")
	.dwattr $C$DW$207, DW_AT_TI_symbol_name("$O$C19")
	.dwattr $C$DW$207, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$207, DW_AT_location[DW_OP_regx 0x3d]
$C$DW$208	.dwtag  DW_TAG_variable, DW_AT_name("$O$C20")
	.dwattr $C$DW$208, DW_AT_TI_symbol_name("$O$C20")
	.dwattr $C$DW$208, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$208, DW_AT_location[DW_OP_reg2]
$C$DW$209	.dwtag  DW_TAG_variable, DW_AT_name("$O$C21")
	.dwattr $C$DW$209, DW_AT_TI_symbol_name("$O$C21")
	.dwattr $C$DW$209, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$209, DW_AT_location[DW_OP_regx 0x3e]
$C$DW$210	.dwtag  DW_TAG_variable, DW_AT_name("$O$C22")
	.dwattr $C$DW$210, DW_AT_TI_symbol_name("$O$C22")
	.dwattr $C$DW$210, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$210, DW_AT_location[DW_OP_reg9]
$C$DW$211	.dwtag  DW_TAG_variable, DW_AT_name("$O$C23")
	.dwattr $C$DW$211, DW_AT_TI_symbol_name("$O$C23")
	.dwattr $C$DW$211, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$211, DW_AT_location[DW_OP_reg0]
$C$DW$212	.dwtag  DW_TAG_variable, DW_AT_name("$O$C24")
	.dwattr $C$DW$212, DW_AT_TI_symbol_name("$O$C24")
	.dwattr $C$DW$212, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$212, DW_AT_location[DW_OP_regx 0x2d]
$C$DW$213	.dwtag  DW_TAG_variable, DW_AT_name("$O$C25")
	.dwattr $C$DW$213, DW_AT_TI_symbol_name("$O$C25")
	.dwattr $C$DW$213, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$213, DW_AT_location[DW_OP_regx 0x39]
$C$DW$214	.dwtag  DW_TAG_variable, DW_AT_name("$O$C26")
	.dwattr $C$DW$214, DW_AT_TI_symbol_name("$O$C26")
	.dwattr $C$DW$214, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$214, DW_AT_location[DW_OP_regx 0x25]
$C$DW$215	.dwtag  DW_TAG_variable, DW_AT_name("$O$C27")
	.dwattr $C$DW$215, DW_AT_TI_symbol_name("$O$C27")
	.dwattr $C$DW$215, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$215, DW_AT_location[DW_OP_regx 0x3e]
$C$DW$216	.dwtag  DW_TAG_variable, DW_AT_name("$O$C28")
	.dwattr $C$DW$216, DW_AT_TI_symbol_name("$O$C28")
	.dwattr $C$DW$216, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$216, DW_AT_location[DW_OP_regx 0x2d]
$C$DW$217	.dwtag  DW_TAG_variable, DW_AT_name("$O$C29")
	.dwattr $C$DW$217, DW_AT_TI_symbol_name("$O$C29")
	.dwattr $C$DW$217, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$217, DW_AT_location[DW_OP_regx 0x3f]
$C$DW$218	.dwtag  DW_TAG_variable, DW_AT_name("$O$C30")
	.dwattr $C$DW$218, DW_AT_TI_symbol_name("$O$C30")
	.dwattr $C$DW$218, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$218, DW_AT_location[DW_OP_regx 0x2f]
$C$DW$219	.dwtag  DW_TAG_variable, DW_AT_name("$O$C31")
	.dwattr $C$DW$219, DW_AT_TI_symbol_name("$O$C31")
	.dwattr $C$DW$219, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$219, DW_AT_location[DW_OP_regx 0x35]
$C$DW$220	.dwtag  DW_TAG_variable, DW_AT_name("$O$C32")
	.dwattr $C$DW$220, DW_AT_TI_symbol_name("$O$C32")
	.dwattr $C$DW$220, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$220, DW_AT_location[DW_OP_regx 0x35]
$C$DW$221	.dwtag  DW_TAG_variable, DW_AT_name("$O$C34")
	.dwattr $C$DW$221, DW_AT_TI_symbol_name("$O$C34")
	.dwattr $C$DW$221, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$221, DW_AT_location[DW_OP_reg29]
$C$DW$222	.dwtag  DW_TAG_variable, DW_AT_name("$O$C35")
	.dwattr $C$DW$222, DW_AT_TI_symbol_name("$O$C35")
	.dwattr $C$DW$222, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$222, DW_AT_location[DW_OP_reg13]
$C$DW$223	.dwtag  DW_TAG_variable, DW_AT_name("$O$C36")
	.dwattr $C$DW$223, DW_AT_TI_symbol_name("$O$C36")
	.dwattr $C$DW$223, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$223, DW_AT_location[DW_OP_reg3]
$C$DW$224	.dwtag  DW_TAG_variable, DW_AT_name("$O$C37")
	.dwattr $C$DW$224, DW_AT_TI_symbol_name("$O$C37")
	.dwattr $C$DW$224, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$224, DW_AT_location[DW_OP_reg12]
$C$DW$225	.dwtag  DW_TAG_variable, DW_AT_name("$O$C38")
	.dwattr $C$DW$225, DW_AT_TI_symbol_name("$O$C38")
	.dwattr $C$DW$225, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$225, DW_AT_location[DW_OP_reg26]
$C$DW$226	.dwtag  DW_TAG_variable, DW_AT_name("$O$C39")
	.dwattr $C$DW$226, DW_AT_TI_symbol_name("$O$C39")
	.dwattr $C$DW$226, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$226, DW_AT_location[DW_OP_reg10]
$C$DW$227	.dwtag  DW_TAG_variable, DW_AT_name("$O$U17")
	.dwattr $C$DW$227, DW_AT_TI_symbol_name("$O$U17")
	.dwattr $C$DW$227, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$227, DW_AT_location[DW_OP_breg31 96]
$C$DW$228	.dwtag  DW_TAG_variable, DW_AT_name("$O$K31")
	.dwattr $C$DW$228, DW_AT_TI_symbol_name("$O$K31")
	.dwattr $C$DW$228, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$228, DW_AT_location[DW_OP_reg12]
$C$DW$229	.dwtag  DW_TAG_variable, DW_AT_name("$O$K37")
	.dwattr $C$DW$229, DW_AT_TI_symbol_name("$O$K37")
	.dwattr $C$DW$229, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$229, DW_AT_location[DW_OP_reg20]
$C$DW$230	.dwtag  DW_TAG_variable, DW_AT_name("$O$K51")
	.dwattr $C$DW$230, DW_AT_TI_symbol_name("$O$K51")
	.dwattr $C$DW$230, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$230, DW_AT_location[DW_OP_reg20]
$C$DW$231	.dwtag  DW_TAG_variable, DW_AT_name("$O$U49")
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("$O$U49")
	.dwattr $C$DW$231, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$231, DW_AT_location[DW_OP_reg4]
$C$DW$232	.dwtag  DW_TAG_variable, DW_AT_name("$O$U101")
	.dwattr $C$DW$232, DW_AT_TI_symbol_name("$O$U101")
	.dwattr $C$DW$232, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$232, DW_AT_location[DW_OP_reg12]
$C$DW$233	.dwtag  DW_TAG_variable, DW_AT_name("$O$K274")
	.dwattr $C$DW$233, DW_AT_TI_symbol_name("$O$K274")
	.dwattr $C$DW$233, DW_AT_type(*$C$DW$T$301)
	.dwattr $C$DW$233, DW_AT_location[DW_OP_reg22]
$C$DW$234	.dwtag  DW_TAG_variable, DW_AT_name("$O$U250")
	.dwattr $C$DW$234, DW_AT_TI_symbol_name("$O$U250")
	.dwattr $C$DW$234, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$234, DW_AT_location[DW_OP_reg27]
$C$DW$235	.dwtag  DW_TAG_variable, DW_AT_name("$O$K394")
	.dwattr $C$DW$235, DW_AT_TI_symbol_name("$O$K394")
	.dwattr $C$DW$235, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$235, DW_AT_location[DW_OP_reg13]
$C$DW$236	.dwtag  DW_TAG_variable, DW_AT_name("$O$U415")
	.dwattr $C$DW$236, DW_AT_TI_symbol_name("$O$U415")
	.dwattr $C$DW$236, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$236, DW_AT_location[DW_OP_reg3]
$C$DW$237	.dwtag  DW_TAG_variable, DW_AT_name("$O$K516")
	.dwattr $C$DW$237, DW_AT_TI_symbol_name("$O$K516")
	.dwattr $C$DW$237, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$237, DW_AT_location[DW_OP_reg4]
$C$DW$238	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$238, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$238, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$238, DW_AT_location[DW_OP_reg26]
$C$DW$239	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$239, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$239, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$239, DW_AT_location[DW_OP_breg31 100]
$C$DW$240	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$240, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$240, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$240, DW_AT_location[DW_OP_breg31 100]
$C$DW$241	.dwtag  DW_TAG_variable, DW_AT_name("$O$L5")
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("$O$L5")
	.dwattr $C$DW$241, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$241, DW_AT_location[DW_OP_reg16]
$C$DW$242	.dwtag  DW_TAG_variable, DW_AT_name("$O$L6")
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("$O$L6")
	.dwattr $C$DW$242, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$242, DW_AT_location[DW_OP_reg16]
$C$DW$243	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$243, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$243, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$243, DW_AT_location[DW_OP_breg31 104]
$C$DW$244	.dwtag  DW_TAG_variable, DW_AT_name("status")
	.dwattr $C$DW$244, DW_AT_TI_symbol_name("status")
	.dwattr $C$DW$244, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$244, DW_AT_location[DW_OP_breg31 108]
$C$DW$245	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$245, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$245, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$245, DW_AT_location[DW_OP_breg31 28]
$C$DW$246	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$246, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$246, DW_AT_location[DW_OP_reg26]
$C$DW$247	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$247, DW_AT_location[DW_OP_breg31 112]
$C$DW$248	.dwtag  DW_TAG_variable, DW_AT_name("inp_size")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("inp_size")
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$248, DW_AT_location[DW_OP_reg13]
$C$DW$249	.dwtag  DW_TAG_variable, DW_AT_name("input_image")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("input_image")
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$249, DW_AT_location[DW_OP_breg31 116]
$C$DW$250	.dwtag  DW_TAG_variable, DW_AT_name("maxBytesRequired")
	.dwattr $C$DW$250, DW_AT_TI_symbol_name("maxBytesRequired")
	.dwattr $C$DW$250, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$250, DW_AT_location[DW_OP_breg31 32]
$C$DW$251	.dwtag  DW_TAG_variable, DW_AT_name("sizeOfCCHandle")
	.dwattr $C$DW$251, DW_AT_TI_symbol_name("sizeOfCCHandle")
	.dwattr $C$DW$251, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$251, DW_AT_location[DW_OP_reg13]
$C$DW$252	.dwtag  DW_TAG_variable, DW_AT_name("numCCs")
	.dwattr $C$DW$252, DW_AT_TI_symbol_name("numCCs")
	.dwattr $C$DW$252, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$252, DW_AT_location[DW_OP_breg31 36]
$C$DW$253	.dwtag  DW_TAG_variable, DW_AT_name("blobListScratch")
	.dwattr $C$DW$253, DW_AT_TI_symbol_name("blobListScratch")
	.dwattr $C$DW$253, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$253, DW_AT_location[DW_OP_breg31 120]
$C$DW$254	.dwtag  DW_TAG_variable, DW_AT_name("blobListScratch_cn")
	.dwattr $C$DW$254, DW_AT_TI_symbol_name("blobListScratch_cn")
	.dwattr $C$DW$254, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$254, DW_AT_location[DW_OP_breg31 124]
$C$DW$255	.dwtag  DW_TAG_variable, DW_AT_name("pBlobScratch")
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("pBlobScratch")
	.dwattr $C$DW$255, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$255, DW_AT_location[DW_OP_breg31 128]
$C$DW$256	.dwtag  DW_TAG_variable, DW_AT_name("pBlobScratch_cn")
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("pBlobScratch_cn")
	.dwattr $C$DW$256, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$256, DW_AT_location[DW_OP_breg31 132]
$C$DW$257	.dwtag  DW_TAG_variable, DW_AT_name("tmpPtr")
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("tmpPtr")
	.dwattr $C$DW$257, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$257, DW_AT_location[DW_OP_breg31 40]
$C$DW$258	.dwtag  DW_TAG_variable, DW_AT_name("handle")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("handle")
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$258, DW_AT_location[DW_OP_breg31 136]
$C$DW$259	.dwtag  DW_TAG_variable, DW_AT_name("maskBuf")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("maskBuf")
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$259, DW_AT_location[DW_OP_breg31 140]
$C$DW$260	.dwtag  DW_TAG_variable, DW_AT_name("CCLBuf")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("CCLBuf")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_breg31 144]
$C$DW$261	.dwtag  DW_TAG_variable, DW_AT_name("CCMap")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("CCMap")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_breg31 148]
$C$DW$262	.dwtag  DW_TAG_variable, DW_AT_name("ccl_totalBuf")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("ccl_totalBuf")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_breg31 152]
$C$DW$263	.dwtag  DW_TAG_variable, DW_AT_name("blobList_totalBuf")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("blobList_totalBuf")
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$263, DW_AT_location[DW_OP_breg31 156]
$C$DW$264	.dwtag  DW_TAG_variable, DW_AT_name("Blob_analysis_totalBuf")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("Blob_analysis_totalBuf")
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$264, DW_AT_location[DW_OP_breg31 160]
$C$DW$265	.dwtag  DW_TAG_variable, DW_AT_name("imageHeight")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$265, DW_AT_location[DW_OP_breg31 164]
$C$DW$266	.dwtag  DW_TAG_variable, DW_AT_name("perimeter")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("perimeter")
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$266, DW_AT_location[DW_OP_breg31 168]
$C$DW$267	.dwtag  DW_TAG_variable, DW_AT_name("perimeter_cn")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("perimeter_cn")
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$267, DW_AT_location[DW_OP_reg11]
$C$DW$268	.dwtag  DW_TAG_variable, DW_AT_name("boxes")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("boxes")
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$228)
	.dwattr $C$DW$268, DW_AT_location[DW_OP_breg31 172]
$C$DW$269	.dwtag  DW_TAG_variable, DW_AT_name("boxes_cn")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("boxes_cn")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$228)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_breg31 176]
$C$DW$270	.dwtag  DW_TAG_variable, DW_AT_name("circles")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("circles")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$234)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_breg31 180]
$C$DW$271	.dwtag  DW_TAG_variable, DW_AT_name("circles_cn")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("circles_cn")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$234)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_breg31 184]
$C$DW$272	.dwtag  DW_TAG_variable, DW_AT_name("blobBoundary")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("blobBoundary")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$224)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_breg31 176]
$C$DW$273	.dwtag  DW_TAG_variable, DW_AT_name("blobBoundary_cn")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("blobBoundary_cn")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$224)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_reg29]
$C$DW$274	.dwtag  DW_TAG_variable, DW_AT_name("polygonBoundary")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("polygonBoundary")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$224)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_reg29]
$C$DW$275	.dwtag  DW_TAG_variable, DW_AT_name("polygonBoundary_cn")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("polygonBoundary_cn")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$224)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_reg28]
$C$DW$276	.dwtag  DW_TAG_variable, DW_AT_name("blob_ii")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("blob_ii")
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$131)
	.dwattr $C$DW$276, DW_AT_location[DW_OP_reg28]
$C$DW$277	.dwtag  DW_TAG_variable, DW_AT_name("blob_ii_cn")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("blob_ii_cn")
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$131)
	.dwattr $C$DW$277, DW_AT_location[DW_OP_reg27]
$C$DW$278	.dwtag  DW_TAG_variable, DW_AT_name("vlibBlobList_cn")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("vlibBlobList_cn")
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$278, DW_AT_location[DW_OP_breg31 188]
$C$DW$279	.dwtag  DW_TAG_variable, DW_AT_name("numBlobs")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("numBlobs")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_breg31 192]
$C$DW$280	.dwtag  DW_TAG_variable, DW_AT_name("boxBufSize")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("boxBufSize")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_breg31 184]
$C$DW$281	.dwtag  DW_TAG_variable, DW_AT_name("circleBufSize")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("circleBufSize")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg31 196]
$C$DW$282	.dwtag  DW_TAG_variable, DW_AT_name("boundaryBufSize")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("boundaryBufSize")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg31 200]
$C$DW$283	.dwtag  DW_TAG_variable, DW_AT_name("polygonBufSize")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("polygonBufSize")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg31 204]
$C$DW$284	.dwtag  DW_TAG_variable, DW_AT_name("blobIIBufSize")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("blobIIBufSize")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg31 44]
$C$DW$285	.dwtag  DW_TAG_variable, DW_AT_name("perimeterBufSize")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("perimeterBufSize")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_reg12]
$C$DW$286	.dwtag  DW_TAG_variable, DW_AT_name("numPolygonPt")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("numPolygonPt")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg31 48]
$C$DW$287	.dwtag  DW_TAG_variable, DW_AT_name("numPolygonPt_cn")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("numPolygonPt_cn")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg31 52]
$C$DW$288	.dwtag  DW_TAG_variable, DW_AT_name("$O$v5")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("$O$v5")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_reg26]
$C$DW$289	.dwtag  DW_TAG_variable, DW_AT_name("$O$v6")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("$O$v6")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_reg11]
$C$DW$290	.dwtag  DW_TAG_variable, DW_AT_name("$O$v8")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("$O$v8")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_regx 0x3b]
$C$DW$291	.dwtag  DW_TAG_variable, DW_AT_name("$O$v9")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("$O$v9")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_reg28]
$C$DW$292	.dwtag  DW_TAG_variable, DW_AT_name("$O$v10")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("$O$v10")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_reg27]
$C$DW$293	.dwtag  DW_TAG_variable, DW_AT_name("$O$U174")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("$O$U174")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_reg22]
$C$DW$294	.dwtag  DW_TAG_variable, DW_AT_name("$O$U174")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("$O$U174")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_reg14]
$C$DW$295	.dwtag  DW_TAG_variable, DW_AT_name("$O$U174")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("$O$U174")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_reg3]
$C$DW$296	.dwtag  DW_TAG_variable, DW_AT_name("$O$U171")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("$O$U171")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_regx 0x26]
$C$DW$297	.dwtag  DW_TAG_variable, DW_AT_name("$O$U171")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("$O$U171")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_reg15]
$C$DW$298	.dwtag  DW_TAG_variable, DW_AT_name("$O$U171")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("$O$U171")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_regx 0x3b]
$C$DW$299	.dwtag  DW_TAG_variable, DW_AT_name("$O$U171")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("$O$U171")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$316)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_regx 0x37]
$C$DW$300	.dwtag  DW_TAG_variable, DW_AT_name("$O$U257")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("$O$U257")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$269)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_reg14]
$C$DW$301	.dwtag  DW_TAG_variable, DW_AT_name("$O$U257")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("$O$U257")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$269)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg12]
$C$DW$302	.dwtag  DW_TAG_variable, DW_AT_name("$O$U257")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("$O$U257")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$269)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_regx 0x3a]
$C$DW$303	.dwtag  DW_TAG_variable, DW_AT_name("$O$U170")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("$O$U170")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg26]
$C$DW$304	.dwtag  DW_TAG_variable, DW_AT_name("$O$U170")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("$O$U170")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg26]
$C$DW$305	.dwtag  DW_TAG_variable, DW_AT_name("$O$U264")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("$O$U264")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$317)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg13]
$C$DW$306	.dwtag  DW_TAG_variable, DW_AT_name("$O$U264")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("$O$U264")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$317)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_regx 0x3c]
$C$DW$307	.dwtag  DW_TAG_variable, DW_AT_name("$O$U264")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("$O$U264")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$317)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_regx 0x38]
$C$DW$308	.dwtag  DW_TAG_variable, DW_AT_name("$O$U266")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("$O$U266")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$318)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg11]
$C$DW$309	.dwtag  DW_TAG_variable, DW_AT_name("$O$U266")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("$O$U266")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$318)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_regx 0x3d]
$C$DW$310	.dwtag  DW_TAG_variable, DW_AT_name("$O$U266")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("$O$U266")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$318)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_regx 0x39]
$C$DW$311	.dwtag  DW_TAG_variable, DW_AT_name("$O$U295")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("$O$U295")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$269)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg15]
$C$DW$312	.dwtag  DW_TAG_variable, DW_AT_name("$O$U295")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("$O$U295")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$269)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg11]
$C$DW$313	.dwtag  DW_TAG_variable, DW_AT_name("$O$U301")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("$O$U301")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$317)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg13]
$C$DW$314	.dwtag  DW_TAG_variable, DW_AT_name("$O$U301")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("$O$U301")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$317)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg6]
$C$DW$315	.dwtag  DW_TAG_variable, DW_AT_name("$O$U302")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("$O$U302")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$318)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg12]
$C$DW$316	.dwtag  DW_TAG_variable, DW_AT_name("$O$U302")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("$O$U302")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$318)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg7]
$C$DW$317	.dwtag  DW_TAG_variable, DW_AT_name("imageWidth")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg11]
$C$DW$318	.dwtag  DW_TAG_variable, DW_AT_name("imageWidth")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_breg31 208]
$C$DW$319	.dwtag  DW_TAG_variable, DW_AT_name("vlibBlobList")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("vlibBlobList")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_breg31 212]
$C$DW$320	.dwtag  DW_TAG_variable, DW_AT_name("error")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("error")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg10]
$C$DW$321	.dwtag  DW_TAG_variable, DW_AT_name("error")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("error")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg8]
$C$DW$322	.dwtag  DW_TAG_variable, DW_AT_name("$O$v3")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("$O$v3")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg22]
$C$DW$323	.dwtag  DW_TAG_variable, DW_AT_name("$O$v3")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("$O$v3")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg22]
$C$DW$324	.dwtag  DW_TAG_variable, DW_AT_name("$O$v11")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("$O$v11")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg4]
$C$DW$325	.dwtag  DW_TAG_variable, DW_AT_name("$O$v11")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("$O$v11")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg20]
$C$DW$326	.dwtag  DW_TAG_variable, DW_AT_name("$O$O1")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("$O$O1")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_breg31 56]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$327, DW_AT_name("blobAnalysis_getTestParams")
	.dwattr $C$DW$327, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_getTestParams,B3
||         ADDAW   .D1X    SP,7,A4           ; |134| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 134,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 134 | blobAnalysis_getTestParams(&prm, &test_cases);                         
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {blobAnalysis_getTestParams} {0}  ; |134| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 24
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$328, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$328, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |137| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 137,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 137 | VLIB_profile_init(2, "VLIB_blobAnalysis");                             
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |137| 
           MVKL    .S2     $C$SL2+0,B4
           MVKH    .S2     $C$SL2+0,B4
$C$DW$329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$329, DW_AT_name("printf")
	.dwattr $C$DW$329, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |138| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 138,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 138 | printf("
;     |                        num of blobs, scratch buffer size (in bytes) for
;     | \n");                                                                  
;----------------------------------------------------------------------
$C$RL2:    ; CALL OCCURS {printf} {0}        ; |138| 
           MVKL    .S2     $C$SL3+0,B4
           MVKH    .S2     $C$SL3+0,B4
$C$DW$330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$330, DW_AT_name("printf")
	.dwattr $C$DW$330, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |139| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 139,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 139 | printf("
;     |                                                CCL,  Create Blob list, 
;     | Blob analysis\n");                                                     
;----------------------------------------------------------------------
$C$RL3:    ; CALL OCCURS {printf} {0}        ; |139| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$31 = &testPatternString[0];
;**  	-----------------------    K$37 = 255;
;**  	-----------------------    K$516 = &desc[0];
;**  	-----------------------    U$17 = prm;
;** 142	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(28),A4

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 142,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
; 142 | for( tpi = 0; tpi < test_cases; tpi++ ) {                              
; 145 |     int32_t    status_nat_vs_int = vlib_KERNEL_PASS;  /* Test status :
;     | Natural c vs. Optimized */                                             
; 146 |     int32_t    status_nat_vs_ref = vlib_KERNEL_PASS;  /* Test status :
;     | Natural c vs. Static Reference */                                      
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |142| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 129,column 16,is_stmt,isa 0
           ZERO    .L1     A5                ; |129| 
           STW     .D2T1   A5,*+SP(104)
           STW     .D2T1   A4,*+SP(96)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 149,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
; 149 | uint32_t    inp_size =   prm[tpi].imageWidth * prm[tpi].imageHeight;   
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(96),A4       ; |149| 

           CMPGT   .L1     A3,0,A0           ; |142| 
||         ZERO    .S1     A3                ; |129| 

   [!A0]   B       .S1     $C$L48            ; |142| 
||         STW     .D2T1   A3,*+SP(108)

   [ A0]   LDW     .D2T1   *+SP(96),A3
           NOP             3
   [ A0]   LDW     .D1T1   *+A4(8),A4        ; |149| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 142,column 19,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L48}        ; |142| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L11
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 142,column 10,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$4$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g3:
;** 149	-----------------------    inp_size = (*U$17).imageWidth*(*U$17).imageHeight;
;** 152	-----------------------    input_image = malloc(inp_size);
;** 154	-----------------------    if ( input_image == NULL ) goto g56;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 149,column 21,is_stmt,isa 0
           LDW     .D1T1   *+A3(4),A3        ; |149| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 152,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
; 152 | uint8_t   *input_image      =  (uint8_t *) malloc(inp_size);           
;----------------------------------------------------------------------
$C$DW$331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$331, DW_AT_name("malloc")
	.dwattr $C$DW$331, DW_AT_TI_call
           CALL    .S1     malloc            ; |152| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 149,column 21,is_stmt,isa 0
           MPY32   .M1     A4,A3,A13         ; |149| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 152,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
; 154 | if( input_image ) {                                                    
; 156 |     int32_t          i, maxBytesRequired, eightConnected, sizeOfCCHandl
;     | e;                                                                     
; 157 |     int32_t          numCCs;                                           
; 158 |     VLIB_blobList    imagBlobs, imagBlobs_cn;                          
; 159 |     void            *blobListScratch, *blobListScratch_cn;             
; 160 |     void            *pBlobScratch = NULL, *pBlobScratch_cn = NULL;     
; 161 |     uint32_t         tmpPtr, tmpPtr_cn;                                
; 163 |     VLIB_CCHandle   *handle;                                           
; 164 |     uint32_t        *maskBuf;                                          
; 165 |     void            *CCLBuf;                                           
; 166 |     uint8_t         *CCMap;                                            
; 168 |     int32_t    ccMapSize;                                              
; 169 |     int32_t    maskBufSize;                                            
; 170 |     int32_t    fail;                                                   
; 171 |     int32_t    ccl_totalBuf;                                           
; 172 |     int32_t    blobList_totalBuf;                                      
; 173 |     int32_t    Blob_analysis_totalBuf;                                 
;----------------------------------------------------------------------
           ADDKPC  .S2     $C$RL4,B3,2       ; |152| 
           MV      .L1     A13,A4            ; |152| 
$C$RL4:    ; CALL OCCURS {malloc} {0}        ; |152| 
$C$DW$L$VLIB_blobAnalysis_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$5$B:
;          EXCLUSIVE CPU CYCLES: 7

           MV      .L1     A4,A0             ; |152| 
||         LDW     .D2T1   *+SP(96),A3

   [!A0]   BNOP    .S1     $C$L45,2          ; |154| 
|| [ A0]   LDW     .D2T1   *+SP(96),A31      ; |196| 

           STW     .D2T1   A4,*+SP(116)      ; |152| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 175,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
; 175 | int32_t    imageWidth        = prm[tpi].imageWidth;                    
;----------------------------------------------------------------------
   [ A0]   LDW     .D1T1   *+A3(4),A11       ; |175| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 176,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
; 176 | int32_t    imageHeight       = prm[tpi].imageHeight;                   
; 178 | uint32_t                   *perimeter, *perimeter_cn;                  
; 179 | VLIB_blobAnalysis_box      *boxes, *boxes_cn;                          
; 180 | VLIB_blobAnalysis_circle   *circles, *circles_cn;                      
; 181 | VLIB_blobAnalysis_point    *blobBoundary, *blobBoundary_cn;            
; 182 | VLIB_blobAnalysis_point    *polygonBoundary, *polygonBoundary_cn;      
; 183 | AVMii                      *blob_ii, *blob_ii_cn;                      
; 184 | VLIB_blob                  *vlibBlobList, *vlibBlobList_cn;            
; 186 | int32_t    maxSize_x, maxSize_y;                                       
; 187 | int32_t    numBlobs;                                                   
; 188 | int32_t    maxNumItervals;                                             
; 190 | uint32_t    boxBufSize, circleBufSize, boundaryBufSize;                
; 191 | uint32_t    polygonBufSize, blobIIBufSize, perimeterBufSize;           
; 193 | int32_t    error;                                                      
;----------------------------------------------------------------------
   [ A0]   LDW     .D1T1   *+A3(8),A3        ; |176| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 154,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L45}        ; |154| 
$C$DW$L$VLIB_blobAnalysis_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$6$B:
;          EXCLUSIVE CPU CYCLES: 10
;** 175	-----------------------    imageWidth = (*U$17).imageWidth;
;** 176	-----------------------    imageHeight = (*U$17).imageHeight;
;** 196	-----------------------    VLIB_fillBuffer((*U$17).testPattern, (unsigned char)K$37, (void *)input_image, (*U$17).staticIn, (unsigned short)imageWidth, (unsigned short)imageHeight, (unsigned short)imageWidth, 1u, K$31);
;** 146	-----------------------    status_nat_vs_ref = 1;
;** 160	-----------------------    pBlobScratch_cn = pBlobScratch = NULL;
;** 203	-----------------------    if ( (*U$17).testPattern != 3 ) goto g8;
           MVKL    .S1     testPatternString,A12
           MVK     .S2     0xff,B4
           MVKH    .S1     testPatternString,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 196,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 196 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
; 197 |                 (uint8_t)255,                                          
; 198 |                 input_image, prm[tpi].staticIn,                        
; 199 |                 prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].ima
;     | geWidth * sizeof(input_image[0]),                                      
; 200 |                 sizeof(input_image[0]), testPatternString);            
;----------------------------------------------------------------------
           LDW     .D1T2   *+A31(12),B6      ; |196| 
$C$DW$332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$332, DW_AT_low_pc(0x04)
	.dwattr $C$DW$332, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$332, DW_AT_TI_call

           MV      .L1     A3,A4             ; |196| 
||         CALL    .S1     VLIB_fillBuffer   ; |196| 
||         STW     .D2T1   A3,*+SP(164)      ; |176| 

           EXTU    .S1     A4,16,16,A3       ; |196| 
||         LDBU    .D1T1   *A31,A4           ; |196| 

           EXTU    .S2     B4,24,24,B4       ; |196| 
           MV      .L2X    A3,B8             ; |196| 
           EXTU    .S1     A11,16,16,A10     ; |196| 

           EXTU    .S1     A11,16,16,A8      ; |196| 
||         ADDKPC  .S2     $C$RL5,B3,0       ; |196| 
||         MVK     .L2     0x1,B10           ; |196| 
||         MV      .L1     A0,A6             ; |196| 

$C$RL5:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |196| 
$C$DW$L$VLIB_blobAnalysis_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$7$B:
;          EXCLUSIVE CPU CYCLES: 17
           LDW     .D2T1   *+SP(96),A3       ; |196| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 160,column 52,is_stmt,isa 0
           ZERO    .L2     B5                ; |160| 
           MV      .L1X    B10,A31           ; |160| 
           ZERO    .L2     B4                ; |160| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 146,column 20,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(128)      ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 203,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 203 | if( prm[tpi].testPattern == RANDOM ) {                                 
;----------------------------------------------------------------------
           LDBU    .D1T1   *A3,A3            ; |203| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 146,column 20,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(132)      ; |146| 
           STW     .D2T1   A31,*+SP(112)     ; |146| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 203,column 13,is_stmt,isa 0
           CMPEQ   .L1     A3,3,A0           ; |203| 

   [!A0]   B       .S2     $C$L16            ; |203| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
||         MV      .S1     A0,A2             ; |203| branch predicate copy
|| [ A0]   MV      .D1     A13,A0

   [!A1]   MVK     .L1     0x1,A0            ; nullify predicate
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 204,column 27,is_stmt,isa 0
;----------------------------------------------------------------------
; 204 | for( i=0; i < inp_size; i++ ) {                                        
; 205 |     input_image[i] = (input_image[i] > 100) ? 1 : 0;                   
;----------------------------------------------------------------------
   [!A0]   B       .S1     $C$L15            ; |204| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 211,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 211 | sizeOfCCHandle =  VLIB_GetSizeOfCCHandle();                            
;----------------------------------------------------------------------
$C$DW$333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$333, DW_AT_name("VLIB_GetSizeOfCCHandle")
	.dwattr $C$DW$333, DW_AT_TI_call
   [!A2]   CALL    .S1     VLIB_GetSizeOfCCHandle ; |211| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 203,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |203| 
$C$DW$L$VLIB_blobAnalysis_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$8$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 204	-----------------------    if ( !inp_size ) goto g8;

   [ A0]   MVC     .S2X    A13,ILC
|| [ A0]   LDW     .D2T1   *+SP(116),A4

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 204,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |204| 
$C$DW$L$VLIB_blobAnalysis_d$8$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 205,column 21,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$9$B:
;          EXCLUSIVE CPU CYCLES: 2
;**  	-----------------------    U$49 = input_image;
;**  	-----------------------    K$51 = 100;
;** 205	-----------------------    L$1 = inp_size;
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g7:
;** 205	-----------------------    A$40 = *U$49 > K$51;
;** 205	-----------------------    *U$49++ = A$40;
;** 204	-----------------------    if ( L$1 = L$1-1 ) goto g7;
           NOP             2
$C$DW$L$VLIB_blobAnalysis_d$9$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c
;*      Loop source line                 : 204
;*      Loop opening brace source line   : 204
;*      Loop closing brace source line   : 206
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 0
;*      Unpartitioned Resource Bound     : 1
;*      Partitioned Resource Bound(*)    : 1
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     0        1*    
;*      .S units                     0        0     
;*      .D units                     1*       1*    
;*      .M units                     0        0     
;*      .X cross paths               0        1*    
;*      .T address paths             1*       1*    
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          0        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             0        1*    
;*      Bound(.L .S .D .LS .LSD)     1*       1*    
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 1  Schedule found with 7 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   **                           |    ***                         |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh1
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 2
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 6 + trip_cnt * 1        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MV              A4,B6
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C431:
;*   0              LDBU    .D1T1   *A4++,A3          ; |205| 
;*   1              NOP             4
;*   5              CMPGT   .L2X    A3,B4,B5          ; |205| 
;*   6              STB     .D2T2   B5,*B6++          ; |205| 
;*     ||           SPBR            $C$C431
;*   7              ; BRANCHCC OCCURS {$C$C431}       ; |204| 
;*----------------------------------------------------------------------------*
$C$L12:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 7
           SPLOOP  1       ;7                ; (P) 
;** --------------------------------------------------------------------------*
$C$L13:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_blobAnalysis_d$11$B:
;          EXCLUSIVE CPU CYCLES: 1

           SPMASK          L2
||         MV      .L2X    A4,B6
||         LDBU    .D1T1   *A4++,A3          ; |205| (P) <0,0> 

           NOP             3

           SPMASK          S2
||         MVK     .S2     0x64,B4

           CMPGT   .L2X    A3,B4,B5          ; |205| (P) <0,5> 

           SPKERNEL 6,0
||         STB     .D2T2   B5,*B6++          ; |205| <0,6> 

$C$DW$L$VLIB_blobAnalysis_d$11$E:
;** --------------------------------------------------------------------------*
$C$L14:    ; PIPED LOOP EPILOG
;          EXCLUSIVE CPU CYCLES: 6
;** --------------------------------------------------------------------------*
$C$L15:    
$C$DW$L$VLIB_blobAnalysis_d$13$B:
;          EXCLUSIVE CPU CYCLES: 3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 211,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 212 | maskBufSize    = ((imageWidth + 31) / 32) * imageHeight * sizeof(uint32
;     | _t);                                                                   
; 213 | ccMapSize      = (imageWidth + 31) / 32 * 32 * imageHeight * sizeof(uin
;     | t8_t);                                                                 
;----------------------------------------------------------------------
$C$DW$334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$334, DW_AT_name("VLIB_GetSizeOfCCHandle")
	.dwattr $C$DW$334, DW_AT_TI_call
           CALL    .S1     VLIB_GetSizeOfCCHandle ; |211| 
           NOP             2
$C$DW$L$VLIB_blobAnalysis_d$13$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 203,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$14$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g8:
;** 211	-----------------------    sizeOfCCHandle = VLIB_GetSizeOfCCHandle();
;** 214	-----------------------    VLIB_calcConnectedComponentsMaxBufferSize((short)imageWidth, (short)imageHeight, 1, &maxBytesRequired);
;** 215	-----------------------    C$39 = ((imageWidth+31>>4>>27)+imageWidth+31>>5)*imageHeight;
;** 215	-----------------------    ccl_totalBuf = (int)_lo(_mpyli(36, C$39))+maxBytesRequired+sizeOfCCHandle+32;
;** 217	-----------------------    handle = malloc((unsigned)sizeOfCCHandle);
;** 218	-----------------------    C$38 = C$39*4;
;** 218	-----------------------    maskBuf = malloc((unsigned)C$38);
;** 219	-----------------------    CCLBuf = malloc((unsigned)maxBytesRequired);
;** 220	-----------------------    C$37 = C$39<<5;
;** 220	-----------------------    CCMap = malloc((unsigned)C$37);
;** 222	-----------------------    if ( !((handle != NULL)&(maskBuf != NULL)&(CCLBuf != NULL)&(CCMap != NULL)) ) goto g55;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 211,column 13,is_stmt,isa 0
           ADDKPC  .S2     $C$RL6,B3,2       ; |211| 
$C$RL6:    ; CALL OCCURS {VLIB_GetSizeOfCCHandle} {0}  ; |211| 
$C$DW$L$VLIB_blobAnalysis_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$15$B:
;          EXCLUSIVE CPU CYCLES: 52
           LDW     .D2T1   *+SP(164),A3      ; |211| 
           MV      .L1     A4,A13            ; |211| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 214,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 214 | VLIB_calcConnectedComponentsMaxBufferSize(imageWidth, imageHeight, MINB
;     | LOBAREA, &maxBytesRequired);                                           
; 215 | ccl_totalBuf = maskBufSize + sizeOfCCHandle + maxBytesRequired + ccMapS
;     | ize + 8 * 4;                                                           
;----------------------------------------------------------------------
           EXT     .S1     A11,16,16,A4      ; |214| 
           MVK     .L1     0x1,A6            ; |214| 
           ADDAW   .D2     SP,8,B6           ; |214| 
           EXT     .S1     A3,16,16,A3       ; |214| 
           NOP             1
$C$DW$335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$335, DW_AT_name("VLIB_calcConnectedComponentsMaxBufferSize")
	.dwattr $C$DW$335, DW_AT_TI_call

           CALLP   .S2     VLIB_calcConnectedComponentsMaxBufferSize,B3
||         MV      .L2X    A3,B4             ; |214| 

$C$RL7:    ; CALL OCCURS {VLIB_calcConnectedComponentsMaxBufferSize} {0}  ; |214| 
$C$DW$336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$336, DW_AT_name("malloc")
	.dwattr $C$DW$336, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         LDW     .D2T2   *+SP(32),B11      ; |215| 
||         MV      .L1     A13,A4            ; |217| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 217,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 217 | handle  = (VLIB_CCHandle *)malloc(sizeOfCCHandle);                     
;----------------------------------------------------------------------
$C$RL8:    ; CALL OCCURS {malloc} {0}        ; |217| 

           ADD     .D1     A11,31,A3         ; |215| 
||         STW     .D2T1   A4,*+SP(136)      ; |217| 

           SHR     .S1     A3,4,A3           ; |215| 
||         LDW     .D2T1   *+SP(164),A4      ; |215| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 215,column 13,is_stmt,isa 0
           SHRU    .S1     A3,27,A3          ; |215| 
           ADD     .L1     A11,A3,A3         ; |215| 
           ADDK    .S1     31,A3             ; |215| 
           SHR     .S1     A3,5,A3           ; |215| 
           MPY32   .M1     A4,A3,A10         ; |215| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 218,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | maskBuf = (uint32_t      *)malloc(maskBufSize);                        
;----------------------------------------------------------------------
           SHL     .S2X    A10,2,B10         ; |218| 
           NOP             1
$C$DW$337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$337, DW_AT_name("malloc")
	.dwattr $C$DW$337, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         MV      .L1X    B10,A4            ; |218| 

$C$RL9:    ; CALL OCCURS {malloc} {0}        ; |218| 
           STW     .D2T1   A4,*+SP(140)      ; |218| 
$C$DW$338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$338, DW_AT_name("malloc")
	.dwattr $C$DW$338, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         LDW     .D2T1   *+SP(32),A4       ; |219| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 219,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 219 | CCLBuf  = (void          *)malloc(maxBytesRequired);                   
;----------------------------------------------------------------------
$C$RL10:   ; CALL OCCURS {malloc} {0}        ; |219| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 220,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 220 | CCMap   = (uint8_t       *)malloc(ccMapSize);                          
;----------------------------------------------------------------------
           SHL     .S1     A10,5,A12         ; |220| 
$C$DW$339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$339, DW_AT_name("malloc")
	.dwattr $C$DW$339, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(144)      ; |219| 
||         MV      .L1     A12,A4            ; |220| 

$C$RL11:   ; CALL OCCURS {malloc} {0}        ; |220| 
$C$DW$L$VLIB_blobAnalysis_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$16$B:
;          EXCLUSIVE CPU CYCLES: 18

           LDW     .D2T1   *+SP(136),A2      ; |222| 
||         ZERO    .L2     B4                ; |222| 
||         MVK     .S1     36,A3             ; |215| 
||         ZERO    .S2     B5                ; |222| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 222,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 222 | if( handle == NULL || maskBuf == NULL || CCLBuf == NULL || CCMap == NUL
;     | L ) {                                                                  
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(140),A0      ; |222| 

           STW     .D2T1   A4,*+SP(148)      ; |220| 
||         MPYLI   .M1     A3,A10,A5:A4      ; |215| 

           LDW     .D2T1   *+SP(144),A1      ; |222| 
           ZERO    .L1     A3                ; |222| 

   [ A2]   MVK     .L2     0x1,B4            ; |222| 
||         LDW     .D2T1   *+SP(148),A2      ; |222| 

   [ A0]   MVK     .L1     0x1,A3            ; |222| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 215,column 13,is_stmt,isa 0
           ADD     .L2X    B11,A4,B7         ; |215| 

           AND     .L2X    A3,B4,B6          ; |222| 
||         ZERO    .S2     B4                ; |222| 
|| [ A1]   MVK     .D2     0x1,B5            ; |222| 

           AND     .L2     B5,B6,B5          ; |222| 
||         ADD     .S2X    A13,B7,B31        ; |215| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 222,column 13,is_stmt,isa 0
   [ A2]   MVK     .L2     0x1,B4            ; |222| 
           AND     .L2     B4,B5,B0          ; |222| 
   [!B0]   B       .S1     $C$L44            ; |222| 
$C$DW$340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$340, DW_AT_name("memset")
	.dwattr $C$DW$340, DW_AT_TI_call

   [ B0]   CALL    .S1     memset            ; |232| 
|| [ B0]   LDW     .D2T1   *+SP(140),A4      ; |232| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 223,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 223 | free(input_image);                                                     
; 224 | free(handle);                                                          
; 225 | free(maskBuf);                                                         
; 226 | free(CCLBuf);                                                          
; 227 | free(CCMap);                                                           
; 228 | goto SKIP_TEST;                                                        
;----------------------------------------------------------------------
$C$DW$341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$341, DW_AT_name("free")
	.dwattr $C$DW$341, DW_AT_TI_call
   [!B0]   CALL    .S1     free              ; |223| 
   [!B0]   LDW     .D2T1   *+SP(116),A4      ; |223| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 215,column 13,is_stmt,isa 0
           ADDAD   .D2     B31,4,B30         ; |215| 
           STW     .D2T2   B30,*+SP(152)     ; |215| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 222,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L44}        ; |222| 
$C$DW$L$VLIB_blobAnalysis_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$17$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 232	-----------------------    memset((void *)maskBuf, 0, (unsigned)C$38);
;** 233	-----------------------    a$1 = convert_uint8_to_packedBits(input_image, (unsigned char *)maskBuf, imageHeight, imageWidth);
;** 233	-----------------------    imageWidth = a$1;
;** 239	-----------------------    VLIB_initConnectedComponentsList(handle, CCLBuf, maxBytesRequired);
;** 242	-----------------------    VLIB_createConnectedComponentsList(handle, (unsigned short)imageWidth, (unsigned short)imageHeight, maskBuf, 1, 1);
;** 249	-----------------------    VLIB_getNumCCs(handle, &numCCs);
;** 251	-----------------------    memset((void *)CCMap, 0, (unsigned)C$37);
;** 252	-----------------------    U$101 = (unsigned short)imageHeight;
;** 252	-----------------------    status = VLIB_createCCMap8Bit(handle, CCMap, (unsigned short)imageWidth, U$101);
;** 259	-----------------------    blobList_totalBuf = numCCs<<5;
;** 260	-----------------------    blobListScratch = VLIB_malloc((unsigned)blobList_totalBuf);
;** 261	-----------------------    blobListScratch_cn = malloc((unsigned)blobList_totalBuf);
;** 263	-----------------------    if ( !((blobListScratch != NULL)&(blobListScratch_cn != NULL)) ) goto g50;

           MV      .L1X    B10,A6            ; |232| 
||         ZERO    .L2     B4                ; |232| 
||         ADDKPC  .S2     $C$RL12,B3,0      ; |232| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 232,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 232 | memset(maskBuf, 0, maskBufSize);                                       
;----------------------------------------------------------------------
$C$RL12:   ; CALL OCCURS {memset} {0}        ; |232| 
$C$DW$L$VLIB_blobAnalysis_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$18$B:
;          EXCLUSIVE CPU CYCLES: 76
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 233,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 233 | imageWidth = convert_uint8_to_packedBits(                              
; 234 |     input_image,                                                       
; 235 |     (uint8_t *)maskBuf,                                                
; 236 |     imageHeight,                                                       
; 237 |     imageWidth);                                                       
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(140),B4      ; |233| 
           LDW     .D2T1   *+SP(116),A4      ; |233| 
$C$DW$342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$342, DW_AT_name("convert_uint8_to_packedBits")
	.dwattr $C$DW$342, DW_AT_TI_call

           CALLP   .S2     convert_uint8_to_packedBits,B3
||         LDW     .D2T1   *+SP(164),A6      ; |233| 
||         MV      .L2X    A11,B6            ; |233| 

$C$RL13:   ; CALL OCCURS {convert_uint8_to_packedBits} {0}  ; |233| 
           STW     .D2T1   A4,*+SP(208)      ; |233| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 239,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | status  = VLIB_initConnectedComponentsList(handle, CCLBuf, maxBytesRequ
;     | ired);                                                                 
; 241 | eightConnected = 2;                                                    
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(32),A6       ; |239| 
           LDW     .D2T2   *+SP(144),B4      ; |239| 
$C$DW$343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$343, DW_AT_name("VLIB_initConnectedComponentsList")
	.dwattr $C$DW$343, DW_AT_TI_call

           CALLP   .S2     VLIB_initConnectedComponentsList,B3
||         LDW     .D2T1   *+SP(136),A4      ; |239| 

$C$RL14:   ; CALL OCCURS {VLIB_initConnectedComponentsList} {0}  ; |239| 
           LDW     .D2T2   *+SP(208),B4      ; |239| 
           LDW     .D2T1   *+SP(164),A3      ; |239| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 242,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 242 | status = VLIB_createConnectedComponentsList(                           
; 243 |     handle,                                                            
; 244 |     imageWidth,                                                        
; 245 |     imageHeight,                                                       
; 246 |     maskBuf,                                                           
; 247 |     MINBLOBAREA,                                                       
; 248 |     eightConnected - 1);                                               
;----------------------------------------------------------------------
           MVK     .L1     0x1,A8            ; |242| 
           LDW     .D2T1   *+SP(136),A4      ; |242| 
           LDW     .D2T2   *+SP(140),B6      ; |242| 
           EXTU    .S2     B4,16,16,B4       ; |242| 
$C$DW$344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$344, DW_AT_low_pc(0x08)
	.dwattr $C$DW$344, DW_AT_name("VLIB_createConnectedComponentsList")
	.dwattr $C$DW$344, DW_AT_TI_call

           EXTU    .S1     A3,16,16,A6       ; |242| 
||         MV      .L2X    A8,B8             ; |242| 
||         CALLP   .S2     VLIB_createConnectedComponentsList,B3

$C$RL15:   ; CALL OCCURS {VLIB_createConnectedComponentsList} {0}  ; |242| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 249,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 249 | VLIB_getNumCCs(handle, &numCCs);                                       
;----------------------------------------------------------------------
           ADDAW   .D2     SP,9,B4           ; |249| 
$C$DW$345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$345, DW_AT_name("VLIB_getNumCCs")
	.dwattr $C$DW$345, DW_AT_TI_call

           CALLP   .S2     VLIB_getNumCCs,B3
||         LDW     .D2T1   *+SP(136),A4      ; |249| 

$C$RL16:   ; CALL OCCURS {VLIB_getNumCCs} {0}  ; |249| 
$C$DW$346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$346, DW_AT_name("memset")
	.dwattr $C$DW$346, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(148),A4      ; |251| 
||         MV      .L1     A12,A6            ; |251| 
||         ZERO    .L2     B4                ; |251| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 251,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 251 | memset(CCMap, 0, ccMapSize);                                           
;----------------------------------------------------------------------
$C$RL17:   ; CALL OCCURS {memset} {0}        ; |251| 
           LDW     .D2T2   *+SP(208),B4      ; |251| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 252,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 252 | status = VLIB_createCCMap8Bit(                                         
; 253 |     handle,                                                            
; 254 |     CCMap,                                                             
; 255 |     imageWidth,                                                        
; 256 |     imageHeight);                                                      
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(164),A3      ; |252| 
           LDW     .D2T1   *+SP(136),A4      ; |252| 
           NOP             3

           EXTU    .S2     B4,16,16,B5       ; |252| 
||         EXTU    .S1     A3,16,16,A12      ; |252| 

           LDW     .D2T2   *+SP(148),B4      ; |252| 
$C$DW$347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$347, DW_AT_low_pc(0x08)
	.dwattr $C$DW$347, DW_AT_name("VLIB_createCCMap8Bit")
	.dwattr $C$DW$347, DW_AT_TI_call

           MV      .L2X    A12,B6            ; |252| 
||         MV      .L1X    B5,A6             ; |252| 
||         CALLP   .S2     VLIB_createCCMap8Bit,B3

$C$RL18:   ; CALL OCCURS {VLIB_createCCMap8Bit} {0}  ; |252| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 259,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 259 | blobList_totalBuf  =  sizeof(VLIB_blob) * numCCs;                      
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(36),B4       ; |259| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 252,column 13,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(108)      ; |252| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 259,column 13,is_stmt,isa 0
           SHL     .S2     B4,5,B4           ; |259| 
           STW     .D2T2   B4,*+SP(156)      ; |259| 
$C$DW$348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$348, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$348, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         MV      .L1X    B4,A4             ; |260| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 260,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 260 | blobListScratch    =  VLIB_malloc(blobList_totalBuf);                  
;----------------------------------------------------------------------
$C$RL19:   ; CALL OCCURS {VLIB_malloc} {0}   ; |260| 
           STW     .D2T1   A4,*+SP(120)      ; |260| 
$C$DW$349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$349, DW_AT_name("malloc")
	.dwattr $C$DW$349, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         LDW     .D2T1   *+SP(156),A4      ; |261| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 261,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 261 | blobListScratch_cn =  malloc(blobList_totalBuf);                       
;----------------------------------------------------------------------
$C$RL20:   ; CALL OCCURS {malloc} {0}        ; |261| 
$C$DW$L$VLIB_blobAnalysis_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$19$B:
;          EXCLUSIVE CPU CYCLES: 13

           LDW     .D2T1   *+SP(120),A0      ; |263| 
||         ZERO    .L2     B4                ; |263| 
||         MV      .S2X    A4,B0             ; |263| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 121,column 5,is_stmt,isa 0
           LDW     .D2T1   *+SP(156),A5      ; |121| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 263,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 263 | if((blobListScratch == NULL) || (blobListScratch_cn == NULL)) {        
;----------------------------------------------------------------------
   [ B0]   MVK     .L2     0x1,B4            ; |263| 
           ZERO    .L2     B5                ; |263| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 261,column 13,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(124)      ; |261| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 263,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 264 | if( blobListScratch ) {                                                
; 265 |     VLIB_free(blobListScratch);                                        
; 267 | if( blobListScratch_cn ) {                                             
; 268 |     free(blobListScratch_cn);                                          
; 270 | free(input_image);                                                     
; 271 | goto SKIP_TEST;                                                        
; 274 | tmpPtr    = (uint32_t)blobListScratch;                                 
; 275 | tmpPtr_cn = (uint32_t)blobListScratch_cn;                              
; 277 | imagBlobs.blobList  = (VLIB_blob *)blobAnalysis_malloc(&tmpPtr, blobLis
;     | t_totalBuf);                                                           
;----------------------------------------------------------------------
   [ A0]   MVK     .L2     0x1,B5            ; |263| 
           AND     .L2     B4,B5,B0          ; |263| 

   [!B0]   B       .S1     $C$L41            ; |263| 
|| [ B0]   ADD     .L1     7,A0,A3           ; |121| 
|| [ B0]   ADD     .L2X    7,A4,B4           ; |278| 
|| [ B0]   MVK     .D1     0x1,A0            ; nullify predicate

   [ B0]   AND     .L1     -8,A3,A3          ; |121| 
|| [ B0]   AND     .L2     -8,B4,B4          ; |278| 

           ADD     .L1     A3,A5,A4          ; |121| 
|| [ B0]   STW     .D2T1   A3,*+SP(92)       ; |277| 

$C$DW$350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$350, DW_AT_name("VLIB_createBlobList")
	.dwattr $C$DW$350, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_createBlobList ; |280| 
||         ADD     .L1     7,A4,A3           ; |121| 
||         LDW     .D2T1   *+SP(136),A4      ; |280| 

   [!A0]   BNOP    .S1     $C$L42,1          ; |264| 
|| [ B0]   AND     .L1     -8,A3,A3          ; |121| 

           ; BRANCHCC OCCURS {$C$L41}        ; |263| 
$C$DW$L$VLIB_blobAnalysis_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$20$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 121	-----------------------    C$36 = (unsigned)blobListScratch+7u&0xfffffff8u;  // [43]
;** 121	-----------------------    tmpPtr = (unsigned)blobList_totalBuf+C$36+7u&0xfffffff8u;  // [43]
;** 277	-----------------------    O$1.s3_1.u4_2.s4_3.l4_5.blobList = (struct lib_blob *)C$36;
;** 278	-----------------------    O$1.s3_1.u4_2.s4_3.l4_4.blobList = (struct lib_blob *)((unsigned)blobListScratch_cn+7u&0xfffffff8u);
;** 280	-----------------------    VLIB_createBlobList(handle, &O$1+20);
;** 283	-----------------------    VLIB_createBlobList_cn(handle, &O$1);
;** 287	-----------------------    v$10 = O$1.s3_1.u4_2.s4_3.l4_5.maxSize_y;
;** 287	-----------------------    if ( v$10 != O$1.s3_1.u4_2.s4_3.l4_4.maxSize_y ) goto g16;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 121,column 5,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(40)       ; |121| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 278,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 278 | imagBlobs_cn.blobList  = (VLIB_blob *)blobAnalysis_malloc(&tmpPtr_cn, b
;     | lobList_totalBuf);                                                     
;----------------------------------------------------------------------
           STW     .D2T2   B4,*+SP(72)       ; |278| 

           ADDAW   .D2     SP,19,B4          ; |280| 
||         ADDKPC  .S2     $C$RL21,B3,0      ; |280| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 280,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | VLIB_createBlobList(handle,                                            
; 281 |                 &imagBlobs);                                           
;----------------------------------------------------------------------
$C$RL21:   ; CALL OCCURS {VLIB_createBlobList} {0}  ; |280| 
$C$DW$L$VLIB_blobAnalysis_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$21$B:
;          EXCLUSIVE CPU CYCLES: 7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 283,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 283 | VLIB_createBlobList_cn(handle,                                         
; 284 |                    &imagBlobs_cn);                                     
; 286 | error = 0;                                                             
;----------------------------------------------------------------------
           ADDAW   .D2     SP,14,B4          ; |283| 
$C$DW$351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$351, DW_AT_name("VLIB_createBlobList_cn")
	.dwattr $C$DW$351, DW_AT_TI_call

           CALLP   .S2     VLIB_createBlobList_cn,B3
||         LDW     .D2T1   *+SP(136),A4      ; |283| 

$C$RL22:   ; CALL OCCURS {VLIB_createBlobList_cn} {0}  ; |283| 
$C$DW$L$VLIB_blobAnalysis_d$21$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$22$B:
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 287,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 287 | if((imagBlobs.maxSize_y != imagBlobs_cn.maxSize_y) ||\                 
; 288 |    (imagBlobs.maxSize_x != imagBlobs_cn.maxSize_x) ||\                 
; 289 |    (imagBlobs.numBlobs != imagBlobs_cn.numBlobs) ||\                   
; 290 |    (imagBlobs.maxNumItervals != imagBlobs_cn.maxNumItervals)) {        
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(80),B11      ; |287| 
           LDW     .D2T2   *+SP(60),B4       ; |287| 
           LDW     .D2T2   *+SP(84),B5       ; |287| 
           NOP             3

           CMPEQ   .L2     B11,B4,B0         ; |287| 
||         LDW     .D2T2   *+SP(64),B4       ; |287| 

   [!B0]   BNOP    .S1     $C$L17,2          ; |287| 
||         MV      .L2     B0,B1             ; guard predicate rewrite

   [ B1]   LDW     .D2T2   *+SP(56),B31      ; |287| 
           CMPEQ   .L2     B5,B4,B0          ; |287| 
   [ B0]   LDW     .D2T2   *+SP(76),B10      ; |287| 
           ; BRANCHCC OCCURS {$C$L17}        ; |287| 
$C$DW$L$VLIB_blobAnalysis_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$23$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 287	-----------------------    if ( O$1.s3_1.u4_2.s4_3.l4_5.maxSize_x != O$1.s3_1.u4_2.s4_3.l4_4.maxSize_x ) goto g15;
;** 287	-----------------------    v$5 = O$1.s3_1.u4_2.s4_3.l4_5.numBlobs;
;** 287	-----------------------    if ( v$5 != O$1.s3_1.u4_2.s4_3.l4_4.numBlobs ) goto g17;
           LDW     .D2T2   *+SP(68),B4       ; |287| 
           LDW     .D2T2   *+SP(88),B5       ; |287| 
           NOP             2

   [!B0]   LDW     .D2T2   *+SP(76),B10
|| [ B0]   CMPEQ   .L2     B10,B31,B0        ; |287| 
|| [!B0]   ZERO    .S2     B0                ; |287| 

   [!B0]   B       .S1     $C$L18            ; |287| 
||         MV      .L2     B0,B2             ; guard predicate rewrite
||         MV      .S2     B0,B1             ; branch predicate copy

   [ B2]   BNOP    .S1     $C$L19,1
||         CMPEQ   .L2     B5,B4,B0          ; |287| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 291,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 291 | error++;                                                               
;----------------------------------------------------------------------
   [!B0]   MVK     .L1     0x1,A10           ; |291| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 286,column 13,is_stmt,isa 0
   [ B0]   ZERO    .L1     A10               ; |286| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 291,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 294 | if( error > 0 ) {                                                      
; 295 |     status_nat_vs_int = vlib_KERNEL_FAIL;                              
; 296 |     goto FREE_AND_CONTINUE;                                            
; 299 | vlibBlobList        = imagBlobs.blobList;                              
; 300 | vlibBlobList_cn     = imagBlobs_cn.blobList;                           
;----------------------------------------------------------------------
   [!B1]   MVK     .L1     0x1,A10           ; |291| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 287,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |287| 
$C$DW$L$VLIB_blobAnalysis_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$24$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 287	-----------------------    if ( O$1.s3_1.u4_2.s4_3.l4_5.maxNumItervals != O$1.s3_1.u4_2.s4_3.l4_4.maxNumItervals ) goto g17;
;** 286	-----------------------    error = 0;
;**  	-----------------------    goto g18;
;**	-----------------------g15:
;**  	-----------------------    v$5 = O$1.s3_1.u4_2.s4_3.l4_5.numBlobs;
;**  	-----------------------    goto g17;

           CMPGT   .L1     A10,0,A0          ; |294| 
||         LDW     .D2T1   *+SP(92),A11      ; |294| 

           ; BRANCH OCCURS {$C$L19}  
$C$DW$L$VLIB_blobAnalysis_d$24$E:
;** --------------------------------------------------------------------------*
$C$L17:    
$C$DW$L$VLIB_blobAnalysis_d$25$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g16:
;**  	-----------------------    v$5 = O$1.s3_1.u4_2.s4_3.l4_5.numBlobs;

           MVK     .L1     0x1,A10           ; |291| 
||         LDW     .D2T2   *+SP(76),B10

$C$DW$L$VLIB_blobAnalysis_d$25$E:
;** --------------------------------------------------------------------------*
$C$L18:    
$C$DW$L$VLIB_blobAnalysis_d$26$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g17:
;** 291	-----------------------    error = 1;

           LDW     .D2T1   *+SP(92),A11      ; |294| 
||         CMPGT   .L1     A10,0,A0          ; |294| 

$C$DW$L$VLIB_blobAnalysis_d$26$E:
;** --------------------------------------------------------------------------*
$C$L19:    
$C$DW$L$VLIB_blobAnalysis_d$27$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g18:
;** 294	-----------------------    v$6 = O$1.s3_1.u4_2.s4_3.l4_5.blobList;
;** 294	-----------------------    if ( error > 0 ) goto g43;

   [!A0]   LDW     .D2T2   *+SP(72),B4       ; |300| 
|| [ A0]   B       .S1     $C$L34            ; |294| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 302,column 25,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | for( i = 0; i < imagBlobs.numBlobs; i++ ) {                            
;----------------------------------------------------------------------
   [!A0]   LDW     .D2T2   *+SP(88),B22      ; |302| 
   [!A0]   LDW     .D2T2   *+SP(84),B12      ; |302| 

           CMPGT   .L2     B10,0,B0          ; |302| 
|| [ A0]   ZERO    .S2     B10               ; |295| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 300,column 13,is_stmt,isa 0
   [ A0]   MVK     .L2     0x1,B0            ; |300| nullify predicate

   [!B0]   B       .S1     $C$L23            ; |302| 
|| [!A0]   STW     .D2T2   B4,*+SP(188)      ; |300| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 294,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L34}        ; |294| 
$C$DW$L$VLIB_blobAnalysis_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$28$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 300	-----------------------    vlibBlobList_cn = O$1.s3_1.u4_2.s4_3.l4_4.blobList;
;** 302	-----------------------    v$9 = O$1.s3_1.u4_2.s4_3.l4_5.maxSize_x;
;** 302	-----------------------    v$8 = O$1.s3_1.u4_2.s4_3.l4_5.maxNumItervals;
;** 302	-----------------------    if ( v$5 <= 0 ) goto g22;
   [ B0]   SUB     .L2     B10,1,B5
   [ B0]   ADD     .L2     12,B4,B19
   [ B0]   MV      .L2     B4,B17
   [ B0]   ADD     .L2     8,B4,B20
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 302,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |302| 
$C$DW$L$VLIB_blobAnalysis_d$28$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 303,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | if((vlibBlobList[i].xmin != vlibBlobList_cn[i].xmin) || \              
; 304 |    (vlibBlobList[i].xmax != vlibBlobList_cn[i].xmax) || \              
; 305 |    (vlibBlobList[i].ymin != vlibBlobList_cn[i].ymin) || \              
; 306 |    (vlibBlobList[i].ymax != vlibBlobList_cn[i].ymax) || \              
; 307 |    (vlibBlobList[i].area != vlibBlobList_cn[i].area) || \              
; 308 |    (vlibBlobList[i].numIntervals != vlibBlobList_cn[i].numIntervals) ||
;     |  \                                                                     
; 309 |    (vlibBlobList[i].iiValue != vlibBlobList_cn[i].iiValue) || \        
; 310 |    (vlibBlobList[i].ccmapColor != vlibBlobList_cn[i].ccmapColor)) {    
;----------------------------------------------------------------------
$C$DW$L$VLIB_blobAnalysis_d$29$B:
;**  	-----------------------    U$171 = v$6;
;**  	-----------------------    U$174 = vlibBlobList_cn;
;** 303	-----------------------    L$2 = v$5;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g21:
;** 311	-----------------------    error += ((*U$171).xmin != (*U$174).xmin)|((*U$171).xmax != (*U$174).xmax)|((*U$171).ymin != (*U$174).ymin)|((*U$171).ymax != (*U$174).ymax)|((*U$171).area != (*U$174).area)|((*U$171).numIntervals != (*U$174).numIntervals)|((*U$171).iiValue != (*U$174).iiValue)|((*U$171).ccmapColor != (*U$174).ccmapColor);
;** 302	-----------------------    U$171 += 32;
;** 302	-----------------------    U$174 += 32;
;** 302	-----------------------    if ( L$2 = L$2-1 ) goto g21;
$C$DW$L$VLIB_blobAnalysis_d$29$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c
;*      Loop source line                 : 302
;*      Loop opening brace source line   : 302
;*      Loop closing brace source line   : 313
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 2
;*      Unpartitioned Resource Bound     : 8
;*      Partitioned Resource Bound(*)    : 8
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     7        1     
;*      .S units                     0        0     
;*      .D units                     8*       8*    
;*      .M units                     0        0     
;*      .X cross paths               7        2     
;*      .T address paths             8*       8*    
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          7        3     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             4        1     
;*      Bound(.L .S .D .LS .LSD)     8*       4     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 8  Schedule found with 3 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   *******      *****           |    ******      ******          |
;*       1: |   *******      ****            |    ******      ******          |
;*       2: |   *******      ****            |    ******      *****           |
;*       3: |   *******      ****            |    ******      *****           |
;*       4: |   *******      ****            |    ******      *****           |
;*       5: |   *******      ****            |     *****      ******          |
;*       6: |   *******      *** *           |    ******      ******          |
;*       7: |   *******      *****           |    ******      ******          |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh32
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.750, max 6.000 }
;*      Mem bank perf. penalty (est.) : 8.6%
;*
;*      Effective ii                : { min 8.00, est 8.75, max 14.00 }
;*
;*
;*      Total cycles (est.)         : 16 + trip_cnt * 8        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MV              B6,B9
;*                  ADDK            28,B9
;*                  MV              B6,B16
;*                  ADDK            24,B16
;*                  MV              B6,B17
;*                  ADDK            20,B17
;*                  MV              B6,B18
;*                  ADDK            16,B18
;*                  MV              B6,B19
;*                  ADD             12,B19,B19
;*                  MV              B6,B20
;*                  ADD             8,B20,B20
;*                  MV              B6,A16
;*                  ADD             4,A16,A16
;*                  MV              A17,A4
;*                  ADDK            28,A4
;*                  MV              A17,A5
;*                  ADDK            24,A5
;*                  MV              A17,A6
;*                  ADDK            20,A6
;*                  MV              A17,A7
;*                  ADDK            16,A7
;*                  MV              A17,A8
;*                  ADD             12,A8,A8
;*                  MV              A17,A9
;*                  ADD             8,A9,A9
;*                  MV              A17,B8
;*                  ADD             4,B8,B8
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C414:
;*   0              LDW     .D1T1   *A17++(32),A18    ; |311| 
;*     ||           LDW     .D2T2   *B8++(32),B21     ; |311| 
;*   1              LDW     .D2T2   *B6++(32),B4      ; |311| 
;*     ||           LDW     .D1T1   *A16++(32),A20    ; |311| 
;*   2              LDW     .D2T2   *B9++(32),B4      ; |311| 
;*     ||           LDW     .D1T1   *A4++(32),A3      ; |311| 
;*   3              LDW     .D2T2   *B20++(32),B21    ; |311| 
;*     ||           LDW     .D1T1   *A9++(32),A20     ; |311| 
;*   4              LDW     .D2T2   *B19++(32),B21    ; |311| 
;*     ||           LDW     .D1T1   *A8++(32),A19     ; |311| 
;*   5              LDW     .D2T2   *B18++(32),B4     ; |311| 
;*     ||           LDW     .D1T1   *A7++(32),A19     ; |311| 
;*   6              CMPEQ   .L1X    A18,B4,A19        ; |311| 
;*     ||           LDW     .D2T2   *B17++(32),B4     ; |311| 
;*     ||           LDW     .D1T1   *A6++(32),A18     ; |311| 
;*   7              CMPEQ   .L1X    B21,A20,A3        ; |311| 
;*     ||           LDW     .D2T2   *B16++(32),B4     ; |311| 
;*     ||           LDW     .D1T1   *A5++(32),A19     ; |311| 
;*     ||           CMPEQ   .L2X    A3,B4,B7          ; |311| 
;*   8              AND     .S1     A19,A3,A3
;*     ||           CMPEQ   .L1X    A20,B21,A18       ; |311| 
;*   9              AND     .S1     A3,A18,A3
;*     ||           CMPEQ   .L1X    A19,B21,A18       ; |311| 
;*  10              AND     .S1     A3,A18,A3
;*     ||           CMPEQ   .L1X    A19,B4,A19        ; |311| 
;*  11              AND     .S1     A3,A19,A3
;*     ||           CMPEQ   .L1X    A18,B4,A18        ; |311| 
;*  12              AND     .S1     A3,A18,A3
;*     ||           CMPEQ   .L1X    A19,B4,A19        ; |311| 
;*  13              AND     .L1     A3,A19,A3
;*  14              XOR     .S1     1,A3,A18          ;  ^ 
;*  15              XOR     .S2     1,B7,B4           ; |311| 
;*  16              OR      .L2X    B4,A18,B4         ; |311|  ^ 
;*  17              ADD     .L2     B4,B5,B5          ; |311| 
;*     ||           SPBR            $C$C414
;*  18              NOP             6
;*  24              ; BRANCHCC OCCURS {$C$C414}       ; |302| 
;*----------------------------------------------------------------------------*
$C$L20:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 17

           SPLOOPD 8       ;24               ; (P) 
||         MV      .L2     B4,B18
||         ADD     .D2X    4,A11,B8
||         MV      .L1     A11,A17
||         MVC     .S2     B5,ILC

;** --------------------------------------------------------------------------*
$C$L21:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_blobAnalysis_d$31$B:
;          EXCLUSIVE CPU CYCLES: 8

           SPMASK          L1,S1,L2,S2
||         MV      .L1     A11,A4
||         ADD     .S1X    4,B4,A16
||         MV      .L2     B4,B9
||         MV      .S2     B4,B6
||         LDW     .D1T1   *A17++(32),A18    ; |311| (P) <0,0> 
||         LDW     .D2T2   *B8++(32),B21     ; |311| (P) <0,0> 

           SPMASK          S1,L2,S2
||         MV      .L2     B4,B16
||         ADDK    .S2     28,B9
||         ADDK    .S1     28,A4
||         LDW     .D2T2   *B6++(32),B4      ; |311| (P) <0,1> 
||         LDW     .D1T1   *A16++(32),A20    ; |311| (P) <0,1> 

           SPMASK          L1
||         ADD     .L1     8,A11,A9
||         LDW     .D2T2   *B9++(32),B4      ; |311| (P) <0,2> 
||         LDW     .D1T1   *A4++(32),A3      ; |311| (P) <0,2> 

           SPMASK          L1,S1
||         MV      .L1     A11,A7
||         ADD     .S1     12,A11,A8
||         LDW     .D2T2   *B20++(32),B21    ; |311| (P) <0,3> 
||         LDW     .D1T1   *A9++(32),A20     ; |311| (P) <0,3> 

           SPMASK          L1,S1,S2
||         MV      .L1     A11,A6
||         ADDK    .S2     16,B18
||         ADDK    .S1     16,A7
||         LDW     .D2T2   *B19++(32),B21    ; |311| (P) <0,4> 
||         LDW     .D1T1   *A8++(32),A19     ; |311| (P) <0,4> 

           SPMASK          L1,S1,S2
||         MV      .L1     A11,A5
||         ADDK    .S1     20,A6
||         ADDK    .S2     20,B17
||         LDW     .D2T2   *B18++(32),B4     ; |311| (P) <0,5> 
||         LDW     .D1T1   *A7++(32),A19     ; |311| (P) <0,5> 

           SPMASK          S1,S2
||         ADDK    .S2     24,B16
||         ADDK    .S1     24,A5
||         LDW     .D2T2   *B17++(32),B4     ; |311| (P) <0,6> 
||         LDW     .D1T1   *A6++(32),A18     ; |311| (P) <0,6> 
||         CMPEQ   .L1X    A18,B4,A19        ; |311| (P) <0,6> 

           CMPEQ   .L2X    A3,B4,B7          ; |311| (P) <0,7> 
||         LDW     .D2T2   *B16++(32),B4     ; |311| (P) <0,7> 
||         LDW     .D1T1   *A5++(32),A19     ; |311| (P) <0,7> 
||         CMPEQ   .L1X    B21,A20,A3        ; |311| (P) <0,7> 

           CMPEQ   .L1X    A20,B21,A18       ; |311| (P) <0,8> 
||         AND     .S1     A19,A3,A3         ; (P) <0,8> 

           CMPEQ   .L1X    A19,B21,A18       ; |311| (P) <0,9> 
||         AND     .S1     A3,A18,A3         ; (P) <0,9> 

           CMPEQ   .L1X    A19,B4,A19        ; |311| (P) <0,10> 
||         AND     .S1     A3,A18,A3         ; (P) <0,10> 

           CMPEQ   .L1X    A18,B4,A18        ; |311| (P) <0,11> 
||         AND     .S1     A3,A19,A3         ; (P) <0,11> 

           CMPEQ   .L1X    A19,B4,A19        ; |311| (P) <0,12> 
||         AND     .S1     A3,A18,A3         ; (P) <0,12> 

           AND     .L1     A3,A19,A3         ; (P) <0,13> 

           SPMASK          L2
||         MV      .L2X    A10,B5
||         XOR     .S1     1,A3,A18          ; (P) <0,14>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 311,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
; 311 | error++;                                                               
;----------------------------------------------------------------------
           XOR     .S2     1,B7,B4           ; |311| (P) <0,15> 
           OR      .L2X    B4,A18,B4         ; |311| <0,16>  ^ 

           SPKERNEL 1,0
||         ADD     .L2     B4,B5,B5          ; |311| <0,17> 

$C$DW$L$VLIB_blobAnalysis_d$31$E:
;** --------------------------------------------------------------------------*
$C$L22:    ; PIPED LOOP EPILOG
;          EXCLUSIVE CPU CYCLES: 10
           NOP             2
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$33$B:
;          EXCLUSIVE CPU CYCLES: 2
           NOP             1
           MV      .L1X    B5,A10
$C$DW$L$VLIB_blobAnalysis_d$33$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 302,column 25,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$34$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g22:
;** 315	-----------------------    if ( error > 0 ) goto g43;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 315,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 315 | if( error > 0 ) {                                                      
; 316 |     status_nat_vs_int = vlib_KERNEL_FAIL;                              
; 317 |     goto FREE_AND_CONTINUE;                                            
; 321 | maxSize_y        = imagBlobs.maxSize_y;                                
; 322 | maxSize_x        = imagBlobs.maxSize_x;                                
; 323 | numBlobs         = imagBlobs.numBlobs;                                 
; 324 | maxNumItervals   = imagBlobs.maxNumItervals;                           
; 325 | vlibBlobList     = imagBlobs.blobList;                                 
; 327 | boxBufSize      = sizeof(VLIB_blobAnalysis_box) * numBlobs;            
; 328 | circleBufSize   = sizeof(VLIB_blobAnalysis_circle) * numBlobs;         
; 329 | boundaryBufSize = sizeof(VLIB_blobAnalysis_point) * (maxSize_y + maxSiz
;     | e_x) * 2;                                                              
; 330 | polygonBufSize  = sizeof(VLIB_blobAnalysis_point) * (maxSize_y + maxSiz
;     | e_x) * 2;                                                              
;----------------------------------------------------------------------
           CMPGT   .L1     A10,0,A0          ; |315| 
   [ A0]   B       .S1     $C$L34            ; |315| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 331,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | VLIB_getblobIIBufSize(imageHeight, maxNumItervals, &blobIIBufSize);    
;----------------------------------------------------------------------
$C$DW$352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$352, DW_AT_name("VLIB_getblobIIBufSize")
	.dwattr $C$DW$352, DW_AT_TI_call
   [!A0]   CALL    .S1     VLIB_getblobIIBufSize ; |331| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 295,column 17,is_stmt,isa 0
   [ A0]   ZERO    .L2     B10               ; |295| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 315,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L34}        ; |315| 
$C$DW$L$VLIB_blobAnalysis_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$35$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 323	-----------------------    numBlobs = v$5;
;** 325	-----------------------    vlibBlobList = v$6;
;** 327	-----------------------    boxBufSize = numBlobs*20u;
;** 328	-----------------------    circleBufSize = numBlobs*12u;
;** 329	-----------------------    C$35 = (unsigned)v$9<<4;
;** 329	-----------------------    C$34 = (unsigned)v$10<<4;
;** 329	-----------------------    boundaryBufSize = C$34+C$35;
;** 330	-----------------------    polygonBufSize = boundaryBufSize;
;** 331	-----------------------    VLIB_getblobIIBufSize(U$101, v$8, &blobIIBufSize);
;** 332	-----------------------    perimeterBufSize = numBlobs*4;
;** 334	-----------------------    Blob_analysis_totalBuf = polygonBufSize*2u+blobIIBufSize+boxBufSize+circleBufSize+perimeterBufSize+48u;
;** 340	-----------------------    pBlobScratch = VLIB_malloc((unsigned)Blob_analysis_totalBuf);
;** 341	-----------------------    pBlobScratch_cn = malloc(((unsigned)numBlobs+v$10+v$9<<5)+blobIIBufSize+perimeterBufSize+48u);
;** 344	-----------------------    if ( !((pBlobScratch != NULL)&(pBlobScratch_cn != NULL)) ) goto g42;

           ADDAW   .D1X    SP,11,A6          ; |331| 
||         MV      .L2     B22,B4            ; |331| 
||         MV      .L1     A12,A4            ; |331| 
||         ADDKPC  .S2     $C$RL23,B3,0      ; |331| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 331,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 332 | perimeterBufSize= sizeof(int32_t) * numBlobs;                          
; 334 | Blob_analysis_totalBuf = boxBufSize       +\                           
; 335 |                          circleBufSize    +\                           
; 336 |                          boundaryBufSize  +\                           
; 337 |                          polygonBufSize   +\                           
; 338 |                          blobIIBufSize    +\                           
; 339 |                          perimeterBufSize + 8 * 6;                     
;----------------------------------------------------------------------
$C$RL23:   ; CALL OCCURS {VLIB_getblobIIBufSize} {0}  ; |331| 
$C$DW$L$VLIB_blobAnalysis_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$36$B:
;          EXCLUSIVE CPU CYCLES: 31

           LDW     .D2T2   *+SP(44),B4       ; |334| 
||         SHL     .S1X    B12,4,A13         ; |329| 
||         MV      .L2     B10,B0            ; |323| 
||         SHL     .S2     B11,4,B13         ; |329| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 327,column 13,is_stmt,isa 0
           SHL     .S2     B0,4,B5           ; |327| 

           ADD     .L2X    A13,B13,B6        ; |329| 
||         ADDAW   .D2     B5,B0,B5          ; |327| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 329,column 13,is_stmt,isa 0
           STW     .D2T2   B6,*+SP(200)      ; |329| 

           ADD     .L2X    A13,B13,B31       ; |329| 
||         STW     .D2T2   B5,*+SP(184)      ; |327| 

           ADDAH   .D2     B4,B31,B4         ; |334| 
||         MV      .L2     B5,B6             ; |334| 
||         SHL     .S2     B0,3,B30          ; |328| 

           ADD     .L2     B6,B4,B4          ; |334| 
||         ADDAW   .D2     B30,B0,B5         ; |328| 

           ADD     .L2     B5,B4,B4          ; |334| 
||         SHL     .S1X    B0,2,A12          ; |332| 

           ADD     .L1X    A13,B13,A3        ; |329| 
||         STW     .D2T2   B0,*+SP(192)      ; |323| 

           STW     .D2T1   A3,*+SP(204)      ; |330| 
||         ADD     .L1X    A12,B4,A3         ; |334| 

           ADDAD   .D1     A3,6,A3           ; |334| 
||         STW     .D2T2   B5,*+SP(196)      ; |334| 

$C$DW$353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$353, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$353, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         MV      .L1     A3,A4             ; |340| 
||         STW     .D2T1   A3,*+SP(160)      ; |340| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 340,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | pBlobScratch       = VLIB_malloc(Blob_analysis_totalBuf);              
;----------------------------------------------------------------------
$C$RL24:   ; CALL OCCURS {VLIB_malloc} {0}   ; |340| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 341,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | pBlobScratch_cn    = malloc(Blob_analysis_totalBuf);                   
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(44),B4       ; |341| 
           ADD     .L2     B11,B10,B5        ; |341| 
           ADD     .L2     B12,B5,B5         ; |341| 
           SHL     .S2     B5,5,B5           ; |341| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 340,column 13,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(128)      ; |340| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 341,column 13,is_stmt,isa 0
           ADD     .L2     B4,B5,B4          ; |341| 
           NOP             1
           ADD     .L1X    A12,B4,A3         ; |341| 
$C$DW$354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$354, DW_AT_low_pc(0x04)
	.dwattr $C$DW$354, DW_AT_name("malloc")
	.dwattr $C$DW$354, DW_AT_TI_call

           ADDAD   .D1     A3,6,A4           ; |341| 
||         CALLP   .S2     malloc,B3

$C$RL25:   ; CALL OCCURS {malloc} {0}        ; |341| 
$C$DW$L$VLIB_blobAnalysis_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$37$B:
;          EXCLUSIVE CPU CYCLES: 13

           LDW     .D2T1   *+SP(128),A0      ; |344| 
||         MV      .L2X    A4,B0             ; |344| 
||         ZERO    .L1     A3                ; |344| 

   [ B0]   MVK     .L1     0x1,A3            ; |344| 
||         STW     .D2T1   A4,*+SP(132)      ; |341| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 344,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 344 | if( pBlobScratch && pBlobScratch_cn ) {                                
; 347 |     tmpPtr = (uint32_t)pBlobScratch;                                   
;----------------------------------------------------------------------
           ZERO    .L1     A4                ; |344| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 348,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | boxes           = (VLIB_blobAnalysis_box     *)blobAnalysis_malloc(&tmp
;     | Ptr, boxBufSize);                                                      
; 349 | circles         = (VLIB_blobAnalysis_circle  *)blobAnalysis_malloc(&tmp
;     | Ptr, circleBufSize);                                                   
; 350 | blobBoundary    = (VLIB_blobAnalysis_point   *)blobAnalysis_malloc(&tmp
;     | Ptr, boundaryBufSize);                                                 
; 351 | polygonBoundary = (VLIB_blobAnalysis_point   *)blobAnalysis_malloc(&tmp
;     | Ptr, polygonBufSize);                                                  
; 352 | blob_ii         = (AVMii                     *)blobAnalysis_malloc(&tmp
;     | Ptr, blobIIBufSize);                                                   
; 353 | perimeter       = (uint32_t                 *)blobAnalysis_malloc(&tmpP
;     | tr, perimeterBufSize);                                                 
; 356 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 358 | for( i = 0; i < numBlobs; i++ ) {                                      
; 359 |     int32_t    numPolygonPt;                                           
; 362 |     VLIB_createBlobIntervalImg(handle, blob_ii, &vlibBlobList[i]);     
; 365 |     VLIB_calcBlobPerimeter(                                            
; 366 |         imagBlobs.blobList[i].ccmapColor,                              
; 367 |         imageWidth,                                                    
; 368 |         blob_ii,                                                       
; 369 |         CCMap,                                                         
; 370 |         &perimeter[i]);                                                
; 372 |     VLIB_calcBlobMinEnclosedPolygon(blob_ii, blobBoundary, polygonBound
;     | ary, &numPolygonPt);                                                   
; 374 |     VLIB_calcBlobMinEnclosedRect(numPolygonPt, polygonBoundary, &boxes[
;     | i]);                                                                   
; 376 |     VLIB_calcBlobMinEnclosedCircle(numPolygonPt, polygonBoundary, &circ
;     | les[i]);                                                               
; 379 | VLIB_profile_stop();                                                   
; 382 | tmpPtr = (uint32_t)pBlobScratch_cn;                                    
; 383 | boxes_cn           = (VLIB_blobAnalysis_box     *)blobAnalysis_malloc(&
;     | tmpPtr, boxBufSize);                                                   
; 384 | circles_cn         = (VLIB_blobAnalysis_circle  *)blobAnalysis_malloc(&
;     | tmpPtr, circleBufSize);                                                
; 385 | blobBoundary_cn    = (VLIB_blobAnalysis_point   *)blobAnalysis_malloc(&
;     | tmpPtr, boundaryBufSize);                                              
; 386 | polygonBoundary_cn = (VLIB_blobAnalysis_point   *)blobAnalysis_malloc(&
;     | tmpPtr, polygonBufSize);                                               
; 387 | blob_ii_cn         = (AVMii                     *)blobAnalysis_malloc(&
;     | tmpPtr, blobIIBufSize);                                                
; 388 | perimeter_cn       = (uint32_t                  *)blobAnalysis_malloc(&
;     | tmpPtr, perimeterBufSize);                                             
; 391 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 393 | for( i = 0; i < numBlobs; i++ ) {                                      
; 394 |     int32_t    numPolygonPt_cn;                                        
; 397 |     VLIB_createBlobIntervalImg_cn(handle, blob_ii_cn, &vlibBlobList_cn[
;     | i]);                                                                   
; 400 |     VLIB_calcBlobPerimeter_cn(                                         
; 401 |         imagBlobs_cn.blobList[i].ccmapColor,                           
; 402 |         imageWidth,                                                    
; 403 |         blob_ii_cn,                                                    
; 404 |         CCMap,                                                         
; 405 |         &perimeter_cn[i]);                                             
; 407 |     VLIB_calcBlobMinEnclosedPolygon_cn(blob_ii_cn, blobBoundary_cn, pol
;     | ygonBoundary_cn, &numPolygonPt_cn);                                    
; 409 |     VLIB_calcBlobMinEnclosedRect_cn(numPolygonPt_cn, polygonBoundary_cn
;     | , &boxes_cn[i]);                                                       
; 411 |     VLIB_calcBlobMinEnclosedCircle_cn(numPolygonPt_cn, polygonBoundary_
;     | cn, &circles_cn[i]);                                                   
; 414 | VLIB_profile_stop();                                                   
; 417 | for( i = 0; i < numBlobs; i++ ) {                                      
; 418 |     error += perimeter[i] != perimeter_cn[i];                          
; 419 |     error += vlibBlobList[i].ccmapColor != vlibBlobList_cn[i].ccmapColo
;     | r;                                                                     
; 421 |     error += vlibBlobList[i].area != vlibBlobList_cn[i].area;          
; 423 |     error += vlibBlobList[i].ymin != vlibBlobList_cn[i].ymin;          
; 424 |     error += vlibBlobList[i].ymax != vlibBlobList_cn[i].ymax;          
; 425 |     error += vlibBlobList[i].xmin != vlibBlobList_cn[i].xmin;          
; 426 |     error += vlibBlobList[i].xmax != vlibBlobList_cn[i].xmax;          
; 428 |     error += fabs(circles[i].x      - circles_cn[i].x) > ERROR_THRESHOL
;     | D;                                                                     
; 429 |     error += fabs(circles[i].y      - circles_cn[i].y) > ERROR_THRESHOL
;     | D;                                                                     
; 430 |     error += fabs(circles[i].radius - circles_cn[i].radius) > ERROR_THR
;     | ESHOLD;                                                                
; 443 |     error += fabs(boxes[i].x - boxes_cn[i].x) > ERROR_THRESHOLD;       
; 444 |     error += fabs(boxes[i].y - boxes_cn[i].y) > ERROR_THRESHOLD;       
; 445 |     if( fabs(boxes[i].angle - boxes_cn[i].angle - 0.f) < ERROR_THRESHOL
;     | D ) {                                                                  
; 446 |         error += fabs(boxes[i].w - boxes_cn[i].w) > ERROR_THRESHOLD;   
; 447 |         error += fabs(boxes[i].h - boxes_cn[i].h) > ERROR_THRESHOLD;   
; 448 |     } else if( fabs(fabs(boxes[i].angle - boxes_cn[i].angle) - 90.f) <
;     | ERROR_THRESHOLD ) {                                                    
; 449 |         error += fabs(boxes[i].w - boxes_cn[i].h) > ERROR_THRESHOLD;   
; 450 |         error += fabs(boxes[i].h - boxes_cn[i].w) > ERROR_THRESHOLD;   
; 451 |     } else if( fabs(fabs(boxes[i].angle - boxes_cn[i].angle) - 180.f) <
;     |  ERROR_THRESHOLD ) {                                                   
; 452 |         error += fabs(boxes[i].w - boxes_cn[i].w) > ERROR_THRESHOLD;   
; 453 |         error += fabs(boxes[i].h - boxes_cn[i].h) > ERROR_THRESHOLD;   
; 454 |     } else {                                                           
; 455 |         error++;                                                       
; 459 | status_nat_vs_int = (error == 0) ? vlib_KERNEL_PASS : vlib_KERNEL_FAIL;
; 462 | if( prm[tpi].staticOut != NULL ) {                                     
; 463 |     if( prm[tpi].numBlobs == numBlobs ) {                              
; 464 |         blobAnalysis_resultParams_t   *staticOutPtr;                   
; 465 |         staticOutPtr = prm[tpi].staticOut;                             
; 466 |         error = 0;                                                     
; 468 |         for( i = 0; i < numBlobs; i++ ) {                              
; 469 |             error += perimeter[i] != staticOutPtr[i].perimeter;        
; 470 |             error += vlibBlobList[i].ccmapColor != staticOutPtr[i].ccMa
;     | pColor;                                                                
; 472 |             error += vlibBlobList[i].area != staticOutPtr[i].area;     
; 474 |             error += vlibBlobList[i].ymin != staticOutPtr[i].ymin;     
; 475 |             error += vlibBlobList[i].ymax + 1 != staticOutPtr[i].ymax; 
; 476 |             error += vlibBlobList[i].xmin != staticOutPtr[i].xmin;     
; 477 |             error += vlibBlobList[i].xmax + 1 != staticOutPtr[i].xmax; 
; 479 |             error += fabs(circles[i].x - staticOutPtr[i].circle_x) > ER
;     | ROR_THRESHOLD;                                                         
; 480 |             error += fabs(circles[i].y - staticOutPtr[i].circle_y) > ER
;     | ROR_THRESHOLD;                                                         
; 481 |             error += fabs(circles[i].radius - staticOutPtr[i].circle_r)
;     |  > ERROR_THRESHOLD;                                                    
; 494 |             error += fabs(boxes[i].x - staticOutPtr[i].rect_center_x) >
;     |  ERROR_THRESHOLD;                                                      
; 495 |             error += fabs(boxes[i].y - staticOutPtr[i].rect_center_y) >
;     |  ERROR_THRESHOLD;                                                      
; 497 |             if( fabs(fabs(boxes[i].angle - staticOutPtr[i].rect_sita) -
;     |  0.f) < ERROR_THRESHOLD ) {                                            
; 498 |                 error += fabs(boxes[i].w - staticOutPtr[i].rect_width)
;     | > ERROR_THRESHOLD;                                                     
; 499 |                 error += fabs(boxes[i].h - staticOutPtr[i].rect_height)
;     |  > ERROR_THRESHOLD;                                                    
; 500 |             } else if( fabs(fabs(boxes[i].angle - staticOutPtr[i].rect_
;     | sita) - 90.f) < ERROR_THRESHOLD ) {                                    
; 501 |                 error += fabs(boxes[i].w - staticOutPtr[i].rect_height)
;     |  > ERROR_THRESHOLD;                                                    
; 502 |                 error += fabs(boxes[i].h - staticOutPtr[i].rect_width)
;     | > ERROR_THRESHOLD;                                                     
; 503 |             } else if( fabs(fabs(boxes[i].angle - staticOutPtr[i].rect_
;     | sita) - 180.f) < ERROR_THRESHOLD ) {                                   
; 504 |                 error += fabs(boxes[i].w - staticOutPtr[i].rect_width)
;     | > ERROR_THRESHOLD;                                                     
; 505 |                 error += fabs(boxes[i].h - staticOutPtr[i].rect_height)
;     |  > ERROR_THRESHOLD;                                                    
; 506 |             } else {                                                   
; 507 |                 error++;                                               
; 511 |         status_nat_vs_ref = (error > 0) ? vlib_KERNEL_FAIL : vlib_KERNE
;     | L_PASS;                                                                
; 512 |     } else {                                                           
; 513 |         status_nat_vs_ref = vlib_KERNEL_FAIL;                          
; 517 | FREE_AND_CONTINUE:                                                     
; 519 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_ref =
;     | = vlib_KERNEL_FAIL)) ? 1 : 0;                                          
; 520 | est_test=1;                                                            
; 523 | sprintf(desc, "%3d blobs, %8d bytes, %6d bytes, %6d bytes",\           
; 524 |         (int)numBlobs,                                                 
; 525 |         ccl_totalBuf,\                                                 
; 526 |         blobList_totalBuf,\                                            
; 527 |         Blob_analysis_totalBuf);                                       
; 528 | VLIB_formula_add_test(imageWidth * imageHeight, (int)NULL, (int)NULL, f
;     | ail, desc, (int)NULL);                                                 
; 532 | #if GENERATE_MATLAB                                                    
; 533 | FILE      *fmat;                                                       
; 534 | int32_t    xmin, ymin, xmax, ymax, area;                               
; 535 | char       name[32]={ "..\\..\\" };                                    
; 537 | sprintf(&name[6], "img%d.m", tpi + 1);                                 
; 539 | fmat = fopen(name, "w");                                               
; 540 | fprintf(fmat, "bmp = [\n");                                            
; 542 | for( i = 0; i < prm[tpi].imageHeight; i++ ) {                          
; 543 |     int    j;                                                          
; 545 |     for( j = 0; j < prm[tpi].imageWidth; j++ ) {                       
; 546 |         fprintf(fmat, "%2d", prm[tpi].staticIn[i * prm[tpi].imageWidth
;     | + j] > 0);                                                             
; 549 |     fprintf(fmat, "\n");                                               
; 552 | fprintf(fmat, "];\n");                                                 
; 553 | fprintf(fmat, "colormap('gray');\n");                                  
; 554 | fprintf(fmat, "imagesc(bmp)\n");                                       
; 555 | fprintf(fmat, "\n");                                                   
; 557 | fprintf(fmat, " center=[\n");                                          
; 559 | for( i = 0; i < numBlobs; i++ ) {                                      
; 560 |     ymin = vlibBlobList[i].ymin;                                       
; 561 |     ymax = vlibBlobList[i].ymax + 1;                                   
; 562 |     xmin = vlibBlobList[i].xmin;                                       
; 563 |     xmax = vlibBlobList[i].xmax + 1;                                   
; 564 |     area = vlibBlobList[i].area;                                       
; 565 |     fprintf(fmat, " %3d, %4d, %4d, %4d, %4d, %4d, %4d, %3.3f, %3.2f, %3
;     | .2f, %3.2f, %3.2f, %3.2f, %3.2f, %3.2f\n", vlibBlobList[i].ccmapColor, 
;     | area, perimeter[i], xmin, ymin, xmax, ymax,\                           
; 566 |             boxes[i].x, boxes[i].y, boxes[i].angle,\                   
; 567 |             boxes[i].w, boxes[i].h,\                                   
; 568 |             circles[i].x, circles[i].y, circles[i].radius);            
; 571 | fprintf(fmat, "];\n");                                                 
; 574 | fprintf(fmat, "for i = 1:size(center,1)\n");                           
; 575 | fprintf(fmat, "base = 7;               \n");                           
; 576 | fprintf(fmat, "  x = center(i,base+1);
;     |  \n");                                                                 
; 577 | fprintf(fmat, "  y = center(i,base+2);
;     |  \n");                                                                 
; 578 | fprintf(fmat, "  sita = center(i,base+3)/90*pi/2;
;     |  \n");                                                                 
; 579 | fprintf(fmat, "  imageWidth = center(i,base+4);
;     |       \n");                                                            
; 580 | fprintf(fmat, "  imageHeight = center(i,base+5);
;     |       \n");                                                            
; 581 | fprintf(fmat, "
;     |  \n");                                                                 
; 582 | fprintf(fmat, "  A(1) = x + imageHeight/2*cos(pi/2+sita);
;     |       \n");                                                            
; 583 | fprintf(fmat, "  A(2) = y + imageHeight/2*sin(pi/2+sita);
;     |       \n");                                                            
; 584 | fprintf(fmat, "  B(1) = x + imageWidth/2*cos(sita);
;     |       \n");                                                            
; 585 | fprintf(fmat, "  B(2) = y + imageWidth/2*sin(sita);
;     |       \n");                                                            
; 586 | fprintf(fmat, "  C(1) = x - imageHeight/2*cos(pi/2+sita);
;     |       \n");                                                            
; 587 | fprintf(fmat, "  C(2) = y - imageHeight/2*sin(pi/2+sita);
;     |       \n");                                                            
; 588 | fprintf(fmat, "  D(1) = x - imageWidth/2*cos(sita);
;     |       \n");                                                            
; 589 | fprintf(fmat, "  D(2) = y - imageWidth/2*sin(sita);
;     |       \n");                                                            
; 590 | fprintf(fmat, "
;     |  \n");                                                                 
; 591 | fprintf(fmat, "  Left_bottom(1)  = C(1) - imageWidth/2*cos(sita);
;     |       \n");                                                            
; 592 | fprintf(fmat, "  Left_bottom(2)  = C(2) - imageWidth/2*sin(sita);
;     |       \n");                                                            
; 593 | fprintf(fmat, "  Left_top(1)     = D(1) + imageHeight/2*cos(pi/2+sita);
;     |       \n");                                                            
; 594 | fprintf(fmat, "  Left_top(2)     = D(2) + imageHeight/2*sin(pi/2+sita);
;     |       \n");                                                            
; 595 | fprintf(fmat, "  Right_top(1)    = A(1) + imageWidth/2*cos(sita);
;     |       \n");                                                            
; 596 | fprintf(fmat, "  Right_top(2)    = A(2) + imageWidth/2*sin(sita);
;     |       \n");                                                            
; 597 | fprintf(fmat, "  Right_bottom(1) = B(1) - imageHeight/2*cos(pi/2+sita);
;     |       \n");                                                            
; 598 | fprintf(fmat, "  Right_bottom(2) = B(2) - imageHeight/2*sin(pi/2+sita);
;     |       \n");                                                            
; 599 | fprintf(fmat, "
;     |  \n");                                                                 
; 600 | fprintf(fmat, "  a = [Left_bottom; Left_top; Right_bottom; Right_top];
;     |  \n");                                                                 
; 601 | fprintf(fmat, "  a = a + 1;\n");                                       
; 602 | fprintf(fmat, "  position = [a(1,:);a(2,:)]; position = position'; line
;     | (position(1,:),position(2,:),'color','g');\n");                        
; 603 | fprintf(fmat, "  position = [a(2,:);a(4,:)]; position = position'; line
;     | (position(1,:),position(2,:),'color','g');\n");                        
; 604 | fprintf(fmat, "  position = [a(4,:);a(3,:)]; position = position'; line
;     | (position(1,:),position(2,:),'color','g');\n");                        
; 605 | fprintf(fmat, "  position = [a(3,:);a(1,:)]; position = position'; line
;     | (position(1,:),position(2,:),'color','g');\n");                        
; 606 | fprintf(fmat, "  text(x,y,int2str(center(i)))\n");                     
; 607 | fprintf(fmat, "end\n");                                                
; 610 | fprintf(fmat, "hold on;                                            \n")
;     | ;                                                                      
; 611 | fprintf(fmat, "sita = (2*pi/360*[0:359]);                          \n")
;     | ;                                                                      
; 612 | fprintf(fmat, "for i = 1: size(center,1)                           \n")
;     | ;                                                                      
; 613 | fprintf(fmat, "    x = center(i,base+6)+1;                         \n")
;     | ;                                                                      
; 614 | fprintf(fmat, "    y = center(i,base+7)+1;                         \n")
;     | ;                                                                      
; 615 | fprintf(fmat, "    r = center(i,base+8);                           \n")
;     | ;                                                                      
; 616 | fprintf(fmat, "    circle = [x + r*sin(sita); y + r*cos(sita)];    \n")
;     | ;                                                                      
; 617 | fprintf(fmat, "    plot(circle(1,:),circle(2,:),'r');              \n")
;     | ;                                                                      
; 618 | fprintf(fmat, "    hold on;                                        \n")
;     | ;                                                                      
; 619 | fprintf(fmat, "end                                                 \n")
;     | ;                                                                      
; 620 | fclose(fmat);                                                          
; 621 | #endif  /* #if GENERATE_MATLAB */                                      
; 624 | } else {                                                               
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(128),B5      ; |348| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 325,column 13,is_stmt,isa 0
           STW     .D2T1   A11,*+SP(212)     ; |325| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 344,column 13,is_stmt,isa 0
   [ A0]   MVK     .L1     0x1,A4            ; |344| 
           AND     .L1     A3,A4,A0          ; |344| 

   [!A0]   B       .S1     $C$L33            ; |344| 
|| [!A0]   LDW     .D2T1   *+SP(164),A3      ; |626| 
|| [!A0]   MVKL    .S2     $C$SL4+0,B4

$C$DW$355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$355, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$355, DW_AT_TI_call

   [ A0]   CALL    .S1     blobAnalysis_malloc ; |348| 
|| [!A0]   LDW     .D2T2   *+SP(208),B5      ; |626| 

   [ A0]   LDW     .D2T2   *+SP(184),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 626,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 626 | sprintf(desc, "imageWidth=%d, imageHeight=%d",                         
;----------------------------------------------------------------------
$C$DW$356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$356, DW_AT_name("sprintf")
	.dwattr $C$DW$356, DW_AT_TI_call
   [!A0]   CALL    .S1     sprintf           ; |626| 
   [!A0]   MVKH    .S2     $C$SL4+0,B4
   [!A0]   MVKL    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 344,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L33}        ; |344| 
$C$DW$L$VLIB_blobAnalysis_d$37$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$38$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 347	-----------------------    tmpPtr = (unsigned)pBlobScratch;
;** 348	-----------------------    boxes = (struct lib_blobAnalysis_box *)blobAnalysis_malloc(&tmpPtr, (int)boxBufSize);
;** 349	-----------------------    circles = (struct lib_blobAnalysis_circle *)blobAnalysis_malloc(&tmpPtr, (int)circleBufSize);
;** 350	-----------------------    C$33 = (int)C$34+(int)C$35;
;** 350	-----------------------    blobBoundary = (struct lib_blobAnalysis_point *)blobAnalysis_malloc(&tmpPtr, C$33);
;** 351	-----------------------    polygonBoundary = (struct lib_blobAnalysis_point *)blobAnalysis_malloc(&tmpPtr, C$33);
;** 352	-----------------------    U$250 = blobIIBufSize;
;** 352	-----------------------    blob_ii = (struct AVMIntervalImage *)blobAnalysis_malloc(&tmpPtr, U$250);
;** 353	-----------------------    perimeter = (unsigned *)blobAnalysis_malloc(&tmpPtr, (int)perimeterBufSize);
;** 137	-----------------------    act_kernel = 0;  // [16]
;** 140	-----------------------    VLIB_cache_inval();  // [16]
;** 143	-----------------------    initStack(getSP());  // [16]
;** 146	-----------------------    v$11 = _itoll(TSCH, TSCL);  // [16]
;** 146	-----------------------    beg_count = v$11;  // [16]
;** 358	-----------------------    if ( numBlobs <= 0 ) goto g28;

           ADDAW   .D1X    SP,10,A4          ; |348| 
||         STW     .D2T2   B5,*+SP(40)       ; |347| 
||         ADDKPC  .S2     $C$RL26,B3,0      ; |348| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 348,column 17,is_stmt,isa 0
$C$RL26:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |348| 
$C$DW$L$VLIB_blobAnalysis_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$39$B:
;          EXCLUSIVE CPU CYCLES: 57
           STW     .D2T1   A4,*+SP(172)      ; |348| 
$C$DW$357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$357, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$357, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         LDW     .D2T2   *+SP(196),B4      ; |348| 
||         ADDAW   .D1X    SP,10,A4          ; |349| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 349,column 17,is_stmt,isa 0
$C$RL27:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |349| 
$C$DW$358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$358, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$358, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         STW     .D2T1   A4,*+SP(180)      ; |349| 
||         ADDAW   .D1X    SP,10,A4          ; |350| 
||         ADD     .L2X    A13,B13,B4        ; |350| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 350,column 17,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |350| 
$C$DW$359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$359, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$359, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         STW     .D2T1   A4,*+SP(176)      ; |350| 
||         ADDAW   .D1X    SP,10,A4          ; |351| 
||         ADD     .L2X    A13,B13,B4        ; |350| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 351,column 17,is_stmt,isa 0
$C$RL29:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |351| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 352,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(44),B11      ; |352| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 351,column 17,is_stmt,isa 0
           MV      .L2X    A4,B13            ; |351| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 352,column 17,is_stmt,isa 0
           ADDAW   .D1X    SP,10,A4          ; |352| 
           NOP             2
$C$DW$360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$360, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$360, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         MV      .L2     B11,B4            ; |352| 

$C$RL30:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |352| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 353,column 17,is_stmt,isa 0
           MV      .L2X    A12,B4            ; |353| 
$C$DW$361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$361, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$361, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         MV      .L2X    A4,B12            ; |352| 
||         ADDAW   .D1X    SP,10,A4          ; |353| 

$C$RL31:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |353| 
           MVKL    .S2     act_kernel,B4

           MVKH    .S2     act_kernel,B4
||         ZERO    .L1     A3                ; |137| 
||         STW     .D2T1   A4,*+SP(168)      ; |353| 

$C$DW$362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$362, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$362, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D2T1   A3,*B4            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL32:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$363, DW_AT_name("getSP")
	.dwattr $C$DW$363, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$364, DW_AT_name("initStack")
	.dwattr $C$DW$364, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL34:   ; CALL OCCURS {initStack} {0}     ; |143| 
$C$DW$L$VLIB_blobAnalysis_d$39$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$40$B:
;          EXCLUSIVE CPU CYCLES: 10
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           NOP             1

           MV      .L1X    B4,A4             ; |146| Define a twin register
||         MVC     .S2     TSCH,B5           ; |146| 

           CMPGT   .L2     B10,0,B0          ; |358| 
||         MVKL    .S2     beg_count,B6

           MV      .L2     B0,B1             ; guard predicate rewrite
|| [!B0]   B       .S1     $C$L25            ; |358| 
||         LDW     .D2T2   *+SP(192),B0
||         MVKH    .S2     beg_count,B6
||         MV      .L1X    B5,A5             ; |146| 

           STDW    .D2T2   B5:B4,*B6         ; |146| 
   [ B1]   LDW     .D2T1   *+SP(212),A15
   [ B1]   LDW     .D2T1   *+SP(168),A14
   [ B1]   LDW     .D2T1   *+SP(172),A13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 362,column 21,is_stmt,isa 0
   [ B1]   STW     .D2T2   B0,*+SP(100)      ; |362| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 358,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L25}        ; |358| 
$C$DW$L$VLIB_blobAnalysis_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$41$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    U$171 = vlibBlobList;
;**  	-----------------------    U$257 = perimeter;
;**  	-----------------------    U$264 = boxes;
;**  	-----------------------    U$266 = circles;
;** 362	-----------------------    L$3 = numBlobs;
;**  	-----------------------    U$170 = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           ZERO    .L2     B10
||         LDW     .D2T1   *+SP(180),A11     ; |362| 

$C$DW$L$VLIB_blobAnalysis_d$41$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L24:    
$C$DW$L$VLIB_blobAnalysis_d$42$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g26:
;** 362	-----------------------    VLIB_createBlobIntervalImg(handle, blob_ii, U$171);
;** 365	-----------------------    VLIB_calcBlobPerimeter((*(O$1.s3_1.u4_2.s4_3.l4_5.blobList+U$170)).ccmapColor, imageWidth, blob_ii, CCMap, U$257);
;** 372	-----------------------    VLIB_calcBlobMinEnclosedPolygon(blob_ii, blobBoundary, polygonBoundary, &numPolygonPt);
;** 374	-----------------------    VLIB_calcBlobMinEnclosedRect(numPolygonPt, polygonBoundary, U$264);
;** 376	-----------------------    VLIB_calcBlobMinEnclosedCircle(numPolygonPt, polygonBoundary, U$266);
;** 358	-----------------------    U$170 += 32;
;** 358	-----------------------    U$171 += 32;
;** 358	-----------------------    ++U$257;
;** 358	-----------------------    U$264 += 20;
;** 358	-----------------------    U$266 += 12;
;** 358	-----------------------    if ( L$3 = L$3-1 ) goto g26;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 362,column 21,is_stmt,isa 0
$C$DW$365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$365, DW_AT_name("VLIB_createBlobIntervalImg")
	.dwattr $C$DW$365, DW_AT_TI_call
           CALL    .S1     VLIB_createBlobIntervalImg ; |362| 
           LDW     .D2T1   *+SP(136),A4      ; |362| 
           ADDKPC  .S2     $C$RL35,B3,2      ; |362| 

           MV      .L2     B12,B4            ; |362| 
||         MV      .L1     A15,A6            ; |362| 

$C$RL35:   ; CALL OCCURS {VLIB_createBlobIntervalImg} {0}  ; |362| 
$C$DW$L$VLIB_blobAnalysis_d$42$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$43$B:
;          EXCLUSIVE CPU CYCLES: 32
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 365,column 21,is_stmt,isa 0
           LDW     .D2T2   *+SP(92),B4       ; |365| 
           LDW     .D2T2   *+SP(148),B6      ; |365| 
           MV      .L1X    B12,A6            ; |365| 
           MV      .L1     A14,A8            ; |365| 
           NOP             1
           ADD     .L2     B10,B4,B4         ; |365| 
           LDW     .D2T1   *+B4(28),A4       ; |365| 
$C$DW$366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$366, DW_AT_name("VLIB_calcBlobPerimeter")
	.dwattr $C$DW$366, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobPerimeter,B3
||         LDW     .D2T2   *+SP(208),B4      ; |365| 

$C$RL36:   ; CALL OCCURS {VLIB_calcBlobPerimeter} {0}  ; |365| 

           ADDAD   .D2     SP,6,B6
||         MV      .L1X    B12,A4            ; |372| 

$C$DW$367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$367, DW_AT_name("VLIB_calcBlobMinEnclosedPolygon")
	.dwattr $C$DW$367, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobMinEnclosedPolygon,B3
||         LDW     .D2T2   *+SP(176),B4      ; |372| 
||         MV      .L1X    B13,A6            ; |372| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 372,column 21,is_stmt,isa 0
$C$RL37:   ; CALL OCCURS {VLIB_calcBlobMinEnclosedPolygon} {0}  ; |372| 
$C$DW$368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$368, DW_AT_name("VLIB_calcBlobMinEnclosedRect")
	.dwattr $C$DW$368, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobMinEnclosedRect,B3
||         LDW     .D2T1   *+SP(48),A4       ; |374| 
||         MV      .L2     B13,B4            ; |374| 
||         MV      .L1     A13,A6            ; |374| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 374,column 21,is_stmt,isa 0
$C$RL38:   ; CALL OCCURS {VLIB_calcBlobMinEnclosedRect} {0}  ; |374| 
$C$DW$369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$369, DW_AT_name("VLIB_calcBlobMinEnclosedCircle")
	.dwattr $C$DW$369, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobMinEnclosedCircle,B3
||         LDW     .D2T1   *+SP(48),A4       ; |376| 
||         MV      .L2     B13,B4            ; |376| 
||         MV      .L1     A11,A6            ; |376| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 376,column 21,is_stmt,isa 0
$C$RL39:   ; CALL OCCURS {VLIB_calcBlobMinEnclosedCircle} {0}  ; |376| 
$C$DW$L$VLIB_blobAnalysis_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$44$B:
;          EXCLUSIVE CPU CYCLES: 12
;**  	-----------------------    v$11 = beg_count;

           ADDK    .S1     32,A15            ; |358| 
||         LDW     .D2T1   *+SP(100),A3      ; |376| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 358,column 29,is_stmt,isa 0
           ADD     .L1     12,A11,A11        ; |358| 
           ADD     .L1     4,A14,A14         ; |358| 
           ADDK    .S2     32,B10            ; |358| 
           ADDK    .S1     20,A13            ; |358| 

           SUB     .L1     A3,1,A0           ; |358| 
||         SUB     .S1     A3,1,A3           ; |358| 

   [ A0]   BNOP    .S1     $C$L24,3          ; |358| 
|| [!A0]   MVKL    .S2     beg_count,B4
||         STW     .D2T1   A3,*+SP(100)      ; |358| 

   [!A0]   MVKH    .S2     beg_count,B4
   [!A0]   LDDW    .D2T1   *B4,A5:A4
           ; BRANCHCC OCCURS {$C$L24}        ; |358| 
$C$DW$L$VLIB_blobAnalysis_d$44$E:
;** --------------------------------------------------------------------------*
$C$L25:    
$C$DW$L$VLIB_blobAnalysis_d$45$B:
;          EXCLUSIVE CPU CYCLES: 23
;**	-----------------------g28:
;** 153	-----------------------    v$3 = _itoll(TSCH, TSCL);  // [17]
;** 153	-----------------------    end_count = v$3;  // [17]
;**  	-----------------------    K$274 = &cycles[0];
;** 156	-----------------------    C$32 = act_kernel;  // [17]
;** 156	-----------------------    *((C$32<<3)+K$274) = *((C$32<<3)+K$274)+(v$3-(v$11+overhead));  // [17]
;** 159	-----------------------    setStackDepth();  // [17]
;** 382	-----------------------    tmpPtr = (unsigned)pBlobScratch_cn;
;** 383	-----------------------    boxes_cn = (struct lib_blobAnalysis_box *)blobAnalysis_malloc(&tmpPtr, (int)boxBufSize);
;** 384	-----------------------    circles_cn = (struct lib_blobAnalysis_circle *)blobAnalysis_malloc(&tmpPtr, (int)circleBufSize);
;** 385	-----------------------    blobBoundary_cn = (struct lib_blobAnalysis_point *)blobAnalysis_malloc(&tmpPtr, (int)boundaryBufSize);
;** 386	-----------------------    polygonBoundary_cn = (struct lib_blobAnalysis_point *)blobAnalysis_malloc(&tmpPtr, (int)polygonBufSize);
;** 387	-----------------------    blob_ii_cn = (struct AVMIntervalImage *)blobAnalysis_malloc(&tmpPtr, U$250);
;** 388	-----------------------    perimeter_cn = (unsigned *)blobAnalysis_malloc(&tmpPtr, (int)perimeterBufSize);
;** 137	-----------------------    act_kernel = 1;  // [16]
;** 140	-----------------------    VLIB_cache_inval();  // [16]
;** 143	-----------------------    initStack(getSP());  // [16]
;** 146	-----------------------    v$11 = _itoll(TSCH, TSCL);  // [16]
;** 146	-----------------------    beg_count = v$11;  // [16]
;** 393	-----------------------    if ( numBlobs <= 0 ) goto g32;
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 

           MVKL    .S1     overhead,A3
||         MVKL    .S2     act_kernel,B5

           MVKH    .S1     overhead,A3
||         MVKH    .S2     act_kernel,B5

           LDDW    .D1T1   *A3,A9:A8         ; |156| 
||         LDW     .D2T2   *B5,B16           ; |156| 

           MVKL    .S2     cycles,B4
           MVKH    .S2     cycles,B4
           NOP             2

           ADDU    .L1     A8,A4,A7:A6       ; |156| 
||         LDDW    .D2T2   *+B4[B16],B9:B8   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADD     .L1     A7,A9,A3          ; |156| 
           ADD     .L1     A3,A5,A3          ; |156| 
           SUBU    .L2X    B6,A6,B5:B4       ; |156| 

           SUB     .L2X    B7,A3,B31         ; |156| 
||         MVKL    .S1     end_count,A3

           MVKH    .S1     end_count,A3
||         EXT     .S2     B5,24,24,B17      ; |156| 
||         ADDU    .L2     B8,B4,B5:B4       ; |156| 

           STDW    .D1T2   B7:B6,*A3         ; |153| 
||         MVKL    .S2     cycles,B6
||         ADD     .L2     B5,B9,B5          ; |156| 
||         ADD     .D2     B31,B17,B8        ; |156| 

           ADD     .L2     B5,B8,B5          ; |156| 
||         MVKH    .S2     cycles,B6

$C$DW$370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$370, DW_AT_name("setStackDepth")
	.dwattr $C$DW$370, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D2T2   B5:B4,*+B6[B16]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL40:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_blobAnalysis_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$46$B:
;          EXCLUSIVE CPU CYCLES: 64
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 383,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(132),B5      ; |383| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
           LDW     .D2T2   *+SP(184),B4      ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 383,column 17,is_stmt,isa 0
           ADDAW   .D1X    SP,10,A4          ; |383| 
           NOP             2
$C$DW$371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$371, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$371, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         STW     .D2T2   B5,*+SP(40)       ; |382| 

$C$RL41:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |383| 
           STW     .D2T1   A4,*+SP(176)      ; |383| 
$C$DW$372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$372, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$372, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         LDW     .D2T2   *+SP(196),B4      ; |383| 
||         ADDAW   .D1X    SP,10,A4          ; |384| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 384,column 17,is_stmt,isa 0
$C$RL42:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |384| 
           STW     .D2T1   A4,*+SP(184)      ; |384| 
$C$DW$373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$373, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$373, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         LDW     .D2T2   *+SP(200),B4      ; |384| 
||         ADDAW   .D1X    SP,10,A4          ; |385| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 385,column 17,is_stmt,isa 0
$C$RL43:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |385| 
$C$DW$374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$374, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$374, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         LDW     .D2T2   *+SP(204),B4      ; |385| 
||         MV      .L2X    A4,B13            ; |385| 
||         ADDAW   .D1X    SP,10,A4          ; |386| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 386,column 17,is_stmt,isa 0
$C$RL44:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |386| 
$C$DW$375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$375, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$375, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         MV      .L2X    A4,B12            ; |386| 
||         ADDAW   .D1X    SP,10,A4          ; |387| 
||         MV      .D2     B11,B4            ; |387| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 387,column 17,is_stmt,isa 0
$C$RL45:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |387| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 388,column 17,is_stmt,isa 0
           MV      .L2X    A12,B4            ; |388| 
$C$DW$376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$376, DW_AT_name("blobAnalysis_malloc")
	.dwattr $C$DW$376, DW_AT_TI_call

           CALLP   .S2     blobAnalysis_malloc,B3
||         MV      .L2X    A4,B11            ; |387| 
||         ADDAW   .D1X    SP,10,A4          ; |388| 

$C$RL46:   ; CALL OCCURS {blobAnalysis_malloc} {0}  ; |388| 
           MVKL    .S2     act_kernel,B4

           MVKH    .S2     act_kernel,B4
||         MVK     .L1     1,A3              ; |137| 

$C$DW$377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$377, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$377, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D2T1   A3,*B4            ; |137| 
||         MV      .L1     A4,A11            ; |388| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL47:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$378, DW_AT_name("getSP")
	.dwattr $C$DW$378, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL48:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$379, DW_AT_name("initStack")
	.dwattr $C$DW$379, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL49:   ; CALL OCCURS {initStack} {0}     ; |143| 
$C$DW$L$VLIB_blobAnalysis_d$46$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$47$B:
;          EXCLUSIVE CPU CYCLES: 14
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
           LDW     .D2T2   *+SP(192),B0      ; |146| 
           ZERO    .L2     B10
           MVKL    .S2     beg_count,B6
           MVKH    .S2     beg_count,B6
           STDW    .D2T2   B5:B4,*B6         ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 393,column 29,is_stmt,isa 0
           CMPGT   .L2     B0,0,B0           ; |393| 

           MV      .L2     B0,B1             ; guard predicate rewrite
|| [!B0]   B       .S1     $C$L27            ; |393| 
||         LDW     .D2T2   *+SP(192),B0

   [ B1]   LDW     .D2T1   *+SP(188),A14
   [ B1]   MV      .L1     A11,A15
   [ B1]   LDW     .D2T1   *+SP(176),A13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 397,column 21,is_stmt,isa 0
   [ B1]   LDW     .D2T1   *+SP(184),A12     ; |397| 
   [ B1]   STW     .D2T2   B0,*+SP(100)      ; |397| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 393,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L27}        ; |393| 
$C$DW$L$VLIB_blobAnalysis_d$47$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$48$B:
;**  	-----------------------    U$174 = vlibBlobList_cn;
;**  	-----------------------    U$295 = perimeter_cn;
;**  	-----------------------    U$301 = boxes_cn;
;**  	-----------------------    U$302 = circles_cn;
;** 397	-----------------------    L$4 = numBlobs;
;**  	-----------------------    U$170 = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_blobAnalysis_d$48$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L26:    
$C$DW$L$VLIB_blobAnalysis_d$49$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g30:
;** 397	-----------------------    VLIB_createBlobIntervalImg_cn(handle, blob_ii_cn, U$174);
;** 400	-----------------------    VLIB_calcBlobPerimeter_cn((*(O$1.s3_1.u4_2.s4_3.l4_4.blobList+U$170)).ccmapColor, imageWidth, blob_ii_cn, CCMap, U$295);
;** 407	-----------------------    VLIB_calcBlobMinEnclosedPolygon_cn(blob_ii_cn, blobBoundary_cn, polygonBoundary_cn, &numPolygonPt_cn);
;** 409	-----------------------    VLIB_calcBlobMinEnclosedRect_cn(numPolygonPt_cn, polygonBoundary_cn, U$301);
;** 411	-----------------------    VLIB_calcBlobMinEnclosedCircle_cn(numPolygonPt_cn, polygonBoundary_cn, U$302);
;** 393	-----------------------    U$170 += 32;
;** 393	-----------------------    U$174 += 32;
;** 393	-----------------------    ++U$295;
;** 393	-----------------------    U$301 += 20;
;** 393	-----------------------    U$302 += 12;
;** 393	-----------------------    if ( L$4 = L$4-1 ) goto g30;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 397,column 21,is_stmt,isa 0
$C$DW$380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$380, DW_AT_name("VLIB_createBlobIntervalImg_cn")
	.dwattr $C$DW$380, DW_AT_TI_call
           CALL    .S1     VLIB_createBlobIntervalImg_cn ; |397| 
           LDW     .D2T1   *+SP(136),A4      ; |397| 
           ADDKPC  .S2     $C$RL50,B3,2      ; |397| 

           MV      .L2     B11,B4            ; |397| 
||         MV      .L1     A14,A6            ; |397| 

$C$RL50:   ; CALL OCCURS {VLIB_createBlobIntervalImg_cn} {0}  ; |397| 
$C$DW$L$VLIB_blobAnalysis_d$49$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$50$B:
;          EXCLUSIVE CPU CYCLES: 32
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 400,column 21,is_stmt,isa 0
           LDW     .D2T2   *+SP(72),B4       ; |400| 
           LDW     .D2T2   *+SP(148),B6      ; |400| 
           MV      .L1X    B11,A6            ; |400| 
           MV      .L1     A15,A8            ; |400| 
           NOP             1
           ADD     .L2     B10,B4,B4         ; |400| 
           LDW     .D2T1   *+B4(28),A4       ; |400| 
$C$DW$381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$381, DW_AT_name("VLIB_calcBlobPerimeter_cn")
	.dwattr $C$DW$381, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobPerimeter_cn,B3
||         LDW     .D2T2   *+SP(208),B4      ; |400| 

$C$RL51:   ; CALL OCCURS {VLIB_calcBlobPerimeter_cn} {0}  ; |400| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 407,column 21,is_stmt,isa 0
           MV      .L1X    B11,A4            ; |407| 
$C$DW$382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$382, DW_AT_name("VLIB_calcBlobMinEnclosedPolygon_cn")
	.dwattr $C$DW$382, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobMinEnclosedPolygon_cn,B3
||         MV      .L2     B13,B4            ; |407| 
||         MV      .L1X    B12,A6            ; |407| 
||         ADDAW   .D2     SP,13,B6

$C$RL52:   ; CALL OCCURS {VLIB_calcBlobMinEnclosedPolygon_cn} {0}  ; |407| 
$C$DW$383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$383, DW_AT_name("VLIB_calcBlobMinEnclosedRect_cn")
	.dwattr $C$DW$383, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobMinEnclosedRect_cn,B3
||         LDW     .D2T1   *+SP(52),A4       ; |409| 
||         MV      .L2     B12,B4            ; |409| 
||         MV      .L1     A13,A6            ; |409| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 409,column 21,is_stmt,isa 0
$C$RL53:   ; CALL OCCURS {VLIB_calcBlobMinEnclosedRect_cn} {0}  ; |409| 
$C$DW$384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$384, DW_AT_name("VLIB_calcBlobMinEnclosedCircle_cn")
	.dwattr $C$DW$384, DW_AT_TI_call

           CALLP   .S2     VLIB_calcBlobMinEnclosedCircle_cn,B3
||         LDW     .D2T1   *+SP(52),A4       ; |411| 
||         MV      .L2     B12,B4            ; |411| 
||         MV      .L1     A12,A6            ; |411| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 411,column 21,is_stmt,isa 0
$C$RL54:   ; CALL OCCURS {VLIB_calcBlobMinEnclosedCircle_cn} {0}  ; |411| 
$C$DW$L$VLIB_blobAnalysis_d$50$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$51$B:
;          EXCLUSIVE CPU CYCLES: 12
;**  	-----------------------    v$11 = beg_count;

           ADDK    .S1     32,A14            ; |393| 
||         LDW     .D2T1   *+SP(100),A3      ; |411| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 393,column 29,is_stmt,isa 0
           ADD     .L1     12,A12,A12        ; |393| 
           ADD     .L1     4,A15,A15         ; |393| 
           ADDK    .S2     32,B10            ; |393| 
           ADDK    .S1     20,A13            ; |393| 

           SUB     .L1     A3,1,A0           ; |393| 
||         SUB     .S1     A3,1,A3           ; |393| 

   [ A0]   BNOP    .S1     $C$L26,3          ; |393| 
|| [!A0]   MVKL    .S2     beg_count,B4
||         STW     .D2T1   A3,*+SP(100)      ; |393| 

   [!A0]   MVKH    .S2     beg_count,B4
   [!A0]   LDDW    .D2T2   *B4,B5:B4
           ; BRANCHCC OCCURS {$C$L26}        ; |393| 
$C$DW$L$VLIB_blobAnalysis_d$51$E:
;** --------------------------------------------------------------------------*
$C$L27:    
$C$DW$L$VLIB_blobAnalysis_d$52$B:
;          EXCLUSIVE CPU CYCLES: 24
;**	-----------------------g32:
;** 153	-----------------------    v$3 = _itoll(TSCH, TSCL);  // [17]
;** 153	-----------------------    end_count = v$3;  // [17]
;** 156	-----------------------    C$31 = act_kernel;  // [17]
;** 156	-----------------------    *((C$31<<3)+K$274) = *((C$31<<3)+K$274)+(v$3-(v$11+overhead));  // [17]
;** 159	-----------------------    setStackDepth();  // [17]
;** 417	-----------------------    if ( numBlobs <= 0 ) goto g35;
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S2     act_kernel,B8

           MVKH    .S2     act_kernel,B8
||         MVKL    .S1     overhead,A3

           LDW     .D2T2   *B8,B16           ; |156| 
||         MVKH    .S1     overhead,A3

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *A3,A7:A6         ; |156| 
           MVKL    .S2     cycles,B31
           MVKH    .S2     cycles,B31
           MVKL    .S1     end_count,A3
           LDDW    .D2T2   *+B31[B16],B9:B8  ; |156| 
           ADDU    .L1X    A6,B4,A5:A4       ; |156| 
           ADD     .L1     A5,A7,A6          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 
           ADD     .L2X    A6,B5,B4          ; |156| 

           ADDU    .L2X    B8,A4,B5:B4       ; |156| 
||         SUB     .S2     B7,B4,B8          ; |156| 
||         EXT     .S1     A5,24,24,A4       ; |156| 

           MVKH    .S1     end_count,A3

           ADD     .L2X    B8,A4,B8          ; |156| 
||         ADD     .D2     B5,B9,B5          ; |156| 
||         STDW    .D1T2   B7:B6,*A3         ; |153| 
||         MVKL    .S2     cycles,B6

           ADD     .L2     B5,B8,B5          ; |156| 
||         MVKH    .S2     cycles,B6

$C$DW$385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$385, DW_AT_name("setStackDepth")
	.dwattr $C$DW$385, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D2T2   B5:B4,*+B6[B16]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL55:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_blobAnalysis_d$52$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$53$B:
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T2   *+SP(192),B0      ; |159| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 417,column 29,is_stmt,isa 0
           CMPGT   .L2     B0,0,B0           ; |417| 

   [!B0]   B       .S1     $C$L29            ; |417| 
|| [ B0]   MVKL    .S2     0x3fa99999,B7
|| [ B0]   ZERO    .L2     B6
|| [ B0]   LDW     .D2T2   *+SP(212),B22

   [ B0]   LDW     .D2T1   *+SP(168),A12
   [ B0]   LDW     .D2T2   *+SP(172),B23
   [ B0]   LDW     .D2T2   *+SP(180),B24
   [ B0]   LDW     .D2T1   *+SP(176),A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 418,column 21,is_stmt,isa 0
   [ B0]   LDW     .D2T1   *+SP(184),A7      ; |418| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 417,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L29}        ; |417| 
$C$DW$L$VLIB_blobAnalysis_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$54$B:
;          EXCLUSIVE CPU CYCLES: 8
;**  	-----------------------    U$171 = vlibBlobList;
;**  	-----------------------    U$174 = vlibBlobList_cn;
;**  	-----------------------    U$257 = perimeter;
;**  	-----------------------    U$264 = boxes;
;**  	-----------------------    U$266 = circles;
;**  	-----------------------    U$295 = perimeter_cn;
;**  	-----------------------    U$301 = boxes_cn;
;**  	-----------------------    U$302 = circles_cn;
;** 418	-----------------------    L$5 = numBlobs;
;**  	-----------------------    K$394 = 0.0F;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)

           LDW     .D2T2   *+SP(192),B0
||         MVKH    .S2     0xa0000000,B6
||         MVKL    .S1     0x40568000,A3
||         ZERO    .L1     A4
||         ZERO    .D1     A28

           MVKH    .S2     0x3fa99999,B7
||         MVKL    .S1     0x40668000,A29
||         STW     .D2T1   A28,*+SP(240)
||         MV      .L2     B6,B10            ; |418| 
||         ZERO    .L1     A13

           MVKH    .S1     0x40668000,A29
||         MV      .L1X    B6,A30            ; |418| 
||         STW     .D2T1   A4,*+SP(248)
||         MV      .L2     B6,B12            ; |418| 
||         MV      .S2     B6,B28            ; |418| 

           MV      .L1X    B7,A31            ; |418| 
||         MVKH    .S1     0x40568000,A3
||         STW     .D2T1   A30,*+SP(232)     ; |418| 
||         MV      .L2     B7,B11            ; |418| 
||         MV      .S2     B7,B13            ; |418| 

           STW     .D2T1   A31,*+SP(236)     ; |418| 
||         MV      .L2     B7,B29            ; |418| 
||         MV      .S2     B7,B3             ; |418| 

           STW     .D2T1   A3,*+SP(252)      ; |446| 
||         MV      .L2     B6,B16            ; |418| 
||         MV      .S2     B6,B8             ; |418| 

           LDW     .D2T1   *+SP(188),A3
||         MV      .L2     B7,B9             ; |418| 
||         MV      .S2     B7,B17            ; |418| 

           STW     .D2T1   A29,*+SP(244)     ; |446| 
||         MV      .L2     B6,B2             ; |418| 

$C$DW$L$VLIB_blobAnalysis_d$54$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c
;*      Loop source line                 : 417
;*      Loop opening brace source line   : 417
;*      Loop closing brace source line   : 457
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 7
;*      Unpartitioned Resource Bound     : 38
;*      Partitioned Resource Bound(*)    : 38
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     3        4     
;*      .S units                    38*      29     
;*      .D units                    17       15     
;*      .M units                     0        0     
;*      .X cross paths              19       17     
;*      .T address paths            16       14     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           5        8     (.L or .S unit)
;*      Addition ops (.LSD)         19       14     (.L or .S or .D unit)
;*      Bound(.L .S .LS)            23       21     
;*      Bound(.L .S .D .LS .LSD)    28       24     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 38 Register pressure too high: 60
;*         ii = 38 Did not find schedule
;*         ii = 39 Register pressure too high: 46
;*         ii = 39 Register pressure too high: 47
;*         ii = 39 Did not find schedule
;*         ii = 40 Register pressure too high: 55
;*         ii = 40 Did not find schedule
;*         ii = 41 Register pressure too high: 44
;*         ii = 41 Did not find schedule
;*         ii = 42 Register pressure too high: 43
;*         ii = 42 Did not find schedule
;*         ii = 44 Register pressure too high: 42
;*         ii = 44 Register pressure too high: 43
;*         ii = 44 Register pressure too high: 43
;*         ii = 44 Did not find schedule
;*         ii = 46 Register pressure too high: 42
;*         ii = 46 Register pressure too high: 42
;*         ii = 46 Register pressure too high: 42
;*         ii = 46 Did not find schedule
;*         ii = 49 Register pressure too high: 42
;*         ii = 49 Register pressure too high: 42
;*         ii = 49 Register pressure too high: 42
;*         ii = 49 Did not find schedule
;*         ii = 52 Register pressure too high: 42
;*         ii = 52 Register pressure too high: 42
;*         ii = 52 Register pressure too high: 42
;*         ii = 52 Did not find schedule
;*         ii = 56 Register pressure too high: 42
;*         ii = 56 Register pressure too high: 42
;*         ii = 56 Register pressure too high: 42
;*         ii = 56 Did not find schedule
;*      Disqualified loop: Did not find schedule
;*----------------------------------------------------------------------------*
$C$L28:    
$C$DW$L$VLIB_blobAnalysis_d$55$B:
;          EXCLUSIVE CPU CYCLES: 60
;**	-----------------------g34:
;** 418	-----------------------    error += (ABS((double)((*U$264).y-(*U$301).y)) > 0.05)+(ABS((double)((*U$264).x-(*U$301).x)) > 0.05)+(ABS((double)((*U$266).radius-(*U$302).radius)) > 0.05)+(ABS((double)((*U$266).y-(*U$302).y)) > 0.05)+(ABS((double)((*U$266).x-(*U$302).x)) > 0.05)+((*U$171).xmax != (*U$174).xmax)+((*U$171).xmin != (*U$174).xmin)+((*U$171).ymax != (*U$174).ymax)+((*U$171).ymin != (*U$174).ymin)+((*U$171).area != (*U$174).area)+((*U$171).ccmapColor != (*U$174).ccmapColor)+(*U$257++ != *U$295++);
;** 446	-----------------------    C$28 = (*U$301).w;
;** 446	-----------------------    C$29 = (*U$264).w;
;** 446	-----------------------    C$30 = (*U$301).h;
;** 446	-----------------------    C$27 = (*U$264).h;
;** 446	-----------------------    C$25 = (ABS((double)(C$27-C$30)) > 0.05)+(ABS((double)(C$29-C$28)) > 0.05)+error;
;** 446	-----------------------    C$24 = (*U$264++{20}).angle-(*U$301++{20}).angle;
;** 446	-----------------------    C$26 = ABS((double)C$24);
;** 446	-----------------------    P$42 = (ABS(C$26-180.0) < 0.05) ? C$25 : error+1;
;** 446	-----------------------    P$41 = (ABS(C$26-90.0) < 0.05) ? (ABS((double)(C$27-C$28)) > 0.05)+(ABS((double)(C$29-C$30)) > 0.05)+error : P$42;
;** 446	-----------------------    (ABS((double)(C$24-K$394)) < 0.05) ? (error = C$25) : (error = P$41);
;** 417	-----------------------    U$171 += 32;
;** 417	-----------------------    U$174 += 32;
;** 417	-----------------------    U$266 += 12;
;** 417	-----------------------    U$302 += 12;
;** 417	-----------------------    if ( L$5 = L$5-1 ) goto g34;

           MV      .L2X    A6,B4             ; |446| 
||         MV      .L1X    B23,A4            ; |446| 
||         LDW     .D2T2   *+B23(12),B25     ; |446| 
||         LDW     .D1T1   *+A6(12),A26      ; |446| 
||         SUB     .S2     B0,1,B0           ; |417| 

           LDW     .D2T2   *+B4(16),B4       ; |446| 
||         LDW     .D1T1   *+A4(16),A5       ; |446| 

           LDW     .D2T2   *+B23(4),B31      ; |418| 
||         LDW     .D1T1   *+A6(4),A21       ; |418| 

           LDW     .D2T2   *+B24(8),B18      ; |418| 
||         LDW     .D1T1   *+A7(8),A20       ; |418| 

           LDW     .D1T1   *A6,A29           ; |418| 
||         LDW     .D2T2   *B23,B5           ; |418| 

           FSUBSP  .L2X    B25,A26,B30       ; |446| 
||         LDW     .D1T1   *+A7(4),A8        ; |418| 
||         LDW     .D2T2   *B24,B20          ; |418| 

           FSUBSP  .L1X    A5,B4,A24         ; |446| 
||         LDW     .D1T2   *A7,B19           ; |418| 
||         LDW     .D2T1   *+B24(4),A9       ; |418| 
||         ADD     .S1     12,A7,A7          ; |417| 
||         ADD     .L2     12,B24,B24        ; |417| 

           LDW     .D2T2   *+B23(8),B26      ; |446| 
||         LDW     .D1T1   *A3,A27           ; |418| 

           FSUBSP  .L2X    B18,A20,B18       ; |418| 
||         LDW     .D1T1   *+A3(12),A28      ; |418| 
||         LDW     .D2T2   *B22,B1           ; |418| 

           SPDP    .S1     A24,A5:A4         ; |446| 
||         FSUBSP  .L2X    B5,A29,B4         ; |418| 
||         FSUBSP  .L1     A24,A13,A2        ; |446| 
||         LDW     .D1T1   *+A6(8),A24       ; |446| 
||         ADD     .D2     B23,20,B23        ; |446| 

           FSUBSP  .L2X    B31,A21,B5        ; |418| 
||         DADD    .L1X    0,B3:B2,A21:A20   ; |418| 
||         LDW     .D2T2   *+B22(4),B31      ; |418| 
||         LDW     .D1T1   *+A3(8),A29       ; |418| 

           FSUBSP  .L2     B20,B19,B20       ; |418| 
||         SPDP    .S2     B18,B19:B18       ; |418| 
||         ADD     .D1     A6,20,A6          ; |446| 
||         ABSDP   .S1     A5:A4,A17:A16     ; |446| 
||         LDDW    .D2T1   *+SP(248),A5:A4   ; |418| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 418,column 21,is_stmt,isa 0
           FSUBSP  .L1     A9,A8,A18         ; |418| 

           SPDP    .S1X    B4,A9:A8          ; |418| 
||         SPDP    .S2     B5,B5:B4          ; |418| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
           FSUBSP  .L2X    B26,A26,B27       ; |446| 

           ABSDP   .S1     A9:A8,A9:A8       ; |418| 
||         ABSDP   .S2     B5:B4,B5:B4       ; |418| 

           FSUBDP  .L1     A17:A16,A5:A4,A5:A4 ; |446| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 418,column 21,is_stmt,isa 0
           SPDP    .S1     A18,A19:A18       ; |418| 
           SPDP    .S2     B20,B21:B20       ; |418| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
           ABSDP   .S1     A5:A4,A23:A22     ; |446| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 418,column 21,is_stmt,isa 0
           ABSDP   .S2     B19:B18,B19:B18   ; |418| 

           SPDP    .S1X    B30,A5:A4         ; |446| 
||         CMPGTDP .S2     B5:B4,B7:B6,B30   ; |418| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
           CMPLTDP .S1     A23:A22,A21:A20,A1 ; |446| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 418,column 21,is_stmt,isa 0
           ABSDP   .S2     B21:B20,B5:B4     ; |418| 

           ABSDP   .S1     A5:A4,A21:A20     ; |446| 
||         LDDW    .D2T1   *+SP(240),A5:A4   ; |446| 
||         CMPGTDP .S2     B19:B18,B9:B8,B20 ; |418| 
||         FSUBSP  .L2X    B26,A24,B18       ; |446| 

           CMPGTDP .S1     A9:A8,A31:A30,A25 ; |418| 
||         LDW     .D1T1   *+A3(4),A9        ; |418| 
||         LDW     .D2T2   *+B22(12),B26     ; |418| 

           LDW     .D2T2   *+B22(8),B19      ; |418| 

           LDW     .D2T2   *+B22(16),B30     ; |418| 
||         ABSDP   .S1     A19:A18,A19:A18   ; |418| 
||         ADD     .L1X    A25,B30,A26       ; |418| 

           LDW     .D1T1   *+A3(16),A25      ; |418| 

           FSUBDP  .L1     A17:A16,A5:A4,A23:A22 ; |446| 
||         LDDW    .D2T1   *+SP(232),A5:A4   ; |446| 
|| [ A1]   SPDP    .S1X    B27,A17:A16       ; |446| 

           LDW     .D2T2   *+B22(28),B27     ; |418| 
||         CMPEQ   .L2X    B31,A9,B21        ; |418| 
||         ADDK    .S2     32,B22            ; |417| 

           SPDP    .S1     A2,A9:A8          ; |446| 
||         LDW     .D1T1   *A11++,A2         ; |418| 

           CMPEQ   .L2X    B26,A28,B31       ; |418| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
           ABSDP   .S1     A9:A8,A9:A8       ; |446| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 418,column 21,is_stmt,isa 0
           CMPGTDP .S1     A19:A18,A5:A4,A0  ; |418| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
           DADD    .L1X    0,B13:B12,A5:A4   ; |446| 

           ABSDP   .S1     A23:A22,A19:A18   ; |446| 
||         ADD     .L1X    B20,A26,A23       ; |418| 
||         CMPGTDP .S2     B5:B4,B17:B16,B20 ; |418| 
||         LDW     .D1T1   *+A3(28),A22      ; |418| 

           CMPGTDP .S1     A21:A20,A5:A4,A20 ; |446| 
||         ADD     .L1     A0,A23,A26        ; |418| 
||         LDW     .D1T1   *A12++,A21        ; |418| 

           SPDP    .S2     B18,B5:B4         ; |446| 
||         XOR     .L2     1,B21,B18         ; |418| 
||         CMPEQ   .L1X    B1,A27,A0         ; |418| 

           ADD     .L1X    B20,A26,A4        ; |418| 
||         XOR     .D1     1,A0,A5           ; |418| 
||         ADDK    .S1     32,A3             ; |417| 

           ADD     .L1X    B18,A4,A4         ; |418| 
||         XOR     .L2     1,B31,B18         ; |418| 
||         ABSDP   .S2     B5:B4,B5:B4       ; |446| 

           CMPEQ   .L1X    B19,A29,A23       ; |418| 
||         CMPEQ   .L2X    B30,A25,B19       ; |418| 
||         ADD     .S1     A5,A4,A25         ; |418| 

           DADD    .L1X    0,B11:B10,A5:A4   ; |446| 
||         CMPEQ   .L2X    B27,A22,B20       ; |418| 
||         XOR     .S1     1,A23,A26         ; |418| 
||         XOR     .S2     1,B19,B21         ; |418| 
|| [ A1]   MV      .D2     B9,B19            ; |418| 

           CMPLTDP .S1     A19:A18,A5:A4,A0  ; |446| 
||         ADD     .L1X    B18,A25,A22       ; |418| 
||         XOR     .L2     1,B20,B25         ; |418| 
||         FSUBSP  .S2X    B25,A24,B20       ; |446| 
|| [ A1]   MV      .D2     B8,B18            ; |418| 

           ADD     .D1     A26,A22,A18       ; |418| 
||         CMPEQ   .L1     A21,A2,A19        ; |418| 

           ADD     .L1X    B21,A18,A18       ; |418| 
||         XOR     .S1     1,A19,A22         ; |418| 
||         CMPGTDP .S2     B5:B4,B7:B6,B21   ; |446| 
|| [ A1]   MV      .D1     A31,A5            ; |418| 

           ADD     .L1X    B25,A18,A21       ; |418| 
|| [ A1]   MV      .S1     A30,A4            ; |418| 

           ADD     .L1     A22,A21,A21       ; |418| 
||         DADD    .S1X    0,B29:B28,A19:A18 ; |418| 
|| [ A1]   SPDP    .S2     B20,B5:B4         ; |446| 
||         ADD     .L2X    B21,A20,B20       ; |446| 

           ADD     .L1     A10,A21,A10       ; |418| 
||         CMPLTDP .S1     A9:A8,A19:A18,A2  ; |446| 

   [ A1]   ABSDP   .S2     B5:B4,B5:B4       ; |446| 

   [!A0]   ADD     .L2X    1,A10,B21         ; |446| 
|| [ A1]   ABSDP   .S1     A17:A16,A9:A8     ; |446| 

           ADD     .L2X    A10,B20,B20       ; |446| 
|| [!A0]   STW     .D2T2   B21,*+SP(216)     ; |446| 
|| [ A1]   CMPGTDP .S2     B5:B4,B19:B18,B4  ; |446| 

   [ A0]   STW     .D2T2   B20,*+SP(216)     ; |446| 
|| [ A1]   CMPGTDP .S1     A9:A8,A5:A4,A4    ; |446| 

   [!A1]   LDW     .D2T1   *+SP(216),A4      ; |446| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 417,column 29,is_stmt,isa 0
   [ B0]   B       .S1     $C$L28            ; |417| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
   [ A1]   ADD     .L2X    A4,B4,B4          ; |446| 

   [ A1]   ADD     .L2X    A10,B4,B4         ; |446| 
|| [ A2]   MV      .L1X    B20,A10           ; |446| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 417,column 43,is_stmt,isa 0
   [ A1]   STW     .D2T2   B4,*+SP(220)      ; |417| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 446,column 25,is_stmt,isa 0
   [!A1]   STW     .D2T1   A4,*+SP(220)      ; |446| 
   [!A2]   LDW     .D2T1   *+SP(220),A10     ; |446| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 417,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L28}        ; |417| 
$C$DW$L$VLIB_blobAnalysis_d$55$E:
;** --------------------------------------------------------------------------*
$C$L29:    
$C$DW$L$VLIB_blobAnalysis_d$56$B:
;          EXCLUSIVE CPU CYCLES: 16
;**	-----------------------g35:
;** 459	-----------------------    status_nat_vs_int = error == 0;
;** 462	-----------------------    C$23 = (*U$17).staticOut;
;** 462	-----------------------    if ( C$23 == NULL ) goto g44;
           LDW     .D2T1   *+SP(96),A3
           LDW     .D2T2   *+SP(192),B0
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 462,column 17,is_stmt,isa 0
           LDW     .D1T1   *+A3(20),A0       ; |462| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 459,column 17,is_stmt,isa 0
           CMPEQ   .L2X    A10,0,B10         ; |459| 
           NOP             3

   [!A0]   BNOP    .S1     $C$L35,4          ; |462| 
|| [ A0]   LDW     .D1T1   *+A3(16),A3       ; |463| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 463,column 21,is_stmt,isa 0
           CMPEQ   .L2X    A3,B0,B0          ; |463| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 462,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L35}        ; |462| 
$C$DW$L$VLIB_blobAnalysis_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$57$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 463	-----------------------    if ( (*U$17).numBlobs != numBlobs ) goto g41;

           MV      .L2     B0,B2             ; branch predicate copy
|| [!B0]   B       .S1     $C$L32            ; |463| 
||         MV      .S2     B0,B1             ; guard predicate rewrite
||         LDW     .D2T2   *+SP(192),B0

   [!B2]   BNOP    .S1     $C$L36,2          ; |513| 
|| [!B2]   ZERO    .L1     A3                ; |513| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 513,column 25,is_stmt,isa 0
   [!B2]   STW     .D2T1   A3,*+SP(112)      ; |513| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 468,column 37,is_stmt,isa 0
           CMPGT   .L2     B0,0,B0           ; |468| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 463,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L32}        ; |463| 
$C$DW$L$VLIB_blobAnalysis_d$57$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$58$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 466	-----------------------    error = 0;
;** 468	-----------------------    if ( numBlobs <= 0 ) goto g40;

   [!B0]   B       .S1     $C$L31            ; |468| 
||         ZERO    .L1     A8                ; |466| 
||         LDW     .D2T2   *+SP(172),B19
||         MV      .L2     B0,B2             ; guard predicate rewrite
|| [ B0]   MVKL    .S2     0x3fa99999,B17

           LDW     .D2T2   *+SP(180),B20
|| [ B2]   MVKL    .S1     0x40668000,A31
|| [ B0]   ZERO    .L2     B16
|| [ B0]   MVKH    .S2     0x3fa99999,B17
|| [ B2]   MV      .L1     A8,A30            ; |469| 
|| [ B2]   MV      .D1     A8,A4             ; |469| 

   [ B2]   MVKL    .S1     0x40568000,A3
|| [ B0]   MVKH    .S2     0xa0000000,B16
|| [ B2]   STW     .D2T1   A30,*+SP(232)     ; |498| 

   [ B2]   MVKH    .S1     0x40668000,A31
|| [ B2]   STW     .D2T1   A4,*+SP(240)      ; |498| 

   [ B2]   MVKH    .S1     0x40568000,A3
|| [ B2]   STW     .D2T1   A31,*+SP(236)     ; |498| 

   [ B2]   STW     .D2T1   A3,*+SP(244)      ; |498| 
|| [ B2]   MV      .L1     A0,A3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 468,column 37,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L31}        ; |468| 
$C$DW$L$VLIB_blobAnalysis_d$58$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$59$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$171 = vlibBlobList;
;**  	-----------------------    U$257 = perimeter;
;**  	-----------------------    U$264 = boxes;
;**  	-----------------------    U$266 = circles;
;**  	-----------------------    U$415 = C$23;
;** 469	-----------------------    L$6 = numBlobs;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)

           LDW     .D2T2   *+SP(168),B21
||         LDW     .D1T1   *+A3(36),A4       ; |498| 
||         MV      .L2     B17,B23           ; |469| 
||         MV      .S2     B17,B27           ; |469| 
||         MV      .L1X    B17,A11           ; |469| 

           MV      .L1X    B17,A13           ; |469| 
||         LDW     .D2T2   *+SP(212),B18
||         MV      .L2     B16,B22           ; |469| 
||         MV      .S2     B16,B26           ; |469| 
||         LDW     .D1T1   *+A3(52),A7       ; |469| 

           MV      .L1X    B17,A25           ; |469| 
||         LDW     .D2T2   *+SP(192),B0      ; |498| 
||         MV      .L2     B16,B12           ; |469| 
||         MV      .S2     B17,B13           ; |469| 

           MV      .L1X    B17,A23           ; |469| 
||         LDW     .D2T1   *+B19(16),A6      ; |498| 

           MV      .L1X    B17,A21           ; |469| 
||         LDW     .D2T2   *B19,B5           ; |469| 

           MV      .L1X    B16,A24           ; |469| 
||         LDW     .D2T1   *+B20(4),A16      ; |469| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 469,column 29,is_stmt,isa 0
           MV      .L1X    B16,A12           ; |469| 
           MV      .L1X    B16,A10           ; |469| 
           MV      .L1X    B16,A22           ; |469| 
           MV      .L1X    B16,A20           ; |469| 
$C$DW$L$VLIB_blobAnalysis_d$59$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c
;*      Loop source line                 : 468
;*      Loop opening brace source line   : 468
;*      Loop closing brace source line   : 509
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 7
;*      Unpartitioned Resource Bound     : 39
;*      Partitioned Resource Bound(*)    : 39
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     5        3     
;*      .S units                    39*      26     
;*      .D units                    16       16     
;*      .M units                     0        0     
;*      .X cross paths              23       18     
;*      .T address paths            15       15     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           5        9     (.L or .S unit)
;*      Addition ops (.LSD)         22       12     (.L or .S or .D unit)
;*      Bound(.L .S .LS)            25       19     
;*      Bound(.L .S .D .LS .LSD)    29       22     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 39 Did not find schedule
;*         ii = 40 Register pressure too high: 56
;*         ii = 40 Did not find schedule
;*         ii = 41 Did not find schedule
;*         ii = 42 Did not find schedule
;*         ii = 43 Did not find schedule
;*         ii = 45 Register pressure too high: 39
;*         ii = 45 Register pressure too high: 39
;*         ii = 45 Register pressure too high: 39
;*         ii = 45 Did not find schedule
;*         ii = 47 Register pressure too high: 38
;*         ii = 47 Register pressure too high: 38
;*         ii = 47 Register pressure too high: 38
;*         ii = 47 Did not find schedule
;*         ii = 50 Register pressure too high: 37
;*         ii = 50 Register pressure too high: 38
;*         ii = 50 Register pressure too high: 38
;*         ii = 50 Did not find schedule
;*         ii = 53 Register pressure too high: 38
;*         ii = 53 Register pressure too high: 38
;*         ii = 53 Register pressure too high: 38
;*         ii = 53 Did not find schedule
;*         ii = 57 Register pressure too high: 38
;*         ii = 57 Register pressure too high: 38
;*         ii = 57 Register pressure too high: 38
;*         ii = 57 Did not find schedule
;*      Disqualified loop: Did not find schedule
;*----------------------------------------------------------------------------*
$C$L30:    
$C$DW$L$VLIB_blobAnalysis_d$60$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g39:
;** 469	-----------------------    error += (ABS((double)((*U$264).y-(*U$415).rect_center_y)) > 0.05)+(ABS((double)((*U$264).x-(*U$415).rect_center_x)) > 0.05)+(ABS((double)((*U$266).radius-(*U$415).circle_r)) > 0.05)+(ABS((double)((*U$266).y-(*U$415).circle_y)) > 0.05)+(ABS((double)((*U$266).x-(*U$415).circle_x)) > 0.05)+((*U$171).xmax-(*U$415).xmax != (-1))+((*U$171).xmin != (*U$415).xmin)+((*U$171).ymax-(*U$415).ymax != (-1))+((*U$171).ymin != (*U$415).ymin)+((*U$171).area != (*U$415).area)+((*U$171).ccmapColor != (*U$415).ccMapColor)+(*U$257++ != (unsigned)(*U$415).perimeter);
;** 498	-----------------------    C$20 = (*U$415).rect_width;
;** 498	-----------------------    C$21 = (*U$264).w;
;** 498	-----------------------    C$22 = (*U$415).rect_height;
;** 498	-----------------------    C$19 = (*U$264).h;
;** 498	-----------------------    C$18 = (ABS((double)(C$19-C$22)) > 0.05)+(ABS((double)(C$21-C$20)) > 0.05)+error;
;** 498	-----------------------    C$17 = ABS((double)((*U$264++{20}).angle-(*U$415++{60}).rect_sita));
;** 498	-----------------------    P$44 = (ABS(C$17-180.0) < 0.05) ? C$18 : error+1;
;** 498	-----------------------    P$43 = (ABS(C$17-90.0) < 0.05) ? (ABS((double)(C$19-C$20)) > 0.05)+(ABS((double)(C$21-C$22)) > 0.05)+error : P$44;
;** 498	-----------------------    (ABS(C$17-0.0) < 0.05) ? (error = C$18) : (error = P$43);
;** 468	-----------------------    U$171 += 32;
;** 468	-----------------------    U$266 += 12;
;** 468	-----------------------    if ( L$6 = L$6-1 ) goto g39;
           LDW     .D1T1   *+A3(28),A5       ; |469| 
           NOP             4
$C$DW$L$VLIB_blobAnalysis_d$60$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$61$B:
;          EXCLUSIVE CPU CYCLES: 51

           LDW     .D1T1   *+A3(32),A31      ; |469| 
||         LDW     .D2T2   *+B19(4),B4       ; |469| 
||         FSUBSP  .L1     A6,A4,A4          ; |498| 
||         FSUBSP  .L2X    B5,A5,B8          ; |469| 
||         FSUBSP  .S1     A16,A7,A26        ; |469| 
||         SUB     .S2     B0,1,B0           ; |468| 

           LDW     .D2T2   *+B20(8),B6       ; |469| 
||         LDW     .D1T1   *+A3(56),A18      ; |469| 

           LDW     .D2T2   *+B19(12),B24     ; |498| 
||         LDW     .D1T1   *+A3(44),A9       ; |498| 

           LDDW    .D2T1   *+SP(240),A17:A16 ; |469| 
||         LDW     .D1T2   *+A3(48),B31      ; |469| 
||         SPDP    .S1     A4,A5:A4          ; |498| 

           LDW     .D2T2   *B20,B7           ; |469| 
||         LDW     .D1T1   *+A3(40),A2       ; |498| 
||         ADD     .L2     12,B20,B20        ; |468| 

           SPDP    .S1X    B8,A7:A6          ; |469| 
||         FSUBSP  .L2X    B4,A31,B8         ; |469| 
||         LDW     .D2T2   *+B19(8),B25      ; |498| 
||         LDW     .D1T1   *+A3(20),A29      ; |469| 

           FSUBSP  .L2X    B6,A18,B6         ; |469| 
||         LDW     .D2T2   *+B18(4),B1       ; |469| 
||         LDW     .D1T1   *+A3(12),A28      ; |469| 

           LDW     .D1T2   *+A3(16),B2       ; |469| 
||         ABSDP   .S1     A5:A4,A5:A4       ; |498| 
||         FSUBSP  .L2X    B24,A9,B30        ; |498| 

           SPDP    .S2     B8,B9:B8          ; |469| 

           FSUBDP  .L1     A5:A4,A17:A16,A19:A18 ; |498| 
||         SPDP    .S1     A26,A17:A16       ; |469| 
||         FSUBSP  .L2     B7,B31,B5         ; |469| 

           SPDP    .S2     B6,B7:B6          ; |469| 
           LDW     .D2T1   *+B18(12),A0      ; |469| 

           ABSDP   .S2     B9:B8,B9:B8       ; |469| 
||         ABSDP   .S1     A19:A18,A27:A26   ; |498| 

           LDW     .D1T1   *+A3(24),A30      ; |469| 

           ABSDP   .S2     B7:B6,B7:B6       ; |469| 
||         SPDP    .S1X    B30,A19:A18       ; |498| 

           LDW     .D2T2   *B18,B31          ; |469| 

           ABSDP   .S1     A17:A16,A17:A16   ; |469| 
||         SPDP    .S2     B5,B5:B4          ; |469| 

           CMPGTDP .S2     B9:B8,B17:B16,B28 ; |469| 
||         FSUBSP  .L2X    B25,A2,B8         ; |498| 

           ABSDP   .S1     A7:A6,A7:A6       ; |469| 
||         SUB     .L2X    B1,A29,B9         ; |469| 

           FSUBSP  .L2X    B24,A2,B1         ; |498| 
||         LDW     .D2T2   *+B18(16),B24     ; |469| 

           ABSDP   .S1     A19:A18,A19:A18   ; |498| 
||         ABSDP   .S2     B5:B4,B5:B4       ; |469| 

           CMPGTDP .S2     B7:B6,B23:B22,B29 ; |469| 
||         CMPGTDP .S1     A17:A16,A13:A12,A31 ; |469| 

           LDW     .D1T1   *+A3(4),A16       ; |469| 

           LDDW    .D2T1   *+SP(232),A7:A6
||         CMPGTDP .S1     A7:A6,A11:A10,A17 ; |469| 
||         CMPGTDP .S2     B5:B4,B27:B26,B30 ; |469| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 498,column 33,is_stmt,isa 0
           ADD     .D2     B19,20,B19        ; |498| 

           CMPLTDP .S1     A27:A26,A21:A20,A1 ; |498| 
||         LDW     .D2T2   *+B18(8),B8       ; |469| 
||         SPDP    .S2     B8,B7:B6          ; |498| 

           ADD     .L1X    A17,B28,A27       ; |469| 
||         CMPEQ   .L2     B9,-1,B28         ; |469| 
||         SUB     .D1     A0,A30,A26        ; |469| 

           CMPGTDP .S1     A19:A18,A25:A24,A18 ; |498| 
||         CMPEQ   .L1X    B31,A28,A17       ; |469| 
||         XOR     .S2     1,B28,B31         ; |469| 
||         LDW     .D2T2   *+B18(28),B28     ; |469| 
||         LDW     .D1T1   *A3,A0            ; |469| 
||         FSUBSP  .L2X    B25,A9,B9         ; |498| 

           ADD     .D1X    B29,A27,A19       ; |469| 
||         FSUBDP  .L1     A5:A4,A7:A6,A7:A6 ; |498| 
||         ABSDP   .S2     B7:B6,B5:B4       ; |498| 
||         CMPEQ   .L2X    B24,A16,B24       ; |469| 

           ADD     .S1     A31,A19,A9        ; |469| 
||         CMPEQ   .L1     A26,-1,A29        ; |469| 
||         LDW     .D1T1   *+A3(8),A31       ; |469| 
||         XOR     .D2     1,B24,B24         ; |469| 

           ADD     .S1X    B30,A9,A27        ; |469| 
||         LDW     .D2T2   *B21++,B30        ; |469| 
||         XOR     .D1     1,A29,A30         ; |469| 
||         CMPEQ   .L2     B8,B2,B7          ; |469| 
||         CMPGTDP .S2     B5:B4,B17:B16,B29 ; |498| 

           ADD     .L1X    B31,A27,A26       ; |469| 
||         XOR     .D1     1,A17,A27         ; |469| 
||         ABSDP   .S1     A7:A6,A7:A6       ; |498| 
||         XOR     .L2     1,B7,B7           ; |469| 
|| [ A1]   MV      .D2     B22,B8            ; |469| 

           ADD     .D1     A27,A26,A29       ; |469| 
|| [ A1]   SPDP    .S2     B9,B5:B4          ; |498| 
||         CMPEQ   .L2X    B28,A0,B25        ; |469| 
||         ZERO    .L1     A17:A16           ; |498| 
|| [ A1]   MV      .D2     B23,B9            ; |469| 

           ADD     .L1     A30,A29,A19       ; |469| 
|| [ A1]   SPDP    .S1X    B1,A27:A26        ; |498| 
||         XOR     .L2     1,B25,B31         ; |469| 
||         ADDAW   .D1     A3,15,A3          ; |498| 

           CMPLTDP .S1     A7:A6,A23:A22,A2  ; |498| 
|| [ A1]   ABSDP   .S2     B5:B4,B5:B4       ; |498| 
||         FSUBDP  .L1     A5:A4,A17:A16,A17:A16 ; |498| 
|| [ A1]   MV      .D1     A11,A5            ; |469| 

           ADD     .L2X    B7,A19,B7         ; |469| 
||         CMPEQ   .L1X    B30,A31,A9        ; |469| 
|| [ A1]   MV      .D1     A10,A4            ; |469| 

           ADD     .L2     B24,B7,B7         ; |469| 
|| [ A1]   ABSDP   .S1     A27:A26,A7:A6     ; |498| 
|| [ A1]   CMPGTDP .S2     B5:B4,B9:B8,B4    ; |498| 
||         XOR     .D1     1,A9,A9           ; |469| 
|| [ B0]   LDW     .D2T2   *B19,B5           ; |469| 

           ADD     .L2     B31,B7,B6         ; |469| 
||         DADD    .L1X    0,B13:B12,A27:A26 ; |469| 

   [ A1]   CMPGTDP .S1     A7:A6,A5:A4,A4    ; |498| 
|| [ B0]   LDW     .D1T1   *+A3(52),A7       ; |469| 
||         ADDK    .S2     32,B18            ; |468| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 469,column 29,is_stmt,isa 0
           ADD     .L1X    A9,B6,A5          ; |469| 

           ADD     .L1     A8,A5,A8          ; |469| 
||         ADD     .S1X    B29,A18,A5        ; |498| 

           ADD     .L1     A8,A5,A4          ; |498| 
|| [ A1]   ADD     .S1X    B4,A4,A5          ; |498| 
|| [!A2]   ADD     .D1     1,A8,A6           ; |498| 

   [ A2]   STW     .D2T1   A4,*+SP(224)      ; |498| 
||         ABSDP   .S1     A17:A16,A17:A16   ; |498| 
|| [ A1]   ADD     .L1     A8,A5,A5          ; |498| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 498,column 33,is_stmt,isa 0
   [!A2]   STW     .D2T1   A6,*+SP(224)      ; |498| 

   [!A1]   LDW     .D2T1   *+SP(224),A5      ; |498| 
||         CMPLTDP .S1     A17:A16,A27:A26,A0 ; |498| 

   [ B0]   B       .S2     $C$L30            ; |468| 
|| [ A1]   STW     .D2T1   A5,*+SP(228)      ; |498| 

   [ B0]   LDW     .D2T1   *+B19(16),A6      ; |498| 
|| [ A0]   MV      .L1     A4,A8             ; |498| 

   [ B0]   LDW     .D1T1   *+A3(36),A4       ; |498| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 469,column 29,is_stmt,isa 0
   [ B0]   LDW     .D2T1   *+B20(4),A16      ; |469| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 498,column 33,is_stmt,isa 0
   [!A1]   STW     .D2T1   A5,*+SP(228)      ; |498| 
   [!A0]   LDW     .D2T1   *+SP(228),A8      ; |498| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 468,column 37,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L30}        ; |468| 
$C$DW$L$VLIB_blobAnalysis_d$61$E:
;** --------------------------------------------------------------------------*
$C$L31:    
$C$DW$L$VLIB_blobAnalysis_d$62$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g40:
;** 511	-----------------------    status_nat_vs_ref = error <= 0;
;** 512	-----------------------    goto g44;

           LDW     .D2T2   *+SP(152),B4      ; |523| 
||         MVKL    .S1     est_test,A4
||         MVKL    .S2     $C$SL5+0,B5

           B       .S2     $C$L37            ; |512| 
||         MVKH    .S1     est_test,A4

           MVKH    .S2     $C$SL5+0,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 523,column 17,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |523| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 511,column 25,is_stmt,isa 0
           CMPGT   .L1     A8,0,A3           ; |511| 

           XOR     .L1     1,A3,A3           ; |511| 
||         STW     .D2T2   B4,*+SP(12)       ; |523| 

           STW     .D2T1   A3,*+SP(112)      ; |511| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 512,column 21,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L37}          ; |512| 
$C$DW$L$VLIB_blobAnalysis_d$62$E:
;** --------------------------------------------------------------------------*
$C$L32:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 463,column 21,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$63$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g41:
;** 513	-----------------------    status_nat_vs_ref = 0;
;** 513	-----------------------    goto g44;

           LDW     .D2T2   *+SP(152),B4      ; |523| 
||         MVKL    .S1     est_test,A4
||         MVKL    .S2     $C$SL5+0,B5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 513,column 25,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L36}          ; |513| 
$C$DW$L$VLIB_blobAnalysis_d$63$E:
;** --------------------------------------------------------------------------*
$C$L33:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 344,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$64$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g42:
;** 626	-----------------------    sprintf(K$516, (const char *)"imageWidth=%d, imageHeight=%d", imageWidth, imageHeight);
;** 628	-----------------------    VLIB_skip_test(K$516);
;** 628	-----------------------    goto g45;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 626,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 627 | (int)imageWidth, (int)imageHeight);                                    
;----------------------------------------------------------------------
           STW     .D2T2   B5,*+SP(8)        ; |626| 
           STW     .D2T1   A3,*+SP(12)       ; |626| 

           STW     .D2T2   B4,*+SP(4)        ; |626| 
||         ADDKPC  .S2     $C$RL56,B3,0      ; |626| 
||         MVKH    .S1     desc,A4

$C$RL56:   ; CALL OCCURS {sprintf} {0}       ; |626| 
$C$DW$L$VLIB_blobAnalysis_d$64$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$65$B:
;          EXCLUSIVE CPU CYCLES: 7
           MVKL    .S1     desc,A4
$C$DW$386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$386, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$386, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 628,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 628 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
$C$RL57:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |628| 
$C$DW$L$VLIB_blobAnalysis_d$65$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$66$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S1     $C$L38,4          ; |628| 
||         LDW     .D2T1   *+SP(132),A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 632,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | if( pBlobScratch_cn ) {                                                
;----------------------------------------------------------------------
   [!A0]   B       .S1     $C$L39            ; |632| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 628,column 17,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L38}          ; |628| 
$C$DW$L$VLIB_blobAnalysis_d$66$E:
;** --------------------------------------------------------------------------*
$C$L34:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 294,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$67$B:
;**	-----------------------g43:
;** 295	-----------------------    status_nat_vs_int = 0;
$C$DW$L$VLIB_blobAnalysis_d$67$E:
;** --------------------------------------------------------------------------*
$C$L35:    
$C$DW$L$VLIB_blobAnalysis_d$68$B:
;          EXCLUSIVE CPU CYCLES: 1

           LDW     .D2T2   *+SP(152),B4      ; |523| 
||         MVKL    .S1     est_test,A4
||         MVKL    .S2     $C$SL5+0,B5

$C$DW$L$VLIB_blobAnalysis_d$68$E:
;** --------------------------------------------------------------------------*
$C$L36:    
$C$DW$L$VLIB_blobAnalysis_d$69$B:
;          EXCLUSIVE CPU CYCLES: 5
           MVKH    .S2     $C$SL5+0,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 523,column 17,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |523| 
           MVKH    .S1     est_test,A4
           NOP             1
           STW     .D2T2   B4,*+SP(12)       ; |523| 
$C$DW$L$VLIB_blobAnalysis_d$69$E:
;** --------------------------------------------------------------------------*
$C$L37:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 462,column 17,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$70$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g44:
;** 520	-----------------------    est_test = 1;
;** 523	-----------------------    sprintf(K$516, (const char *)"%3d blobs, %8d bytes, %6d bytes, %6d bytes", numBlobs, ccl_totalBuf, blobList_totalBuf, Blob_analysis_totalBuf);
;** 528	-----------------------    VLIB_formula_add_test(imageWidth*imageHeight, 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$516, 0);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 523,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(160),A3      ; |523| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 520,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(192),B0      ; |520| 
$C$DW$387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$387, DW_AT_low_pc(0x04)
	.dwattr $C$DW$387, DW_AT_name("sprintf")
	.dwattr $C$DW$387, DW_AT_TI_call

           LDW     .D2T2   *+SP(156),B4      ; |523| 
||         CALL    .S1     sprintf           ; |523| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 523,column 17,is_stmt,isa 0
           ADDKPC  .S2     $C$RL58,B3,1      ; |523| 

           STW     .D2T1   A3,*+SP(20)       ; |523| 
||         MVK     .L1     1,A3              ; |520| 

           STW     .D1T1   A3,*A4            ; |520| 
||         MVKL    .S1     desc,A4
||         STW     .D2T2   B0,*+SP(8)        ; |523| 

           MVKH    .S1     desc,A4
||         STW     .D2T2   B4,*+SP(16)       ; |523| 

$C$RL58:   ; CALL OCCURS {sprintf} {0}       ; |523| 
$C$DW$L$VLIB_blobAnalysis_d$70$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$71$B:
;          EXCLUSIVE CPU CYCLES: 19
           LDW     .D2T1   *+SP(112),A3      ; |523| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 528,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(164),A4      ; |528| 
           LDW     .D2T1   *+SP(208),A5      ; |528| 
           CMPEQ   .L2     B10,0,B4          ; |528| 
           MVKL    .S1     desc,A8
           CMPEQ   .L1     A3,0,A3           ; |528| 
           ZERO    .L2     B8                ; |528| 
$C$DW$388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$388, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$388, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MPY32   .M1     A4,A5,A4          ; |528| 
||         OR      .L2X    A3,B4,B6          ; |528| 
||         ZERO    .D2     B4                ; |528| 
||         MVKH    .S1     desc,A8
||         ZERO    .L1     A6                ; |528| 

$C$RL59:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |528| 
           LDW     .D2T1   *+SP(132),A0
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 632,column 13,is_stmt,isa 0
   [!A0]   B       .S1     $C$L39            ; |632| 
$C$DW$L$VLIB_blobAnalysis_d$71$E:
;** --------------------------------------------------------------------------*
$C$L38:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 628,column 17,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$72$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g45:
;** 632	-----------------------    if ( pBlobScratch_cn == NULL ) goto g47;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 633,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 633 | free(pBlobScratch_cn);                                                 
;----------------------------------------------------------------------
$C$DW$389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$389, DW_AT_name("free")
	.dwattr $C$DW$389, DW_AT_TI_call
   [ A0]   CALL    .S1     free              ; |633| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 632,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L39}        ; |632| 
$C$DW$L$VLIB_blobAnalysis_d$72$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$73$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 633	-----------------------    free(pBlobScratch_cn);

           MV      .L1     A0,A4             ; |633| 
||         ADDKPC  .S2     $C$RL60,B3,0      ; |633| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 633,column 17,is_stmt,isa 0
$C$RL60:   ; CALL OCCURS {free} {0}          ; |633| 
$C$DW$L$VLIB_blobAnalysis_d$73$E:
;** --------------------------------------------------------------------------*
$C$L39:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 632,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$74$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g47:
;** 635	-----------------------    if ( pBlobScratch == NULL ) goto g49;
           LDW     .D2T1   *+SP(128),A0
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 635,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 635 | if( pBlobScratch ) {                                                   
;----------------------------------------------------------------------
   [!A0]   B       .S1     $C$L40            ; |635| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 636,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 636 | VLIB_free(pBlobScratch);                                               
;----------------------------------------------------------------------
$C$DW$390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$390, DW_AT_name("VLIB_free")
	.dwattr $C$DW$390, DW_AT_TI_call
   [ A0]   CALL    .S1     VLIB_free         ; |636| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 635,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L40}        ; |635| 
$C$DW$L$VLIB_blobAnalysis_d$74$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$75$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 636	-----------------------    VLIB_free(pBlobScratch);

           MV      .L1     A0,A4             ; |636| 
||         ADDKPC  .S2     $C$RL61,B3,0      ; |636| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 636,column 17,is_stmt,isa 0
$C$RL61:   ; CALL OCCURS {VLIB_free} {0}     ; |636| 
$C$DW$L$VLIB_blobAnalysis_d$75$E:
;** --------------------------------------------------------------------------*
$C$L40:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 635,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$76$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g49:
;** 639	-----------------------    free(blobListScratch_cn);
;** 640	-----------------------    VLIB_free(blobListScratch);
;** 641	-----------------------    free((void *)CCMap);
;** 642	-----------------------    free(CCLBuf);
;** 643	-----------------------    free((void *)maskBuf);
;** 644	-----------------------    free((void *)handle);
;** 645	-----------------------    free((void *)input_image);
;** 647	-----------------------    goto g57;
$C$DW$391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$391, DW_AT_name("free")
	.dwattr $C$DW$391, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(124),A4      ; |639| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 639,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 639 | free(blobListScratch_cn);                                              
;----------------------------------------------------------------------
$C$RL62:   ; CALL OCCURS {free} {0}          ; |639| 
$C$DW$L$VLIB_blobAnalysis_d$76$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$77$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$392, DW_AT_name("VLIB_free")
	.dwattr $C$DW$392, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(120),A4      ; |640| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 640,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 640 | VLIB_free(blobListScratch);                                            
;----------------------------------------------------------------------
$C$RL63:   ; CALL OCCURS {VLIB_free} {0}     ; |640| 
$C$DW$393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$393, DW_AT_name("free")
	.dwattr $C$DW$393, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(148),A4      ; |641| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 641,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 641 | free(CCMap);                                                           
;----------------------------------------------------------------------
$C$RL64:   ; CALL OCCURS {free} {0}          ; |641| 
$C$DW$394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$394, DW_AT_name("free")
	.dwattr $C$DW$394, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(144),A4      ; |642| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 642,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 642 | free(CCLBuf);                                                          
;----------------------------------------------------------------------
$C$RL65:   ; CALL OCCURS {free} {0}          ; |642| 
$C$DW$395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$395, DW_AT_name("free")
	.dwattr $C$DW$395, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(140),A4      ; |643| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 643,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 643 | free(maskBuf);                                                         
;----------------------------------------------------------------------
$C$RL66:   ; CALL OCCURS {free} {0}          ; |643| 
$C$DW$396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$396, DW_AT_name("free")
	.dwattr $C$DW$396, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(136),A4      ; |644| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 644,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 644 | free(handle);                                                          
;----------------------------------------------------------------------
$C$RL67:   ; CALL OCCURS {free} {0}          ; |644| 
$C$DW$397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$397, DW_AT_name("free")
	.dwattr $C$DW$397, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(116),A4      ; |645| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 645,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 645 | free(input_image);                                                     
;----------------------------------------------------------------------
$C$RL68:   ; CALL OCCURS {free} {0}          ; |645| 
$C$DW$L$VLIB_blobAnalysis_d$77$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$78$B:
;          EXCLUSIVE CPU CYCLES: 6

           B       .S2     $C$L47            ; |647| 
||         LDW     .D2T1   *+SP(104),A31
||         MVKL    .S1     test_cases,A3

           MVKH    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(96),A5       ; |142| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 142,column 19,is_stmt,isa 0
           LDW     .D1T1   *A3,A4            ; |142| 
           NOP             2
           ADD     .L1     1,A31,A3          ; |142| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 647,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 647 | } else {                                                               
; 648 | SKIP_TEST:                                                             
;----------------------------------------------------------------------
           ; BRANCH OCCURS {$C$L47}          ; |647| 
$C$DW$L$VLIB_blobAnalysis_d$78$E:
;** --------------------------------------------------------------------------*
$C$L41:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 263,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$79$B:
;          EXCLUSIVE CPU CYCLES: 4
;**	-----------------------g50:
;** 264	-----------------------    if ( blobListScratch == NULL ) goto g52;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 265,column 21,is_stmt,isa 0
$C$DW$398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$398, DW_AT_name("VLIB_free")
	.dwattr $C$DW$398, DW_AT_TI_call
   [ A0]   CALL    .S1     VLIB_free         ; |265| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 264,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L42}        ; |264| 
$C$DW$L$VLIB_blobAnalysis_d$79$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$80$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 265	-----------------------    VLIB_free(blobListScratch);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 265,column 21,is_stmt,isa 0
           ADDKPC  .S2     $C$RL69,B3,0      ; |265| 
           MV      .L1     A0,A4             ; |265| 
$C$RL69:   ; CALL OCCURS {VLIB_free} {0}     ; |265| 
$C$DW$L$VLIB_blobAnalysis_d$80$E:
;** --------------------------------------------------------------------------*
$C$L42:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 264,column 17,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$81$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g52:
;** 267	-----------------------    if ( blobListScratch_cn == NULL ) goto g54;
           LDW     .D2T1   *+SP(124),A0
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 267,column 17,is_stmt,isa 0
   [!A0]   B       .S1     $C$L43            ; |267| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 268,column 21,is_stmt,isa 0
$C$DW$399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$399, DW_AT_name("free")
	.dwattr $C$DW$399, DW_AT_TI_call
   [ A0]   CALL    .S1     free              ; |268| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 267,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L43}        ; |267| 
$C$DW$L$VLIB_blobAnalysis_d$81$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$82$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 268	-----------------------    free(blobListScratch_cn);

           MV      .L1     A0,A4             ; |268| 
||         ADDKPC  .S2     $C$RL70,B3,0      ; |268| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 268,column 21,is_stmt,isa 0
$C$RL70:   ; CALL OCCURS {free} {0}          ; |268| 
$C$DW$L$VLIB_blobAnalysis_d$82$E:
;** --------------------------------------------------------------------------*
$C$L43:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 267,column 17,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$83$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g54:
;** 270	-----------------------    free((void *)input_image);
;** 271	-----------------------    goto g56;
$C$DW$400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$400, DW_AT_name("free")
	.dwattr $C$DW$400, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(116),A4      ; |270| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 270,column 17,is_stmt,isa 0
$C$RL71:   ; CALL OCCURS {free} {0}          ; |270| 
$C$DW$L$VLIB_blobAnalysis_d$83$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$84$B:
;          EXCLUSIVE CPU CYCLES: 6

           B       .S1     $C$L46            ; |271| 
||         LDW     .D2T1   *+SP(96),A4       ; |650| 

           LDW     .D2T1   *+SP(96),A3
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 650,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 650 | sprintf(desc, "imageWidth=%d, imageHeight=%d",                         
;----------------------------------------------------------------------
           STW     .D2T2   B4,*+SP(4)        ; |650| 
           LDW     .D1T1   *+A4(4),A4        ; |650| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 271,column 17,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L46}          ; |271| 
$C$DW$L$VLIB_blobAnalysis_d$84$E:
;** --------------------------------------------------------------------------*
$C$L44:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 222,column 13,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$85$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g55:
;** 223	-----------------------    free((void *)input_image);
;** 224	-----------------------    free((void *)handle);
;** 225	-----------------------    free((void *)maskBuf);
;** 226	-----------------------    free(CCLBuf);
;** 227	-----------------------    free((void *)CCMap);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 223,column 17,is_stmt,isa 0
           ADDKPC  .S2     $C$RL72,B3,1      ; |223| 
$C$RL72:   ; CALL OCCURS {free} {0}          ; |223| 
$C$DW$L$VLIB_blobAnalysis_d$85$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$86$B:
;          EXCLUSIVE CPU CYCLES: 24
$C$DW$401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$401, DW_AT_name("free")
	.dwattr $C$DW$401, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(136),A4      ; |224| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 224,column 17,is_stmt,isa 0
$C$RL73:   ; CALL OCCURS {free} {0}          ; |224| 
$C$DW$402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$402, DW_AT_name("free")
	.dwattr $C$DW$402, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(140),A4      ; |225| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 225,column 17,is_stmt,isa 0
$C$RL74:   ; CALL OCCURS {free} {0}          ; |225| 
$C$DW$403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$403, DW_AT_name("free")
	.dwattr $C$DW$403, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(144),A4      ; |226| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 226,column 17,is_stmt,isa 0
$C$RL75:   ; CALL OCCURS {free} {0}          ; |226| 
$C$DW$404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$404, DW_AT_name("free")
	.dwattr $C$DW$404, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(148),A4      ; |227| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 227,column 17,is_stmt,isa 0
$C$RL76:   ; CALL OCCURS {free} {0}          ; |227| 
$C$DW$L$VLIB_blobAnalysis_d$86$E:
;** --------------------------------------------------------------------------*
$C$L45:    
$C$DW$L$VLIB_blobAnalysis_d$87$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 650,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 651 | prm[tpi].imageWidth, prm[tpi].imageHeight);                            
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(96),A4       ; |650| 
           LDW     .D2T1   *+SP(96),A3
           MVKL    .S2     $C$SL4+0,B4
           MVKH    .S2     $C$SL4+0,B4
           STW     .D2T2   B4,*+SP(4)        ; |650| 
           LDW     .D1T1   *+A4(4),A4        ; |650| 
$C$DW$L$VLIB_blobAnalysis_d$87$E:
;** --------------------------------------------------------------------------*
$C$L46:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 154,column 9,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$88$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g56:
;** 650	-----------------------    sprintf(K$516, (const char *)"imageWidth=%d, imageHeight=%d", (*U$17).imageWidth, (*U$17).imageHeight);
;** 652	-----------------------    VLIB_skip_test(K$516);
$C$DW$405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$405, DW_AT_name("sprintf")
	.dwattr $C$DW$405, DW_AT_TI_call

           CALL    .S1     sprintf           ; |650| 
||         LDW     .D1T1   *+A3(8),A3        ; |650| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 650,column 13,is_stmt,isa 0
           ADDKPC  .S2     $C$RL77,B3,2      ; |650| 

           STW     .D2T1   A4,*+SP(8)        ; |650| 
||         MVKL    .S1     desc,A4

           STW     .D2T1   A3,*+SP(12)       ; |650| 
||         MVKH    .S1     desc,A4

$C$RL77:   ; CALL OCCURS {sprintf} {0}       ; |650| 
$C$DW$L$VLIB_blobAnalysis_d$88$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_blobAnalysis_d$89$B:
;          EXCLUSIVE CPU CYCLES: 13
           MVKL    .S1     desc,A4
$C$DW$406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$406, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$406, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 652,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 652 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
$C$RL78:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |652| 

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(104),A31

           MVKH    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(96),A5       ; |142| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 142,column 19,is_stmt,isa 0
           LDW     .D1T1   *A3,A4            ; |142| 
           NOP             2
           ADD     .L1     1,A31,A3          ; |142| 
$C$DW$L$VLIB_blobAnalysis_d$89$E:
;** --------------------------------------------------------------------------*
$C$L47:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 647,column 9,is_stmt,isa 0
$C$DW$L$VLIB_blobAnalysis_d$90$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g57:
;** 142	-----------------------    U$17 += 24;
;** 142	-----------------------    if ( test_cases > (++tpi) ) goto g3;

           ADDK    .S1     24,A5             ; |142| 
||         STW     .D2T1   A3,*+SP(104)      ; |142| 

           CMPGT   .L1     A4,A3,A0          ; |142| 
||         STW     .D2T1   A5,*+SP(96)       ; |142| 

           LDW     .D2T1   *+SP(96),A4       ; |149| 
|| [ A0]   B       .S1     $C$L11            ; |142| 

           LDW     .D2T1   *+SP(96),A3
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 149,column 21,is_stmt,isa 0
   [ A0]   LDW     .D1T1   *+A4(8),A4        ; |149| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 142,column 19,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |142| 
$C$DW$L$VLIB_blobAnalysis_d$90$E:
;** --------------------------------------------------------------------------*
$C$L48:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g58:
;** 657	-----------------------    VLIB_profile_cycle_report(1, NULL, "imageWidth * imageHeight");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [19]
;** 168	-----------------------    VLIB_stack_memory();  // [19]
;** 664	-----------------------    return status;
           MVKL    .S1     $C$SL6+0,A6
$C$DW$407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$407, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$407, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL6+0,A6
||         MVK     .L1     0x1,A4            ; |657| 
||         ZERO    .L2     B4                ; |657| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 657,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 657 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 658 |                           NULL,                                        
; 659 |                           "imageWidth * imageHeight");                 
; 662 | VLIB_kernel_memory();                                                  
; 664 | return (status);                                                       
;----------------------------------------------------------------------
$C$RL79:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |657| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL7+0,B4
           MVKH    .S2     $C$SL7+0,B4
$C$DW$408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$408, DW_AT_name("printf")
	.dwattr $C$DW$408, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL80:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$409, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$409, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL81:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14

           LDW     .D2T1   *+SP(108),A4      ; |168| 
||         ADDK    .S2     256,SP            ; |665| 

	.dwcfi	cfa_offset, 56
           LDW     .D2T2   *++SP(8),B3
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c",line 665,column 1,is_stmt,isa 0
           LDW     .D2T1   *++SP(8),A11      ; |665| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$410, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$411	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$411, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L11:1:1443280057")
	.dwattr $C$DW$411, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$411, DW_AT_TI_begin_line(0x8e)
	.dwattr $C$DW$411, DW_AT_TI_end_line(0x28e)
$C$DW$412	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$412, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$4$B)
	.dwattr $C$DW$412, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$4$E)
$C$DW$413	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$413, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$85$B)
	.dwattr $C$DW$413, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$85$E)
$C$DW$414	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$414, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$86$B)
	.dwattr $C$DW$414, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$86$E)
$C$DW$415	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$415, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$79$B)
	.dwattr $C$DW$415, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$79$E)
$C$DW$416	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$416, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$80$B)
	.dwattr $C$DW$416, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$80$E)
$C$DW$417	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$417, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$81$B)
	.dwattr $C$DW$417, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$81$E)
$C$DW$418	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$418, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$82$B)
	.dwattr $C$DW$418, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$82$E)
$C$DW$419	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$419, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$83$B)
	.dwattr $C$DW$419, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$83$E)
$C$DW$420	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$420, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$84$B)
	.dwattr $C$DW$420, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$84$E)
$C$DW$421	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$421, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$87$B)
	.dwattr $C$DW$421, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$87$E)
$C$DW$422	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$422, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$88$B)
	.dwattr $C$DW$422, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$88$E)
$C$DW$423	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$423, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$67$B)
	.dwattr $C$DW$423, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$67$E)
$C$DW$424	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$424, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$63$B)
	.dwattr $C$DW$424, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$63$E)
$C$DW$425	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$425, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$68$B)
	.dwattr $C$DW$425, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$68$E)
$C$DW$426	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$426, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$59$B)
	.dwattr $C$DW$426, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$59$E)
$C$DW$427	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$427, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$54$B)
	.dwattr $C$DW$427, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$54$E)
$C$DW$428	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$428, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$48$B)
	.dwattr $C$DW$428, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$48$E)
$C$DW$429	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$429, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$41$B)
	.dwattr $C$DW$429, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$41$E)
$C$DW$430	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$430, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$38$B)
	.dwattr $C$DW$430, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$38$E)
$C$DW$431	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$431, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$39$B)
	.dwattr $C$DW$431, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$39$E)
$C$DW$432	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$432, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$40$B)
	.dwattr $C$DW$432, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$40$E)
$C$DW$433	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$433, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$45$B)
	.dwattr $C$DW$433, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$45$E)
$C$DW$434	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$434, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$46$B)
	.dwattr $C$DW$434, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$46$E)
$C$DW$435	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$435, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$47$B)
	.dwattr $C$DW$435, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$47$E)
$C$DW$436	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$436, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$52$B)
	.dwattr $C$DW$436, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$52$E)
$C$DW$437	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$437, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$53$B)
	.dwattr $C$DW$437, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$53$E)
$C$DW$438	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$438, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$56$B)
	.dwattr $C$DW$438, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$56$E)
$C$DW$439	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$439, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$57$B)
	.dwattr $C$DW$439, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$57$E)
$C$DW$440	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$440, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$58$B)
	.dwattr $C$DW$440, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$58$E)
$C$DW$441	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$441, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$62$B)
	.dwattr $C$DW$441, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$62$E)
$C$DW$442	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$442, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$69$B)
	.dwattr $C$DW$442, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$69$E)
$C$DW$443	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$443, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$70$B)
	.dwattr $C$DW$443, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$70$E)
$C$DW$444	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$444, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$29$B)
	.dwattr $C$DW$444, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$29$E)
$C$DW$445	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$445, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$25$B)
	.dwattr $C$DW$445, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$25$E)
$C$DW$446	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$446, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$9$B)
	.dwattr $C$DW$446, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$9$E)
$C$DW$447	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$447, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$8$B)
	.dwattr $C$DW$447, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$8$E)
$C$DW$448	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$448, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$5$B)
	.dwattr $C$DW$448, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$5$E)
$C$DW$449	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$449, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$6$B)
	.dwattr $C$DW$449, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$6$E)
$C$DW$450	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$450, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$7$B)
	.dwattr $C$DW$450, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$7$E)
$C$DW$451	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$451, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$13$B)
	.dwattr $C$DW$451, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$13$E)
$C$DW$452	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$452, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$14$B)
	.dwattr $C$DW$452, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$14$E)
$C$DW$453	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$453, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$15$B)
	.dwattr $C$DW$453, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$15$E)
$C$DW$454	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$454, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$16$B)
	.dwattr $C$DW$454, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$16$E)
$C$DW$455	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$455, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$17$B)
	.dwattr $C$DW$455, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$17$E)
$C$DW$456	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$456, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$18$B)
	.dwattr $C$DW$456, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$18$E)
$C$DW$457	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$457, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$19$B)
	.dwattr $C$DW$457, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$19$E)
$C$DW$458	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$458, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$20$B)
	.dwattr $C$DW$458, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$20$E)
$C$DW$459	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$459, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$21$B)
	.dwattr $C$DW$459, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$21$E)
$C$DW$460	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$460, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$22$B)
	.dwattr $C$DW$460, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$22$E)
$C$DW$461	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$461, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$23$B)
	.dwattr $C$DW$461, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$23$E)
$C$DW$462	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$462, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$24$B)
	.dwattr $C$DW$462, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$24$E)
$C$DW$463	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$463, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$26$B)
	.dwattr $C$DW$463, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$26$E)
$C$DW$464	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$464, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$27$B)
	.dwattr $C$DW$464, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$27$E)
$C$DW$465	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$465, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$28$B)
	.dwattr $C$DW$465, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$28$E)
$C$DW$466	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$466, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$33$B)
	.dwattr $C$DW$466, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$33$E)
$C$DW$467	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$467, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$34$B)
	.dwattr $C$DW$467, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$34$E)
$C$DW$468	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$468, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$35$B)
	.dwattr $C$DW$468, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$35$E)
$C$DW$469	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$469, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$36$B)
	.dwattr $C$DW$469, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$36$E)
$C$DW$470	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$470, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$37$B)
	.dwattr $C$DW$470, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$37$E)
$C$DW$471	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$471, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$64$B)
	.dwattr $C$DW$471, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$64$E)
$C$DW$472	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$472, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$65$B)
	.dwattr $C$DW$472, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$65$E)
$C$DW$473	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$473, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$66$B)
	.dwattr $C$DW$473, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$66$E)
$C$DW$474	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$474, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$71$B)
	.dwattr $C$DW$474, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$71$E)
$C$DW$475	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$475, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$72$B)
	.dwattr $C$DW$475, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$72$E)
$C$DW$476	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$476, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$73$B)
	.dwattr $C$DW$476, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$73$E)
$C$DW$477	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$477, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$74$B)
	.dwattr $C$DW$477, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$74$E)
$C$DW$478	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$478, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$75$B)
	.dwattr $C$DW$478, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$75$E)
$C$DW$479	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$479, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$76$B)
	.dwattr $C$DW$479, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$76$E)
$C$DW$480	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$480, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$77$B)
	.dwattr $C$DW$480, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$77$E)
$C$DW$481	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$481, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$78$B)
	.dwattr $C$DW$481, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$78$E)
$C$DW$482	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$482, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$89$B)
	.dwattr $C$DW$482, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$89$E)
$C$DW$483	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$483, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$90$B)
	.dwattr $C$DW$483, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$90$E)

$C$DW$484	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$484, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L24:2:1443280057")
	.dwattr $C$DW$484, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$484, DW_AT_TI_begin_line(0x166)
	.dwattr $C$DW$484, DW_AT_TI_end_line(0x179)
$C$DW$485	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$485, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$42$B)
	.dwattr $C$DW$485, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$42$E)
$C$DW$486	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$486, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$43$B)
	.dwattr $C$DW$486, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$43$E)
$C$DW$487	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$487, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$44$B)
	.dwattr $C$DW$487, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$44$E)
	.dwendtag $C$DW$484


$C$DW$488	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$488, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L26:2:1443280057")
	.dwattr $C$DW$488, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$488, DW_AT_TI_begin_line(0x189)
	.dwattr $C$DW$488, DW_AT_TI_end_line(0x19c)
$C$DW$489	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$489, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$49$B)
	.dwattr $C$DW$489, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$49$E)
$C$DW$490	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$490, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$50$B)
	.dwattr $C$DW$490, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$50$E)
$C$DW$491	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$491, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$51$B)
	.dwattr $C$DW$491, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$51$E)
	.dwendtag $C$DW$488


$C$DW$492	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$492, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L28:2:1443280057")
	.dwattr $C$DW$492, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$492, DW_AT_TI_begin_line(0x1a1)
	.dwattr $C$DW$492, DW_AT_TI_end_line(0x1c9)
$C$DW$493	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$493, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$55$B)
	.dwattr $C$DW$493, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$55$E)
	.dwendtag $C$DW$492


$C$DW$494	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$494, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L30:2:1443280057")
	.dwattr $C$DW$494, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$494, DW_AT_TI_begin_line(0x1d4)
	.dwattr $C$DW$494, DW_AT_TI_end_line(0x1fd)
$C$DW$495	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$495, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$60$B)
	.dwattr $C$DW$495, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$60$E)
$C$DW$496	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$496, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$61$B)
	.dwattr $C$DW$496, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$61$E)
	.dwendtag $C$DW$494


$C$DW$497	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$497, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L21:2:1443280057")
	.dwattr $C$DW$497, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$497, DW_AT_TI_begin_line(0x12e)
	.dwattr $C$DW$497, DW_AT_TI_end_line(0x139)
$C$DW$498	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$498, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$31$B)
	.dwattr $C$DW$498, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$31$E)
	.dwendtag $C$DW$497


$C$DW$499	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$499, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.se66:$C$L13:2:1443280057")
	.dwattr $C$DW$499, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$499, DW_AT_TI_begin_line(0xcc)
	.dwattr $C$DW$499, DW_AT_TI_end_line(0xce)
$C$DW$500	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$500, DW_AT_low_pc($C$DW$L$VLIB_blobAnalysis_d$11$B)
	.dwattr $C$DW$500, DW_AT_high_pc($C$DW$L$VLIB_blobAnalysis_d$11$E)
	.dwendtag $C$DW$499

	.dwendtag $C$DW$411

	.dwattr $C$DW$202, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_blobAnalysis/VLIB_blobAnalysis_d.c")
	.dwattr $C$DW$202, DW_AT_TI_end_line(0x299)
	.dwattr $C$DW$202, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$202

;; Inlined function references:
;; [ 16] VLIB_profile_start
;; [ 17] VLIB_profile_stop
;; [ 19] VLIB_kernel_memory
;; [ 43] blobAnalysis_malloc
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_blobAnalysis",0
$C$SL2:	.string	"                                                           "
	.string	"                           num of blobs, scratch buffer siz"
	.string	"e (in bytes) for",10,0
$C$SL3:	.string	"                                                           "
	.string	"                                                   CCL,  Cr"
	.string	"eate Blob list, Blob analysis",10,0
$C$SL4:	.string	"imageWidth=%d, imageHeight=%d",0
$C$SL5:	.string	"%3d blobs, %8d bytes, %6d bytes, %6d bytes",0
$C$SL6:	.string	"imageWidth * imageHeight",0
$C$SL7:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_calcConnectedComponentsMaxBufferSize
	.global	VLIB_initConnectedComponentsList
	.global	VLIB_createConnectedComponentsList
	.global	VLIB_getNumCCs
	.global	VLIB_createCCMap8Bit
	.global	VLIB_GetSizeOfCCHandle
	.global	VLIB_calcBlobPerimeter
	.global	VLIB_createBlobList
	.global	VLIB_getblobIIBufSize
	.global	VLIB_createBlobIntervalImg
	.global	VLIB_calcBlobMinEnclosedPolygon
	.global	VLIB_calcBlobMinEnclosedRect
	.global	VLIB_calcBlobMinEnclosedCircle
	.global	VLIB_createBlobList_cn
	.global	VLIB_createBlobIntervalImg_cn
	.global	VLIB_calcBlobPerimeter_cn
	.global	VLIB_calcBlobMinEnclosedPolygon_cn
	.global	VLIB_calcBlobMinEnclosedRect_cn
	.global	VLIB_calcBlobMinEnclosedCircle_cn
	.global	blobAnalysis_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$77	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x04)
$C$DW$501	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$501, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$501, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$501, DW_AT_decl_column(0x05)
$C$DW$502	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$502, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$502, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$502, DW_AT_decl_column(0x05)
$C$DW$503	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$503, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$503, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$503, DW_AT_decl_column(0x05)
$C$DW$504	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$504, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$504, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$504, DW_AT_decl_column(0x05)
$C$DW$505	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$505, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$505, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$505, DW_AT_decl_column(0x05)
$C$DW$506	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$506, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$506, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$506, DW_AT_decl_column(0x05)
$C$DW$507	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$507, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$507, DW_AT_decl_line(0x80)
	.dwattr $C$DW$507, DW_AT_decl_column(0x05)
$C$DW$508	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$508, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$508, DW_AT_decl_line(0x81)
	.dwattr $C$DW$508, DW_AT_decl_column(0x05)
$C$DW$509	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$509, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$509, DW_AT_decl_line(0x82)
	.dwattr $C$DW$509, DW_AT_decl_column(0x05)
$C$DW$510	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$510, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$510, DW_AT_decl_line(0x83)
	.dwattr $C$DW$510, DW_AT_decl_column(0x05)
$C$DW$511	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$511, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$511, DW_AT_decl_line(0x84)
	.dwattr $C$DW$511, DW_AT_decl_column(0x05)
$C$DW$512	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$512, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$512, DW_AT_decl_line(0x85)
	.dwattr $C$DW$512, DW_AT_decl_column(0x05)
$C$DW$513	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$513, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$513, DW_AT_decl_line(0x86)
	.dwattr $C$DW$513, DW_AT_decl_column(0x05)
$C$DW$514	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$514, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$514, DW_AT_decl_line(0x87)
	.dwattr $C$DW$514, DW_AT_decl_column(0x05)
$C$DW$515	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$515, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$515, DW_AT_decl_line(0x88)
	.dwattr $C$DW$515, DW_AT_decl_column(0x05)
$C$DW$516	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$516, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$516, DW_AT_decl_line(0x89)
	.dwattr $C$DW$516, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$77

	.dwattr $C$DW$T$77, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$77, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$77, DW_AT_decl_column(0x0e)
$C$DW$T$78	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$T$78, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$78, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$78, DW_AT_decl_column(0x03)

$C$DW$T$103	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$517	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$517, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$517, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$517, DW_AT_decl_column(0x05)
$C$DW$518	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$518, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$518, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$518, DW_AT_decl_column(0x05)
$C$DW$519	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$519, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$519, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$519, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$103

	.dwattr $C$DW$T$103, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$T$103, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$103, DW_AT_decl_column(0x06)

$C$DW$T$104	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$104, DW_AT_byte_size(0x04)
$C$DW$520	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$520, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$520, DW_AT_decl_line(0x72)
	.dwattr $C$DW$520, DW_AT_decl_column(0x05)
$C$DW$521	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$521, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$521, DW_AT_decl_line(0x73)
	.dwattr $C$DW$521, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$104

	.dwattr $C$DW$T$104, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\../common/VLIB_test.h")
	.dwattr $C$DW$T$104, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$104, DW_AT_decl_column(0x06)

$C$DW$T$48	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x3c)
$C$DW$522	.dwtag  DW_TAG_member
	.dwattr $C$DW$522, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$522, DW_AT_name("ccMapColor")
	.dwattr $C$DW$522, DW_AT_TI_symbol_name("ccMapColor")
	.dwattr $C$DW$522, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$522, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$522, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$522, DW_AT_decl_line(0x24)
	.dwattr $C$DW$522, DW_AT_decl_column(0x0e)
$C$DW$523	.dwtag  DW_TAG_member
	.dwattr $C$DW$523, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$523, DW_AT_name("area")
	.dwattr $C$DW$523, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$523, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$523, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$523, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$523, DW_AT_decl_line(0x25)
	.dwattr $C$DW$523, DW_AT_decl_column(0x0e)
$C$DW$524	.dwtag  DW_TAG_member
	.dwattr $C$DW$524, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$524, DW_AT_name("perimeter")
	.dwattr $C$DW$524, DW_AT_TI_symbol_name("perimeter")
	.dwattr $C$DW$524, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$524, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$524, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$524, DW_AT_decl_line(0x26)
	.dwattr $C$DW$524, DW_AT_decl_column(0x0e)
$C$DW$525	.dwtag  DW_TAG_member
	.dwattr $C$DW$525, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$525, DW_AT_name("xmin")
	.dwattr $C$DW$525, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$525, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$525, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$525, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$525, DW_AT_decl_line(0x27)
	.dwattr $C$DW$525, DW_AT_decl_column(0x0e)
$C$DW$526	.dwtag  DW_TAG_member
	.dwattr $C$DW$526, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$526, DW_AT_name("ymin")
	.dwattr $C$DW$526, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$526, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$526, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$526, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$526, DW_AT_decl_line(0x28)
	.dwattr $C$DW$526, DW_AT_decl_column(0x0e)
$C$DW$527	.dwtag  DW_TAG_member
	.dwattr $C$DW$527, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$527, DW_AT_name("xmax")
	.dwattr $C$DW$527, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$527, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$527, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$527, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$527, DW_AT_decl_line(0x29)
	.dwattr $C$DW$527, DW_AT_decl_column(0x0e)
$C$DW$528	.dwtag  DW_TAG_member
	.dwattr $C$DW$528, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$528, DW_AT_name("ymax")
	.dwattr $C$DW$528, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$528, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$528, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$528, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$528, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$528, DW_AT_decl_column(0x0e)
$C$DW$529	.dwtag  DW_TAG_member
	.dwattr $C$DW$529, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$529, DW_AT_name("rect_center_x")
	.dwattr $C$DW$529, DW_AT_TI_symbol_name("rect_center_x")
	.dwattr $C$DW$529, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$529, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$529, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$529, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$529, DW_AT_decl_column(0x0e)
$C$DW$530	.dwtag  DW_TAG_member
	.dwattr $C$DW$530, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$530, DW_AT_name("rect_center_y")
	.dwattr $C$DW$530, DW_AT_TI_symbol_name("rect_center_y")
	.dwattr $C$DW$530, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$530, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$530, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$530, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$530, DW_AT_decl_column(0x0e)
$C$DW$531	.dwtag  DW_TAG_member
	.dwattr $C$DW$531, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$531, DW_AT_name("rect_sita")
	.dwattr $C$DW$531, DW_AT_TI_symbol_name("rect_sita")
	.dwattr $C$DW$531, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$531, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$531, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$531, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$531, DW_AT_decl_column(0x0e)
$C$DW$532	.dwtag  DW_TAG_member
	.dwattr $C$DW$532, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$532, DW_AT_name("rect_width")
	.dwattr $C$DW$532, DW_AT_TI_symbol_name("rect_width")
	.dwattr $C$DW$532, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$532, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$532, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$532, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$532, DW_AT_decl_column(0x0e)
$C$DW$533	.dwtag  DW_TAG_member
	.dwattr $C$DW$533, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$533, DW_AT_name("rect_height")
	.dwattr $C$DW$533, DW_AT_TI_symbol_name("rect_height")
	.dwattr $C$DW$533, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$533, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$533, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$533, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$533, DW_AT_decl_column(0x0e)
$C$DW$534	.dwtag  DW_TAG_member
	.dwattr $C$DW$534, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$534, DW_AT_name("circle_x")
	.dwattr $C$DW$534, DW_AT_TI_symbol_name("circle_x")
	.dwattr $C$DW$534, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$534, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$534, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$534, DW_AT_decl_line(0x30)
	.dwattr $C$DW$534, DW_AT_decl_column(0x0e)
$C$DW$535	.dwtag  DW_TAG_member
	.dwattr $C$DW$535, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$535, DW_AT_name("circle_y")
	.dwattr $C$DW$535, DW_AT_TI_symbol_name("circle_y")
	.dwattr $C$DW$535, DW_AT_data_member_location[DW_OP_plus_uconst 0x34]
	.dwattr $C$DW$535, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$535, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$535, DW_AT_decl_line(0x31)
	.dwattr $C$DW$535, DW_AT_decl_column(0x0e)
$C$DW$536	.dwtag  DW_TAG_member
	.dwattr $C$DW$536, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$536, DW_AT_name("circle_r")
	.dwattr $C$DW$536, DW_AT_TI_symbol_name("circle_r")
	.dwattr $C$DW$536, DW_AT_data_member_location[DW_OP_plus_uconst 0x38]
	.dwattr $C$DW$536, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$536, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$536, DW_AT_decl_line(0x32)
	.dwattr $C$DW$536, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$48

	.dwattr $C$DW$T$48, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x10)
$C$DW$T$105	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$105, DW_AT_address_class(0x20)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("blobAnalysis_resultParams_t")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x33)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x03)
$C$DW$T$52	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$T$52, DW_AT_address_class(0x20)

$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x18)
$C$DW$537	.dwtag  DW_TAG_member
	.dwattr $C$DW$537, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$537, DW_AT_name("testPattern")
	.dwattr $C$DW$537, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$537, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$537, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$537, DW_AT_decl_line(0x36)
	.dwattr $C$DW$537, DW_AT_decl_column(0x22)
$C$DW$538	.dwtag  DW_TAG_member
	.dwattr $C$DW$538, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$538, DW_AT_name("imageWidth")
	.dwattr $C$DW$538, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$538, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$538, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$538, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$538, DW_AT_decl_line(0x37)
	.dwattr $C$DW$538, DW_AT_decl_column(0x22)
$C$DW$539	.dwtag  DW_TAG_member
	.dwattr $C$DW$539, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$539, DW_AT_name("imageHeight")
	.dwattr $C$DW$539, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$539, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$539, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$539, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$539, DW_AT_decl_line(0x38)
	.dwattr $C$DW$539, DW_AT_decl_column(0x22)
$C$DW$540	.dwtag  DW_TAG_member
	.dwattr $C$DW$540, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$540, DW_AT_name("staticIn")
	.dwattr $C$DW$540, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$540, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$540, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$540, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$540, DW_AT_decl_line(0x39)
	.dwattr $C$DW$540, DW_AT_decl_column(0x22)
$C$DW$541	.dwtag  DW_TAG_member
	.dwattr $C$DW$541, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$541, DW_AT_name("numBlobs")
	.dwattr $C$DW$541, DW_AT_TI_symbol_name("numBlobs")
	.dwattr $C$DW$541, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$541, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$541, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$541, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$541, DW_AT_decl_column(0x22)
$C$DW$542	.dwtag  DW_TAG_member
	.dwattr $C$DW$542, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$542, DW_AT_name("staticOut")
	.dwattr $C$DW$542, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$542, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$542, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$542, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$542, DW_AT_decl_line(0x3b)
	.dwattr $C$DW$542, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$53

	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x10)
$C$DW$T$106	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$T$106, DW_AT_address_class(0x20)
$C$DW$T$108	.dwtag  DW_TAG_typedef, DW_AT_name("blobAnalysis_testParams_t")
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\VLIB_blobAnalysis_idat.h")
	.dwattr $C$DW$T$108, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$108, DW_AT_decl_column(0x03)
$C$DW$T$109	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$109, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$T$109, DW_AT_address_class(0x20)
$C$DW$T$110	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$110, DW_AT_address_class(0x20)

$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x18)
$C$DW$543	.dwtag  DW_TAG_member
	.dwattr $C$DW$543, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$543, DW_AT_name("fd")
	.dwattr $C$DW$543, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$543, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$543, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$543, DW_AT_decl_line(0x49)
	.dwattr $C$DW$543, DW_AT_decl_column(0x0b)
$C$DW$544	.dwtag  DW_TAG_member
	.dwattr $C$DW$544, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$544, DW_AT_name("buf")
	.dwattr $C$DW$544, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$544, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$544, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$544, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$544, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$544, DW_AT_decl_column(0x16)
$C$DW$545	.dwtag  DW_TAG_member
	.dwattr $C$DW$545, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$545, DW_AT_name("pos")
	.dwattr $C$DW$545, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$545, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$545, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$545, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$545, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$545, DW_AT_decl_column(0x16)
$C$DW$546	.dwtag  DW_TAG_member
	.dwattr $C$DW$546, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$546, DW_AT_name("bufend")
	.dwattr $C$DW$546, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$546, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$546, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$546, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$546, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$546, DW_AT_decl_column(0x16)
$C$DW$547	.dwtag  DW_TAG_member
	.dwattr $C$DW$547, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$547, DW_AT_name("buff_stop")
	.dwattr $C$DW$547, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$547, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$547, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$547, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$547, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$547, DW_AT_decl_column(0x16)
$C$DW$548	.dwtag  DW_TAG_member
	.dwattr $C$DW$548, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$548, DW_AT_name("flags")
	.dwattr $C$DW$548, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$548, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$548, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$548, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$548, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$548, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$55

	.dwattr $C$DW$T$55, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x10)
$C$DW$T$111	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$111, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$111, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$111, DW_AT_decl_column(0x03)

$C$DW$T$56	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x08)
$C$DW$549	.dwtag  DW_TAG_member
	.dwattr $C$DW$549, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$549, DW_AT_name("quot")
	.dwattr $C$DW$549, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$549, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$549, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$549, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$549, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$549, DW_AT_decl_column(0x16)
$C$DW$550	.dwtag  DW_TAG_member
	.dwattr $C$DW$550, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$550, DW_AT_name("rem")
	.dwattr $C$DW$550, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$550, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$550, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$550, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$550, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$550, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$56

	.dwattr $C$DW$T$56, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x10)
$C$DW$T$112	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$T$112, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$112, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$112, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$112, DW_AT_decl_column(0x23)

$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x08)
$C$DW$551	.dwtag  DW_TAG_member
	.dwattr $C$DW$551, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$551, DW_AT_name("quot")
	.dwattr $C$DW$551, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$551, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$551, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$551, DW_AT_decl_line(0x40)
	.dwattr $C$DW$551, DW_AT_decl_column(0x17)
$C$DW$552	.dwtag  DW_TAG_member
	.dwattr $C$DW$552, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$552, DW_AT_name("rem")
	.dwattr $C$DW$552, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$552, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$552, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$552, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$552, DW_AT_decl_line(0x40)
	.dwattr $C$DW$552, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$57

	.dwattr $C$DW$T$57, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$57, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$57, DW_AT_decl_column(0x10)
$C$DW$T$113	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$113, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$T$113, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$113, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$113, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$113, DW_AT_decl_column(0x24)

$C$DW$T$58	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x10)
$C$DW$553	.dwtag  DW_TAG_member
	.dwattr $C$DW$553, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$553, DW_AT_name("quot")
	.dwattr $C$DW$553, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$553, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$553, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$553, DW_AT_decl_line(0x43)
	.dwattr $C$DW$553, DW_AT_decl_column(0x1c)
$C$DW$554	.dwtag  DW_TAG_member
	.dwattr $C$DW$554, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$554, DW_AT_name("rem")
	.dwattr $C$DW$554, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$554, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$554, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$554, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$554, DW_AT_decl_line(0x43)
	.dwattr $C$DW$554, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$58

	.dwattr $C$DW$T$58, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$58, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$58, DW_AT_decl_column(0x10)
$C$DW$T$114	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$T$114, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$114, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$114, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$114, DW_AT_decl_column(0x29)

$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x24)
$C$DW$555	.dwtag  DW_TAG_member
	.dwattr $C$DW$555, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$555, DW_AT_name("area")
	.dwattr $C$DW$555, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$555, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$555, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$555, DW_AT_decl_line(0x69)
	.dwattr $C$DW$555, DW_AT_decl_column(0x0d)
$C$DW$556	.dwtag  DW_TAG_member
	.dwattr $C$DW$556, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$556, DW_AT_name("xsum")
	.dwattr $C$DW$556, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$556, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$556, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$556, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$556, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$556, DW_AT_decl_column(0x0d)
$C$DW$557	.dwtag  DW_TAG_member
	.dwattr $C$DW$557, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$557, DW_AT_name("ysum")
	.dwattr $C$DW$557, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$557, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$557, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$557, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$557, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$557, DW_AT_decl_column(0x0d)
$C$DW$558	.dwtag  DW_TAG_member
	.dwattr $C$DW$558, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$558, DW_AT_name("xmin")
	.dwattr $C$DW$558, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$558, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$558, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$558, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$558, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$558, DW_AT_decl_column(0x0d)
$C$DW$559	.dwtag  DW_TAG_member
	.dwattr $C$DW$559, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$559, DW_AT_name("ymin")
	.dwattr $C$DW$559, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$559, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$559, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$559, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$559, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$559, DW_AT_decl_column(0x0d)
$C$DW$560	.dwtag  DW_TAG_member
	.dwattr $C$DW$560, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$560, DW_AT_name("xmax")
	.dwattr $C$DW$560, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$560, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$560, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$560, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$560, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$560, DW_AT_decl_column(0x0d)
$C$DW$561	.dwtag  DW_TAG_member
	.dwattr $C$DW$561, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$561, DW_AT_name("ymax")
	.dwattr $C$DW$561, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$561, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$561, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$561, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$561, DW_AT_decl_line(0x70)
	.dwattr $C$DW$561, DW_AT_decl_column(0x0d)
$C$DW$562	.dwtag  DW_TAG_member
	.dwattr $C$DW$562, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$562, DW_AT_name("seedx")
	.dwattr $C$DW$562, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$562, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$562, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$562, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$562, DW_AT_decl_line(0x72)
	.dwattr $C$DW$562, DW_AT_decl_column(0x0d)
$C$DW$563	.dwtag  DW_TAG_member
	.dwattr $C$DW$563, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$563, DW_AT_name("seedy")
	.dwattr $C$DW$563, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$563, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$563, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$563, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$563, DW_AT_decl_line(0x73)
	.dwattr $C$DW$563, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$59

	.dwattr $C$DW$T$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$59, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$59, DW_AT_decl_column(0x10)
$C$DW$T$115	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$115, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$115, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$115, DW_AT_decl_column(0x03)

$C$DW$T$62	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x10)
$C$DW$564	.dwtag  DW_TAG_member
	.dwattr $C$DW$564, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$564, DW_AT_name("daylight")
	.dwattr $C$DW$564, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$564, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$564, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$564, DW_AT_decl_line(0x52)
	.dwattr $C$DW$564, DW_AT_decl_column(0x0b)
$C$DW$565	.dwtag  DW_TAG_member
	.dwattr $C$DW$565, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$565, DW_AT_name("timezone")
	.dwattr $C$DW$565, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$565, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$565, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$565, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$565, DW_AT_decl_line(0x53)
	.dwattr $C$DW$565, DW_AT_decl_column(0x0b)
$C$DW$566	.dwtag  DW_TAG_member
	.dwattr $C$DW$566, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$566, DW_AT_name("tzname")
	.dwattr $C$DW$566, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$566, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$566, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$566, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$566, DW_AT_decl_line(0x54)
	.dwattr $C$DW$566, DW_AT_decl_column(0x0b)
$C$DW$567	.dwtag  DW_TAG_member
	.dwattr $C$DW$567, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$567, DW_AT_name("dstname")
	.dwattr $C$DW$567, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$567, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$567, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$567, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$567, DW_AT_decl_line(0x55)
	.dwattr $C$DW$567, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$62

	.dwattr $C$DW$T$62, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$62, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$62, DW_AT_decl_column(0x01)
$C$DW$T$116	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$T$116, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$116, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$116, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$116, DW_AT_decl_column(0x03)

$C$DW$T$64	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$64, DW_AT_name("S3_1")
	.dwattr $C$DW$T$64, DW_AT_declaration
	.dwendtag $C$DW$T$64


$C$DW$T$66	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$66, DW_AT_name("S4_3")
	.dwattr $C$DW$T$66, DW_AT_declaration
	.dwendtag $C$DW$T$66


$C$DW$T$63	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$63, DW_AT_name("U3_0")
	.dwattr $C$DW$T$63, DW_AT_declaration
	.dwendtag $C$DW$T$63


$C$DW$T$65	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$65, DW_AT_name("U4_2")
	.dwattr $C$DW$T$65, DW_AT_declaration
	.dwendtag $C$DW$T$65


$C$DW$T$19	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$19, DW_AT_name("_AVMBlob")
	.dwattr $C$DW$T$19, DW_AT_declaration
	.dwendtag $C$DW$T$19

	.dwattr $C$DW$T$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x1f)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x10)
$C$DW$T$118	.dwtag  DW_TAG_typedef, DW_AT_name("AVMBlob")
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$118, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$118, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$118, DW_AT_decl_line(0x1f)
	.dwattr $C$DW$T$118, DW_AT_decl_column(0x19)

$C$DW$T$20	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$20, DW_AT_name("_AVMBranch")
	.dwattr $C$DW$T$20, DW_AT_declaration
	.dwendtag $C$DW$T$20

	.dwattr $C$DW$T$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$20, DW_AT_decl_line(0x20)
	.dwattr $C$DW$T$20, DW_AT_decl_column(0x10)
$C$DW$T$119	.dwtag  DW_TAG_typedef, DW_AT_name("AVMBranch")
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$119, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$119, DW_AT_decl_line(0x20)
	.dwattr $C$DW$T$119, DW_AT_decl_column(0x1b)

$C$DW$T$21	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$21, DW_AT_name("_AVMComplexEventFilter")
	.dwattr $C$DW$T$21, DW_AT_declaration
	.dwendtag $C$DW$T$21

	.dwattr $C$DW$T$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x10)
$C$DW$T$120	.dwtag  DW_TAG_typedef, DW_AT_name("AVMCEF")
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$120, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$120, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$120, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$120, DW_AT_decl_column(0x27)

$C$DW$T$22	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$22, DW_AT_name("_AVMEnvironment")
	.dwattr $C$DW$T$22, DW_AT_declaration
	.dwendtag $C$DW$T$22

	.dwattr $C$DW$T$22, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x22)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x10)
$C$DW$T$121	.dwtag  DW_TAG_typedef, DW_AT_name("AVMEnvironment")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$121, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$121, DW_AT_decl_line(0x22)
	.dwattr $C$DW$T$121, DW_AT_decl_column(0x20)

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_name("_AVMEvent")
	.dwattr $C$DW$T$23, DW_AT_declaration
	.dwendtag $C$DW$T$23

	.dwattr $C$DW$T$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x10)
$C$DW$T$122	.dwtag  DW_TAG_typedef, DW_AT_name("AVMEvent")
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$122, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$122, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$122, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$122, DW_AT_decl_column(0x1a)

$C$DW$T$24	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$24, DW_AT_name("_AVMEventFilter")
	.dwattr $C$DW$T$24, DW_AT_declaration
	.dwendtag $C$DW$T$24

	.dwattr $C$DW$T$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$24, DW_AT_decl_line(0x25)
	.dwattr $C$DW$T$24, DW_AT_decl_column(0x10)
$C$DW$T$123	.dwtag  DW_TAG_typedef, DW_AT_name("AVMEventFilter")
	.dwattr $C$DW$T$123, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$123, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$123, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$123, DW_AT_decl_line(0x25)
	.dwattr $C$DW$T$123, DW_AT_decl_column(0x20)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_name("_AVMEventRecord")
	.dwattr $C$DW$T$25, DW_AT_declaration
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$124	.dwtag  DW_TAG_typedef, DW_AT_name("AVMEventRecord")
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$124, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$124, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$124, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$124, DW_AT_decl_column(0x20)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_name("_AVMFrame")
	.dwattr $C$DW$T$26, DW_AT_declaration
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x26)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$125	.dwtag  DW_TAG_typedef, DW_AT_name("AVMFrame")
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$125, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$125, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$125, DW_AT_decl_line(0x26)
	.dwattr $C$DW$T$125, DW_AT_decl_column(0x1a)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_name("_AVMInterval")
	.dwattr $C$DW$T$27, DW_AT_declaration
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x27)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$126	.dwtag  DW_TAG_typedef, DW_AT_name("AVMInterval")
	.dwattr $C$DW$T$126, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$126, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$126, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$126, DW_AT_decl_line(0x27)
	.dwattr $C$DW$T$126, DW_AT_decl_column(0x1d)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_name("_AVMIntervalImage")
	.dwattr $C$DW$T$28, DW_AT_declaration
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x28)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$127	.dwtag  DW_TAG_typedef, DW_AT_name("AVMIntervalImage")
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$127, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$127, DW_AT_decl_line(0x28)
	.dwattr $C$DW$T$127, DW_AT_decl_column(0x22)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("AVMii")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x22)
$C$DW$T$129	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$128)
$C$DW$T$130	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$129)
	.dwattr $C$DW$T$130, DW_AT_address_class(0x20)
$C$DW$T$131	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$128)
	.dwattr $C$DW$T$131, DW_AT_address_class(0x20)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_name("_AVMIntervalRow")
	.dwattr $C$DW$T$29, DW_AT_declaration
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("AVMIntervalRow")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x20)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_name("_AVMLogServer")
	.dwattr $C$DW$T$30, DW_AT_declaration
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x33)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("AVMLogServer")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x33)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x1e)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("_AVMLoiterer")
	.dwattr $C$DW$T$31, DW_AT_declaration
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$135	.dwtag  DW_TAG_typedef, DW_AT_name("AVMLoiterer")
	.dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$135, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$135, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$135, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$135, DW_AT_decl_column(0x1d)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_name("_AVMMapInterface")
	.dwattr $C$DW$T$32, DW_AT_declaration
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("AVMMapInterface")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x21)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_name("_AVMModel")
	.dwattr $C$DW$T$33, DW_AT_declaration
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x10)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("AVMModel")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x1a)

$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("_AVMMsgDispatcher")
	.dwattr $C$DW$T$34, DW_AT_declaration
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x10)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("AVMMsgDispatcher")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x22)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("_AVMObject")
	.dwattr $C$DW$T$35, DW_AT_declaration
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x29)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x10)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("AVMObject")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x29)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x1b)

$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_name("_AVMObjectRecord")
	.dwattr $C$DW$T$36, DW_AT_declaration
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x10)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("AVMObjectRecord")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x21)

$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("_AVMObsRecord")
	.dwattr $C$DW$T$37, DW_AT_declaration
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x10)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("AVMObsRec")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x1e)

$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("_AVMObservation")
	.dwattr $C$DW$T$38, DW_AT_declaration
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x10)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("AVMObs")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x20)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("AVMObservation")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x20)

$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("_AVMParam")
	.dwattr $C$DW$T$39, DW_AT_declaration
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x10)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("AVMParam")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x1a)

$C$DW$T$40	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$40, DW_AT_name("_AVMParamSet")
	.dwattr $C$DW$T$40, DW_AT_declaration
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x10)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("AVMParamSet")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x1d)

$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("_AVMQuad")
	.dwattr $C$DW$T$41, DW_AT_declaration
	.dwendtag $C$DW$T$41

	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x21)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x10)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("AVMQuad")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x21)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x19)

$C$DW$T$42	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$42, DW_AT_name("_AVMRecordDB")
	.dwattr $C$DW$T$42, DW_AT_declaration
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x10)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("AVMRecordDB")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x1d)

$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("_AVMRegion")
	.dwattr $C$DW$T$43, DW_AT_declaration
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0x36)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x10)
$C$DW$T$148	.dwtag  DW_TAG_typedef, DW_AT_name("AVMRegion")
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$148, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$148, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$148, DW_AT_decl_line(0x36)
	.dwattr $C$DW$T$148, DW_AT_decl_column(0x1b)

$C$DW$T$44	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$44, DW_AT_name("_AVMSequence")
	.dwattr $C$DW$T$44, DW_AT_declaration
	.dwendtag $C$DW$T$44

	.dwattr $C$DW$T$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$44, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$44, DW_AT_decl_column(0x10)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("AVMSequence")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x1d)

$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("_LOG_Item")
	.dwattr $C$DW$T$45, DW_AT_declaration
	.dwendtag $C$DW$T$45

	.dwattr $C$DW$T$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x3b)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x10)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("LOG_Item")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../../VLIB_Connected_Components_Labeling/AVMClasses.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x3b)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x1a)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$177	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$177, DW_AT_address_class(0x20)
$C$DW$T$191	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$191, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$191, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$191, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$191, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$191, DW_AT_decl_column(0x1d)
$C$DW$T$192	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$192, DW_AT_type(*$C$DW$T$191)
	.dwattr $C$DW$T$192, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$192, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$192, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$192, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$54	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$54, DW_AT_address_class(0x20)

$C$DW$T$194	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$194, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$194, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$194, DW_AT_byte_size(0x08)
$C$DW$568	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$568, DW_AT_upper_bound(0x07)
	.dwendtag $C$DW$T$194


$C$DW$T$196	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$196, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$196, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$196, DW_AT_byte_size(0x04)
$C$DW$569	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$569, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$196

$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x1c)
$C$DW$T$50	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$T$50, DW_AT_address_class(0x20)
$C$DW$T$90	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$50)
$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$T$50)
$C$DW$T$199	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$199, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$T$199, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$199, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$199, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$199, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$79	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$79, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$79, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$79, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$79, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$79, DW_AT_decl_column(0x1d)
$C$DW$T$200	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$200, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$T$200, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$200, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$200, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$200, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$85	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$85, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$85, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$85, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$85, DW_AT_decl_column(0x1c)
$C$DW$T$91	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$91, DW_AT_type(*$C$DW$T$85)
$C$DW$T$202	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$202, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$T$202, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$202, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$202, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$202, DW_AT_decl_column(0x16)
$C$DW$T$201	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$201, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$201, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$201, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$201, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$201, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$267	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$267, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$267, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$267, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$267, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$267, DW_AT_decl_column(0x0d)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x1d)
$C$DW$T$82	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$82, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$82, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$82, DW_AT_decl_column(0x11)
$C$DW$T$83	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$83, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$T$83, DW_AT_address_class(0x20)

$C$DW$T$67	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$67, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$67, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x10)
$C$DW$570	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$570, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$67

$C$DW$T$80	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$80, DW_AT_address_class(0x20)
$C$DW$T$261	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$261, DW_AT_type(*$C$DW$T$46)
$C$DW$T$262	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$262, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$262, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$262, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$262, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$262, DW_AT_decl_column(0x17)
$C$DW$T$263	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$263, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$263, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$263, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$263, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$263, DW_AT_decl_column(0x17)
$C$DW$T$264	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$264, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$264, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$264, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$264, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$264, DW_AT_decl_column(0x17)
$C$DW$T$265	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$265, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$265, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$265, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$265, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$265, DW_AT_decl_column(0x17)
$C$DW$T$266	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$266, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$266, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$266, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$266, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$266, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$268	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$268, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$268, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$268, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$268, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$268, DW_AT_decl_column(0x17)
$C$DW$T$269	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$269, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$269, DW_AT_address_class(0x20)
$C$DW$T$288	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$288, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$288, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$288, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$288, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$288, DW_AT_decl_column(0x16)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x19)
$C$DW$T$278	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$278, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$278, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$278, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$278, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$278, DW_AT_decl_column(0x16)
$C$DW$T$86	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$86, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$86, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$86, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$86, DW_AT_decl_column(0x1c)
$C$DW$T$87	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$87, DW_AT_address_class(0x20)
$C$DW$T$279	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$279, DW_AT_type(*$C$DW$T$87)
$C$DW$T$283	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$283, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$283, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$283, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$283, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$283, DW_AT_decl_column(0x16)
$C$DW$T$284	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$284, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$284, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$284, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$284, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$284, DW_AT_decl_column(0x16)
$C$DW$T$285	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$285, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$285, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$285, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$285, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$285, DW_AT_decl_column(0x16)
$C$DW$T$286	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$286, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$T$286, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$286, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$286, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$286, DW_AT_decl_column(0x16)
$C$DW$T$287	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$287, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$287, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$287, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$287, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$287, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$289	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$289, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$289, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$289, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$289, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$289, DW_AT_decl_column(0x21)
$C$DW$T$290	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$290, DW_AT_type(*$C$DW$T$289)
	.dwattr $C$DW$T$290, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$290, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$290, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$290, DW_AT_decl_column(0x17)
$C$DW$T$291	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$291, DW_AT_type(*$C$DW$T$289)
	.dwattr $C$DW$T$291, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$291, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$291, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$291, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$292	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$292, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$292, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$292, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$292, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$292, DW_AT_decl_column(0x20)
$C$DW$T$293	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$293, DW_AT_type(*$C$DW$T$292)
	.dwattr $C$DW$T$293, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$293, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$293, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$293, DW_AT_decl_column(0x16)
$C$DW$T$294	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$294, DW_AT_type(*$C$DW$T$292)
	.dwattr $C$DW$T$294, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$294, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$294, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$294, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$296	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$296, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$296, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$296, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$296, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$296, DW_AT_decl_column(0x21)
$C$DW$T$297	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$T$297, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$297, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$297, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$297, DW_AT_decl_column(0x17)
$C$DW$T$298	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$T$298, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$298, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$298, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$298, DW_AT_decl_column(0x17)
$C$DW$T$299	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$299, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$299, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$299, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$299, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$301	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$301, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$301, DW_AT_address_class(0x20)
$C$DW$T$302	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$302, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$302, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$302, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$302, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$302, DW_AT_decl_column(0x20)

$C$DW$T$303	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$303, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$T$303, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$303, DW_AT_byte_size(0x10)
$C$DW$571	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$571, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$303

$C$DW$T$304	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$304, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$T$304, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$304, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$304, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$304, DW_AT_decl_column(0x16)
$C$DW$T$305	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$305, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$T$305, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$305, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$305, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$305, DW_AT_decl_column(0x16)
$C$DW$T$306	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$306, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$306, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$306, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$306, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$306, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x0f)
$C$DW$T$307	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$307, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$307, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$307, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$307, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$308	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$308, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$308, DW_AT_decl_column(0x10)
$C$DW$T$311	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$311, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$311, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$311, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$311, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$311, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$60	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$60, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$60, DW_AT_name("signed char")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)

$C$DW$T$61	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$61, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$61, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x04)
$C$DW$572	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$572, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$61

$C$DW$T$159	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$159, DW_AT_address_class(0x20)
$C$DW$T$312	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$312, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$312, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$312, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$312, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$312, DW_AT_decl_column(0x12)
$C$DW$T$203	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$203, DW_AT_type(*$C$DW$T$60)
$C$DW$T$204	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$204, DW_AT_type(*$C$DW$T$203)
	.dwattr $C$DW$T$204, DW_AT_address_class(0x20)

$C$DW$T$313	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$313, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$313, DW_AT_language(DW_LANG_C)
$C$DW$573	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$313


$C$DW$T$68	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$68, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x10)
$C$DW$574	.dwtag  DW_TAG_member
	.dwattr $C$DW$574, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$574, DW_AT_name("_v")
	.dwattr $C$DW$574, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$574, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$574, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$574, DW_AT_decl_line(0x44)
	.dwattr $C$DW$574, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$68

	.dwattr $C$DW$T$68, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$68, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$68, DW_AT_decl_column(0x01)
$C$DW$T$314	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$314, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$T$314, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$314, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$314, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$314, DW_AT_decl_column(0x01)
$C$DW$T$315	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$315, DW_AT_type(*$C$DW$T$314)
	.dwattr $C$DW$T$315, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$315, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$315, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$315, DW_AT_decl_column(0x13)

$C$DW$T$76	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$76, DW_AT_name("tm")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x24)
$C$DW$575	.dwtag  DW_TAG_member
	.dwattr $C$DW$575, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$575, DW_AT_name("tm_sec")
	.dwattr $C$DW$575, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$575, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$575, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$575, DW_AT_decl_line(0x41)
	.dwattr $C$DW$575, DW_AT_decl_column(0x09)
$C$DW$576	.dwtag  DW_TAG_member
	.dwattr $C$DW$576, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$576, DW_AT_name("tm_min")
	.dwattr $C$DW$576, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$576, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$576, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$576, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$576, DW_AT_decl_line(0x42)
	.dwattr $C$DW$576, DW_AT_decl_column(0x09)
$C$DW$577	.dwtag  DW_TAG_member
	.dwattr $C$DW$577, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$577, DW_AT_name("tm_hour")
	.dwattr $C$DW$577, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$577, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$577, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$577, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$577, DW_AT_decl_line(0x43)
	.dwattr $C$DW$577, DW_AT_decl_column(0x09)
$C$DW$578	.dwtag  DW_TAG_member
	.dwattr $C$DW$578, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$578, DW_AT_name("tm_mday")
	.dwattr $C$DW$578, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$578, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$578, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$578, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$578, DW_AT_decl_line(0x44)
	.dwattr $C$DW$578, DW_AT_decl_column(0x09)
$C$DW$579	.dwtag  DW_TAG_member
	.dwattr $C$DW$579, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$579, DW_AT_name("tm_mon")
	.dwattr $C$DW$579, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$579, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$579, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$579, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$579, DW_AT_decl_line(0x45)
	.dwattr $C$DW$579, DW_AT_decl_column(0x09)
$C$DW$580	.dwtag  DW_TAG_member
	.dwattr $C$DW$580, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$580, DW_AT_name("tm_year")
	.dwattr $C$DW$580, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$580, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$580, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$580, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$580, DW_AT_decl_line(0x46)
	.dwattr $C$DW$580, DW_AT_decl_column(0x09)
$C$DW$581	.dwtag  DW_TAG_member
	.dwattr $C$DW$581, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$581, DW_AT_name("tm_wday")
	.dwattr $C$DW$581, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$581, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$581, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$581, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$581, DW_AT_decl_line(0x47)
	.dwattr $C$DW$581, DW_AT_decl_column(0x09)
$C$DW$582	.dwtag  DW_TAG_member
	.dwattr $C$DW$582, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$582, DW_AT_name("tm_yday")
	.dwattr $C$DW$582, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$582, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$582, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$582, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$582, DW_AT_decl_line(0x48)
	.dwattr $C$DW$582, DW_AT_decl_column(0x09)
$C$DW$583	.dwtag  DW_TAG_member
	.dwattr $C$DW$583, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$583, DW_AT_name("tm_isdst")
	.dwattr $C$DW$583, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$583, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$583, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$583, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$583, DW_AT_decl_line(0x49)
	.dwattr $C$DW$583, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$76

	.dwattr $C$DW$T$76, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$76, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$76, DW_AT_decl_column(0x08)

$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("vlib_blob")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x20)
$C$DW$584	.dwtag  DW_TAG_member
	.dwattr $C$DW$584, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$584, DW_AT_name("xmin")
	.dwattr $C$DW$584, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$584, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$584, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$584, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$584, DW_AT_decl_column(0x0d)
$C$DW$585	.dwtag  DW_TAG_member
	.dwattr $C$DW$585, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$585, DW_AT_name("xmax")
	.dwattr $C$DW$585, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$585, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$585, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$585, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$585, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$585, DW_AT_decl_column(0x0d)
$C$DW$586	.dwtag  DW_TAG_member
	.dwattr $C$DW$586, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$586, DW_AT_name("ymin")
	.dwattr $C$DW$586, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$586, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$586, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$586, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$586, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$586, DW_AT_decl_column(0x0d)
$C$DW$587	.dwtag  DW_TAG_member
	.dwattr $C$DW$587, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$587, DW_AT_name("ymax")
	.dwattr $C$DW$587, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$587, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$587, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$587, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$587, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$587, DW_AT_decl_column(0x0d)
$C$DW$588	.dwtag  DW_TAG_member
	.dwattr $C$DW$588, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$588, DW_AT_name("area")
	.dwattr $C$DW$588, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$588, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$588, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$588, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$588, DW_AT_decl_line(0x5e)
	.dwattr $C$DW$588, DW_AT_decl_column(0x0d)
$C$DW$589	.dwtag  DW_TAG_member
	.dwattr $C$DW$589, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$589, DW_AT_name("numIntervals")
	.dwattr $C$DW$589, DW_AT_TI_symbol_name("numIntervals")
	.dwattr $C$DW$589, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$589, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$589, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$589, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$589, DW_AT_decl_column(0x0d)
$C$DW$590	.dwtag  DW_TAG_member
	.dwattr $C$DW$590, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$590, DW_AT_name("iiValue")
	.dwattr $C$DW$590, DW_AT_TI_symbol_name("iiValue")
	.dwattr $C$DW$590, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$590, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$590, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$590, DW_AT_decl_line(0x60)
	.dwattr $C$DW$590, DW_AT_decl_column(0x0d)
$C$DW$591	.dwtag  DW_TAG_member
	.dwattr $C$DW$591, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$591, DW_AT_name("ccmapColor")
	.dwattr $C$DW$591, DW_AT_TI_symbol_name("ccmapColor")
	.dwattr $C$DW$591, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$591, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$591, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$591, DW_AT_decl_line(0x61)
	.dwattr $C$DW$591, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$69

	.dwattr $C$DW$T$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$69, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$69, DW_AT_decl_column(0x10)
$C$DW$T$73	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_blob")
	.dwattr $C$DW$T$73, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$73, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$73, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$73, DW_AT_decl_line(0x62)
	.dwattr $C$DW$T$73, DW_AT_decl_column(0x02)
$C$DW$T$219	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$219, DW_AT_type(*$C$DW$T$73)
$C$DW$T$220	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$220, DW_AT_type(*$C$DW$T$219)
	.dwattr $C$DW$T$220, DW_AT_address_class(0x20)
$C$DW$T$74	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$74, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$T$74, DW_AT_address_class(0x20)
$C$DW$T$316	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$316, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$316, DW_AT_address_class(0x20)

$C$DW$T$70	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$70, DW_AT_name("vlib_blobAnalysis_box")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x14)
$C$DW$592	.dwtag  DW_TAG_member
	.dwattr $C$DW$592, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$592, DW_AT_name("x")
	.dwattr $C$DW$592, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$592, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$592, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$592, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$592, DW_AT_decl_column(0x0e)
$C$DW$593	.dwtag  DW_TAG_member
	.dwattr $C$DW$593, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$593, DW_AT_name("y")
	.dwattr $C$DW$593, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$593, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$593, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$593, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$593, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$593, DW_AT_decl_column(0x0e)
$C$DW$594	.dwtag  DW_TAG_member
	.dwattr $C$DW$594, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$594, DW_AT_name("w")
	.dwattr $C$DW$594, DW_AT_TI_symbol_name("w")
	.dwattr $C$DW$594, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$594, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$594, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$594, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$594, DW_AT_decl_column(0x0e)
$C$DW$595	.dwtag  DW_TAG_member
	.dwattr $C$DW$595, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$595, DW_AT_name("h")
	.dwattr $C$DW$595, DW_AT_TI_symbol_name("h")
	.dwattr $C$DW$595, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$595, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$595, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$595, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$595, DW_AT_decl_column(0x0e)
$C$DW$596	.dwtag  DW_TAG_member
	.dwattr $C$DW$596, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$596, DW_AT_name("angle")
	.dwattr $C$DW$596, DW_AT_TI_symbol_name("angle")
	.dwattr $C$DW$596, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$596, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$596, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$596, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$596, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$70

	.dwattr $C$DW$T$70, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$70, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$T$70, DW_AT_decl_column(0x10)
$C$DW$T$227	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_blobAnalysis_box")
	.dwattr $C$DW$T$227, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$227, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$227, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$227, DW_AT_decl_line(0x80)
	.dwattr $C$DW$T$227, DW_AT_decl_column(0x02)
$C$DW$T$228	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$228, DW_AT_type(*$C$DW$T$227)
	.dwattr $C$DW$T$228, DW_AT_address_class(0x20)
$C$DW$T$317	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$317, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$317, DW_AT_address_class(0x20)

$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("vlib_blobAnalysis_circle")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x0c)
$C$DW$597	.dwtag  DW_TAG_member
	.dwattr $C$DW$597, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$597, DW_AT_name("x")
	.dwattr $C$DW$597, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$597, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$597, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$597, DW_AT_decl_line(0x87)
	.dwattr $C$DW$597, DW_AT_decl_column(0x0e)
$C$DW$598	.dwtag  DW_TAG_member
	.dwattr $C$DW$598, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$598, DW_AT_name("y")
	.dwattr $C$DW$598, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$598, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$598, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$598, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$598, DW_AT_decl_line(0x88)
	.dwattr $C$DW$598, DW_AT_decl_column(0x0e)
$C$DW$599	.dwtag  DW_TAG_member
	.dwattr $C$DW$599, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$599, DW_AT_name("radius")
	.dwattr $C$DW$599, DW_AT_TI_symbol_name("radius")
	.dwattr $C$DW$599, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$599, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$599, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$599, DW_AT_decl_line(0x89)
	.dwattr $C$DW$599, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$71

	.dwattr $C$DW$T$71, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$71, DW_AT_decl_line(0x86)
	.dwattr $C$DW$T$71, DW_AT_decl_column(0x10)
$C$DW$T$233	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_blobAnalysis_circle")
	.dwattr $C$DW$T$233, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$233, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$233, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$233, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$233, DW_AT_decl_column(0x02)
$C$DW$T$234	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$234, DW_AT_type(*$C$DW$T$233)
	.dwattr $C$DW$T$234, DW_AT_address_class(0x20)
$C$DW$T$318	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$318, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$T$318, DW_AT_address_class(0x20)

$C$DW$T$72	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$72, DW_AT_name("vlib_blobAnalysis_point")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x08)
$C$DW$600	.dwtag  DW_TAG_member
	.dwattr $C$DW$600, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$600, DW_AT_name("x")
	.dwattr $C$DW$600, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$600, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$600, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$600, DW_AT_decl_line(0x73)
	.dwattr $C$DW$600, DW_AT_decl_column(0x0e)
$C$DW$601	.dwtag  DW_TAG_member
	.dwattr $C$DW$601, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$601, DW_AT_name("y")
	.dwattr $C$DW$601, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$601, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$601, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$601, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$601, DW_AT_decl_line(0x74)
	.dwattr $C$DW$601, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$72

	.dwattr $C$DW$T$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$72, DW_AT_decl_line(0x72)
	.dwattr $C$DW$T$72, DW_AT_decl_column(0x10)
$C$DW$T$223	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_blobAnalysis_point")
	.dwattr $C$DW$T$223, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$T$223, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$223, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$223, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$223, DW_AT_decl_column(0x02)
$C$DW$T$231	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$231, DW_AT_type(*$C$DW$T$223)
$C$DW$T$232	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$232, DW_AT_type(*$C$DW$T$231)
	.dwattr $C$DW$T$232, DW_AT_address_class(0x20)
$C$DW$T$224	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$224, DW_AT_type(*$C$DW$T$223)
	.dwattr $C$DW$T$224, DW_AT_address_class(0x20)

$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("vlib_blobList")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x14)
$C$DW$602	.dwtag  DW_TAG_member
	.dwattr $C$DW$602, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$602, DW_AT_name("numBlobs")
	.dwattr $C$DW$602, DW_AT_TI_symbol_name("numBlobs")
	.dwattr $C$DW$602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$602, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$602, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$602, DW_AT_decl_line(0x68)
	.dwattr $C$DW$602, DW_AT_decl_column(0x10)
$C$DW$603	.dwtag  DW_TAG_member
	.dwattr $C$DW$603, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$603, DW_AT_name("maxSize_y")
	.dwattr $C$DW$603, DW_AT_TI_symbol_name("maxSize_y")
	.dwattr $C$DW$603, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$603, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$603, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$603, DW_AT_decl_line(0x69)
	.dwattr $C$DW$603, DW_AT_decl_column(0x10)
$C$DW$604	.dwtag  DW_TAG_member
	.dwattr $C$DW$604, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$604, DW_AT_name("maxSize_x")
	.dwattr $C$DW$604, DW_AT_TI_symbol_name("maxSize_x")
	.dwattr $C$DW$604, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$604, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$604, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$604, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$604, DW_AT_decl_column(0x10)
$C$DW$605	.dwtag  DW_TAG_member
	.dwattr $C$DW$605, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$605, DW_AT_name("maxNumItervals")
	.dwattr $C$DW$605, DW_AT_TI_symbol_name("maxNumItervals")
	.dwattr $C$DW$605, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$605, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$605, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$605, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$605, DW_AT_decl_column(0x10)
$C$DW$606	.dwtag  DW_TAG_member
	.dwattr $C$DW$606, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$606, DW_AT_name("blobList")
	.dwattr $C$DW$606, DW_AT_TI_symbol_name("blobList")
	.dwattr $C$DW$606, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$606, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$606, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$606, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$606, DW_AT_decl_column(0x10)
	.dwendtag $C$DW$T$75

	.dwattr $C$DW$T$75, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$75, DW_AT_decl_line(0x67)
	.dwattr $C$DW$T$75, DW_AT_decl_column(0x10)
$C$DW$T$213	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_blobList")
	.dwattr $C$DW$T$213, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$T$213, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$213, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_blobAnalysis\c66\../VLIB_blobAnalysis_types.h")
	.dwattr $C$DW$T$213, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$T$213, DW_AT_decl_column(0x02)
$C$DW$T$214	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$214, DW_AT_type(*$C$DW$T$213)
	.dwattr $C$DW$T$214, DW_AT_address_class(0x20)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

