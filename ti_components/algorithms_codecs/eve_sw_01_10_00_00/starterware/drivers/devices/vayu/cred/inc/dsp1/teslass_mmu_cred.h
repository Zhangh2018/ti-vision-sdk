
/* ============================================================================
 *
 *            TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION
 *
 *  Property of Texas Instruments
 *  For Unrestricted Internal Use Only
 *  Unauthorized reproduction and/or distribution is strictly prohibited.
 *  This product is protected under copyright law and trade secret law
 *  as an unpublished work.
 *  Created 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved.
 *
 */

/**
 *  @Component:   TESLASS_MMU
 *
 *  @Filename:    teslass_mmu_cred.h
 *
 *  @Description:  Memory Management Unit 
 *
 *  Generated by: Socrates CRED generator prototype
 *
 *//* ====================================================================== */

#ifndef __TESLASS_MMU_CRED_H
#define __TESLASS_MMU_CRED_H

#ifdef __cplusplus
extern "C"
{
#endif

/*
 * Instance TESLASS_MMU0 of component TESLASS_MMU mapped in EVE at address 0x81000
 * Instance TESLASS_MMU1 of component TESLASS_MMU mapped in EVE at address 0x82000
 */

 /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
 *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

/*
 *  List of Register arrays for component TESLASS_MMU
 *
 */


/*
 *  List of bundle arrays for component TESLASS_MMU
 *
 */

/*
 *  List of bundles for component TESLASS_MMU
 *
 */


/*
 * List of registers for component TESLASS_MMU
 *
 */

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_REVISION
 *
 * @BRIEF        This register contains the IP revision code  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_REVISION                          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG
 *
 * @BRIEF        This register controls the various parameters of the OCP 
 *               interface  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG                         0x10ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSSTATUS
 *
 * @BRIEF        This register provides status information about the module, 
 *               excluding the interrupt status information  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSSTATUS                         0x14ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS
 *
 * @BRIEF        This interrupt status register regroups all the status of 
 *               the module internal events that can generate an interrupt.  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS                         0x18ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE
 *
 * @BRIEF        The interrupt enable register allows to mask/unmask the 
 *               module internal sources of interrupt, on a event-by-event 
 *               basis.  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE                         0x1Cul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_WALKING_ST
 *
 * @BRIEF        This register provides status information about the table 
 *               walking logic  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_WALKING_ST                        0x40ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL
 *
 * @BRIEF        This register programs the MMU features  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL                              0x44ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_AD
 *
 * @BRIEF        This register contains the virtual address that generated 
 *               the interrupt  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_AD                          0x48ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_TTB
 *
 * @BRIEF        This register contains the Translation Table Base address  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_TTB                               0x4Cul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LOCK
 *
 * @BRIEF        This register locks some of the TLB entries  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LOCK                              0x50ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LD_TLB
 *
 * @BRIEF        This register loads a TLB entry (CAM+RAM)  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LD_TLB                            0x54ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM
 *
 * @BRIEF        This register holds a CAM entry  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM                               0x58ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM
 *
 * @BRIEF        This register holds a RAM entry  
 *               be written to a TLB entry pointed to y CurretnVictim field 
 *               of MMU_LOCK register. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM                               0x5Cul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GFLUSH
 *
 * @BRIEF        This register flushes all the non-protected TLB entries  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GFLUSH                            0x60ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FLUSH_ENTRY
 *
 * @BRIEF        This register flushes the entry pointed to by the CAM 
 *               virtual address  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FLUSH_ENTRY                       0x64ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM
 *
 * @BRIEF        This register reads CAM data from a CAM entry  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM                          0x68ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_RAM
 *
 * @BRIEF        This register reads bits 31:12 of the physical address from 
 *               the TLB entry pointed to by CurrentVictim field of the 
 *               MMU_LOCK register. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_RAM                          0x6Cul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_EMU_FAULT_AD
 *
 * @BRIEF        This register contains the last virtual address of a fault 
 *               caused by the debugger  
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_EMU_FAULT_AD                      0x70ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_TTB_MSB
 *
 * @BRIEF        This register contains bits [35:32] of the TTB. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_TTB_MSB                                   0x74ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM_MSB
 *
 * @BRIEF        This register contains bits 35:32 of the physical address to 
 *               be written to a TLB entry pointed to by CurrentVictim field 
 *               of MMU_LOCK register. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM_MSB                                   0x78ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_RAM_MSB
 *
 * @BRIEF        This register reads bits 35:32 of the physical address from 
 *               the TLB entry pointed to by CurrentVictim field of the 
 *               MMU_LOCK register. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_RAM_MSB                              0x7Cul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_PC
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_PC                                  0x80ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_STATUS
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_STATUS                              0x84ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GPR
 *
 * @BRIEF        controls hwdebug output mux. 
 *               Force idle req generation 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GPR                                       0x88ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION1_ADDR
 *
 * @BRIEF        This register contains the start address of the 1st NO 
 *               TRANSLATION REGION for 2D bursts 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION1_ADDR                       0x90ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   MMU__MMU_BYPASS_REGION1_SIZE
 *
 * @BRIEF        This register contains the size of 1st NO TRANSLATION REGION 
 *               for 2D bursts. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION1_SIZE                       0x94ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION2_ADDR
 *
 * @BRIEF        This register contains the start address of the 2nd NO 
 *               TRANSLATION REGION for 2D bursts 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION2_ADDR                       0x98ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   MMU__MMU_BYPASS_REGION2_SIZE
 *
 * @BRIEF        This register contains the size of 2nd NO TRANSLATION REGION 
 *               for 2D bursts. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION2_SIZE                       0x9Cul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION3_ADDR
 *
 * @BRIEF        This register contains the start address of the 3rd NO 
 *               TRANSLATION REGION for 2D bursts 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION3_ADDR                       0xA0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION3_SIZE
 *
 * @BRIEF        This register contains the size of 3rd NO TRANSLATION REGION 
 *               for 2D bursts. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION3_SIZE                       0xA4ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION4_ADDR
 *
 * @BRIEF        This register contains the start address of the 4th NO 
 *               TRANSLATION REGION for 2D bursts 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION4_ADDR                       0xA8ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION4_SIZE
 *
 * @BRIEF        This register contains the size of 4th NO TRANSLATION REGION 
 *               for 2D bursts. 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION4_SIZE                       0xACul


/*
 * List of register bitfields for component MMU
 *
 */
 
/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_REVISION__REV_MAJ   
 *
 * @BRIEF        IP revision 
 *               [7:4] 
 *               Major revision 
 *               [3:0] 
 *               Minor revision 
 *               Examples: 0x10 for 1.0, 0x21 for 2.1 - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_REVISION__REV_MAJ                    BITFIELD(7, 4)
#define TESLASS_MMU__MMU_REVISION__REV_MAJ__POS               4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_REVISION__REV_MIN   
 *
 * @BRIEF        IP minitor revision - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_REVISION__REV_MIN                    BITFIELD(3, 0)
#define TESLASS_MMU__MMU_REVISION__REV_MIN__POS               0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__CLOCKACTIVITY   
 *
 * @BRIEF        Clock activity during wake-up mode 
 *               00 Functional & OCP clocks can be switched off - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__CLOCKACTIVITY             BITFIELD(9, 8)
#define TESLASS_MMU__MMU_SYSCONFIG__CLOCKACTIVITY__POS        8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE   
 *
 * @BRIEF        IdleMode - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE                  BITFIELD(4, 3)
#define TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__POS             3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET   
 *
 * @BRIEF        Software reset. This bit is automatically reset by the 
 *               hardware. During reads, it always return 0  - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET                 BITFIELD(1, 1)
#define TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__POS            1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE   
 *
 * @BRIEF        Internal OCP clock gating strategy - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE                  BITFIELD(0, 0)
#define TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE__POS             0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSSTATUS__RESETDONE   
 *
 * @BRIEF        Internal reset monitoring - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSSTATUS__RESETDONE                 BITFIELD(0, 0)
#define TESLASS_MMU__MMU_SYSSTATUS__RESETDONE__POS            0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT   
 *
 * @BRIEF        Error due to multiple matches in the TLB  - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT             BITFIELD(4, 4)
#define TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__POS        4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   MMU__MMU_IRQSTATUS__TABLEWALKFAULT   
 *
 * @BRIEF        Error response received during a Table Walk  - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT            BITFIELD(3, 3)
#define TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__POS       3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__EMUMISS   
 *
 * @BRIEF        Unrecoverable TLB miss during debug (hardware TWL disabled)  
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__EMUMISS                   BITFIELD(2, 2)
#define TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__POS              2

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   MMU__MMU_IRQSTATUS__TRANSLATIONFAULT   
 *
 * @BRIEF        Invalid descriptor in translation tables (translation fault) 
 *                - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT          BITFIELD(1, 1)
#define TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__POS     1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TLBMISS   
 *
 * @BRIEF        Unrecoverable TLB miss (hardware TWL disabled)  - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TLBMISS                   BITFIELD(0, 0)
#define TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT   
 *
 * @BRIEF        Error due to multiple matches in the TLB - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT             BITFIELD(4, 4)
#define TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT__POS        4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT   
 *
 * @BRIEF        Error response received during a Table Walk - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT            BITFIELD(3, 3)
#define TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT__POS       3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__EMUMISS   
 *
 * @BRIEF        Unrecoverable TLB miss during debug (hardware TWL disabled) 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__EMUMISS                   BITFIELD(2, 2)
#define TESLASS_MMU__MMU_IRQENABLE__EMUMISS__POS              2

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT   
 *
 * @BRIEF        Invalid descriptor in translation tables (translation fault) 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT          BITFIELD(1, 1)
#define TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT__POS     1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TLBMISS   
 *
 * @BRIEF        Unrecoverable TLB miss (hardware TWL disabled) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TLBMISS                   BITFIELD(0, 0)
#define TESLASS_MMU__MMU_IRQENABLE__TLBMISS__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING   
 *
 * @BRIEF        Table Walking Logic is running - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING               BITFIELD(0, 0)
#define TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING__POS          0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE   
 *
 * @BRIEF        Enable TLB update on emulator table walk - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE                   BITFIELD(3, 3)
#define TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE__POS              3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__TWLENABLE   
 *
 * @BRIEF        Table Walking Logic enable - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__TWLENABLE                      BITFIELD(2, 2)
#define TESLASS_MMU__MMU_CNTL__TWLENABLE__POS                 2

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__MMUENABLE   
 *
 * @BRIEF        MMU enable - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__MMUENABLE                      BITFIELD(1, 1)
#define TESLASS_MMU__MMU_CNTL__MMUENABLE__POS                 1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_AD__FAULTADDRESS   
 *
 * @BRIEF        Virtual address of the access that generated a fault - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_AD__FAULTADDRESS               BITFIELD(31, 0)
#define TESLASS_MMU__MMU_FAULT_AD__FAULTADDRESS__POS          0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_TTB__TTBADDRESS   
 *
 * @BRIEF        Translation Table Base Address - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_TTB__TTBADDRESS                      BITFIELD(31, 7)
#define TESLASS_MMU__MMU_TTB__TTBADDRESS__POS                 7

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LOCK__BASEVALUE   
 *
 * @BRIEF        Locked entries base value - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LOCK__BASEVALUE                      BITFIELD(14, 10)
#define TESLASS_MMU__MMU_LOCK__BASEVALUE__POS                 10

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LOCK__CURRENTVICTIM   
 *
 * @BRIEF        Current entry to be updated either by the TWL or by the SW   
 *                Write value : TLB entry to be updated by software,  Read 
 *               value : TLB entry that will be updated by table walk logic  
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LOCK__CURRENTVICTIM                  BITFIELD(8, 4)
#define TESLASS_MMU__MMU_LOCK__CURRENTVICTIM__POS             4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LD_TLB__LDTLBITEM   
 *
 * @BRIEF        Write (load) data in the TLB  - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LD_TLB__LDTLBITEM                    BITFIELD(0, 0)
#define TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__POS               0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   MMU__MMU_CAM__VATAG   
 *
 * @BRIEF        Virtual address tag - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__VATAG                           BITFIELD(31, 12)
#define TESLASS_MMU__MMU_CAM__VATAG__POS                      12

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__P   
 *
 * @BRIEF        Preserved bit - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__P                               BITFIELD(3, 3)
#define TESLASS_MMU__MMU_CAM__P__POS                          3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__V   
 *
 * @BRIEF        Valid bit - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__V                               BITFIELD(2, 2)
#define TESLASS_MMU__MMU_CAM__V__POS                          2

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__PAGESIZE   
 *
 * @BRIEF        Page size - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__PAGESIZE                        BITFIELD(1, 0)
#define TESLASS_MMU__MMU_CAM__PAGESIZE__POS                   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM__PHYSICALADDRESS   
 *
 * @BRIEF        Physical address of the page - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM__PHYSICALADDRESS                 BITFIELD(31, 12)
#define TESLASS_MMU__MMU_RAM__PHYSICALADDRESS__POS            12
/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM__ENDIANNESS   
 *
 * @BRIEF        Endianness of the page - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM__ENDIANNESS              BITFIELD(9, 9)
#define TESLASS_MMU__MMU_RAM__ENDIANNESS__POS         9

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM__ELEMENTSIZE   
 *
 * @BRIEF        Element size of the page (8, 16, 32, no translation) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM__ELEMENTSIZE             BITFIELD(8, 7)
#define TESLASS_MMU__MMU_RAM__ELEMENTSIZE__POS        7

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM__MIXED   
 *
 * @BRIEF        Mixed page attribute (use CPU element size) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM__MIXED                   BITFIELD(6, 6)
#define TESLASS_MMU__MMU_RAM__MIXED__POS              6

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH   
 *
 * @BRIEF        Flush all the non-protected TLB entries when set  - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH                  BITFIELD(0, 0)
#define TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__POS             0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY   
 *
 * @BRIEF        Flush the TLB entry pointed by the virtual address (VATag) 
 *               in MMU_CAM register, even if this entry is set protected  - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY              BITFIELD(0, 0)
#define TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__POS         0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__VATAG   
 *
 * @BRIEF        Virtual address tag - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__VATAG                      BITFIELD(31, 12)
#define TESLASS_MMU__MMU_READ_CAM__VATAG__POS                 12

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__P   
 *
 * @BRIEF        Preserved bit - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__P                          BITFIELD(3, 3)
#define TESLASS_MMU__MMU_READ_CAM__P__POS                     3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   MMU__MMU_READ_CAM__V   
 *
 * @BRIEF        Valid bit - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__V                          BITFIELD(2, 2)
#define TESLASS_MMU__MMU_READ_CAM__V__POS                     2

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__PAGESIZE   
 *
 * @BRIEF        Page size - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__PAGESIZE                   BITFIELD(1, 0)
#define TESLASS_MMU__MMU_READ_CAM__PAGESIZE__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_RAM__PHYSICALADDRESS   
 *
 * @BRIEF        Physical address of the page - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_RAM__PHYSICALADDRESS            BITFIELD(31, 12)
#define TESLASS_MMU__MMU_READ_RAM__PHYSICALADDRESS__POS       12

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_EMU_FAULT_AD__EMUFAULTADDRESS   
 *
 * @BRIEF        Virtual address of the last emulator access that generated a 
 *               fault - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_EMU_FAULT_AD__EMUFAULTADDRESS        BITFIELD(31, 0)
#define TESLASS_MMU__MMU_EMU_FAULT_AD__EMUFAULTADDRESS__POS   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_TTB_MSB__TTB_MSB   
 *
 * @BRIEF        35:32 of TTB - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_TTB_MSB__TTB_MSB                     BITFIELD(3, 0)
#define TESLASS_MMU__MMU_TTB_MSB__TTB_MSB__POS                0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_RAM_MSB__PA_MSB   
 *
 * @BRIEF        bits 35:32 of physical address - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_RAM_MSB__PA_MSB                      BITFIELD(3, 0)
#define TESLASS_MMU__MMU_RAM_MSB__PA_MSB__POS                 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_RAM_MSB__PA_MSB   
 *
 * @BRIEF        bits 35:32 of physical address - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_RAM_MSB__PA_MSB                 BITFIELD(3, 0)
#define TESLASS_MMU__MMU_READ_RAM_MSB__PA_MSB__POS            0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_PC__PC   
 *
 * @BRIEF        gl_zm_faultpc_tr input associated with transaction that 
 *               caused fault is captured in this register. 
 *               Typically CPU program counter value of instruction 
 *               generating transaction is sent on this input. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_PC__PC                         BITFIELD(31, 0)
#define TESLASS_MMU__MMU_FAULT_PC__PC__POS                    0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_STATUS__MMU_FAULT_TRANS_ID   
 *
 * @BRIEF        MtagID of the transaction that caused fault. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_STATUS__MMU_FAULT_TRANS_ID     BITFIELD(8, 4)
#define TESLASS_MMU__MMU_FAULT_STATUS__MMU_FAULT_TRANS_ID__POS 4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_STATUS__RD_WR   
 *
 * @BRIEF        indicates read or write 
 *               1 - Read 
 *               0 - Write - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_STATUS__RD_WR                  BITFIELD(3, 3)
#define TESLASS_MMU__MMU_FAULT_STATUS__RD_WR__POS             3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_STATUS__MMU_FAULT_TYPE   
 *
 * @BRIEF        MReqInfo[1:0] is captured as fault type. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_STATUS__MMU_FAULT_TYPE         BITFIELD(2, 1)
#define TESLASS_MMU__MMU_FAULT_STATUS__MMU_FAULT_TYPE__POS    1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FAULT_STATUS__FAULTINDICATION   
 *
 * @BRIEF        indicates a MMU fault - (RW, W1toClr) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FAULT_STATUS__FAULTINDICATION        BITFIELD(0, 0)
#define TESLASS_MMU__MMU_FAULT_STATUS__FAULTINDICATION__POS   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GPR__GPO   
 *
 * @BRIEF        General purpose output sent out as MMU output. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GPR__GPO                             BITFIELD(31, 16)
#define TESLASS_MMU__MMU_GPR__GPO__POS                        16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GPR__FAULT_INTR_DIS   
 *
 * @BRIEF        Disable generation of interrupt on fault. Error response is 
 *               returned instead on the slave port. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GPR__FAULT_INTR_DIS                  BITFIELD(0, 0)
#define TESLASS_MMU__MMU_GPR__FAULT_INTR_DIS__POS             0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION1_ADDR__START_ADDR   
 *
 * @BRIEF        Start address of NO TRANSLATION REGION for 2D bursts.  
 *               This has to be aligned to SIZE in MMU_BYPASS_REGION1_SIZE. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION1_ADDR__START_ADDR      BITFIELD(31, 16)
#define TESLASS_MMU__MMU_BYPASS_REGION1_ADDR__START_ADDR__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION1_SIZE__SIZE   
 *
 * @BRIEF        Size of the NO TRANSLATION REGION of 2D bursts. 
 *               0x0 = region not valid 
 *               0x1 = 64K bytes 
 *               0x2 = 128K bytes 
 *               0x3 = 256K bytes 
 *               0x4 = 512K bytes 
 *               0x5 = 1M bytes 
 *               0x6 = 2M bytes 
 *               0x7 = 4M bytes 
 *               0x8 = 8M bytes 
 *               0x9 = 16M bytes 
 *               0xA = 32M bytes 
 *               0xB = 64M bytes 
 *               0xC = 128M bytes 
 *               0xD = 256M bytes 
 *               0xE = 512M bytes 
 *               0xF = 1G bytes - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION1_SIZE__SIZE            BITFIELD(3, 0)
#define TESLASS_MMU__MMU_BYPASS_REGION1_SIZE__SIZE__POS       0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION2_ADDR__START_ADDR   
 *
 * @BRIEF        Start address of NO TRANSLATION REGION for 2D bursts.  
 *               This has to be aligned to SIZE in MMU_BYPASS_REGION2_SIZE. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION2_ADDR__START_ADDR      BITFIELD(31, 16)
#define TESLASS_MMU__MMU_BYPASS_REGION2_ADDR__START_ADDR__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION2_SIZE__SIZE   
 *
 * @BRIEF        Size of the NO TRANSLATION REGION of 2D bursts. 
 *               0x0 = region not valid 
 *               0x1 = 64K bytes 
 *               0x2 = 128K bytes 
 *               0x3 = 256K bytes 
 *               0x4 = 512K bytes 
 *               0x5 = 1M bytes 
 *               0x6 = 2M bytes 
 *               0x7 = 4M bytes 
 *               0x8 = 8M bytes 
 *               0x9 = 16M bytes 
 *               0xA = 32M bytes 
 *               0xB = 64M bytes 
 *               0xC = 128M bytes 
 *               0xD = 256M bytes 
 *               0xE = 512M bytes 
 *               0xF = 1G bytes - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION2_SIZE__SIZE            BITFIELD(3, 0)
#define TESLASS_MMU__MMU_BYPASS_REGION2_SIZE__SIZE__POS       0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION3_ADDR__START_ADDR   
 *
 * @BRIEF        Start address of NO TRANSLATION REGION for 2D bursts.  
 *               This has to be aligned to SIZE in MMU_BYPASS_REGION3_SIZE. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION3_ADDR__START_ADDR      BITFIELD(31, 16)
#define TESLASS_MMU__MMU_BYPASS_REGION3_ADDR__START_ADDR__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION3_SIZE__SIZE   
 *
 * @BRIEF        Size of the NO TRANSLATION REGION of 2D bursts. 
 *               0x0 = region not valid 
 *               0x1 = 64K bytes 
 *               0x2 = 128K bytes 
 *               0x3 = 256K bytes 
 *               0x4 = 512K bytes 
 *               0x5 = 1M bytes 
 *               0x6 = 2M bytes 
 *               0x7 = 4M bytes 
 *               0x8 = 8M bytes 
 *               0x9 = 16M bytes 
 *               0xA = 32M bytes 
 *               0xB = 64M bytes 
 *               0xC = 128M bytes 
 *               0xD = 256M bytes 
 *               0xE = 512M bytes 
 *               0xF = 1G bytes - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION3_SIZE__SIZE            BITFIELD(3, 0)
#define TESLASS_MMU__MMU_BYPASS_REGION3_SIZE__SIZE__POS       0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION4_ADDR__START_ADDR   
 *
 * @BRIEF        Start address of NO TRANSLATION REGION for 2D bursts.  
 *               This has to be aligned to SIZE in MMU_BYPASS_REGION4_SIZE. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION4_ADDR__START_ADDR      BITFIELD(31, 16)
#define TESLASS_MMU__MMU_BYPASS_REGION4_ADDR__START_ADDR__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_BYPASS_REGION4_SIZE__SIZE   
 *
 * @BRIEF        Size of the NO TRANSLATION REGION of 2D bursts. 
 *               0x0 = region not valid 
 *               0x1 = 64K bytes 
 *               0x2 = 128K bytes 
 *               0x3 = 256K bytes 
 *               0x4 = 512K bytes 
 *               0x5 = 1M bytes 
 *               0x6 = 2M bytes 
 *               0x7 = 4M bytes 
 *               0x8 = 8M bytes 
 *               0x9 = 16M bytes 
 *               0xA = 32M bytes 
 *               0xB = 64M bytes 
 *               0xC = 128M bytes 
 *               0xD = 256M bytes 
 *               0xE = 512M bytes 
 *               0xF = 1G bytes - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_BYPASS_REGION4_SIZE__SIZE            BITFIELD(3, 0)
#define TESLASS_MMU__MMU_BYPASS_REGION4_SIZE__SIZE__POS       0


/*
 * List of register bitfields values for component MMU
 *
 */

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__SFIDLE
 *
 * @BRIEF        Force-idle. An idle request is acknowledged unconditionally 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__SFIDLE          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__SNIDLE
 *
 * @BRIEF        No-idle. An idle request is never acknowledged - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__SNIDLE          0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__SSIDLE
 *
 * @BRIEF        Smart-idle. Acknowledgement to an idle request is given 
 *               based on the internal activity of the module - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__SSIDLE          0x2ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__RES
 *
 * @BRIEF        reserved   do not use - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__IDLEMODE__RES             0x3ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__ALWAYS_R
 *
 * @BRIEF        always return 0 - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__ALWAYS_R       0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__NOFUN_W
 *
 * @BRIEF        no functional effect - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__NOFUN_W        0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__RSTMODE_W
 *
 * @BRIEF        The module is reset - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__RSTMODE_W      0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__NEVER_R
 *
 * @BRIEF        never happens - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__SOFTRESET__NEVER_R        0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE__CLKFREE
 *
 * @BRIEF        OCP clock is free-running - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE__CLKFREE         0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE__AUTOCLKGATE
 *
 * @BRIEF        Automatic OCP clock gating strategy is applied, based on the 
 *               OCP interface activity - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSCONFIG__AUTOIDLE__AUTOCLKGATE     0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSSTATUS__RESETDONE__RSTONGOING
 *
 * @BRIEF        Internal module reset in on-going - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSSTATUS__RESETDONE__RSTONGOING     0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_SYSSTATUS__RESETDONE__RSTCOMP
 *
 * @BRIEF        Reset completed - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_SYSSTATUS__RESETDONE__RSTCOMP        0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__NMHF_R
 *
 * @BRIEF        MultiHitFault false - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__NMHF_R     0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__MHFSTAT_W
 *
 * @BRIEF        MultiHitFault status bit unchanged - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__MHFSTAT_W  0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__RMHFSTAT_W
 *
 * @BRIEF        MultiHitFault status bit is reset - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__RMHFSTAT_W 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__MHF_R
 *
 * @BRIEF        MultiHitFault is true ("pending") - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__MULTIHITFAULT__MHF_R      0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__NTWF_R
 *
 * @BRIEF        TableWalkFault false - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__NTWF_R    0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__TWFSTAT_W
 *
 * @BRIEF        TableWalkFault status bit unchanged - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__TWFSTAT_W 0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__RTWFSTAT_W
 *
 * @BRIEF        TableWalkFault status bit is reset - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__RTWFSTAT_W 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__TWF_R
 *
 * @BRIEF        TableWalkFault is true ("pending") - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TABLEWALKFAULT__TWF_R     0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__NEMUM_R
 *
 * @BRIEF        EMUMiss false - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__NEMUM_R          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__ESTAT_W
 *
 * @BRIEF        EMUMiss status bit unchanged - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__ESTAT_W          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__RESTAT_W
 *
 * @BRIEF        EMUMiss status bit is reset - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__RESTAT_W         0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__EMUM_R
 *
 * @BRIEF        EMUMiss is true ("pending") - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__EMUMISS__EMUM_R           0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__NFAULT_R
 *
 * @BRIEF        TranslationFault false - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__NFAULT_R 0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__FSTAT_W
 *
 * @BRIEF        TranslationFault status bit unchanged - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__FSTAT_W 0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__RFSTAT_W
 *
 * @BRIEF        TranslationFault status bit is reset - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__RFSTAT_W 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__FAULT_R
 *
 * @BRIEF        TranslationFault is true ("pending") - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TRANSLATIONFAULT__FAULT_R 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__NTLBM_R
 *
 * @BRIEF        TLBMiss false - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__NTLBM_R          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__MSTAT_W
 *
 * @BRIEF        TLBMiss status bit unchanged - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__MSTAT_W          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__RMSTAT_W
 *
 * @BRIEF        TLBMiss status bit is reset - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__RMSTAT_W         0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__TLBM_R
 *
 * @BRIEF        TLBMiss is true ("pending") - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQSTATUS__TLBMISS__TLBM_R           0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT__MHFLTMASK
 *
 * @BRIEF        MultiHitFault is masked - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT__MHFLTMASK  0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT__MHFLTGINT
 *
 * @BRIEF        MultiHitFault event generates an interrupt if occurs - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__MULTIHITFAULT__MHFLTGINT  0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT__TWLFLTMASK
 *
 * @BRIEF        TableWalkFault is masked - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT__TWLFLTMASK 0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT__TWLFLTGINT
 *
 * @BRIEF        TableWalkFault event generates an interrupt if occurs - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TABLEWALKFAULT__TWLFLTGINT 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__EMUMISS__EMUMFLTMASK
 *
 * @BRIEF        EMUMiss interrupt is masked - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__EMUMISS__EMUMFLTMASK      0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__EMUMISS__EMUMFLTGINT
 *
 * @BRIEF        EMUMiss event generates an interrupt when it occurs - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__EMUMISS__EMUMFLTGINT      0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT__TRANFLTMASK
 *
 * @BRIEF        TranslationFault is masked - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT__TRANFLTMASK 0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT__TRANFLTGINT
 *
 * @BRIEF        TranslationFault event generates an interrupt if occurs - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TRANSLATIONFAULT__TRANFLTGINT 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TLBMISS__TRMISSINTM
 *
 * @BRIEF        TLBMiss interrupt is masked - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TLBMISS__TRMISSINTM       0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_IRQENABLE__TLBMISS__TRMISSGINT
 *
 * @BRIEF        TLBMiss event generates an interrupt when if occurs - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_IRQENABLE__TLBMISS__TRMISSGINT       0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING__TWLCOMP
 *
 * @BRIEF        TWL Completed - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING__TWLCOMP      0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING__TWLRUN
 *
 * @BRIEF        TWL Running - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_WALKING_ST__TWLRUNNING__TWLRUN       0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE__EMUDIS
 *
 * @BRIEF        Emulator TLB update disabled - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE__EMUDIS           0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE__EMUEN
 *
 * @BRIEF        Emulator TLB update enabled - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__EMUTLBUPDATE__EMUEN            0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__TWLENABLE__TWLDIS
 *
 * @BRIEF        TWL disabled - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__TWLENABLE__TWLDIS              0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__TWLENABLE__TWLEN
 *
 * @BRIEF        TWL enabled - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__TWLENABLE__TWLEN               0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__MMUENABLE__MMUDIS
 *
 * @BRIEF        MMU disabled - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__MMUENABLE__MMUDIS              0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CNTL__MMUENABLE__MMUEN
 *
 * @BRIEF        MMU enabled - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CNTL__MMUENABLE__MMUEN               0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__ALWAYS_R
 *
 * @BRIEF        always return 0 - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__ALWAYS_R          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__NOEFFECT_W
 *
 * @BRIEF        no functional effect - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__NOEFFECT_W        0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__LDTLB_W
 *
 * @BRIEF        load TLB data - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__LDTLB_W           0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__NEVER_R
 *
 * @BRIEF        never happens - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_LD_TLB__LDTLBITEM__NEVER_R           0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__P__CANFLUSH
 *
 * @BRIEF        TLB entry may be flushed - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__P__CANFLUSH                     0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__P__NOFLUSH
 *
 * @BRIEF        TLB entry is protected against flush - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__P__NOFLUSH                      0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__V__INVALID
 *
 * @BRIEF        TLB entry is invalid - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__V__INVALID                      0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__V__VALID
 *
 * @BRIEF        TLB entry is valid - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__V__VALID                        0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__PAGESIZE__SECTION
 *
 * @BRIEF        Section (1MB) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__PAGESIZE__SECTION               0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__PAGESIZE__LARGE
 *
 * @BRIEF        Large page (64KB) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__PAGESIZE__LARGE                 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__PAGESIZE__SMALL
 *
 * @BRIEF        Small page (4KB) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__PAGESIZE__SMALL                 0x2ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_CAM__PAGESIZE__SUPER
 *
 * @BRIEF        Supersection (16MB) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_CAM__PAGESIZE__SUPER                 0x3ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__RTN0_R
 *
 * @BRIEF        always return 0 - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__RTN0_R          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__NFT_W
 *
 * @BRIEF        no functional effect - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__NFT_W           0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__FLUSH_W
 *
 * @BRIEF        flush all the non-protected TLB entries - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__FLUSH_W         0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__NEVER_R
 *
 * @BRIEF        never happens - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_GFLUSH__GLOBALFLUSH__NEVER_R         0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__ALWAYS_R
 *
 * @BRIEF        always return 0 - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__ALWAYS_R    0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__NOFUN_W
 *
 * @BRIEF        no functional effect - (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__NOFUN_W     0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__FLUSHTLB_W
 *
 * @BRIEF        flush all the TLB entries specified by the CAM register - 
 *               (Write) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__FLUSHTLB_W  0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__NEVER_R
 *
 * @BRIEF        never happens - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_FLUSH_ENTRY__FLUSHENTRY__NEVER_R     0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__P__CANFLUSH
 *
 * @BRIEF        TLB entry may be flushed - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__P__CANFLUSH                0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__P__NOFLUSH
 *
 * @BRIEF        TLB entry is protected against flush - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__P__NOFLUSH                 0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__V__INVALID
 *
 * @BRIEF        TLB entry is invalid - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__V__INVALID                 0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__V__VALID
 *
 * @BRIEF        TLB entry is valid - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__V__VALID                   0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__PAGESIZE__SECTION
 *
 * @BRIEF        Section (1MB) - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__PAGESIZE__SECTION          0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__PAGESIZE__LARGE
 *
 * @BRIEF        Large page (64KB) - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__PAGESIZE__LARGE            0x1ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__PAGESIZE__SMALL
 *
 * @BRIEF        Small page (4KB) - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__PAGESIZE__SMALL            0x2ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   TESLASS_MMU__MMU_READ_CAM__PAGESIZE__SUPER
 *
 * @BRIEF        Supersection (16MB) - (Read) 
 *
 *//*------------------------------------------------------------------------ */
#define TESLASS_MMU__MMU_READ_CAM__PAGESIZE__SUPER            0x3ul


#ifdef __cplusplus
}
#endif
#endif  /* __MMU_CRED_H */
 
