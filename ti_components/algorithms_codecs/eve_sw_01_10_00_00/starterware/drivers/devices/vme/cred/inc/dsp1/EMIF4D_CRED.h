
/* ============================================================================
 *
 *            TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION
 *
 *  Property of Texas Instruments
 *  For Unrestricted Internal Use Only
 *  Unauthorized reproduction and/or distribution is strictly prohibited.
 *  This product is protected under copyright law and trade secret law
 *  as an unpublished work.
 *  Created 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved.
 *
 */

/**
 *  @Component:   EMIF4D
 *
 *  @Filename:    emif4d_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
 *//* ====================================================================== */

#ifndef __EMIF4D_H
#define __EMIF4D_H

#ifdef __cplusplus
extern "C"
{
#endif

/*
 * Instance EMIF4D of component EMIF4D mapped in EMIF4D at address 0x0
 */
 
 /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
 *//*------------------------------------------------------------------------ */
#define BITFIELD BITFIELD_32

/*
 *  List of Register arrays for component EMIF4D
 *
 */


/*
 *  List of bundle arrays for component EMIF4D
 *
 */

/*
 *  List of bundles for component EMIF4D
 *
 */


/*
 * List of registers for component EMIF4D
 *
 */

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV                            0x0u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS                                     0x4u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG                               0x8u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG                          0xCu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL                             0x10u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL_SHDW                        0x14u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1                                0x18u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW                           0x1Cu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2                                0x20u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW                           0x24u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3                                0x28u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW                           0x2Cu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM                             0x30u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW                        0x34u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL                              0x38u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW                         0x3Cu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_DATA
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_DATA                       0x40u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG                        0x50u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_BRST_PRI
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_BRST_PRI                               0x54u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1                              0x58u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2                              0x5Cu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC                                 0x60u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_CTRL_MISR_RSLT
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_CTRL_MISR_RSLT                       0x64u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_ADDR_MISR_RSLT
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_ADDR_MISR_RSLT                       0x68u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_1                     0x6Cu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_2                     0x70u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_3
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_3                     0x74u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_1                                 0x80u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_2                                 0x84u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG                               0x88u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL                               0x8Cu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_TIM
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_TIM                               0x90u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQ_EOI
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQ_EOI                                    0xA0u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_SYS
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_SYS                          0xA4u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_LL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_LL                           0xA8u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_SYS
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_SYS                              0xACu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_LL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_LL                               0xB0u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_SYS
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_SYS                          0xB4u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_LL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_LL                           0xB8u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_SYS
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_SYS                          0xBCu

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_LL
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_LL                           0xC0u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG                                0xD0u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1                             0xE4u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1_SHDW
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1_SHDW                        0xE8u

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_2                             0xECu


/*
 * List of register bitfields for component EMIF4D
 *
 */
 
/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_SCHEME   
 *
 * @BRIEF        Used to distinguish between old and current schemes. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_SCHEME           BITFIELD(31, 30)
#define EMIF4D__EMIF_MOD_ID_REV__REG_SCHEME__POS      30

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_MODULE_ID   
 *
 * @BRIEF        EMIF module ID. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_MODULE_ID        BITFIELD(27, 16)
#define EMIF4D__EMIF_MOD_ID_REV__REG_MODULE_ID__POS   16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_RTL_VERSION   
 *
 * @BRIEF        RTL Version. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_RTL_VERSION      BITFIELD(15, 11)
#define EMIF4D__EMIF_MOD_ID_REV__REG_RTL_VERSION__POS 11

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_MAJOR_REVISION   
 *
 * @BRIEF        Major Revision. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_MAJOR_REVISION   BITFIELD(10, 8)
#define EMIF4D__EMIF_MOD_ID_REV__REG_MAJOR_REVISION__POS 8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_MINOR_REVISION   
 *
 * @BRIEF        Minor Revision. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_MINOR_REVISION   BITFIELD(5, 0)
#define EMIF4D__EMIF_MOD_ID_REV__REG_MINOR_REVISION__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_BE   
 *
 * @BRIEF        Big Endian. Reflects the value on the config_big_endian port 
 *               that defines whether the EMIF is in big or little endian 
 *               mode. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_BE                        BITFIELD(31, 31)
#define EMIF4D__STATUS__REG_BE__POS                   31

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_DUAL_CLK_MODE   
 *
 * @BRIEF        Dual Clock mode. Reflects the value on the 
 *               config_dual_clk_mode port that defines whether the ocp_clk 
 *               and m_clk are asynchronous. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_DUAL_CLK_MODE             BITFIELD(30, 30)
#define EMIF4D__STATUS__REG_DUAL_CLK_MODE__POS        30

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_FAST_INIT   
 *
 * @BRIEF        Fast Init. Reflects the value on the config_fast_init port 
 *               that defines whether the EMIF fast initialization mode has 
 *               been enabled. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_FAST_INIT                 BITFIELD(29, 29)
#define EMIF4D__STATUS__REG_FAST_INIT__POS            29

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_PHY_DLL_READY   
 *
 * @BRIEF        DDR PHY Ready. Reflects the value on the phy_ready port 
 *               (active high) that defines whether the DDR PHY is ready for 
 *               normal operation. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_PHY_DLL_READY             BITFIELD(2, 2)
#define EMIF4D__STATUS__REG_PHY_DLL_READY__POS        2

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_SDRAM_TYPE   
 *
 * @BRIEF        SDRAM Type selection. Set to 0 for DDR1 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_TYPE          BITFIELD(31, 29)
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_TYPE__POS     29

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_IBANK_POS   
 *
 * @BRIEF        Internal bank position. Set to 0 to assign internal bank 
 *               address bits from OCP address as shown in tables. Set to 1 - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_IBANK_POS           BITFIELD(28, 27)
#define EMIF4D__SDRAM_CONFIG__REG_IBANK_POS__POS      27

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DDR_TERM   
 *
 * @BRIEF        DDR2 and DDR3 termination resistor value. Set to 0 to 
 *               disable termination. For DDR2 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DDR_TERM            BITFIELD(26, 24)
#define EMIF4D__SDRAM_CONFIG__REG_DDR_TERM__POS       24

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DDR2_DDQS   
 *
 * @BRIEF        DDR2 differential DQS enable. Set to 0 for single ended DQS. 
 *               Set to 1 for differential DQS. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DDR2_DDQS           BITFIELD(23, 23)
#define EMIF4D__SDRAM_CONFIG__REG_DDR2_DDQS__POS      23

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DYN_ODT   
 *
 * @BRIEF        DDR3 Dynamic ODT. Set to 0 to turn off dynamic ODT. Set to 1 
 *               for RZQ/4 and set to 2 for RZQ/2. All other values are 
 *               reserved. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DYN_ODT             BITFIELD(22, 21)
#define EMIF4D__SDRAM_CONFIG__REG_DYN_ODT__POS        21

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DDR_DISABLE_DLL   
 *
 * @BRIEF        Disable DLL select. Set to 1 to disable DLL inside SDRAM. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DDR_DISABLE_DLL     BITFIELD(20, 20)
#define EMIF4D__SDRAM_CONFIG__REG_DDR_DISABLE_DLL__POS 20

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_SDRAM_DRIVE   
 *
 * @BRIEF        SDRAM drive strength. For DDR1/DDR2 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_DRIVE         BITFIELD(19, 18)
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_DRIVE__POS    18

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_CWL   
 *
 * @BRIEF        DDR3 CAS Write latency. Value of 0 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_CWL                 BITFIELD(17, 16)
#define EMIF4D__SDRAM_CONFIG__REG_CWL__POS            16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_NARROW_MODE   
 *
 * @BRIEF        SDRAM data bus width. Set to 0 for 32-bit and set to 1 for 
 *               16-bit. All other values are reserved. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_NARROW_MODE         BITFIELD(15, 14)
#define EMIF4D__SDRAM_CONFIG__REG_NARROW_MODE__POS    14

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_CL   
 *
 * @BRIEF        CAS Latency. The value of this field defines the CAS latency 
 *               to be used when accessing connected SDRAM devices. Value of 
 *               2 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_CL                  BITFIELD(13, 10)
#define EMIF4D__SDRAM_CONFIG__REG_CL__POS             10

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_ROWSIZE   
 *
 * @BRIEF        Row Size. Defines the number of row address bits of 
 *               connected SDRAM devices. Set to 0 for 9 row bits - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_ROWSIZE             BITFIELD(9, 7)
#define EMIF4D__SDRAM_CONFIG__REG_ROWSIZE__POS        7

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_IBANK   
 *
 * @BRIEF        Internal Bank setup. Defines number of banks inside 
 *               connected SDRAM devices. Set to 0 for 1 bank - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_IBANK               BITFIELD(6, 4)
#define EMIF4D__SDRAM_CONFIG__REG_IBANK__POS          4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_EBANK   
 *
 * @BRIEF        External chip select setup. Defines whether SDRAM accesses 
 *               will use 1 or 2 chip select lines. Set to 0 to use 
 *               pad_cs_o_n[0] only. Set to 1 to use pad_cs_o_n[1:0]. This 
 *               bit will automaticlly be set to 0 if either cs0nvmen or 
 *               cs1nvmen fields in the LPDDR2-NVM are set to 1. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_EBANK               BITFIELD(3, 3)
#define EMIF4D__SDRAM_CONFIG__REG_EBANK__POS          3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_PAGESIZE   
 *
 * @BRIEF        Page Size. Defines the internal page size of connected SDRAM 
 *               devices. Set to 0 for 256-word page (8 column bits) - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_PAGESIZE            BITFIELD(2, 0)
#define EMIF4D__SDRAM_CONFIG__REG_PAGESIZE__POS       0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG__REG_CS0NVMEN   
 *
 * @BRIEF        CS0 LPDDR2-NVM enable. Set to 1 if LPDDR2-NVM is connected 
 *               to CS0. This bit will automatically be set to 0 if 
 *               sdram_type field in the SDRAM Config register is not set to 
 *               LPDDR2. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_CS0NVMEN       BITFIELD(31, 31)
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_CS0NVMEN__POS  31

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG__REG_CS1NVMEN   
 *
 * @BRIEF        CS1 LPDDR2-NVM enable. Set to 1 if LPDDR2-NVM is connected 
 *               to CS1. This bit will automatically be set to 0 if 
 *               sdram_type field in the SDRAM Config register is not set to 
 *               LPDDR2. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_CS1NVMEN       BITFIELD(30, 30)
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_CS1NVMEN__POS  30

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG__REG_PD_EN   
 *
 * @BRIEF        Power Down enable. This overrides the automatic power 
 *               management performed by the EMIF using the Power Management 
 *               Control register. Set to 0 for normal operation. Set to 1 
 *               for Power Down. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_PD_EN          BITFIELD(16, 16)
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_PD_EN__POS     16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG__REG_NVM_CL   
 *
 * @BRIEF        CAS Latency. The value of this field defines the CAS latency 
 *               to be used when accessing connected LPDDR2-NVM devices. 
 *               Value of 3 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_NVM_CL         BITFIELD(13, 10)
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_NVM_CL__POS    10

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG__REG_RDBNUM   
 *
 * @BRIEF        Row Buffer setup. Defines number of row buffers inside 
 *               connected LPDDR2-NVM devices. Set to 0 for 1 row buffer - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_RDBNUM         BITFIELD(5, 4)
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_RDBNUM__POS    4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_CONFIG__REG_RDBSIZE   
 *
 * @BRIEF        Row Data Buffer Size. Defines the row data buffer size of 
 *               connected LPDDR2-NVM devices. Set to 0 for 32 bytes - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_RDBSIZE        BITFIELD(2, 0)
#define EMIF4D__LPDDR2_NVM_CONFIG__REG_RDBSIZE__POS   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_INITREF_DIS   
 *
 * @BRIEF        Initialization and Refresh disable. When set to 1 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_INITREF_DIS       BITFIELD(31, 31)
#define EMIF4D__SDRAM_REF_CTRL__REG_INITREF_DIS__POS  31

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_SRT   
 *
 * @BRIEF        DDR3 Self Refresh temperature range. Set to 0 for normal 
 *               operating temperature range and set to 1 for extended 
 *               operating temperature range when the asr field is set to 0. 
 *               This bit must be set to 0 if the asr field is set to 1. A 
 *               write to this field will cause the EMIF to start the SDRAM 
 *               initialization sequence. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_SRT               BITFIELD(29, 29)
#define EMIF4D__SDRAM_REF_CTRL__REG_SRT__POS          29

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_ASR   
 *
 * @BRIEF        DDR3 Auto Self Refresh enable. Set to 1 for auto Self 
 *               Refresh enable. Set to 0 for manual Self Refresh reference 
 *               indicated by the srt field. A write to this field will cause 
 *               the EMIF to start the SDRAM initialization sequence. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_ASR               BITFIELD(28, 28)
#define EMIF4D__SDRAM_REF_CTRL__REG_ASR__POS          28

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_PASR   
 *
 * @BRIEF        Partial Array Self Refresh. These bits get loaded into the 
 *               Extended Mode Register of an LPDDR1 or DDR3 during 
 *               initialization. For LPDDR1 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_PASR              BITFIELD(26, 24)
#define EMIF4D__SDRAM_REF_CTRL__REG_PASR__POS         24

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_LP_MODE   
 *
 * @BRIEF        Low Power mode select. This overrides the automatic power 
 *               management performed by the EMIF using the Power Management 
 *               Control register. Set to 0 for normal operation. For DDR1 - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_LP_MODE           BITFIELD(23, 22)
#define EMIF4D__SDRAM_REF_CTRL__REG_LP_MODE__POS      22

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_REFRESH_RATE   
 *
 * @BRIEF        rw - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_REFRESH_RATE      BITFIELD(15, 0)
#define EMIF4D__SDRAM_REF_CTRL__REG_REFRESH_RATE__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL_SHDW__REG_REFRESH_RATE_SHDW   
 *
 * @BRIEF        rw - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL_SHDW__REG_REFRESH_RATE_SHDW BITFIELD(15, 0)
#define EMIF4D__SDRAM_REF_CTRL_SHDW__REG_REFRESH_RATE_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RP   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Precharge to Activate 
 *               or Refresh - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RP                 BITFIELD(28, 25)
#define EMIF4D__SDRAM_TIM_1__REG_T_RP__POS            25

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RCD   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Activate to Read or 
 *               Write - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RCD                BITFIELD(24, 21)
#define EMIF4D__SDRAM_TIM_1__REG_T_RCD__POS           21

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_WR   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from last Write transfer to 
 *               Pre-charge - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_WR                 BITFIELD(20, 17)
#define EMIF4D__SDRAM_TIM_1__REG_T_WR__POS            17

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RAS   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Activate to Pre-charge 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RAS                BITFIELD(16, 12)
#define EMIF4D__SDRAM_TIM_1__REG_T_RAS__POS           12

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RC   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Activate to Activate - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RC                 BITFIELD(11, 6)
#define EMIF4D__SDRAM_TIM_1__REG_T_RC__POS            6

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RRD   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Activate to Activate 
 *               for a different bank - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RRD                BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_1__REG_T_RRD__POS           3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_WTR   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from last Write to Read - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_WTR                BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_1__REG_T_WTR__POS           0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RP_SHDW   
 *
 * @BRIEF        Shadow field for t_rp. This field is loaded into t_rp field 
 *               in SDRAM Timing 1 register when SIdleAck is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RP_SHDW       BITFIELD(28, 25)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RP_SHDW__POS  25

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RCD_SHDW   
 *
 * @BRIEF        Shadow field for t_rcd. This field is loaded into t_rcd 
 *               field in SDRAM Timing 1 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RCD_SHDW      BITFIELD(24, 21)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RCD_SHDW__POS 21

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WR_SHDW   
 *
 * @BRIEF        Shadow field for t_wr. This field is loaded into t_wr field 
 *               in SDRAM Timing 1 register when SIdleAck is asserted. 
 *               initialization sequence will be started when the value of 
 *               this field is changed from the previous value and the EMIF 
 *               is in DDR2 mode. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WR_SHDW       BITFIELD(20, 17)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WR_SHDW__POS  17

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RAS_SHDW   
 *
 * @BRIEF        Shadow field for t_ras. This field is loaded into t_ras 
 *               field in SDRAM Timing 1 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RAS_SHDW      BITFIELD(16, 12)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RAS_SHDW__POS 12

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RC_SHDW   
 *
 * @BRIEF        Shadow field for t_rc. This field is loaded into t_rc field 
 *               in SDRAM Timing 1 register when SIdleAck is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RC_SHDW       BITFIELD(11, 6)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RC_SHDW__POS  6

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RRD_SHDW   
 *
 * @BRIEF        Shadow field for t_rrd. This field is loaded into t_rrd 
 *               field in SDRAM Timing 1 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RRD_SHDW      BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RRD_SHDW__POS 3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WTR_SHDW   
 *
 * @BRIEF        Shadow field for t_wtr. This field is loaded into t_wtr 
 *               field in SDRAM Timing 1 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WTR_SHDW      BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WTR_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_XP   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Powerdown exit to any 
 *               command other than a Read command - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_XP                 BITFIELD(30, 28)
#define EMIF4D__SDRAM_TIM_2__REG_T_XP__POS            28

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_ODT   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from ODT enable to write 
 *               data driven for DDR2 and DDR3. t_odt must be equal to (CAS 
 *               latency-tAOND-1). t_odt must be less than CAS latency minus 
 *               one. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_ODT                BITFIELD(27, 25)
#define EMIF4D__SDRAM_TIM_2__REG_T_ODT__POS           25

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_XSNR   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Self-Refresh exit to 
 *               any command other than a Read command - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_XSNR               BITFIELD(24, 16)
#define EMIF4D__SDRAM_TIM_2__REG_T_XSNR__POS          16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_XSRD   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Self-Refresh exit to a 
 *               Read command - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_XSRD               BITFIELD(15, 6)
#define EMIF4D__SDRAM_TIM_2__REG_T_XSRD__POS          6

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_RTP   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from the last Read command 
 *               to a Pre-charge command for DDR2 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_RTP                BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_2__REG_T_RTP__POS           3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_CKE   
 *
 * @BRIEF        Minimum number of EM_CLK cycles between pad_cke_o changes - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_CKE                BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_2__REG_T_CKE__POS           0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XP_SHDW   
 *
 * @BRIEF        Shadow field for t_xp. This field is loaded into t_xp field 
 *               in SDRAM Timing 2 register when SIdleAck is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XP_SHDW       BITFIELD(30, 28)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XP_SHDW__POS  28

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_ODT_SHDW   
 *
 * @BRIEF        Shadow field for t_odt. This field is loaded into t_odt 
 *               field in SDRAM Timing 2 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_ODT_SHDW      BITFIELD(27, 25)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_ODT_SHDW__POS 25

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSNR_SHDW   
 *
 * @BRIEF        Shadow field for t_xsnr. This field is loaded into t_xsnr 
 *               field in SDRAM Timing 2 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSNR_SHDW     BITFIELD(24, 16)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSNR_SHDW__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSRD_SHDW   
 *
 * @BRIEF        Shadow field for t_xsrd. This field is loaded into t_xsrd 
 *               field in SDRAM Timing 2 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSRD_SHDW     BITFIELD(15, 6)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSRD_SHDW__POS 6

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_RTP_SHDW   
 *
 * @BRIEF        Shadow field for t_rtp. This field is loaded into t_rtp 
 *               field in SDRAM Timing 2 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_RTP_SHDW      BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_RTP_SHDW__POS 3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_CKE_SHDW   
 *
 * @BRIEF        Shadow field for t_cke. This field is loaded into t_cke 
 *               field in SDRAM Timing 2 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_CKE_SHDW      BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_CKE_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_TDQSCKMAX   
 *
 * @BRIEF        Number of EM_CLK that satisfies tDQSCKmax for LPDDR2 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_TDQSCKMAX          BITFIELD(14, 13)
#define EMIF4D__SDRAM_TIM_3__REG_T_TDQSCKMAX__POS     13

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_RFC   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Refresh or Load Mode to 
 *               Refresh or Activate - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_RFC                BITFIELD(12, 4)
#define EMIF4D__SDRAM_TIM_3__REG_T_RFC__POS           4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_RAS_MAX   
 *
 * @BRIEF        Maximum number of refresh_rate intervals from Activate to 
 *               Precharge command. This field must be equal to ((tRASmax / 
 *               tREFI)-1) rounded down to the next lower integer. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_RAS_MAX            BITFIELD(3, 0)
#define EMIF4D__SDRAM_TIM_3__REG_T_RAS_MAX__POS       0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_TDQSCKMAX_SHDW   
 *
 * @BRIEF        Shadow field for t_dqsckmax. This field is loaded into 
 *               t_dqsckmax field in SDRAM Timing 3 register when SIdleAck is 
 *               asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_TDQSCKMAX_SHDW BITFIELD(14, 13)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_TDQSCKMAX_SHDW__POS 13

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RFC_SHDW   
 *
 * @BRIEF        Shadow field for t_rfc. This field is loaded into t_rfc 
 *               field in SDRAM Timing 3 register when SIdleAck is asserted. 
 *               - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RFC_SHDW      BITFIELD(12, 4)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RFC_SHDW__POS 4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RAS_MAX_SHDW   
 *
 * @BRIEF        Shadow field for t_ras_max. This field is loaded into 
 *               t_ras_max field in SDRAM Timing 3 register when SIdleAck is 
 *               asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RAS_MAX_SHDW  BITFIELD(3, 0)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RAS_MAX_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_XP   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Powerdown exit to any 
 *               command - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_XP          BITFIELD(30, 28)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_XP__POS     28

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WTR   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from last Write to Read - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WTR         BITFIELD(26, 24)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WTR__POS    24

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RP   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Preactive to Activate - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RP          BITFIELD(23, 20)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RP__POS     20

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WRA   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from last Write transfer to 
 *               Activate - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WRA         BITFIELD(19, 16)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WRA__POS    16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RRD   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Activate to Activate 
 *               for a different bank - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RRD         BITFIELD(15, 8)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RRD__POS    8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RCDMIN   
 *
 * @BRIEF        Minimum number of EM_CLK cycles from Activate to Read or 
 *               Write - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RCDMIN      BITFIELD(7, 0)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RCDMIN__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_XP_SHDW   
 *
 * @BRIEF        Shadow field for t_xp. This field is loaded into t_xp field 
 *               in LPDDR2-NVM Timing register when SIdleAck is asserted. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_XP_SHDW BITFIELD(30, 28)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_XP_SHDW__POS 28

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WTR_SHDW   
 *
 * @BRIEF        Shadow field for t_wtr. This field is loaded into t_wtr 
 *               field in LPDDR2-NVM Timing register when SIdleAck is 
 *               asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WTR_SHDW BITFIELD(26, 24)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WTR_SHDW__POS 24

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RP_SHDW   
 *
 * @BRIEF        Shadow field for t_rp. This field is loaded into t_rp field 
 *               in LPDDR2-NVM Timing register when SIdleAck is asserted. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RP_SHDW BITFIELD(23, 20)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RP_SHDW__POS 20

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WRA_SHDW   
 *
 * @BRIEF        Shadow field for t_wra. This field is loaded into t_wra 
 *               field in LPDDR2-NVM Timing register when SIdleAck is 
 *               asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WRA_SHDW BITFIELD(19, 16)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WRA_SHDW__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RRD_SHDW   
 *
 * @BRIEF        Shadow field for t_rrd. This field is loaded into t_rrd 
 *               field in LPDDR2-NVM Timing register when SIdleAck is 
 *               asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RRD_SHDW BITFIELD(15, 8)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RRD_SHDW__POS 8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RCDMIN_SHDW   
 *
 * @BRIEF        Shadow field for t_rcdmin. This field is loaded into 
 *               t_rcdmin field in LPDDR2-NVM Timing register when SIdleAck 
 *               is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RCDMIN_SHDW BITFIELD(7, 0)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RCDMIN_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_IDLEMODE   
 *
 * @BRIEF        Power-Idle IP Generic mode. Set to 0 for force-idle mode - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_IDLEMODE           BITFIELD(31, 30)
#define EMIF4D__PWR_MGMT_CTRL__REG_IDLEMODE__POS      30

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_PM_EN   
 *
 * @BRIEF        Automatic Power Management enable. If set to 0 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_PM_EN              BITFIELD(9, 9)
#define EMIF4D__PWR_MGMT_CTRL__REG_PM_EN__POS         9

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_SR_PD   
 *
 * @BRIEF        Self Refresh or Power Down select. If set to 0 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_SR_PD              BITFIELD(8, 8)
#define EMIF4D__PWR_MGMT_CTRL__REG_SR_PD__POS         8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_SR_PD_TIM   
 *
 * @BRIEF        Self Refresh or Power Down timer. If pm_en bit is set to 1 - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_SR_PD_TIM          BITFIELD(6, 4)
#define EMIF4D__PWR_MGMT_CTRL__REG_SR_PD_TIM__POS     4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_CLKSTP_TIM   
 *
 * @BRIEF        Clock stop timer. If pm_en bit is set to 1 - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_CLKSTP_TIM         BITFIELD(2, 0)
#define EMIF4D__PWR_MGMT_CTRL__REG_CLKSTP_TIM__POS    0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW__REG_SR_PD_TIM_SHDW   
 *
 * @BRIEF        Shadow field for sr_pd_tim. This field is loaded into 
 *               refresh_rate field in Power Management Control register when 
 *               SIdleAck is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_SR_PD_TIM_SHDW BITFIELD(6, 4)
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_SR_PD_TIM_SHDW__POS 4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW__REG_CLKSTP_TIM_SHDW   
 *
 * @BRIEF        Shadow field for clkstp_tim. This field is loaded into 
 *               refresh_rate field in Power Management Control register when 
 *               SIdleAck is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_CLKSTP_TIM_SHDW BITFIELD(2, 0)
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_CLKSTP_TIM_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_DATA__REG_VALUE_0   
 *
 * @BRIEF        Mode register value. For mode register writes - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_DATA__REG_VALUE_0     BITFIELD(31, 0)
#define EMIF4D__LPDDR2_MODE_REG_DATA__REG_VALUE_0__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG__REG_CS   
 *
 * @BRIEF        Chip select to issue mode register command. Set to 0 for CS0 
 *               and set to 1 for CS1. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_CS           BITFIELD(31, 31)
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_CS__POS      31

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG__REG_ADDRESS   
 *
 * @BRIEF        Mode register address. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_ADDRESS      BITFIELD(7, 0)
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_ADDRESS__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_BRST_PRI__REG_PR_OLD_COUNT   
 *
 * @BRIEF        Priority Raise Old Counter. Number of memory transfers after 
 *               which the EMIF momentarily raises the priority of old 
 *               commands in the OCP Command FIFO. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_BRST_PRI__REG_PR_OLD_COUNT        BITFIELD(7, 0)
#define EMIF4D__OCP_BRST_PRI__REG_PR_OLD_COUNT__POS   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_SYS_BUS_WIDTH   
 *
 * @BRIEF        System OCP data bus width for a particular configuration. 0 
 *               = 32-bit wide - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_SYS_BUS_WIDTH      BITFIELD(31, 30)
#define EMIF4D__OCP_CFG_VAL_1__REG_SYS_BUS_WIDTH__POS 30

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_LL_BUS_WIDTH   
 *
 * @BRIEF        Low-latency OCP data bus width for a particular 
 *               configuration. 0 = 32-bit wide - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_LL_BUS_WIDTH       BITFIELD(29, 28)
#define EMIF4D__OCP_CFG_VAL_1__REG_LL_BUS_WIDTH__POS  28

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_WR_FIFO_DEPTH   
 *
 * @BRIEF        Write Data FIFO depth for a particular configuration. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_WR_FIFO_DEPTH      BITFIELD(15, 8)
#define EMIF4D__OCP_CFG_VAL_1__REG_WR_FIFO_DEPTH__POS 8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_CMD_FIFO_DEPTH   
 *
 * @BRIEF        Command FIFO depth for a particular configuration. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_CMD_FIFO_DEPTH     BITFIELD(7, 0)
#define EMIF4D__OCP_CFG_VAL_1__REG_CMD_FIFO_DEPTH__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2__REG_RREG_FIFO_DEPTH   
 *
 * @BRIEF        Register Read Data FIFO depth for a particular 
 *               configuration. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2__REG_RREG_FIFO_DEPTH    BITFIELD(23, 16)
#define EMIF4D__OCP_CFG_VAL_2__REG_RREG_FIFO_DEPTH__POS 16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2__REG_RSD_FIFO_DEPTH   
 *
 * @BRIEF        SDRAM Read Data FIFO depth for a particular configuration. - 
 *               (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2__REG_RSD_FIFO_DEPTH     BITFIELD(15, 8)
#define EMIF4D__OCP_CFG_VAL_2__REG_RSD_FIFO_DEPTH__POS 8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2__REG_RCMD_FIFO_DEPTH   
 *
 * @BRIEF        Read Command FIFO depth for a particular configuration. - 
 *               (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2__REG_RCMD_FIFO_DEPTH    BITFIELD(7, 0)
#define EMIF4D__OCP_CFG_VAL_2__REG_RCMD_FIFO_DEPTH__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_TLEC   
 *
 * @BRIEF        IODFT Test Logic Execution Counter. Contains the number of 
 *               cycle that the MISR signature will be accumulated. Upon the 
 *               expiration of the counter the MISR capture will be turned 
 *               off. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_TLEC                  BITFIELD(31, 16)
#define EMIF4D__IODFT_TLGC__REG_TLEC__POS             16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_MT   
 *
 * @BRIEF        MISR on/off trigger command. 0x0 = inactive/no affect. 0x1 = 
 *               MISR capture start on the first write or read command to the 
 *               memory and continues to update the signature until tlec 
 *               expires - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_MT                    BITFIELD(14, 14)
#define EMIF4D__IODFT_TLGC__REG_MT__POS               14

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_ACT_CAP_EN   
 *
 * @BRIEF        Active cycles capture enable. If set to a 1 the MISRs and 
 *               pattern generators will shift only during active cycles. If 
 *               set to a 0 the MISRs and pattern generators will shift every 
 *               clock cycle. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_ACT_CAP_EN            BITFIELD(13, 13)
#define EMIF4D__IODFT_TLGC__REG_ACT_CAP_EN__POS       13

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_OPG_LD   
 *
 * @BRIEF        Load pattern generators' initial value. Set to 1 to load an 
 *               initial value in the pattern generators from tlec. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_OPG_LD                BITFIELD(12, 12)
#define EMIF4D__IODFT_TLGC__REG_OPG_LD__POS           12

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_RESET_PHY   
 *
 * @BRIEF        Reset DDR PHY. Writing a 1 to this bit will reset the DDR 
 *               PHY. This bit will self clear to 0. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_RESET_PHY             BITFIELD(10, 10)
#define EMIF4D__IODFT_TLGC__REG_RESET_PHY__POS        10

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_MMS   
 *
 * @BRIEF        Chooses the source of the MISR input. Set to 0 for output 
 *               register - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_MMS                   BITFIELD(8, 8)
#define EMIF4D__IODFT_TLGC__REG_MMS__POS              8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_ESEL   
 *
 * @BRIEF        Output enable select. Set to 0 for test mode - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_ESEL                  BITFIELD(7, 7)
#define EMIF4D__IODFT_TLGC__REG_ESEL__POS             7

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_TOEN   
 *
 * @BRIEF        Test output enable control. This signal is paired with esel. 
 *               toen is never 1 when esel is 1. When esel is 0 (test mode) - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_TOEN                  BITFIELD(6, 6)
#define EMIF4D__IODFT_TLGC__REG_TOEN__POS             6

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_MC   
 *
 * @BRIEF        MISR state. Set to 0 to download results. Set to 1 to hold 
 *               current value. Set to 2 to load initial value from pc bits. 
 *               Set to 3 to enable MISR to capture signature. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_MC                    BITFIELD(5, 4)
#define EMIF4D__IODFT_TLGC__REG_MC__POS               4

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_PC   
 *
 * @BRIEF        Pattern code. Defines the type of pattern that is selected 
 *               for the pattern generators. Set to 0 for functional mode and 
 *               set to 4 to hold current register value. For output pattern 
 *               generator - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_PC                    BITFIELD(3, 1)
#define EMIF4D__IODFT_TLGC__REG_PC__POS               1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_TM   
 *
 * @BRIEF        Functional mode enable. Set to 1 for functional mode - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_TM                    BITFIELD(0, 0)
#define EMIF4D__IODFT_TLGC__REG_TM__POS               0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_CTRL_MISR_RSLT__REG_CTL_TLMR   
 *
 * @BRIEF        This contains the MISR result signature of a given test 
 *               after the download function is executed. This result is for 
 *               the control signals. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_CTRL_MISR_RSLT__REG_CTL_TLMR    BITFIELD(10, 0)
#define EMIF4D__IODFT_CTRL_MISR_RSLT__REG_CTL_TLMR__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_ADDR_MISR_RSLT__REG_ADDR_TLMR   
 *
 * @BRIEF        This contains the MISR result signature of a given test 
 *               after the download function is executed. This result is for 
 *               the address signals. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_ADDR_MISR_RSLT__REG_ADDR_TLMR   BITFIELD(20, 0)
#define EMIF4D__IODFT_ADDR_MISR_RSLT__REG_ADDR_TLMR__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_1__REG_DATA_TLMR_31_0   
 *
 * @BRIEF        This contains the least significant bits of the MISR result 
 *               signature of a given test after the download function is 
 *               executed. This result is for data bus. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_1__REG_DATA_TLMR_31_0 BITFIELD(31, 0)
#define EMIF4D__IODFT_DATA_MISR_RSLT_1__REG_DATA_TLMR_31_0__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_2__REG_DATA_TLMR_63_32   
 *
 * @BRIEF        This contains the middle bits of the MISR result signature 
 *               of a given test after the download function is executed. 
 *               This result is for data bus. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_2__REG_DATA_TLMR_63_32 BITFIELD(31, 0)
#define EMIF4D__IODFT_DATA_MISR_RSLT_2__REG_DATA_TLMR_63_32__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_3__REG_DATA_TLMR_66_64   
 *
 * @BRIEF        This contains the most significant bits of the MISR result 
 *               signature of a given test after the download function is 
 *               executed. This result is for data bus. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_3__REG_DATA_TLMR_66_64 BITFIELD(2, 0)
#define EMIF4D__IODFT_DATA_MISR_RSLT_3__REG_DATA_TLMR_66_64__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_1__REG_COUNTER1   
 *
 * @BRIEF        32-bit counter that can be configured as specified in the 
 *               Performance Counter Config Register and Performance Counter 
 *               Master Region Select Register. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_1__REG_COUNTER1              BITFIELD(31, 0)
#define EMIF4D__PERF_CNT_1__REG_COUNTER1__POS         0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_2__REG_COUNTER2   
 *
 * @BRIEF        32-bit counter that can be configured as specified in the 
 *               Performance Counter Config Register and Performance Counter 
 *               Master Region Select Register. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_2__REG_COUNTER2              BITFIELD(31, 0)
#define EMIF4D__PERF_CNT_2__REG_COUNTER2__POS         0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR2_MTAGID_EN   
 *
 * @BRIEF        MTagID filter enable for Performance Counter 2 register. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_MTAGID_EN     BITFIELD(31, 31)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_MTAGID_EN__POS 31

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR2_REGION_EN   
 *
 * @BRIEF        Chip Select filter enable for Performance Counter 2 
 *               register. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_REGION_EN     BITFIELD(30, 30)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_REGION_EN__POS 30

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR2_CFG   
 *
 * @BRIEF        Filter configuration for Performance Counter 2. Refer to 
 *               table for details. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_CFG           BITFIELD(19, 16)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_CFG__POS      16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR1_MTAGID_EN   
 *
 * @BRIEF        MTagID filter enable for Performance Counter 1 register. - 
 *               (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_MTAGID_EN     BITFIELD(15, 15)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_MTAGID_EN__POS 15

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR1_REGION_EN   
 *
 * @BRIEF        Chip Select filter enable for Performance Counter 1 
 *               register. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_REGION_EN     BITFIELD(14, 14)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_REGION_EN__POS 14

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR1_CFG   
 *
 * @BRIEF        Filter configuration for Performance Counter 1. Refer to 
 *               table for details. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_CFG           BITFIELD(3, 0)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_CFG__POS      0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_MTAGID2   
 *
 * @BRIEF        MTagID for Performance Counter 2 register. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID2             BITFIELD(31, 24)
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID2__POS        24

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_REGION_SEL2   
 *
 * @BRIEF        MAddrSpace for Performance Counter 2 register. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL2         BITFIELD(17, 16)
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL2__POS    16

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_MTAGID1   
 *
 * @BRIEF        MTagID for Performance Counter 1 register. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID1             BITFIELD(15, 8)
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID1__POS        8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_REGION_SEL1   
 *
 * @BRIEF        MAddrSpace for Performance Counter 1 register. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL1         BITFIELD(1, 0)
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL1__POS    0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_TIM__REG_TOTAL_TIME   
 *
 * @BRIEF        32-bit counter that continuously counts number for m_clk 
 *               cycles elapsed after EMIF is brought out of reset. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_TIM__REG_TOTAL_TIME          BITFIELD(31, 0)
#define EMIF4D__PERF_CNT_TIM__REG_TOTAL_TIME__POS     0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQ_EOI__REG_EOI   
 *
 * @BRIEF        Software End Of Interrupt (EOI) control. Write 0 for system 
 *               OCP interrupt and write 1 for low-latency OCP interrupt. 
 *               This field always reads 0 (no EOI memory). - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQ_EOI__REG_EOI                      BITFIELD(0, 0)
#define EMIF4D__IRQ_EOI__REG_EOI__POS                 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_SYS__REG_RAW_SYS   
 *
 * @BRIEF        Raw status of system OCP interrupt. Write 1 to set the (raw) 
 *               status - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_RAW_SYS        BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_RAW_SYS__POS   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_LL__REG_RAW_LL   
 *
 * @BRIEF        Raw status of low-latency OCP interrupt. Write 1 to set the 
 *               (raw) status - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_LL__REG_RAW_LL          BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_RAW_LL__REG_RAW_LL__POS     0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_SYS__REG_ENABLED_SYS   
 *
 * @BRIEF        Enabled status of system OCP interrupt. Write 1 to clear the 
 *               status after interrupt has been serviced (raw status gets 
 *               cleared - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_SYS__REG_ENABLED_SYS        BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_SYS__REG_ENABLED_SYS__POS   0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_LL__REG_ENABLED_LL   
 *
 * @BRIEF        Enabled status of low-latency OCP interrupt. Write 1 to 
 *               clear the status after interrupt has been serviced (raw 
 *               status gets cleared - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_LL__REG_ENABLED_LL          BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_LL__REG_ENABLED_LL__POS     0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_SYS__REG_EN_SYS   
 *
 * @BRIEF        Enable set for system OCP interrupt. Writing a 1 will enable 
 *               the interrupt - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_SYS         BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_SYS__POS    0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_LL__REG_EN_LL   
 *
 * @BRIEF        Enable set for low-latency OCP interrupt. Writing a 1 will 
 *               enable the interrupt - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_LL           BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_LL__POS      0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_SYS__REG_EN_SYS   
 *
 * @BRIEF        Enable clear for system OCP interrupt. Writing a 1 will 
 *               disable the interrupt - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_SYS         BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_SYS__POS    0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_LL__REG_EN_LL   
 *
 * @BRIEF        Enable clear for low-latency OCP interrupt. Writing a 1 will 
 *               disable the interrupt - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_LL           BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_LL__POS      0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MADDRSPACE   
 *
 * @BRIEF        Address space of the first errored transaction. Writing a 1 
 *               to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MADDRSPACE           BITFIELD(15, 14)
#define EMIF4D__OCP_ERR_LOG__REG_MADDRSPACE__POS      14

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MBURSTSEQ   
 *
 * @BRIEF        Addressing mode of the first errored transaction. Writing a 
 *               1 to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MBURSTSEQ            BITFIELD(13, 11)
#define EMIF4D__OCP_ERR_LOG__REG_MBURSTSEQ__POS       11

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MCMD   
 *
 * @BRIEF        Command type of the first errored transaction. Writing a 1 
 *               to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MCMD                 BITFIELD(10, 8)
#define EMIF4D__OCP_ERR_LOG__REG_MCMD__POS            8

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MCONNID   
 *
 * @BRIEF        Connection ID of the first errored transaction. Writing a 1 
 *               to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MCONNID              BITFIELD(7, 0)
#define EMIF4D__OCP_ERR_LOG__REG_MCONNID__POS         0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1__REG_DDR_PHY_CTRL_1   
 *
 * @BRIEF        This register is used to control the DDR PHY. The bit field 
 *               definitions are DDR PHY specific and should be described in 
 *               the DDR PHY specification. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1__REG_DDR_PHY_CTRL_1    BITFIELD(31, 3)
#define EMIF4D__DDR_PHY_CTRL_1__REG_DDR_PHY_CTRL_1__POS 3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1__REG_READ_LATENCY   
 *
 * @BRIEF        This field defines the read latency for the read data from 
 *               SDRAM in number of m_clk cycles. This field is used by the 
 *               EMIF as well as the PHY. The EMIF will expect the first read 
 *               data to arrive (read_latency + 3) m_clk cycles from the read 
 *               command. Refer to the PHY specification for information on 
 *               programming this field. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1__REG_READ_LATENCY      BITFIELD(2, 0)
#define EMIF4D__DDR_PHY_CTRL_1__REG_READ_LATENCY__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_DDR_PHY_CTRL_1_SHDW   
 *
 * @BRIEF        This register is used to control the DDR PHY. The bit field 
 *               definitions are DDR PHY specific and should be described in 
 *               the DDR PHY specification. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_DDR_PHY_CTRL_1_SHDW BITFIELD(31, 3)
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_DDR_PHY_CTRL_1_SHDW__POS 3

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_READ_LATENCY_SHDW   
 *
 * @BRIEF        Shadow field for read_latency. This field is loaded into 
 *               refresh_rate field in DDR PHY Control 1 register when 
 *               SIdleAck is asserted. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_READ_LATENCY_SHDW BITFIELD(2, 0)
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_READ_LATENCY_SHDW__POS 0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_2__REG_DDR_PHY_CTRL_2   
 *
 * @BRIEF        This register is used to control the DDR PHY. The bit field 
 *               definitions are DDR PHY specific and should be described in 
 *               the DDR PHY specification. - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_2__REG_DDR_PHY_CTRL_2    BITFIELD(31, 0)
#define EMIF4D__DDR_PHY_CTRL_2__REG_DDR_PHY_CTRL_2__POS 0


/*
 * List of register bitfields values for component EMIF4D
 *
 */


#ifdef __cplusplus
}
#endif
#endif  /* __EMIF4D_H */
