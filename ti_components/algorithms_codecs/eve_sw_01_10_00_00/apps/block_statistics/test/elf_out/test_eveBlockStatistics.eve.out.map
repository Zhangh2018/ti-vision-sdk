******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Wed Oct 07 00:47:38 2015

OUTPUT FILE NAME:   <.\elf_out\test_eveBlockStatistics.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  0000f148  00010eb8  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00007baf  00000451  RWIX
  WMEM                  40040000   00007fe0  00007000  00000fe0  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  0100335c  00ffcca4  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006eac     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    0000021c                       : fwrite.obj (.text:fwrite)
                  80003738    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003940    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003b40    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003d24    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003ef0    000001cc                       : strtol.obj (.text:strtol)
                  800040bc    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004284    000001c8                       : fgets.obj (.text:_dofgets)
                  8000444c    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004604    000001a0                       : strtoul.obj (.text:strtoul)
                  800047a4    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004930    00000170                       : fputs.obj (.text:fputs)
                  80004aa0    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004c08    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d68    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ec4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  8000501c    00000144                       : fread.obj (.text:fread)
                  80005160    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  800052a0    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053e0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  8000551c    0000012c                       : fopen.obj (.text:_openfile)
                  80005648    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005760    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005874    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005968    000000ec                       : lowlev.obj (.text:open)
                  80005a54    000000e8                       : fputc.obj (.text:fputc)
                  80005b3c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005c18    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005ce4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005da8    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e64    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f20    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fd4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006088    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006134    000000a8                       : fopen.obj (.text:_search_fp)
                  800061dc    000000a8                       : memset.obj (.text:memset)
                  80006284    000000a0                       : lowlev.obj (.text:getdevice)
                  80006324    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063c0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000645c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064f4    00000098                       : vcop_memory.obj (.text:vcop_free)
                  8000658c    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006620    00000094                       : memory.obj (.text:mem_free)
                  800066b4    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006744    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800067d4    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006864    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800068f4    00000090                       : fseek.obj (.text:fseek)
                  80006984    00000090                       : ftell.obj (.text:ftell)
                  80006a14    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006aa0    00000088                       : lowlev.obj (.text:close)
                  80006b28    00000084                       : _printfi.obj (.text:_ecpy)
                  80006bac    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006c2c    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006cac    00000080                       : printf.obj (.text:printf)
                  80006d2c    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006da8    0000007c                       : fclose.obj (.text:_closefile)
                  80006e24    0000007c                       : atoi.obj (.text:atoi)
                  80006ea0    0000007c                       : fflush.obj (.text:fflush)
                  80006f1c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006f94    00000078                       : _printfi.obj (.text:_div)
                  8000700c    00000078                       : _printfi.obj (.text:_pconv_f)
                  80007084    00000078                       : memory.obj (.text:minit)
                  800070fc    00000074                       : trgdrv.obj (.text:HOSTclose)
                  80007170    00000074                       : fprintf.obj (.text:fprintf)
                  800071e4    00000070                       : autoinit.obj (.text:_auto_init)
                  80007254    00000070                       : vfprintf.obj (.text:vfprintf)
                  800072c4    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007330    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80007398    00000068                       : boot.obj (.text:_c_int00)
                  80007400    00000068                       : lowlev.obj (.text:lseek)
                  80007468    00000068                       : lowlev.obj (.text:read)
                  800074d0    00000068                       : lowlev.obj (.text:write)
                  80007538    00000064                       : imath64.obj (.text:_subcull)
                  8000759c    00000064                       : ltoa.obj (.text:ltoa)
                  80007600    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  80007660    00000060                       : fflush.obj (.text:_doflush)
                  800076c0    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  8000771c    0000005c                       : lowlev.obj (.text:tabinit)
                  80007778    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  800077d4    00000054                       : _printfi.obj (.text:_fcpy)
                  80007828    00000054                       : renormd.obj (.text:_renormd)
                  8000787c    00000054                       : exit.obj (.text:exit)
                  800078d0    00000050                       : fopen.obj (.text:_cleanup)
                  80007920    00000050                       : lowlev.obj (.text:finddevice)
                  80007970    00000050                       : rand.obj (.text:rand)
                  800079c0    0000004c                       : fltud.obj (.text:__arp32abi_fltud)
                  80007a0c    0000004c                       : memory.obj (.text:malloc)
                  80007a58    00000048                       : trgmsg.obj (.text:readmsg)
                  80007aa0    00000048                       : lowlev.obj (.text:unlink)
                  80007ae8    00000048                       : trgmsg.obj (.text:writemsg)
                  80007b30    00000040                       : args_main.obj (.text:_args_main)
                  80007b70    00000040                       : sprintf.obj (.text:sprintf)
                  80007bb0    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007bec    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c28    0000003c                       : fopen.obj (.text:fopen)
                  80007c64    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007c9c    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007cd4    00000038                       : sscanf.obj (.text:sscanf)
                  80007d0c    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007d40    00000030                       : fclose.obj (.text:fclose)
                  80007d70    00000030                       : rand.obj (.text:srand)
                  80007da0    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007dcc    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007df4    00000028                       : mult.obj (.text:_mpyl)
                  80007e1c    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007e40    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007e64    00000020                       : memccpy.obj (.text:memccpy)
                  80007e84    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007ea0    0000001c                       : sprintf.obj (.text:_outs)
                  80007ebc    00000018                       : fgets.obj (.text:fgets)
                  80007ed4    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007ee8    00000014                       : memory.obj (.text:free)
                  80007efc    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f0c    00000010                       : sscanf.obj (.text:_inpchar)
                  80007f1c    00000010                       : sprintf.obj (.text:_outc)
                  80007f2c    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  80007f3c    0000000c                       : fprintf.obj (.text:_outc)
                  80007f48    0000000c                       : printf.obj (.text:_outc)
                  80007f54    0000000c                       : vfprintf.obj (.text:_outc)
                  80007f60    0000000c                       : fprintf.obj (.text:_outs)
                  80007f6c    0000000c                       : printf.obj (.text:_outs)
                  80007f78    0000000c                       : vfprintf.obj (.text:_outs)
                  80007f84    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007f90    0000000c                       : remove.obj (.text:remove)
                  80007f9c    00000008                       : exit.obj (.text:abort)
                  80007fa4    00000004                       : _lock.obj (.text:_nop)
                  80007fa8    00000004                       : pre_init.obj (.text:_system_pre_init)

.bam_text 
*          0    80007fac    000034b0     
                  80007fac    00000810     libevealgframework.eve.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  800087bc    00000788                                : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  80008f44    00000544                                : bam_execute.obj (.text:BAM_execute)
                  80009488    0000047c                                : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  80009904    00000414                                : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  80009d18    00000378                                : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000a090    000001cc                                : bam_construct.obj (.text:BAM_createGraph)
                  8000a25c    00000158                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_getMemRecFunc)
                  8000a3b4    00000158                                : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000a50c    00000150                                : bam_memory.obj (.text:bam_mem_alloc)
                  8000a65c    00000140                                : bam_memory.obj (.text:bam_getMemPacket)
                  8000a79c    00000130                                : bam_execute.obj (.text:BAM_process)
                  8000a8cc    00000120                                : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000a9ec    0000011c                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_setMemRecFunc)
                  8000ab08    0000010c                                : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000ac14    000000e8                                : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000acfc    000000e8                                : bam_memory.obj (.text:bam_mem_free)
                  8000ade4    000000ac                                : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000ae90    000000a8                                : bam_memory.obj (.text:bam_minit)
                  8000af38    00000098                                : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000afd0    00000090                                : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000b060    0000008c                                : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000b0ec    00000074                                : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000b160    00000070                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel)
                  8000b1d0    00000070                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel)
                  8000b240    00000068                                : bam_memory.obj (.text:bam_mcheck)
                  8000b2a8    0000004c                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  8000b2f4    0000004c                                : bam_construct.obj (.text:BAM_initKernelDB)
                  8000b340    00000044                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitOutChannel)
                  8000b384    0000003c                                : bam_execute.obj (.text:BAM_controlNode)
                  8000b3c0    00000038                                : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000b3f8    00000024                                : alg_osal.obj (.text:PRINTF)
                  8000b41c    00000024                                : alg_osal.obj (.text:TEST_PRINTF)
                  8000b440    00000018                                : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000b458    00000004                                : bam_execute.obj (.text:BAM_dummyKernelFunc)

.text      0    8000b45c    00002f18     
                  8000b45c    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  8000c1e8    00000d18     block_statistics_tb.obj (.text:blockStatisticsTest)
                  8000cf00    000003e8     configparser.obj (.text:ParseContent)
                  8000d2e8    000003a0     block_statistics_tb.obj (.text:main)
                  8000d688    00000308     configparser.obj (.text:printparams)
                  8000d990    00000234     eve_profile.obj (.text:profiler_end)
                  8000dbc4    00000170     block_statistics_cn.obj (.text:blockStat_cn)
                  8000dd34    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000de88    000000e8     block_statistics_tb.obj (.text:blockStat_compare)
                  8000df70    000000d8     configparser.obj (.text:readparamfile)
                  8000e048    000000c4     eve_profile.obj (.text:profiler_init)
                  8000e10c    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000e17c    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000e1e8    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000e240    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000e290    00000048     eve_profile.obj (.text:profiler_start)
                  8000e2d8    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000e310    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000e340    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000e358    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000e368    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)

.starterware_text 
*          0    8000e374    00001220     
                  8000e374    00000560     libevestarterware_eve.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  8000e8d4    00000288                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  8000eb5c    000001c4                               : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8000ed20    00000178                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  8000ee98    000000e8                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8000ef80    000000dc                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerOutChannel)
                  8000f05c    000000cc                               : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  8000f128    000000c0                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  8000f1e8    00000090                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  8000f278    00000074                               : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8000f2ec    0000006c                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitOutChannel)
                  8000f358    00000050                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8000f3a8    00000048                               : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  8000f3f0    00000040                               : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8000f430    00000040                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8000f470    0000002c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8000f49c    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  8000f4c8    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  8000f4f4    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  8000f520    00000020                               : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8000f540    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  8000f558    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  8000f570    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)
                  8000f584    0000000c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  8000f590    00000004                               : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.algo_text 
*          0    8000f594    00000cb4     
                  8000f594    00000274     libevekernels.eve.lib : vcop_block_statistics_kernel.obj (.text:vcop_block_statistics_init)
                  8000f808    000000dc                           : vcop_block_statistics_kernel.obj (.text:vcop_block_statistics_vloops)
                  8000f8e4    0000009c                           : bam_block_statistics_exec_funcs.obj (.text:Bam_Block_Statistics_initFrame)
                  8000f980    0000007c                           : bam_block_statistics_helper_funcs.obj (.text:BAM_Block_Statistics_getMemRecFunc)
                  8000f9fc    00000008                           : vcop_block_statistics_kernel.obj (.text:vcop_block_statistics_param_count)
                  8000fa04    00000214     libeveBlockStatistics.eve.lib : block_statistics_graph.obj (.text:BLOCK_STATS_TI_initKernelsArgs)
                  8000fc18    00000190                                   : block_statistics_graph.obj (.text:BLOCK_STATS_TI_graphCreate)
                  8000fda8    00000120                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_process)
                  8000fec8    000000c8                                   : block_statistics_graph.obj (.text:BLOCK_STATS_TI_dmaControl)
                  8000ff90    000000bc                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_alloc)
                  8001004c    00000094                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_init)
                  800100e0    0000005c                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_activate)
                  8001013c    0000005c                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_deactivate)
                  80010198    00000054                                   : block_statistics_graph.obj (.text:assignDMAautoIncrementParams)
                  800101ec    00000020                                   : block_statistics_graph.obj (.text:BLOCK_STATS_TI_execute)
                  8001020c    0000001c                                   : block_statistics_graph.obj (.text:BLOCK_STATS_TI_getGraphMemReq)
                  80010228    00000018                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_free)
                  80010240    00000004                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_control)
                  80010244    00000004                                   : block_statistics_alg.obj (.text:BLOCK_STATS_TI_numAlloc)

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     block_statistics_tb.obj (.dmemSect)

.stack     1    40024000    00003000     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00002ffc     --HOLE--

.bam_neardata 
*          1    40027000    000003dd     
                  40027000    00000018     libevealgframework.eve.lib : bam_memory.obj (.bss) [fill = 0]
                  40027018    00000005                                : bam_memory.obj (.data)
                  4002701d    00000003     --HOLE-- [fill = 0]
                  40027020    00000008                                : bam_construct_int.obj (.rodata)
                  40027028    00000004                                : bam_execute.obj (.rodata)
                  4002702c    00000004                                : bam_memory.obj (.rodata)
                  40027030    000001f8                                : bam_dma_autoincrement_node.obj (.const:.string)
                  40027228    00000121                                : bam_construct_int.obj (.const:.string)
                  40027349    00000090                                : bam_execute.obj (.const:.string)
                  400273d9    00000001     --HOLE-- [fill = 0]
                  400273da    00000003                                : bam_construct_int.obj (.const:.string:$P$T0$1)

.algo_neardata 
*          1    400273e0    0000028e     
                  400273e0    00000054     libeveBlockStatistics.eve.lib : block_statistics_alg.obj (.const)
                  40027434    0000005a                                   : block_statistics_alg.obj (.const:.string)
                  4002748e    00000002     --HOLE-- [fill = 0]
                  40027490    00000030                                   : block_statistics_graph.obj (.const:$P$T0$1)
                  400274c0    00000018                                   : block_statistics_graph.obj (.const:$P$T1$2)
                  400274d8    00000196                                   : block_statistics_graph.obj (.const:.string)

.rts_neardata 
*          1    40027670    00000268     
                  40027670    00000003     rtsarp32_v200.lib : assert.obj (.const:.string)
                  40027673    00000001     --HOLE-- [fill = 0]
                  40027674    00000101                       : ctype.obj (.const:.string:_ctypes_)
                  40027775    00000001     --HOLE-- [fill = 0]
                  40027776    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  4002777d    00000001     --HOLE-- [fill = 0]
                  4002777e    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  40027784    00000023                       : _printfi.obj (.const:.string)
                  400277a7    00000001     --HOLE-- [fill = 0]
                  400277a8    00000050                       : strtod.obj (.const:digits)
                  400277f8    00000048                       : strtod.obj (.const:powerof10)
                  40027840    00000050                       : strtold.obj (.const:digits)
                  40027890    00000048                       : strtold.obj (.const:powerof10)

.cio       1    400278d8    00000120     UNINITIALIZED
                  400278d8    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.starterware_neardata 
*          1    400279f8    00000118     
                  400279f8    000000a8     libevestarterware_eve.lib : dma_resource_allocator.obj (.bss) [fill = 0]
                  40027aa0    00000060                               : edma_utils_state.obj (.bss) [fill = 0]
                  40027b00    00000004                               : dma_resource_allocator.obj (.data)
                  40027b04    00000004                               : edma_utils.obj (.data)
                  40027b08    00000004                               : edma_utils_autoincrement.obj (.rodata)
                  40027b0c    00000004                               : edma_utils_memcpy.obj (.rodata)

.bss       1    40027b10    00000048     UNINITIALIZED
                  40027b10    00000048     eve_profile.obj (.bss)

.data      1    40027b58    00000024     
                  40027b58    00000020     boot_arp32.obj (.data)
                  40027b78    00000004     eve_profile.obj (.data)

.rodata    1    40027b7c    00000038     
                  40027b7c    00000028     ti_stats_collector.obj (.rodata)
                  40027ba4    00000008     block_statistics_tb.obj (.rodata)
                  40027bac    00000008     eve_profile.obj (.rodata)

.wmem      1    40040000    00007000     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00006ff8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    01000000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    00fffff8     --HOLE--

.fardata   1    81030000    00001800     
                  81030000    00001800     block_statistics_config.obj (.fardata:gsTokenMap_block_statistics)

.const     1    81031800    00000ebc     
                  81031800    00000516     block_statistics_tb.obj (.const:.string)
                  81031d16    000003d2     eve_profile.obj (.const:.string)
                  810320e8    00000252     configparser.obj (.const:.string)
                  8103233a    00000002     --HOLE-- [fill = 0]
                  8103233c    00000128     ti_stats_collector.obj (.const:.switchtab)
                  81032464    000000fd     report_utils.obj (.const:.string)
                  81032561    00000085     block_statistics_config.obj (.const:.string)
                  810325e6    00000053     ti_mem_manager.obj (.const:.string)
                  81032639    00000043     ti_stats_collector.obj (.const:.string)
                  8103267c    00000024     block_statistics_cn.obj (.const:.string)
                  810326a0    00000014     block_statistics_tb.obj (.const:.string:__FUNCTION__$1)
                  810326b4    00000008     configparser.obj (.const:.string:$P$T0$1)

.far       1    810326bc    000005b4     UNINITIALIZED
                  810326bc    0000055c     block_statistics_config.obj (.far)
                  81032c18    00000028     ti_stats_collector.obj (.far)
                  81032c40    00000020     eve_profile.obj (.far)
                  81032c60    00000010     block_statistics_tb.obj (.far)

.rts_fardata 
*          1    81032c70    00000300     
                  81032c70    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  81032d10    0000000c                       : memory.obj (.far) [fill = 0]
                  81032d1c    00000008                       : boot.obj (.far) [fill = 0]
                  81032d24    00000008                       : trgdrv.obj (.far) [fill = 0]
                  81032d2c    000000f0                       : defs.obj (.fardata:_ftable)
                  81032e1c    00000078                       : lowlev.obj (.fardata:_device)
                  81032e94    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  81032ef8    00000050                       : lowlev.obj (.fardata:_stream)
                  81032f48    00000008                       : _lock.obj (.fardata)
                  81032f50    00000005                       : vcop_memory.obj (.fardata)
                  81032f55    00000003     --HOLE-- [fill = 0]
                  81032f58    00000004                       : defs.obj (.fardata)
                  81032f5c    00000004                       : errno.obj (.fardata)
                  81032f60    00000004                       : fopen.obj (.fardata)
                  81032f64    00000004                       : lowlev.obj (.fardata)
                  81032f68    00000004                       : memory.obj (.fardata)
                  81032f6c    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    81032f70    000001f4     
                  81032f70    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.bam_fardata 
*          1    81033164    00000158     
                  81033164    00000078     libevealgframework.eve.lib : bam_memory.obj (.far) [fill = 0]
                  810331dc    0000000c                                : bam_execute.obj (.far) [fill = 0]
                  810331e8    00000008                                : bam_construct.obj (.far) [fill = 0]
                  810331f0    00000068                                : bam_dma_autoincrement_node.obj (.fardata)
                  81033258    00000064                                : bam_memory.obj (.fardata:vcop_mem)

.algo_fardata 
*          1    810332bc    000000a0     
                  810332bc    0000001c     libevekernels.eve.lib : bam_block_statistics_helper_funcs.obj (.fardata)
                  810332d8    00000018                           : bam_block_statistics_exec_funcs.obj (.fardata)
                  810332f0    00000030     libeveBlockStatistics.eve.lib : block_statistics_graph.obj (.fardata:bamBlockStatisticsKernelExecFuncDB)
                  81033320    00000030                                   : block_statistics_graph.obj (.fardata:bamBlockStatisticsKernelHostDB)
                  81033350    0000000c                                   : block_statistics_graph.obj (.fardata)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    
    15 PHA_PAGE 18  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000af38   BAM_ARP32_computeWrapper
8000b2a8   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000b340   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000a25c   BAM_DMA_AUTOINCREMENT_getMemRecFunc
8000a9ec   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000b160   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000b1d0   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000b384   BAM_controlNode
8000ade4   BAM_copyIntMemRec2ExtMem
8000b060   BAM_copyNodeList
8000a090   BAM_createGraph
8000b458   BAM_dummyKernelFunc
8000ac14   BAM_fillKernelInfo
8000ab08   BAM_getGraphMemSize
8000b3c0   BAM_getMemPacket
80007fac   BAM_initGraph
8000b0ec   BAM_initGraphInstance
8000b2f4   BAM_initKernelDB
80009904   BAM_optimizeGraph
8000a79c   BAM_process
8000a3b4   BAM_updateNodes
400273e0   BLOCK_STATISTICS_TI_VISION_FXNS
4002740c   BLOCK_STATS_TI_IRES
800100e0   BLOCK_STATS_TI_activate
8000ff90   BLOCK_STATS_TI_alloc
80010240   BLOCK_STATS_TI_control
8001013c   BLOCK_STATS_TI_deactivate
8000fec8   BLOCK_STATS_TI_dmaControl
800101ec   BLOCK_STATS_TI_execute
80010228   BLOCK_STATS_TI_free
8001020c   BLOCK_STATS_TI_getGraphMemReq
8000fc18   BLOCK_STATS_TI_graphCreate
8001004c   BLOCK_STATS_TI_init
80010244   BLOCK_STATS_TI_numAlloc
8000fda8   BLOCK_STATS_TI_process
80007f9c   C$$EXIT
80007b28   C$$IO$$
81032f70   CRED_instVirtAddr
8000eb5c   DMA_funcs_hardwareRegSetup
8000f278   DMA_funcs_writeTransferParams
8000ed20   DMA_resourceAllocator_allocateResources
8000f470   DMA_resourceAllocator_initResources
8000f584   DMA_resourceAllocator_setEdma3RmHandle
8000f520   DMA_utils_resetStateStruct
8000f05c   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
8000f590   EDMA3LLD_SUPPORT_requestResources
8000e374   EDMA_UTILS_autoIncrement_configure
8000ee98   EDMA_UTILS_autoIncrement_init
8000f128   EDMA_UTILS_autoIncrement_triggerInChannel
8000ef80   EDMA_UTILS_autoIncrement_triggerOutChannel
8000e8d4   EDMA_UTILS_autoIncrement_update
8000f358   EDMA_UTILS_autoIncrement_waitInChannel
8000f2ec   EDMA_UTILS_autoIncrement_waitOutChannel
8000f3f0   EDMA_UTILS_globalReset
8000f1e8   EDMA_UTILS_memcpy2D
8000f3a8   EVE_SCTM_CounterConfig
8000f540   EVE_SCTM_CounterRead
8000f49c   EVE_SCTM_CounterTimerEnable
8000f570   EVE_SCTM_Enable
8000f4c8   EVE_SCTM_InpEvtSelect
8000f558   EVE_SCTM_OverflowCheck
8000f4f4   EVE_SCTM_SamplingSelect
800070fc   HOSTclose
80005f20   HOSTlseek
8000645c   HOSTopen
800066b4   HOSTread
80006088   HOSTrename
80006f1c   HOSTunlink
80006a14   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000b3f8   PRINTF
8000b41c   TEST_PRINTF
8000e368   TI_CreateMemoryHandle
8000e1e8   TI_GetMemoryChunk
00007000   WMEM_SIZE
400278d8   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40027000   __TI_STACK_END
00003000   __TI_STACK_SIZE
40027000   __TI_STATIC_BASE
01000000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007c64   __arp32abi_abort_msg
8000444c   __arp32abi_addd
80007e84   __arp32abi_addll
80005c18   __arp32abi_cmpd
80007e1c   __arp32abi_cmplls
80007e40   __arp32abi_cmpllu
80006744   __arp32abi_cvtdf
80006bac   __arp32abi_cvtfd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80006d2c   __arp32abi_fixdi
80007330   __arp32abi_fltid
800079c0   __arp32abi_fltud
800076c0   __arp32abi_isinf
80007600   __arp32abi_llshl
80007d0c   __arp32abi_llshru
800040bc   __arp32abi_mpyd
80004ec4   __arp32abi_mpyll
80007dcc   __arp32abi_negd
80007efc   __arp32abi_negll
80007c9c   __arp32abi_remull
80007bec   __arp32abi_strasgi
80007da0   __arp32abi_subd
80007ed4   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
000000a0   _algo_fardata_size
0000028e   _algo_neardata_size
00000cb4   _algo_text_size
80007b30   _args_main
800071e4   _auto_init
00000158   _bam_fardata_size
000003dd   _bam_neardata_size
000034b0   _bam_text_size
80006324   _buff_read
80007398   _c_int00
800078d0   _cleanup
81032d1c   _cleanup_ptr
80006da8   _closefile
40027674   _ctypes_
80007660   _doflush
81032d20   _dtors_ptr
80000120   _dummy_handler
80004c08   _frcaddd
80003940   _frcdivd
80005160   _frcmpyd
81032f58   _ft_end
81032d2c   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
81032f48   _lock
80007df4   _mpyl
40027b58   _my_stack
80007fa4   _nop
800030d0   _printfi
800072c4   _rd_ok
80007828   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000268   _rts_neardata_size
00006eac   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
00000118   _starterware_neardata_size
00001220   _starterware_text_size
80030000   _sys_memory
80007fa8   _system_pre_init
00002f18   _text_size
81032c70   _tmpnams
81032f4c   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006864   _wrt_ok
80007f9c   abort
80006e24   atoi
8000a65c   bam_getMemPacket
8000b240   bam_mcheck
8000a50c   bam_mem_alloc
8000acfc   bam_mem_free
8000ae90   bam_minit
8000afd0   bam_releaseMemPacket
4002700c   bam_stat_num_packets
ffffffff   binit
8000dbc4   blockStat_cn
8000de88   blockStat_compare
8000c1e8   blockStatisticsTest
80006aa0   close
81032f5c   errno
8000787c   exit
80007d40   fclose
80006ea0   fflush
80007ebc   fgets
80007c28   fopen
80007170   fprintf
80005a54   fputc
80004930   fputs
8000501c   fread
80007ee8   free
800068f4   fseek
80006984   ftell
8000351c   fwrite
810332d8   gBAM_TI_blockStatisticsExecFunc
810332d0   gBAM_TI_blockStatisticsHelperFunc
810332bc   gBAM_TI_blockStatisticsKernel
810331f0   gBAM_TI_dmaAutoIncrementReadKernel
81033204   gBAM_TI_dmaAutoIncrementWriteKernel
81033228   gBAM_TI_dmaReadAutoIncrementKernelExecFunc
81033218   gBAM_TI_dmaReadAutoIncrementKernelHelperFunc
81033240   gBAM_TI_dmaWriteAutoIncrementKernelExecFunc
81033220   gBAM_TI_dmaWriteAutoIncrementKernelHelperFunc
81033350   gBlockStatistics_TI_BAM_kernelDBdef
810326bc   gConfig_block_statistics
40027aa0   gDmaUtilsStateStruct
40027b04   gEdmaCc
81032c50   gTest_TI_profileSctm
40027b3c   gTest_TI_profileTsc
81030000   gsTokenMap_block_statistics
80007400   lseek
8000759c   ltoa
8000d2e8   main
80007a0c   malloc
81032c60   memObj_DMEM
80005ce4   mem_alloc
80006620   mem_free
80007e64   memccpy
80005b3c   memcpy
800061dc   memset
80007084   minit
80005968   open
80006cac   printf
8000d688   printparams
8000d990   profiler_end
8000e358   profiler_end_print
8000e340   profiler_getSP
8000e17c   profiler_getStackDepth
8000e048   profiler_init
8000e310   profiler_initStack
8000e2d8   profiler_printStatus
8000e290   profiler_start
8000e240   profiler_testCaseInfo
80007970   rand
80007468   read
80007a58   readmsg
8000df70   readparamfile
80007f90   remove
8000dd34   report_printAppletInfo
80005648   setvbuf
80007b70   sprintf
80007d70   srand
80007cd4   sscanf
8000b45c   statCollectorControl
8000e10c   statCollectorInit
800015f8   strtod
80003ef0   strtol
80001998   strtold
80001d34   strtoll
80004604   strtoul
80002e84   strtoull
40027b18   test_module_cyles
80007aa0   unlink
8000f594   vcop_block_statistics_init
8000f9fc   vcop_block_statistics_param_count
8000f808   vcop_block_statistics_vloops
800064f4   vcop_free
80007f2c   vcop_malloc
80004aa0   vcop_memalign
80007778   vcop_minit
80007254   vfprintf
800074d0   write
80007ae8   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000001   __TI_args_main
00000001   __TI_exit
000000a0   _algo_fardata_size
00000118   _starterware_neardata_size
00000158   _bam_fardata_size
000001f4   _starterware_fardata_size
00000268   _rts_neardata_size
0000028e   _algo_neardata_size
00000300   _rts_fardata_size
000003dd   _bam_neardata_size
00000cb4   _algo_text_size
00001220   _starterware_text_size
00002f18   _text_size
00003000   __TI_STACK_SIZE
000034b0   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00006eac   _rts_text_size
00007000   WMEM_SIZE
01000000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40027000   __TI_STACK_END
40027000   __TI_STATIC_BASE
4002700c   bam_stat_num_packets
400273e0   BLOCK_STATISTICS_TI_VISION_FXNS
4002740c   BLOCK_STATS_TI_IRES
40027674   _ctypes_
400278d8   __CIOBUF_
40027aa0   gDmaUtilsStateStruct
40027b04   gEdmaCc
40027b18   test_module_cyles
40027b3c   gTest_TI_profileTsc
40027b58   _my_stack
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
8000351c   fwrite
80003940   _frcdivd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80003ef0   strtol
800040bc   __arp32abi_mpyd
8000444c   __arp32abi_addd
80004604   strtoul
80004930   fputs
80004aa0   vcop_memalign
80004c08   _frcaddd
80004ec4   __arp32abi_mpyll
8000501c   fread
80005160   _frcmpyd
80005648   setvbuf
80005968   open
80005a54   fputc
80005b3c   memcpy
80005c18   __arp32abi_cmpd
80005ce4   mem_alloc
80005f20   HOSTlseek
80006088   HOSTrename
800061dc   memset
80006324   _buff_read
8000645c   HOSTopen
800064f4   vcop_free
80006620   mem_free
800066b4   HOSTread
80006744   __arp32abi_cvtdf
80006864   _wrt_ok
800068f4   fseek
80006984   ftell
80006a14   HOSTwrite
80006aa0   close
80006bac   __arp32abi_cvtfd
80006cac   printf
80006d2c   __arp32abi_fixdi
80006da8   _closefile
80006e24   atoi
80006ea0   fflush
80006f1c   HOSTunlink
80007084   minit
800070fc   HOSTclose
80007170   fprintf
800071e4   _auto_init
80007254   vfprintf
800072c4   _rd_ok
80007330   __arp32abi_fltid
80007398   _c_int00
80007400   lseek
80007468   read
800074d0   write
8000759c   ltoa
80007600   __arp32abi_llshl
80007660   _doflush
800076c0   __arp32abi_isinf
80007778   vcop_minit
80007828   _renormd
8000787c   exit
800078d0   _cleanup
80007970   rand
800079c0   __arp32abi_fltud
80007a0c   malloc
80007a58   readmsg
80007aa0   unlink
80007ae8   writemsg
80007b28   C$$IO$$
80007b30   _args_main
80007b70   sprintf
80007bec   __arp32abi_strasgi
80007c28   fopen
80007c64   __arp32abi_abort_msg
80007c9c   __arp32abi_remull
80007cd4   sscanf
80007d0c   __arp32abi_llshru
80007d40   fclose
80007d70   srand
80007da0   __arp32abi_subd
80007dcc   __arp32abi_negd
80007df4   _mpyl
80007e1c   __arp32abi_cmplls
80007e40   __arp32abi_cmpllu
80007e64   memccpy
80007e84   __arp32abi_addll
80007ebc   fgets
80007ed4   __arp32abi_subll
80007ee8   free
80007efc   __arp32abi_negll
80007f2c   vcop_malloc
80007f90   remove
80007f9c   C$$EXIT
80007f9c   abort
80007fa4   _nop
80007fa8   _system_pre_init
80007fac   BAM_initGraph
80009904   BAM_optimizeGraph
8000a090   BAM_createGraph
8000a25c   BAM_DMA_AUTOINCREMENT_getMemRecFunc
8000a3b4   BAM_updateNodes
8000a50c   bam_mem_alloc
8000a65c   bam_getMemPacket
8000a79c   BAM_process
8000a9ec   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000ab08   BAM_getGraphMemSize
8000ac14   BAM_fillKernelInfo
8000acfc   bam_mem_free
8000ade4   BAM_copyIntMemRec2ExtMem
8000ae90   bam_minit
8000af38   BAM_ARP32_computeWrapper
8000afd0   bam_releaseMemPacket
8000b060   BAM_copyNodeList
8000b0ec   BAM_initGraphInstance
8000b160   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000b1d0   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000b240   bam_mcheck
8000b2a8   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000b2f4   BAM_initKernelDB
8000b340   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000b384   BAM_controlNode
8000b3c0   BAM_getMemPacket
8000b3f8   PRINTF
8000b41c   TEST_PRINTF
8000b458   BAM_dummyKernelFunc
8000b45c   statCollectorControl
8000c1e8   blockStatisticsTest
8000d2e8   main
8000d688   printparams
8000d990   profiler_end
8000dbc4   blockStat_cn
8000dd34   report_printAppletInfo
8000de88   blockStat_compare
8000df70   readparamfile
8000e048   profiler_init
8000e10c   statCollectorInit
8000e17c   profiler_getStackDepth
8000e1e8   TI_GetMemoryChunk
8000e240   profiler_testCaseInfo
8000e290   profiler_start
8000e2d8   profiler_printStatus
8000e310   profiler_initStack
8000e340   profiler_getSP
8000e358   profiler_end_print
8000e368   TI_CreateMemoryHandle
8000e374   EDMA_UTILS_autoIncrement_configure
8000e8d4   EDMA_UTILS_autoIncrement_update
8000eb5c   DMA_funcs_hardwareRegSetup
8000ed20   DMA_resourceAllocator_allocateResources
8000ee98   EDMA_UTILS_autoIncrement_init
8000ef80   EDMA_UTILS_autoIncrement_triggerOutChannel
8000f05c   DMA_utils_updateStateStruct
8000f128   EDMA_UTILS_autoIncrement_triggerInChannel
8000f1e8   EDMA_UTILS_memcpy2D
8000f278   DMA_funcs_writeTransferParams
8000f2ec   EDMA_UTILS_autoIncrement_waitOutChannel
8000f358   EDMA_UTILS_autoIncrement_waitInChannel
8000f3a8   EVE_SCTM_CounterConfig
8000f3f0   EDMA_UTILS_globalReset
8000f470   DMA_resourceAllocator_initResources
8000f49c   EVE_SCTM_CounterTimerEnable
8000f4c8   EVE_SCTM_InpEvtSelect
8000f4f4   EVE_SCTM_SamplingSelect
8000f520   DMA_utils_resetStateStruct
8000f540   EVE_SCTM_CounterRead
8000f558   EVE_SCTM_OverflowCheck
8000f570   EVE_SCTM_Enable
8000f584   DMA_resourceAllocator_setEdma3RmHandle
8000f590   EDMA3LLD_SUPPORT_requestResources
8000f594   vcop_block_statistics_init
8000f808   vcop_block_statistics_vloops
8000f9fc   vcop_block_statistics_param_count
8000fc18   BLOCK_STATS_TI_graphCreate
8000fda8   BLOCK_STATS_TI_process
8000fec8   BLOCK_STATS_TI_dmaControl
8000ff90   BLOCK_STATS_TI_alloc
8001004c   BLOCK_STATS_TI_init
800100e0   BLOCK_STATS_TI_activate
8001013c   BLOCK_STATS_TI_deactivate
800101ec   BLOCK_STATS_TI_execute
8001020c   BLOCK_STATS_TI_getGraphMemReq
80010228   BLOCK_STATS_TI_free
80010240   BLOCK_STATS_TI_control
80010244   BLOCK_STATS_TI_numAlloc
80030000   _sys_memory
81030000   gsTokenMap_block_statistics
810326bc   gConfig_block_statistics
81032c50   gTest_TI_profileSctm
81032c60   memObj_DMEM
81032c70   _tmpnams
81032d1c   _cleanup_ptr
81032d20   _dtors_ptr
81032d2c   _ftable
81032f48   _lock
81032f4c   _unlock
81032f58   _ft_end
81032f5c   errno
81032f70   CRED_instVirtAddr
810331f0   gBAM_TI_dmaAutoIncrementReadKernel
81033204   gBAM_TI_dmaAutoIncrementWriteKernel
81033218   gBAM_TI_dmaReadAutoIncrementKernelHelperFunc
81033220   gBAM_TI_dmaWriteAutoIncrementKernelHelperFunc
81033228   gBAM_TI_dmaReadAutoIncrementKernelExecFunc
81033240   gBAM_TI_dmaWriteAutoIncrementKernelExecFunc
810332bc   gBAM_TI_blockStatisticsKernel
810332d0   gBAM_TI_blockStatisticsHelperFunc
810332d8   gBAM_TI_blockStatisticsExecFunc
81033350   gBlockStatistics_TI_BAM_kernelDBdef
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[263 symbols]
