/*
 * Copyright (C) 2013 Texas Instruments Incorporated - http://www.ti.com/
 *
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*! ============================================================================
 *   \file  cslr_gmacsw_sl.h
 *
 *   \desc  This file contains the register descriptions for the GMAC Sliver
 *          module
 *
 *  ============================================================================
 */

#ifndef CSLR_GMACSW_SL_H_
#define CSLR_GMACSW_SL_H_

#ifdef __cplusplus
extern "C" {
#endif


/*---------------------------------------------------------------------------*\
|                                Header Files                                 |
\*---------------------------------------------------------------------------*/

/* Standard language headers */
#include <stdlib.h>
#include <stdint.h>

/* OS/Posix headers */

/* Project dependency headers */


/*---------------------------------------------------------------------------*\
|                           Global Typedefs/Enums                             |
\*---------------------------------------------------------------------------*/

/* Register Overlay Structure for GMAC1 and GMAC2 */
typedef struct
{
    volatile uint32_t SL_IDVER;                 /* 0x000U */
    volatile uint32_t SL_MACCONTROL;
    volatile uint32_t SL_MACSTATUS;
    volatile uint32_t SL_SOFT_RESET;
    volatile uint32_t SL_RX_MAXLEN;             /* 0x010U */
    volatile uint32_t SL_BOFFTEST;
    volatile uint32_t SL_RX_PAUSE;
    volatile uint32_t SL_TX_PAUSE;
    volatile uint32_t SL_EMCONTROL;             /* 0x020U */
    volatile uint32_t SL_RX_PRI_MAP;
#if defined(DEVICE_CENTAURUS)    
    volatile uint8_t RSVD1[24];                 /* 0x028U - 0x03F */
#else
    volatile uint32_t SL_TX_GAP;
    volatile uint8_t RSVD1[20];                 /* 0x02CU - 0x03F */
#endif
}
CSL_GMACSW_macRegs;

/* Register Overlay Structure for SL */
typedef struct
{
#if defined(DEVICE_CENTAURUS)
    volatile uint8_t    RSVD0[0x700U];        /* offset since union is used for Centaurus */
#endif
    CSL_GMACSW_macRegs  MAC[2];
}
CSL_GMACSW_slRegs;


/*---------------------------------------------------------------------------*\
|                           Global Macros/Defines                             |
\*---------------------------------------------------------------------------*/

/* Field Definition Macros */

/* SL_IDVER */

#define CSL_GMACSW_SL_IDVER_RX_IDENT_MASK (0xFFFF0000U)
#define CSL_GMACSW_SL_IDVER_RX_IDENT_SHIFT (0x00000010U)
#define CSL_GMACSW_SL_IDVER_RX_IDENT_RESETVAL (0x00000017U)

#define CSL_GMACSW_SL_IDVER_RX_Z_MASK (0x0000F800U)
#define CSL_GMACSW_SL_IDVER_RX_Z_SHIFT (0x0000000BU)
#define CSL_GMACSW_SL_IDVER_RX_Z_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_IDVER_RX_X_MASK (0x00000700U)
#define CSL_GMACSW_SL_IDVER_RX_X_SHIFT (0x00000008U)
#define CSL_GMACSW_SL_IDVER_RX_X_RESETVAL (0x00000001U)

#define CSL_GMACSW_SL_IDVER_RX_Y_MASK (0x000000FFU)
#define CSL_GMACSW_SL_IDVER_RX_Y_SHIFT (0x00000000U)
#define CSL_GMACSW_SL_IDVER_RX_Y_RESETVAL (0x00000009U)

#define CSL_GMACSW_SL_IDVER_RESETVAL (0x00170109U)


/* SL_MACCONTROL */

#define CSL_GMACSW_SL_MACCONTROL_RX_CMF_EN_MASK (0x01000000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CMF_EN_SHIFT (0x00000018U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CMF_EN_RESETVAL (0x00000000U)
/*----rx_cmf_en Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_RX_CMF_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CMF_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_RX_CSF_EN_MASK (0x00800000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CSF_EN_SHIFT (0x00000017U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CSF_EN_RESETVAL (0x00000000U)
/*----rx_csf_en Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_RX_CSF_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CSF_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_RX_CEF_EN_MASK (0x00400000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CEF_EN_SHIFT (0x00000016U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CEF_EN_RESETVAL (0x00000000U)
/*----rx_cef_en Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_RX_CEF_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_CEF_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_EXT_EN_MASK (0x00040000U)
#define CSL_GMACSW_SL_MACCONTROL_EXT_EN_SHIFT (0x00000012U)
#define CSL_GMACSW_SL_MACCONTROL_EXT_EN_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_MACCONTROL_GIG_FORCE_MASK (0x00020000U)
#define CSL_GMACSW_SL_MACCONTROL_GIG_FORCE_SHIFT (0x00000011U)
#define CSL_GMACSW_SL_MACCONTROL_GIG_FORCE_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_MACCONTROL_IFCTL_B_MASK (0x00010000U)
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_B_SHIFT (0x00000010U)
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_B_RESETVAL (0x00000000U)
/*----ifctl_b Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_B_HALFDUPLEX (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_B_FULLDUPLEX (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_IFCTL_A_MASK (0x00008000U)
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_A_SHIFT (0x0000000FU)
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_A_RESETVAL (0x00000000U)
/*----ifctl_a Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_A_2_5MHZ (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_IFCTL_A_25MHZ (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_CMD_IDLE_MASK (0x00000800U)
#define CSL_GMACSW_SL_MACCONTROL_CMD_IDLE_SHIFT (0x0000000BU)
#define CSL_GMACSW_SL_MACCONTROL_CMD_IDLE_RESETVAL (0x00000000U)
/*----CMD_IDLE Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_CMD_IDLE_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_CMD_IDLE_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_TX_SHORT_GAP_EN_MASK (0x00000400U)
#define CSL_GMACSW_SL_MACCONTROL_TX_SHORT_GAP_EN_SHIFT (0x0000000AU)
#define CSL_GMACSW_SL_MACCONTROL_TX_SHORT_GAP_EN_RESETVAL (0x00000000U)
/*----TX_SHORT_GAP_EN Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_TX_SHORT_GAP_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_TX_SHORT_GAP_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_GIG_MASK (0x00000080U)
#define CSL_GMACSW_SL_MACCONTROL_GIG_SHIFT (0x00000007U)
#define CSL_GMACSW_SL_MACCONTROL_GIG_RESETVAL (0x00000000U)
/*----GIG Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_GIG_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_GIG_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_TX_PACE_MASK (0x00000040U)
#define CSL_GMACSW_SL_MACCONTROL_TX_PACE_SHIFT (0x00000006U)
#define CSL_GMACSW_SL_MACCONTROL_TX_PACE_RESETVAL (0x00000000U)
/*----TX_PACE Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_TX_PACE_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_TX_PACE_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_GMII_EN_MASK (0x00000020U)
#define CSL_GMACSW_SL_MACCONTROL_GMII_EN_SHIFT ((uint32_t)0x00000005U)
#define CSL_GMACSW_SL_MACCONTROL_GMII_EN_RESETVAL (0x00000000U)
/*----GMII_EN Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_GMII_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_GMII_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_TX_FLOW_EN_MASK (0x00000010U)
#define CSL_GMACSW_SL_MACCONTROL_TX_FLOW_EN_SHIFT ((uint32_t)0x00000004U)
#define CSL_GMACSW_SL_MACCONTROL_TX_FLOW_EN_RESETVAL (0x00000000U)
/*----TX_FLOW_EN Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_TX_FLOW_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_TX_FLOW_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_RX_FLOW_EN_MASK (0x00000008U)
#define CSL_GMACSW_SL_MACCONTROL_RX_FLOW_EN_SHIFT ((uint32_t)0x00000003U)
#define CSL_GMACSW_SL_MACCONTROL_RX_FLOW_EN_RESETVAL (0x00000000U)
/*----RX_FLOW_EN Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_RX_FLOW_EN_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_RX_FLOW_EN_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_MTEST_MASK (0x00000004U)
#define CSL_GMACSW_SL_MACCONTROL_MTEST_SHIFT ((uint32_t)0x00000002U)
#define CSL_GMACSW_SL_MACCONTROL_MTEST_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_MACCONTROL_LOOPBACK_MASK ((uint32_t)0x00000002U)
#define CSL_GMACSW_SL_MACCONTROL_LOOPBACK_SHIFT ((uint32_t)0x00000001U)
#define CSL_GMACSW_SL_MACCONTROL_LOOPBACK_RESETVAL (0x00000000U)
/*----LOOPBACK Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_LOOPBACK_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_LOOPBACK_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_FULLDUPLEX_MASK (0x00000001U)
#define CSL_GMACSW_SL_MACCONTROL_FULLDUPLEX_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_FULLDUPLEX_RESETVAL (0x00000000U)
/*----FULLDUPLEX Tokens----*/
#define CSL_GMACSW_SL_MACCONTROL_FULLDUPLEX_DISABLE (0x00000000U)
#define CSL_GMACSW_SL_MACCONTROL_FULLDUPLEX_ENABLE (0x00000001U)

#define CSL_GMACSW_SL_MACCONTROL_RESETVAL (0x00000000U)


/* SL_MACSTATUS */

#define CSL_GMACSW_SL_MACSTATUS_IDLE_MASK (0x80000000U)
#define CSL_GMACSW_SL_MACSTATUS_IDLE_SHIFT ((uint32_t)0x0000001FU)
#define CSL_GMACSW_SL_MACSTATUS_IDLE_RESETVAL (0x00000001U)
/*----IDLE Tokens----*/
#define CSL_GMACSW_SL_MACSTATUS_IDLE_NOIDLE (0x00000000U)
#define CSL_GMACSW_SL_MACSTATUS_IDLE_IDLE (0x00000001U)

#define CSL_GMACSW_SL_MACSTATUS_EXT_GIG_MASK (0x00000010U)
#define CSL_GMACSW_SL_MACSTATUS_EXT_GIG_SHIFT ((uint32_t)0x00000004U)
#define CSL_GMACSW_SL_MACSTATUS_EXT_GIG_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_MACSTATUS_EXT_FULLDUPLEX_MASK (0x00000008U)
#define CSL_GMACSW_SL_MACSTATUS_EXT_FULLDUPLEX_SHIFT ((uint32_t)0x00000003U)
#define CSL_GMACSW_SL_MACSTATUS_EXT_FULLDUPLEX_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_MACSTATUS_RX_FLOW_ACT_MASK (0x00000002U)
#define CSL_GMACSW_SL_MACSTATUS_RX_FLOW_ACT_SHIFT ((uint32_t)0x00000001U)
#define CSL_GMACSW_SL_MACSTATUS_RX_FLOW_ACT_RESETVAL (0x00000000U)
/*----RX_FLOW_ACT Tokens----*/
#define CSL_GMACSW_SL_MACSTATUS_RX_FLOW_ACT_INACTIVE (0x00000000U)
#define CSL_GMACSW_SL_MACSTATUS_RX_FLOW_ACT_ACTIVE (0x00000001U)

#define CSL_GMACSW_SL_MACSTATUS_TX_FLOW_ACT_MASK (0x00000001U)
#define CSL_GMACSW_SL_MACSTATUS_TX_FLOW_ACT_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_SL_MACSTATUS_TX_FLOW_ACT_RESETVAL (0x00000000U)
/*----TX_FLOW_ACT Tokens----*/
#define CSL_GMACSW_SL_MACSTATUS_TX_FLOW_ACT_INACTIVE (0x00000000U)
#define CSL_GMACSW_SL_MACSTATUS_TX_FLOW_ACT_ACTIVE (0x00000001U)

#define CSL_GMACSW_SL_MACSTATUS_RESETVAL (0x80000000U)


/* SL_SOFT_RESET */

#define CSL_GMACSW_SL_SOFT_RESET_SOFT_RESET_MASK ((uint32_t)0x00000001U)
#define CSL_GMACSW_SL_SOFT_RESET_SOFT_RESET_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_SL_SOFT_RESET_SOFT_RESET_RESETVAL ((uint32_t)0x00000000U)
#define CSL_GMACSW_SL_SOFT_RESET_SOFT_RESET_NORESET ((uint32_t)0x00000000U)
#define CSL_GMACSW_SL_SOFT_RESET_SOFT_RESET_RESET ((uint32_t)0x00000001U)

#define CSL_GMACSW_SL_SOFT_RESET_RESETVAL ((uint32_t)0x00000000U)


/* SL_RX_MAXLEN */

#define CSL_GMACSW_SL_RX_MAXLEN_RX_MAXLEN_MASK (0x000007FFU)
#define CSL_GMACSW_SL_RX_MAXLEN_RX_MAXLEN_SHIFT ((uint32_t)0x00000000U)
#define CSL_GMACSW_SL_RX_MAXLEN_RX_MAXLEN_RESETVAL (0x000005EEU)

#define CSL_GMACSW_SL_RX_MAXLEN_RESETVAL (0x000005EEU)


/* SL_BOFFTEST */

#define CSL_GMACSW_SL_BOFFTEST_PACEVAL_MASK (0x7C000000U)
#define CSL_GMACSW_SL_BOFFTEST_PACEVAL_SHIFT ((uint32_t)0x0000001AU)
#define CSL_GMACSW_SL_BOFFTEST_PACEVAL_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_BOFFTEST_RNDNUM_MASK (0x03FF0000U)
#define CSL_GMACSW_SL_BOFFTEST_RNDNUM_SHIFT ((uint32_t)0x00000010U)
#define CSL_GMACSW_SL_BOFFTEST_RNDNUM_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_BOFFTEST_COLL_COUNT_MASK (0x0000F000U)
#define CSL_GMACSW_SL_BOFFTEST_COLL_COUNT_SHIFT (0x0000000CU)
#define CSL_GMACSW_SL_BOFFTEST_COLL_COUNT_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_BOFFTEST_TX_BACKOFF_MASK (0x000003FFU)
#define CSL_GMACSW_SL_BOFFTEST_TX_BACKOFF_SHIFT (0x00000000U)
#define CSL_GMACSW_SL_BOFFTEST_TX_BACKOFF_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_BOFFTEST_RESETVAL (0x00000000U)


/* SL_EMCONTROL */

#define CSL_GMACSW_SL_EMCONTROL_SOFT_MASK (0x00000002U)
#define CSL_GMACSW_SL_EMCONTROL_SOFT_SHIFT (0x00000001U)
#define CSL_GMACSW_SL_EMCONTROL_SOFT_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_EMCONTROL_FREE_MASK (0x00000001U)
#define CSL_GMACSW_SL_EMCONTROL_FREE_SHIFT (0x00000000U)
#define CSL_GMACSW_SL_EMCONTROL_FREE_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_EMCONTROL_RESETVAL (0x00000000U)


/* SL_RX_PRI_MAP */

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI7_MASK (0x70000000U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI7_SHIFT (0x0000001CU)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI7_RESETVAL (0x00000007U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI6_MASK (0x07000000U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI6_SHIFT (0x00000018U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI6_RESETVAL (0x00000006U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI5_MASK (0x00700000U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI5_SHIFT (0x00000014U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI5_RESETVAL (0x00000005U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI4_MASK (0x00070000U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI4_SHIFT (0x00000010U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI4_RESETVAL (0x00000004U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI3_MASK (0x00007000U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI3_SHIFT (0x0000000CU)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI3_RESETVAL (0x00000003U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI2_MASK (0x00000700U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI2_SHIFT (0x00000008U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI2_RESETVAL (0x00000002U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI1_MASK (0x00000070U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI1_SHIFT (0x00000004U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI1_RESETVAL (0x00000001U)

#define CSL_GMACSW_SL_RX_PRI_MAP_PRI0_MASK (0x00000007U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI0_SHIFT (0x00000000U)
#define CSL_GMACSW_SL_RX_PRI_MAP_PRI0_RESETVAL (0x00000000U)

#define CSL_GMACSW_SL_RX_PRI_MAP_RESETVAL (0x76543210U)


/*---------------------------------------------------------------------------*\
|                                 End of File                                 |
\*---------------------------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

#endif /* CSLR_GMACSW_SL_H_ */

