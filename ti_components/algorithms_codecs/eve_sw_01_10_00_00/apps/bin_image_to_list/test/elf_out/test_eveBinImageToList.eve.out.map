******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Wed Oct 07 00:51:28 2015

OUTPUT FILE NAME:   <.\elf_out\test_eveBinImageToList.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  000108bc  0000f744  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00006fd9  00001027  RWIX
  WMEM                  40040000   00007fe0  00007e00  000001e0  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  01809460  007f6ba0  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006ec8     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    00000364                       : divf.obj (.text:__arp32abi_divf)
                  80002098    000002d8                       : strtoll.obj (.text:strtoll)
                  80002370    000002a0                       : _printfi.obj (.text:_setfield)
                  80002610    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002878    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002ad8    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  80002d34    0000025c                       : _printfi.obj (.text:ecvt)
                  80002f90    00000258                       : _printfi.obj (.text:fcvt)
                  800031e8    0000024c                       : strtoull.obj (.text:strtoull)
                  80003434    0000022c                       : _printfi.obj (.text:_printfi)
                  80003660    00000220                       : _printfi.obj (.text:_pconv_e)
                  80003880    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003a88    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003c88    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003e6c    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80004038    000001cc                       : strtol.obj (.text:strtol)
                  80004204    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  800043cc    000001c8                       : fgets.obj (.text:_dofgets)
                  80004594    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  8000474c    000001a0                       : strtoul.obj (.text:strtoul)
                  800048ec    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004a78    00000170                       : fputs.obj (.text:fputs)
                  80004be8    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d48    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ea4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  80004ffc    00000144                       : fread.obj (.text:fread)
                  80005140    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  80005280    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053c0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  800054fc    0000012c                       : fopen.obj (.text:_openfile)
                  80005628    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005740    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005854    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005948    000000ec                       : lowlev.obj (.text:open)
                  80005a34    000000e8                       : fputc.obj (.text:fputc)
                  80005b1c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005bf8    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005cc4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005d88    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e44    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f00    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fb4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006068    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006114    000000a8                       : fopen.obj (.text:_search_fp)
                  800061bc    000000a8                       : memset.obj (.text:memset)
                  80006264    000000a0                       : lowlev.obj (.text:getdevice)
                  80006304    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063a0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000643c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064d4    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006568    00000094                       : memory.obj (.text:mem_free)
                  800065fc    00000090                       : trgdrv.obj (.text:HOSTread)
                  8000668c    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  8000671c    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  800067ac    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  8000683c    00000090                       : fseek.obj (.text:fseek)
                  800068cc    00000090                       : ftell.obj (.text:ftell)
                  8000695c    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  800069e8    00000088                       : lowlev.obj (.text:close)
                  80006a70    00000084                       : _printfi.obj (.text:_ecpy)
                  80006af4    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006b74    00000080                       : fltulld.obj (.text:__arp32abi_fltulld)
                  80006bf4    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006c74    00000080                       : printf.obj (.text:printf)
                  80006cf4    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006d70    0000007c                       : fltullf.obj (.text:__arp32abi_fltullf)
                  80006dec    0000007c                       : fclose.obj (.text:_closefile)
                  80006e68    0000007c                       : atoi.obj (.text:atoi)
                  80006ee4    0000007c                       : fflush.obj (.text:fflush)
                  80006f60    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006fd8    00000078                       : _printfi.obj (.text:_div)
                  80007050    00000078                       : _printfi.obj (.text:_pconv_f)
                  800070c8    00000078                       : memory.obj (.text:minit)
                  80007140    00000074                       : trgdrv.obj (.text:HOSTclose)
                  800071b4    00000074                       : fprintf.obj (.text:fprintf)
                  80007228    00000070                       : autoinit.obj (.text:_auto_init)
                  80007298    00000070                       : vfprintf.obj (.text:vfprintf)
                  80007308    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007374    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  800073dc    00000068                       : boot.obj (.text:_c_int00)
                  80007444    00000068                       : lowlev.obj (.text:lseek)
                  800074ac    00000068                       : lowlev.obj (.text:read)
                  80007514    00000068                       : lowlev.obj (.text:write)
                  8000757c    00000064                       : imath64.obj (.text:_subcull)
                  800075e0    00000064                       : ltoa.obj (.text:ltoa)
                  80007644    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  800076a4    00000060                       : fflush.obj (.text:_doflush)
                  80007704    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  80007760    0000005c                       : lowlev.obj (.text:tabinit)
                  800077bc    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  80007818    00000058                       : fltif.obj (.text:__arp32abi_fltif)
                  80007870    00000054                       : _printfi.obj (.text:_fcpy)
                  800078c4    00000054                       : renormd.obj (.text:_renormd)
                  80007918    00000054                       : exit.obj (.text:exit)
                  8000796c    00000050                       : fopen.obj (.text:_cleanup)
                  800079bc    00000050                       : lowlev.obj (.text:finddevice)
                  80007a0c    00000050                       : rand.obj (.text:rand)
                  80007a5c    0000004c                       : memory.obj (.text:malloc)
                  80007aa8    00000048                       : frcmpyf_div.obj (.text:__arp32abi_frcmpyf_div)
                  80007af0    00000048                       : trgmsg.obj (.text:readmsg)
                  80007b38    00000048                       : lowlev.obj (.text:unlink)
                  80007b80    00000048                       : trgmsg.obj (.text:writemsg)
                  80007bc8    00000040                       : args_main.obj (.text:_args_main)
                  80007c08    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007c44    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c80    0000003c                       : fopen.obj (.text:fopen)
                  80007cbc    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007cf4    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007d2c    00000038                       : sscanf.obj (.text:sscanf)
                  80007d64    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007d98    00000030                       : fclose.obj (.text:fclose)
                  80007dc8    00000030                       : rand.obj (.text:srand)
                  80007df8    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007e24    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007e4c    00000028                       : mult.obj (.text:_mpyl)
                  80007e74    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007e98    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007ebc    00000020                       : memccpy.obj (.text:memccpy)
                  80007edc    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007ef8    00000018                       : fgets.obj (.text:fgets)
                  80007f10    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007f24    00000014                       : memory.obj (.text:free)
                  80007f38    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f48    00000010                       : sscanf.obj (.text:_inpchar)
                  80007f58    0000000c                       : fprintf.obj (.text:_outc)
                  80007f64    0000000c                       : printf.obj (.text:_outc)
                  80007f70    0000000c                       : vfprintf.obj (.text:_outc)
                  80007f7c    0000000c                       : fprintf.obj (.text:_outs)
                  80007f88    0000000c                       : printf.obj (.text:_outs)
                  80007f94    0000000c                       : vfprintf.obj (.text:_outs)
                  80007fa0    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007fac    0000000c                       : remove.obj (.text:remove)
                  80007fb8    00000008                       : exit.obj (.text:abort)
                  80007fc0    00000004                       : _lock.obj (.text:_nop)
                  80007fc4    00000004                       : pre_init.obj (.text:_system_pre_init)

.bam_text 
*          0    80007fc8    00003118     
                  80007fc8    00000810     libevealgframework.eve.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  800087d8    00000788                                : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  80008f60    00000544                                : bam_execute.obj (.text:BAM_execute)
                  800094a4    0000047c                                : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  80009920    00000414                                : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  80009d34    00000378                                : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000a0ac    000001cc                                : bam_construct.obj (.text:BAM_createGraph)
                  8000a278    00000158                                : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000a3d0    00000150                                : bam_memory.obj (.text:bam_mem_alloc)
                  8000a520    00000140                                : bam_memory.obj (.text:bam_getMemPacket)
                  8000a660    00000130                                : bam_execute.obj (.text:BAM_process)
                  8000a790    00000120                                : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000a8b0    0000010c                                : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000a9bc    000000e8                                : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000aaa4    000000e8                                : bam_memory.obj (.text:bam_mem_free)
                  8000ab8c    000000ac                                : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000ac38    000000a8                                : bam_memory.obj (.text:bam_minit)
                  8000ace0    00000098                                : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000ad78    00000090                                : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000ae08    0000008c                                : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000ae94    00000074                                : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000af08    00000068                                : bam_memory.obj (.text:bam_mcheck)
                  8000af70    0000004c                                : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  8000afbc    0000004c                                : bam_construct.obj (.text:BAM_initKernelDB)
                  8000b008    0000003c                                : bam_execute.obj (.text:BAM_controlNode)
                  8000b044    00000038                                : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000b07c    00000024                                : alg_osal.obj (.text:PRINTF)
                  8000b0a0    00000024                                : alg_osal.obj (.text:TEST_PRINTF)
                  8000b0c4    00000018                                : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000b0dc    00000004                                : bam_execute.obj (.text:BAM_dummyKernelFunc)

.text      0    8000b0e0    00003084     
                  8000b0e0    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  8000be6c    00000b68     bin_image_to_list_tb.obj (.text:binImageToListTest)
                  8000c9d4    000003e8     configparser.obj (.text:ParseContent)
                  8000cdbc    0000031c     bin_image_to_list_tb.obj (.text:TestApp_BinImageToListReference)
                  8000d0d8    00000308     configparser.obj (.text:printparams)
                  8000d3e0    00000234     bin_image_to_list_tb.obj (.text:main)
                  8000d614    00000234     eve_profile.obj (.text:profiler_end)
                  8000d848    0000015c     bin_image_to_list_tb.obj (.text:TestApp_AllocateBufs)
                  8000d9a4    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000daf8    000000f0     libevenatckernels.eve.lib : vcop_bin_image_to_list_cn.obj (.text:vcop_bin_image_to_list_cn)
                  8000dbe8    000000d8     configparser.obj (.text:readparamfile)
                  8000dcc0    000000c4     eve_profile.obj (.text:profiler_init)
                  8000dd84    000000c0     libevenatckernels.eve.lib : vcop_binary_masking_cn.obj (.text:vcop_binary_masking_cn)
                  8000de44    000000b8                               : vcop_select_list_elements_cn.obj (.text:vcop_select_list_elements_cn)
                  8000defc    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000df6c    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000dfd8    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000e030    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000e080    00000048     eve_profile.obj (.text:profiler_start)
                  8000e0c8    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000e100    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000e130    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000e148    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000e158    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)

.algo_text 
*          0    8000e164    00001e24     
                  8000e164    0000011c     libevekernels.eve.lib : vcop_bin_image_to_list_kernel.obj (.text:vcop_bin_image_to_list_init)
                  8000e280    000000e4                           : bam_bin_image_to_list_exec_funcs.obj (.text:Bam_Bin_image_to_list_initFrame)
                  8000e364    000000dc                           : bam_select_list_elements_exec_funcs.obj (.text:Bam_Select_list_elements_initFrame)
                  8000e440    000000d8                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_init)
                  8000e518    0000007c                           : vcop_binary_masking_kernel.obj (.text:vcop_binary_masking_init)
                  8000e594    00000078                           : vcop_bin_image_to_list_kernel.obj (.text:vcop_bin_image_to_list_vloops)
                  8000e60c    00000050                           : bam_bin_image_to_list_helper_funcs.obj (.text:BAM_Bin_image_to_list_getMemRecFunc)
                  8000e65c    00000050                           : bam_select_list_elements_helper_funcs.obj (.text:BAM_Select_list_elements_getMemRecFunc)
                  8000e6ac    00000048                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_block_update_init)
                  8000e6f4    00000048                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_vloops)
                  8000e73c    0000003c                           : bam_binary_masking_exec_funcs.obj (.text:Bam_BinaryMasking_initFrame)
                  8000e778    0000003c                           : bam_select_list_elements_exec_funcs.obj (.text:Bam_Select_list_elements_control)
                  8000e7b4    00000038                           : bam_select_list_elements_exec_funcs.obj (.text:Bam_Select_list_elements_computeFrame)
                  8000e7ec    00000034                           : bam_binary_masking_helper_funcs.obj (.text:BAM_BinaryMasking_getMemRecFunc)
                  8000e820    00000034                           : bam_bin_image_to_list_exec_funcs.obj (.text:Bam_Bin_image_to_list_control)
                  8000e854    00000030                           : bam_binary_masking_exec_funcs.obj (.text:Bam_BinaryMasking_control)
                  8000e884    00000030                           : vcop_binary_masking_kernel.obj (.text:vcop_binary_masking_vloops)
                  8000e8b4    00000020                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_block_update_vloops)
                  8000e8d4    00000008                           : vcop_bin_image_to_list_kernel.obj (.text:vcop_bin_image_to_list_param_count)
                  8000e8dc    00000004                           : vcop_binary_masking_kernel.obj (.text:vcop_binary_masking_param_count)
                  8000e8e0    00000004                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_block_update_param_count)
                  8000e8e4    00000004                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_count)
                  8000e8e8    0000052c     libeveBinImageToList.eve.lib : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_process)
                  8000ee14    000001c0                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_graphCreate)
                  8000efd4    00000158                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_graphCreate)
                  8000f12c    0000014c                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_alloc)
                  8000f278    00000128                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_IN_updateDDRptr)
                  8000f3a0    00000100                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_dmaControl)
                  8000f4a0    000000c4                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_init)
                  8000f564    000000b8                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_frameInitChannel)
                  8000f61c    000000b8                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_frameInitChannel)
                  8000f6d4    000000a4                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_updateDDRptr)
                  8000f778    00000088                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_IN_setMemRecFunc)
                  8000f800    00000084                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_IN_getMemRecFunc)
                  8000f884    00000078                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_wait)
                  8000f8fc    00000074                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_trigger)
                  8000f970    00000074                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_kernelControl)
                  8000f9e4    00000070                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_activate)
                  8000fa54    00000070                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_deactivate)
                  8000fac4    0000006c                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_wait)
                  8000fb30    00000068                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_setMemRecFunc)
                  8000fb98    00000068                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_trigger)
                  8000fc00    00000068                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_dmaControl)
                  8000fc68    00000058                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_setMemRecFunc)
                  8000fcc0    00000058                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_setMemRecFunc)
                  8000fd18    00000054                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_getMemRecFunc)
                  8000fd6c    00000050                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_frameInitChannel)
                  8000fdbc    0000003c                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_updateOutDDRptr)
                  8000fdf8    0000003c                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_updateOutDDRptr)
                  8000fe34    00000038                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_getMemRecFunc)
                  8000fe6c    00000038                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_getMemRecFunc)
                  8000fea4    00000024                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_kernelControl)
                  8000fec8    00000020                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_execute)
                  8000fee8    00000020                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_execute)
                  8000ff08    00000020                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_initKernelsArgs)
                  8000ff28    00000018                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_getGraphMemReq)
                  8000ff40    00000018                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_free)
                  8000ff58    00000018                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_getGraphMemReq)
                  8000ff70    00000010                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_initKernelsArgs)
                  8000ff80    00000004                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_control)
                  8000ff84    00000004                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_numAlloc)

.starterware_text 
*          0    8000ff88    00001a34     
                  8000ff88    00000560     libevestarterware_eve.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  800104e8    000004c4                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_configure)
                  800109ac    00000288                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  80010c34    000001c4                               : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  80010df8    00000178                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  80010f70    00000178                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_init)
                  800110e8    0000016c                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_update)
                  80011254    000000e8                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8001133c    000000cc                               : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  80011408    000000c0                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  800114c8    000000b8                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_init)
                  80011580    00000090                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  80011610    00000080                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_updateNtrigger)
                  80011690    00000074                               : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  80011704    00000050                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  80011754    00000048                               : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  8001179c    00000040                               : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  800117dc    00000040                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8001181c    00000034                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_waitInChannel)
                  80011850    0000002c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8001187c    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  800118a8    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  800118d4    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  80011900    00000020                               : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  80011920    0000001c                               : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_triggerInChannel)
                  8001193c    0000001c                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_wait)
                  80011958    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  80011970    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  80011988    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)
                  8001199c    00000010                               : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_configure)
                  800119ac    0000000c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  800119b8    00000004                               : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     bin_image_to_list_tb.obj (.dmemSect)

.stack     1    40024000    00001c00     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00001bfc     --HOLE--

.algo_neardata 
*          1    40025c00    00000aac     
                  40025c00    00000004     libeveBinImageToList.eve.lib : bam_dma_custom_bin_to_list_node.obj (.rodata)
                  40025c04    00000004                                  : bam_dma_custom_select_list_elem_node.obj (.rodata)
                  40025c08    000002b2                                  : bam_dma_custom_select_list_elem_node.obj (.const:.string)
                  40025eba    00000234                                  : bam_dma_custom_bin_to_list_node.obj (.const:.string)
                  400260ee    00000192                                  : bin_image_to_list_alg.obj (.const:.string)
                  40026280    00000188                                  : bin_image_to_list_with_masking_graph.obj (.const:.string)
                  40026408    00000175                                  : bin_image_to_list_select_list_elems_graph.obj (.const:.string)
                  4002657d    00000003     --HOLE-- [fill = 0]
                  40026580    00000054                                  : bin_image_to_list_alg.obj (.const)
                  400265d4    0000003c                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T0$1)
                  40026610    00000030                                  : bin_image_to_list_select_list_elems_graph.obj (.const:$P$T0$1)
                  40026640    00000030                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T2$3)
                  40026670    00000018                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T1$2)
                  40026688    00000010                                  : bin_image_to_list_select_list_elems_graph.obj (.const:$P$T1$2)
                  40026698    00000010                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T3$4)
                  400266a8    00000004     libevekernels.eve.lib : bam_select_list_elements_exec_funcs.obj (.rodata)

.bam_neardata 
*          1    400266ac    000003dd     
                  400266ac    00000018     libevealgframework.eve.lib : bam_memory.obj (.bss) [fill = 0]
                  400266c4    00000005                                : bam_memory.obj (.data)
                  400266c9    00000003     --HOLE-- [fill = 0]
                  400266cc    00000008                                : bam_construct_int.obj (.rodata)
                  400266d4    00000004                                : bam_execute.obj (.rodata)
                  400266d8    00000004                                : bam_memory.obj (.rodata)
                  400266dc    000001f8                                : bam_dma_autoincrement_node.obj (.const:.string)
                  400268d4    00000121                                : bam_construct_int.obj (.const:.string)
                  400269f5    00000090                                : bam_execute.obj (.const:.string)
                  40026a85    00000001     --HOLE-- [fill = 0]
                  40026a86    00000003                                : bam_construct_int.obj (.const:.string:$P$T0$1)

.rts_neardata 
*          1    40026a8c    00000270     
                  40026a8c    00000101     rtsarp32_v200.lib : ctype.obj (.const:.string:_ctypes_)
                  40026b8d    00000001     --HOLE-- [fill = 0]
                  40026b8e    00000008                       : divf.obj (.const:.string:initial_approx$1)
                  40026b96    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  40026b9d    00000001     --HOLE-- [fill = 0]
                  40026b9e    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  40026ba4    00000003                       : assert.obj (.const:.string)
                  40026ba7    00000023                       : _printfi.obj (.const:.string)
                  40026bca    00000002     --HOLE-- [fill = 0]
                  40026bcc    00000050                       : strtod.obj (.const:digits)
                  40026c1c    00000048                       : strtod.obj (.const:powerof10)
                  40026c64    00000050                       : strtold.obj (.const:digits)
                  40026cb4    00000048                       : strtold.obj (.const:powerof10)

.cio       1    40026cfc    00000120     UNINITIALIZED
                  40026cfc    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.starterware_neardata 
*          1    40026e1c    0000011c     
                  40026e1c    000000a8     libevestarterware_eve.lib : dma_resource_allocator.obj (.bss) [fill = 0]
                  40026ec4    00000060                               : edma_utils_state.obj (.bss) [fill = 0]
                  40026f24    00000004                               : dma_resource_allocator.obj (.data)
                  40026f28    00000004                               : edma_utils.obj (.data)
                  40026f2c    00000004                               : edma_utils_autoincrement.obj (.rodata)
                  40026f30    00000004                               : edma_utils_memcpy.obj (.rodata)
                  40026f34    00000004                               : edma_utils_scatterGather.obj (.rodata)

.bss       1    40026f38    00000048     UNINITIALIZED
                  40026f38    00000048     eve_profile.obj (.bss)

.data      1    40026f80    00000024     
                  40026f80    00000020     boot_arp32.obj (.data)
                  40026fa0    00000004     eve_profile.obj (.data)

.rodata    1    40026fa4    00000038     
                  40026fa4    00000028     ti_stats_collector.obj (.rodata)
                  40026fcc    00000008     bin_image_to_list_tb.obj (.rodata)
                  40026fd4    00000008     eve_profile.obj (.rodata)

.wmem      1    40040000    00007e00     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00007df8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    01800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    017ffff8     --HOLE--

.far       1    81830000    000066d8     UNINITIALIZED
                  81830000    00006680     bin_image_to_list_config.obj (.far)
                  81836680    00000028     ti_stats_collector.obj (.far)
                  818366a8    00000020     eve_profile.obj (.far)
                  818366c8    00000010     bin_image_to_list_tb.obj (.far)

.fardata   1    818366d8    00001800     
                  818366d8    00001800     bin_image_to_list_config.obj (.fardata:gsTokenMap_binImageToList)

.const     1    81837ed8    00000d40     
                  81837ed8    000003d2     eve_profile.obj (.const:.string)
                  818382aa    000002f3     bin_image_to_list_tb.obj (.const:.string)
                  8183859d    00000252     configparser.obj (.const:.string)
                  818387ef    00000001     --HOLE-- [fill = 0]
                  818387f0    00000128     ti_stats_collector.obj (.const:.switchtab)
                  81838918    0000011a     bin_image_to_list_config.obj (.const:.string)
                  81838a32    000000fd     report_utils.obj (.const:.string)
                  81838b2f    00000053     ti_mem_manager.obj (.const:.string)
                  81838b82    00000043     ti_stats_collector.obj (.const:.string)
                  81838bc5    00000001     --HOLE-- [fill = 0]
                  81838bc6    00000020     bin_image_to_list_tb.obj (.const:.string:__FUNCTION__$1)
                  81838be6    00000015     bin_image_to_list_tb.obj (.const:.string:__FUNCTION__$2)
                  81838bfb    00000001     --HOLE-- [fill = 0]
                  81838bfc    00000013     bin_image_to_list_tb.obj (.const:.string:__FUNCTION__$3)
                  81838c0f    00000001     --HOLE-- [fill = 0]
                  81838c10    00000008     configparser.obj (.const:.string:$P$T0$1)

.rts_fardata 
*          1    81838c18    00000300     
                  81838c18    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  81838cb8    0000000c                       : memory.obj (.far) [fill = 0]
                  81838cc4    00000008                       : boot.obj (.far) [fill = 0]
                  81838ccc    00000008                       : trgdrv.obj (.far) [fill = 0]
                  81838cd4    000000f0                       : defs.obj (.fardata:_ftable)
                  81838dc4    00000078                       : lowlev.obj (.fardata:_device)
                  81838e3c    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  81838ea0    00000050                       : lowlev.obj (.fardata:_stream)
                  81838ef0    00000008                       : _lock.obj (.fardata)
                  81838ef8    00000005                       : vcop_memory.obj (.fardata)
                  81838efd    00000003     --HOLE-- [fill = 0]
                  81838f00    00000004                       : defs.obj (.fardata)
                  81838f04    00000004                       : errno.obj (.fardata)
                  81838f08    00000004                       : fopen.obj (.fardata)
                  81838f0c    00000004                       : lowlev.obj (.fardata)
                  81838f10    00000004                       : memory.obj (.fardata)
                  81838f14    00000004                       : rand.obj (.fardata)

.algo_fardata 
*          1    81838f18    00000264     
                  81838f18    00000068     libeveBinImageToList.eve.lib : bam_dma_custom_bin_to_list_node.obj (.fardata)
                  81838f80    00000068                                  : bam_dma_custom_select_list_elem_node.obj (.fardata)
                  81838fe8    00000040                                  : bin_image_to_list_with_masking_graph.obj (.fardata:bamBinToListKernelExecFuncDB)
                  81839028    00000040                                  : bin_image_to_list_with_masking_graph.obj (.fardata:bamBinToListKernelHostDB)
                  81839068    00000030                                  : bin_image_to_list_select_list_elems_graph.obj (.fardata:bamSelectListElemKernelExecFuncDB)
                  81839098    00000030                                  : bin_image_to_list_select_list_elems_graph.obj (.fardata:bamSelectListElemKernelHostDB)
                  818390c8    0000000c                                  : bin_image_to_list_select_list_elems_graph.obj (.fardata)
                  818390d4    0000000c                                  : bin_image_to_list_with_masking_graph.obj (.fardata)
                  818390e0    0000001c     libevekernels.eve.lib : bam_bin_image_to_list_helper_funcs.obj (.fardata)
                  818390fc    0000001c                           : bam_binary_masking_helper_funcs.obj (.fardata)
                  81839118    0000001c                           : bam_select_list_elements_helper_funcs.obj (.fardata)
                  81839134    00000018                           : bam_bin_image_to_list_exec_funcs.obj (.fardata)
                  8183914c    00000018                           : bam_binary_masking_exec_funcs.obj (.fardata)
                  81839164    00000018                           : bam_select_list_elements_exec_funcs.obj (.fardata)

.starterware_fardata 
*          1    8183917c    000001f4     
                  8183917c    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.bam_fardata 
*          1    81839370    000000f0     
                  81839370    00000078     libevealgframework.eve.lib : bam_memory.obj (.far) [fill = 0]
                  818393e8    0000000c                                : bam_execute.obj (.far) [fill = 0]
                  818393f4    00000008                                : bam_construct.obj (.far) [fill = 0]
                  818393fc    00000064                                : bam_memory.obj (.fardata:vcop_mem)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000ace0   BAM_ARP32_computeWrapper
8000af70   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000b008   BAM_controlNode
8000ab8c   BAM_copyIntMemRec2ExtMem
8000ae08   BAM_copyNodeList
8000a0ac   BAM_createGraph
8000b0dc   BAM_dummyKernelFunc
8000a9bc   BAM_fillKernelInfo
8000a8b0   BAM_getGraphMemSize
8000b044   BAM_getMemPacket
80007fc8   BAM_initGraph
8000ae94   BAM_initGraphInstance
8000afbc   BAM_initKernelDB
80009920   BAM_optimizeGraph
8000a660   BAM_process
8000a278   BAM_updateNodes
8000fc00   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_dmaControl
8000fec8   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_execute
8000ff28   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_getGraphMemReq
8000efd4   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_graphCreate
8000fea4   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_kernelControl
400265ac   BIN_IMAGE_TO_LIST_TI_IRES
40026580   BIN_IMAGE_TO_LIST_TI_VISION_FXNS
8000f9e4   BIN_IMAGE_TO_LIST_TI_activate
8000f12c   BIN_IMAGE_TO_LIST_TI_alloc
8000ff80   BIN_IMAGE_TO_LIST_TI_control
8000fa54   BIN_IMAGE_TO_LIST_TI_deactivate
8000ff40   BIN_IMAGE_TO_LIST_TI_free
8000f4a0   BIN_IMAGE_TO_LIST_TI_init
8000ff84   BIN_IMAGE_TO_LIST_TI_numAlloc
8000e8e8   BIN_IMAGE_TO_LIST_TI_process
8000f3a0   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_dmaControl
8000fee8   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_execute
8000ff58   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_getGraphMemReq
8000ee14   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_graphCreate
8000f970   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_kernelControl
80007fb8   C$$EXIT
80007bc0   C$$IO$$
8183917c   CRED_instVirtAddr
80010c34   DMA_funcs_hardwareRegSetup
80011690   DMA_funcs_writeTransferParams
80010df8   DMA_resourceAllocator_allocateResources
80011850   DMA_resourceAllocator_initResources
800119ac   DMA_resourceAllocator_setEdma3RmHandle
80011900   DMA_utils_resetStateStruct
8001133c   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
800119b8   EDMA3LLD_SUPPORT_requestResources
800104e8   EDMA_UTILS_autoIncrement1D_configure
800114c8   EDMA_UTILS_autoIncrement1D_init
80011920   EDMA_UTILS_autoIncrement1D_triggerInChannel
800110e8   EDMA_UTILS_autoIncrement1D_update
8001181c   EDMA_UTILS_autoIncrement1D_waitInChannel
8000ff88   EDMA_UTILS_autoIncrement_configure
80011254   EDMA_UTILS_autoIncrement_init
80011408   EDMA_UTILS_autoIncrement_triggerInChannel
800109ac   EDMA_UTILS_autoIncrement_update
80011704   EDMA_UTILS_autoIncrement_waitInChannel
8001179c   EDMA_UTILS_globalReset
80011580   EDMA_UTILS_memcpy2D
8001199c   EDMA_UTILS_scattherGather_configure
80010f70   EDMA_UTILS_scattherGather_init
80011610   EDMA_UTILS_scattherGather_updateNtrigger
8001193c   EDMA_UTILS_scattherGather_wait
80011754   EVE_SCTM_CounterConfig
80011958   EVE_SCTM_CounterRead
8001187c   EVE_SCTM_CounterTimerEnable
80011988   EVE_SCTM_Enable
800118a8   EVE_SCTM_InpEvtSelect
80011970   EVE_SCTM_OverflowCheck
800118d4   EVE_SCTM_SamplingSelect
80007140   HOSTclose
80005f00   HOSTlseek
8000643c   HOSTopen
800065fc   HOSTread
80006068   HOSTrename
80006f60   HOSTunlink
8000695c   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000b07c   PRINTF
8000b0a0   TEST_PRINTF
8000e158   TI_CreateMemoryHandle
8000dfd8   TI_GetMemoryChunk
8000d848   TestApp_AllocateBufs
8000cdbc   TestApp_BinImageToListReference
00007e00   WMEM_SIZE
40026cfc   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40025c00   __TI_STACK_END
00001c00   __TI_STACK_SIZE
40025c00   __TI_STATIC_BASE
01800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007cbc   __arp32abi_abort_msg
80004594   __arp32abi_addd
80007edc   __arp32abi_addll
80005bf8   __arp32abi_cmpd
80007e74   __arp32abi_cmplls
80007e98   __arp32abi_cmpllu
8000668c   __arp32abi_cvtdf
80006af4   __arp32abi_cvtfd
80003c88   __arp32abi_divd
80001d34   __arp32abi_divf
80003e6c   __arp32abi_divull
80006cf4   __arp32abi_fixdi
80007374   __arp32abi_fltid
80007818   __arp32abi_fltif
80006b74   __arp32abi_fltulld
80006d70   __arp32abi_fltullf
80007aa8   __arp32abi_frcmpyf_div
80007704   __arp32abi_isinf
80007644   __arp32abi_llshl
80007d64   __arp32abi_llshru
80004204   __arp32abi_mpyd
80004ea4   __arp32abi_mpyll
80007e24   __arp32abi_negd
80007f38   __arp32abi_negll
80007cf4   __arp32abi_remull
80007c44   __arp32abi_strasgi
80007df8   __arp32abi_subd
80007f10   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000264   _algo_fardata_size
00000aac   _algo_neardata_size
00001e24   _algo_text_size
80007bc8   _args_main
80007228   _auto_init
000000f0   _bam_fardata_size
000003dd   _bam_neardata_size
00003118   _bam_text_size
80006304   _buff_read
800073dc   _c_int00
8000796c   _cleanup
81838cc4   _cleanup_ptr
80006dec   _closefile
40026a8c   _ctypes_
800076a4   _doflush
81838cc8   _dtors_ptr
80000120   _dummy_handler
80004be8   _frcaddd
80003a88   _frcdivd
80005140   _frcmpyd
81838f00   _ft_end
81838cd4   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
81838ef0   _lock
80007e4c   _mpyl
40026f80   _my_stack
80007fc0   _nop
80003434   _printfi
80007308   _rd_ok
800078c4   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000270   _rts_neardata_size
00006ec8   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
0000011c   _starterware_neardata_size
00001a34   _starterware_text_size
80030000   _sys_memory
80007fc4   _system_pre_init
00003084   _text_size
81838c18   _tmpnams
81838ef4   _unlock
80000000   _vec_table
40040000   _wmem_memory
800067ac   _wrt_ok
80007fb8   abort
80006e68   atoi
8000a520   bam_getMemPacket
8000af08   bam_mcheck
8000a3d0   bam_mem_alloc
8000aaa4   bam_mem_free
8000ac38   bam_minit
8000ad78   bam_releaseMemPacket
400266b8   bam_stat_num_packets
8000be6c   binImageToListTest
ffffffff   binit
800069e8   close
81838f04   errno
80007918   exit
80007d98   fclose
80006ee4   fflush
80007ef8   fgets
80007c80   fopen
800071b4   fprintf
80005a34   fputc
80004a78   fputs
80004ffc   fread
80007f24   free
8000683c   fseek
800068cc   ftell
81839134   gBAM_TI_binImageToListExecFunc
818390f4   gBAM_TI_binImageToListHelperFunc
818390e0   gBAM_TI_binImageToListKernel
8183914c   gBAM_TI_binaryMaskingExecFunc
81839110   gBAM_TI_binaryMaskingHelperFunc
818390fc   gBAM_TI_binaryMaskingKernel
81838f18   gBAM_TI_dmaCustomBinToListNodeReadKernel
81838f34   gBAM_TI_dmaCustomBinToListNodeReadKernelExecFunc
81838f2c   gBAM_TI_dmaCustomBinToListNodeReadKernelHelperFunc
81838f4c   gBAM_TI_dmaCustomBinToListNodeWriteKernel
81838f68   gBAM_TI_dmaCustomBinToListNodeWriteKernelExecFunc
81838f60   gBAM_TI_dmaCustomBinToListNodeWriteKernelHelperFunc
81838f80   gBAM_TI_dmaCustomSelectListElemNodeReadKernel
81838f9c   gBAM_TI_dmaCustomSelectListElemNodeReadKernelExecFunc
81838f94   gBAM_TI_dmaCustomSelectListElemNodeReadKernelHelperFunc
81838fb4   gBAM_TI_dmaCustomSelectListElemNodeWriteKernel
81838fd0   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelExecFunc
81838fc8   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelHelperFunc
81839164   gBAM_TI_selecListElementsExecFunc
8183912c   gBAM_TI_selecListElementsHelperFunc
81839118   gBAM_TI_selecListElementsKernel
818390d4   gBinToList_BAM_TI_kernelDBdef
81830000   gConfig_binImageToList
40026ec4   gDmaUtilsStateStruct
40026f28   gEdmaCc
818390c8   gSelectListElem_BAM_TI_kernelDBdef
818366b8   gTest_TI_profileSctm
40026f64   gTest_TI_profileTsc
818366d8   gsTokenMap_binImageToList
80007444   lseek
800075e0   ltoa
8000d3e0   main
80007a5c   malloc
818366c8   memObj_DMEM
80005cc4   mem_alloc
80006568   mem_free
80007ebc   memccpy
80005b1c   memcpy
800061bc   memset
800070c8   minit
80005948   open
80006c74   printf
8000d0d8   printparams
8000d614   profiler_end
8000e148   profiler_end_print
8000e130   profiler_getSP
8000df6c   profiler_getStackDepth
8000dcc0   profiler_init
8000e100   profiler_initStack
8000e0c8   profiler_printStatus
8000e080   profiler_start
8000e030   profiler_testCaseInfo
80007a0c   rand
800074ac   read
80007af0   readmsg
8000dbe8   readparamfile
80007fac   remove
8000d9a4   report_printAppletInfo
80005628   setvbuf
80007dc8   srand
80007d2c   sscanf
8000b0e0   statCollectorControl
8000defc   statCollectorInit
800015f8   strtod
80004038   strtol
80001998   strtold
80002098   strtoll
8000474c   strtoul
800031e8   strtoull
40026f40   test_module_cyles
80007b38   unlink
8000daf8   vcop_bin_image_to_list_cn
8000e164   vcop_bin_image_to_list_init
8000e8d4   vcop_bin_image_to_list_param_count
8000e594   vcop_bin_image_to_list_vloops
8000dd84   vcop_binary_masking_cn
8000e518   vcop_binary_masking_init
8000e8dc   vcop_binary_masking_param_count
8000e884   vcop_binary_masking_vloops
800077bc   vcop_minit
8000de44   vcop_select_list_elements_cn
8000e440   vcop_select_list_elements_init
8000e6ac   vcop_select_list_elements_param_block_update_init
8000e8e0   vcop_select_list_elements_param_block_update_param_count
8000e8b4   vcop_select_list_elements_param_block_update_vloops
8000e8e4   vcop_select_list_elements_param_count
8000e6f4   vcop_select_list_elements_vloops
80007298   vfprintf
80007514   write
80007b80   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000001   __TI_args_main
00000001   __TI_exit
000000f0   _bam_fardata_size
0000011c   _starterware_neardata_size
000001f4   _starterware_fardata_size
00000264   _algo_fardata_size
00000270   _rts_neardata_size
00000300   _rts_fardata_size
000003dd   _bam_neardata_size
00000aac   _algo_neardata_size
00001a34   _starterware_text_size
00001c00   __TI_STACK_SIZE
00001e24   _algo_text_size
00003084   _text_size
00003118   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00006ec8   _rts_text_size
00007e00   WMEM_SIZE
01800000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40025c00   __TI_STACK_END
40025c00   __TI_STATIC_BASE
40026580   BIN_IMAGE_TO_LIST_TI_VISION_FXNS
400265ac   BIN_IMAGE_TO_LIST_TI_IRES
400266b8   bam_stat_num_packets
40026a8c   _ctypes_
40026cfc   __CIOBUF_
40026ec4   gDmaUtilsStateStruct
40026f28   gEdmaCc
40026f40   test_module_cyles
40026f64   gTest_TI_profileTsc
40026f80   _my_stack
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   __arp32abi_divf
80002098   strtoll
800031e8   strtoull
80003434   _printfi
80003a88   _frcdivd
80003c88   __arp32abi_divd
80003e6c   __arp32abi_divull
80004038   strtol
80004204   __arp32abi_mpyd
80004594   __arp32abi_addd
8000474c   strtoul
80004a78   fputs
80004be8   _frcaddd
80004ea4   __arp32abi_mpyll
80004ffc   fread
80005140   _frcmpyd
80005628   setvbuf
80005948   open
80005a34   fputc
80005b1c   memcpy
80005bf8   __arp32abi_cmpd
80005cc4   mem_alloc
80005f00   HOSTlseek
80006068   HOSTrename
800061bc   memset
80006304   _buff_read
8000643c   HOSTopen
80006568   mem_free
800065fc   HOSTread
8000668c   __arp32abi_cvtdf
800067ac   _wrt_ok
8000683c   fseek
800068cc   ftell
8000695c   HOSTwrite
800069e8   close
80006af4   __arp32abi_cvtfd
80006b74   __arp32abi_fltulld
80006c74   printf
80006cf4   __arp32abi_fixdi
80006d70   __arp32abi_fltullf
80006dec   _closefile
80006e68   atoi
80006ee4   fflush
80006f60   HOSTunlink
800070c8   minit
80007140   HOSTclose
800071b4   fprintf
80007228   _auto_init
80007298   vfprintf
80007308   _rd_ok
80007374   __arp32abi_fltid
800073dc   _c_int00
80007444   lseek
800074ac   read
80007514   write
800075e0   ltoa
80007644   __arp32abi_llshl
800076a4   _doflush
80007704   __arp32abi_isinf
800077bc   vcop_minit
80007818   __arp32abi_fltif
800078c4   _renormd
80007918   exit
8000796c   _cleanup
80007a0c   rand
80007a5c   malloc
80007aa8   __arp32abi_frcmpyf_div
80007af0   readmsg
80007b38   unlink
80007b80   writemsg
80007bc0   C$$IO$$
80007bc8   _args_main
80007c44   __arp32abi_strasgi
80007c80   fopen
80007cbc   __arp32abi_abort_msg
80007cf4   __arp32abi_remull
80007d2c   sscanf
80007d64   __arp32abi_llshru
80007d98   fclose
80007dc8   srand
80007df8   __arp32abi_subd
80007e24   __arp32abi_negd
80007e4c   _mpyl
80007e74   __arp32abi_cmplls
80007e98   __arp32abi_cmpllu
80007ebc   memccpy
80007edc   __arp32abi_addll
80007ef8   fgets
80007f10   __arp32abi_subll
80007f24   free
80007f38   __arp32abi_negll
80007fac   remove
80007fb8   C$$EXIT
80007fb8   abort
80007fc0   _nop
80007fc4   _system_pre_init
80007fc8   BAM_initGraph
80009920   BAM_optimizeGraph
8000a0ac   BAM_createGraph
8000a278   BAM_updateNodes
8000a3d0   bam_mem_alloc
8000a520   bam_getMemPacket
8000a660   BAM_process
8000a8b0   BAM_getGraphMemSize
8000a9bc   BAM_fillKernelInfo
8000aaa4   bam_mem_free
8000ab8c   BAM_copyIntMemRec2ExtMem
8000ac38   bam_minit
8000ace0   BAM_ARP32_computeWrapper
8000ad78   bam_releaseMemPacket
8000ae08   BAM_copyNodeList
8000ae94   BAM_initGraphInstance
8000af08   bam_mcheck
8000af70   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000afbc   BAM_initKernelDB
8000b008   BAM_controlNode
8000b044   BAM_getMemPacket
8000b07c   PRINTF
8000b0a0   TEST_PRINTF
8000b0dc   BAM_dummyKernelFunc
8000b0e0   statCollectorControl
8000be6c   binImageToListTest
8000cdbc   TestApp_BinImageToListReference
8000d0d8   printparams
8000d3e0   main
8000d614   profiler_end
8000d848   TestApp_AllocateBufs
8000d9a4   report_printAppletInfo
8000daf8   vcop_bin_image_to_list_cn
8000dbe8   readparamfile
8000dcc0   profiler_init
8000dd84   vcop_binary_masking_cn
8000de44   vcop_select_list_elements_cn
8000defc   statCollectorInit
8000df6c   profiler_getStackDepth
8000dfd8   TI_GetMemoryChunk
8000e030   profiler_testCaseInfo
8000e080   profiler_start
8000e0c8   profiler_printStatus
8000e100   profiler_initStack
8000e130   profiler_getSP
8000e148   profiler_end_print
8000e158   TI_CreateMemoryHandle
8000e164   vcop_bin_image_to_list_init
8000e440   vcop_select_list_elements_init
8000e518   vcop_binary_masking_init
8000e594   vcop_bin_image_to_list_vloops
8000e6ac   vcop_select_list_elements_param_block_update_init
8000e6f4   vcop_select_list_elements_vloops
8000e884   vcop_binary_masking_vloops
8000e8b4   vcop_select_list_elements_param_block_update_vloops
8000e8d4   vcop_bin_image_to_list_param_count
8000e8dc   vcop_binary_masking_param_count
8000e8e0   vcop_select_list_elements_param_block_update_param_count
8000e8e4   vcop_select_list_elements_param_count
8000e8e8   BIN_IMAGE_TO_LIST_TI_process
8000ee14   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_graphCreate
8000efd4   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_graphCreate
8000f12c   BIN_IMAGE_TO_LIST_TI_alloc
8000f3a0   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_dmaControl
8000f4a0   BIN_IMAGE_TO_LIST_TI_init
8000f970   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_kernelControl
8000f9e4   BIN_IMAGE_TO_LIST_TI_activate
8000fa54   BIN_IMAGE_TO_LIST_TI_deactivate
8000fc00   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_dmaControl
8000fea4   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_kernelControl
8000fec8   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_execute
8000fee8   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_execute
8000ff28   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_getGraphMemReq
8000ff40   BIN_IMAGE_TO_LIST_TI_free
8000ff58   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_getGraphMemReq
8000ff80   BIN_IMAGE_TO_LIST_TI_control
8000ff84   BIN_IMAGE_TO_LIST_TI_numAlloc
8000ff88   EDMA_UTILS_autoIncrement_configure
800104e8   EDMA_UTILS_autoIncrement1D_configure
800109ac   EDMA_UTILS_autoIncrement_update
80010c34   DMA_funcs_hardwareRegSetup
80010df8   DMA_resourceAllocator_allocateResources
80010f70   EDMA_UTILS_scattherGather_init
800110e8   EDMA_UTILS_autoIncrement1D_update
80011254   EDMA_UTILS_autoIncrement_init
8001133c   DMA_utils_updateStateStruct
80011408   EDMA_UTILS_autoIncrement_triggerInChannel
800114c8   EDMA_UTILS_autoIncrement1D_init
80011580   EDMA_UTILS_memcpy2D
80011610   EDMA_UTILS_scattherGather_updateNtrigger
80011690   DMA_funcs_writeTransferParams
80011704   EDMA_UTILS_autoIncrement_waitInChannel
80011754   EVE_SCTM_CounterConfig
8001179c   EDMA_UTILS_globalReset
8001181c   EDMA_UTILS_autoIncrement1D_waitInChannel
80011850   DMA_resourceAllocator_initResources
8001187c   EVE_SCTM_CounterTimerEnable
800118a8   EVE_SCTM_InpEvtSelect
800118d4   EVE_SCTM_SamplingSelect
80011900   DMA_utils_resetStateStruct
80011920   EDMA_UTILS_autoIncrement1D_triggerInChannel
8001193c   EDMA_UTILS_scattherGather_wait
80011958   EVE_SCTM_CounterRead
80011970   EVE_SCTM_OverflowCheck
80011988   EVE_SCTM_Enable
8001199c   EDMA_UTILS_scattherGather_configure
800119ac   DMA_resourceAllocator_setEdma3RmHandle
800119b8   EDMA3LLD_SUPPORT_requestResources
80030000   _sys_memory
81830000   gConfig_binImageToList
818366b8   gTest_TI_profileSctm
818366c8   memObj_DMEM
818366d8   gsTokenMap_binImageToList
81838c18   _tmpnams
81838cc4   _cleanup_ptr
81838cc8   _dtors_ptr
81838cd4   _ftable
81838ef0   _lock
81838ef4   _unlock
81838f00   _ft_end
81838f04   errno
81838f18   gBAM_TI_dmaCustomBinToListNodeReadKernel
81838f2c   gBAM_TI_dmaCustomBinToListNodeReadKernelHelperFunc
81838f34   gBAM_TI_dmaCustomBinToListNodeReadKernelExecFunc
81838f4c   gBAM_TI_dmaCustomBinToListNodeWriteKernel
81838f60   gBAM_TI_dmaCustomBinToListNodeWriteKernelHelperFunc
81838f68   gBAM_TI_dmaCustomBinToListNodeWriteKernelExecFunc
81838f80   gBAM_TI_dmaCustomSelectListElemNodeReadKernel
81838f94   gBAM_TI_dmaCustomSelectListElemNodeReadKernelHelperFunc
81838f9c   gBAM_TI_dmaCustomSelectListElemNodeReadKernelExecFunc
81838fb4   gBAM_TI_dmaCustomSelectListElemNodeWriteKernel
81838fc8   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelHelperFunc
81838fd0   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelExecFunc
818390c8   gSelectListElem_BAM_TI_kernelDBdef
818390d4   gBinToList_BAM_TI_kernelDBdef
818390e0   gBAM_TI_binImageToListKernel
818390f4   gBAM_TI_binImageToListHelperFunc
818390fc   gBAM_TI_binaryMaskingKernel
81839110   gBAM_TI_binaryMaskingHelperFunc
81839118   gBAM_TI_selecListElementsKernel
8183912c   gBAM_TI_selecListElementsHelperFunc
81839134   gBAM_TI_binImageToListExecFunc
8183914c   gBAM_TI_binaryMaskingExecFunc
81839164   gBAM_TI_selecListElementsExecFunc
8183917c   CRED_instVirtAddr
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[295 symbols]
