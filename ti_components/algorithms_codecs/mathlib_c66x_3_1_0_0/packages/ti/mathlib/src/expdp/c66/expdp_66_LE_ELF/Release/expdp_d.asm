;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Mon Nov 04 22:40:42 2013                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:none 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : Disabled                                             *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : No Debug Info                                        *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss

	.global	a
	.sect	".fardata:a", RW
	.clink
	.align	8
	.elfsym	a,SYM_SIZE(1608)
a:
	.word	0f4178da3h,0bcafffffh		; a[0] @ 0
	.word	0c27e9531h,0400c2dd9h		; a[1] @ 64
	.word	0c27e9531h,0c01c2dd9h		; a[2] @ 128
	.word	0cba732dfh,040252262h		; a[3] @ 192
	.word	07f62b6aeh,0c02c2dd9h		; a[4] @ 256
	.word	0198f1d3fh,040319ca8h		; a[5] @ 320
	.word	0736cdf26h,0c0352263h		; a[6] @ 384
	.word	0cd4aa10eh,04038a81eh		; a[7] @ 448
	.word	07f62b6aeh,0c03c2dd9h		; a[8] @ 512
	.word	0d9407896h,0403fb394h		; a[9] @ 576
	.word	0198f1d3fh,0c0419ca8h		; a[10] @ 640
	.word	0c67dfe33h,040435f85h		; a[11] @ 704
	.word	0736cdf26h,0c0452263h		; a[12] @ 768
	.word	0205bc01ah,04046e541h		; a[13] @ 832
	.word	07967caeah,0c048a81eh		; a[14] @ 896
	.word	02656abdeh,0404a6afch		; a[15] @ 960
	.word	0d3458cd2h,0c04c2dd9h		; a[16] @ 1024
	.word	080346dc6h,0404df0b7h		; a[17] @ 1088
	.word	0d9407896h,0c04fb394h		; a[18] @ 1152
	.word	06d0917d7h,04050bb39h		; a[19] @ 1216
	.word	0198f1d3fh,0c0519ca8h		; a[20] @ 1280
	.word	0f0068db9h,040527e16h		; a[21] @ 1344
	.word	0c67dfe33h,0c0535f85h		; a[22] @ 1408
	.word	07304039bh,0405440f4h		; a[23] @ 1472
	.word	0736cdf26h,0c0552263h		; a[24] @ 1536
	.word	01ff2e48fh,0405603d2h		; a[25] @ 1600
	.word	0f66a5508h,0c056e540h		; a[26] @ 1664
	.word	0cce1c582h,04057c6afh		; a[27] @ 1728
	.word	0a35935fch,0c058a81eh		; a[28] @ 1792
	.word	0219652bdh,04059898eh		; a[29] @ 1856
	.word	07e90ff97h,0c05a6afbh		; a[30] @ 1920
	.word	07ef9db23h,0405b4c6ah		; a[31] @ 1984
	.word	07f62b6aeh,0c05c2dd9h		; a[32] @ 2048
	.word	07fcb923ah,0405d0f48h		; a[33] @ 2112
	.word	080346dc6h,0c05df0b7h		; a[34] @ 2176
	.word	0809d4952h,0405ed226h		; a[35] @ 2240
	.word	0810624ddh,0c05fb395h		; a[36] @ 2304
	.word	040b78034h,040604a82h		; a[37] @ 2368
	.word	0c0ebedfah,0c060bb39h		; a[38] @ 2432
	.word	06f694467h,040612bf0h		; a[39] @ 2496
	.word	0ef9db22dh,0c0619ca7h		; a[40] @ 2560
	.word	06fd21ff3h,040620d5fh		; a[41] @ 2624
	.word	0f0068db9h,0c0627e16h		; a[42] @ 2688
	.word	0703afb7fh,04062eeceh		; a[43] @ 2752
	.word	0f06f6944h,0c0635f85h		; a[44] @ 2816
	.word	070a3d70ah,04063d03dh		; a[45] @ 2880
	.word	01f212d77h,0c06440f4h		; a[46] @ 2944
	.word	09f559b3dh,04064b1abh		; a[47] @ 3008
	.word	01f8a0903h,0c0652263h		; a[48] @ 3072
	.word	09fbe76c9h,04065931ah		; a[49] @ 3136
	.word	01ff2e48fh,0c06603d2h		; a[50] @ 3200
	.word	0a0275254h,040667489h		; a[51] @ 3264
	.word	0205bc01ah,0c066e541h		; a[52] @ 3328
	.word	0a0902de0h,0406755f8h		; a[53] @ 3392
	.word	020c49ba6h,0c067c6b0h		; a[54] @ 3456
	.word	0cf41f213h,040683766h		; a[55] @ 3520
	.word	04f765fd9h,0c068a81eh		; a[56] @ 3584
	.word	0cfaacd9fh,0406918d5h		; a[57] @ 3648
	.word	04fdf3b64h,0c069898dh		; a[58] @ 3712
	.word	0d013a92ah,04069fa44h		; a[59] @ 3776
	.word	0504816f0h,0c06a6afch		; a[60] @ 3840
	.word	0d07c84b6h,0406adbb3h		; a[61] @ 3904
	.word	050b0f27ch,0c06b4c6bh		; a[62] @ 3968
	.word	0ff2e48e9h,0406bbd21h		; a[63] @ 4032
	.word	07f62b6aeh,0c06c2dd9h		; a[64] @ 4096
	.word	0ff972474h,0406c9e90h		; a[65] @ 4160
	.word	07fcb923ah,0c06d0f48h		; a[66] @ 4224
	.word	0a36e2eb2h,0406d8001h		; a[67] @ 4288
	.word	080346dc6h,0c06df0b7h		; a[68] @ 4352
	.word	00068db8ch,0406e616fh		; a[69] @ 4416
	.word	0809d4952h,0c06ed226h		; a[70] @ 4480
	.word	000d1b717h,0406f42deh		; a[71] @ 4544
	.word	0af4f0d84h,0c06fb394h		; a[72] @ 4608
	.word	017c1bda5h,040701226h		; a[73] @ 4672
	.word	0d7dbf488h,0c0704a81h		; a[74] @ 4736
	.word	097f62b6bh,0407082ddh		; a[75] @ 4800
	.word	05810624eh,0c070bb39h		; a[76] @ 4864
	.word	0182a9931h,04070f395h		; a[77] @ 4928
	.word	0d844d014h,0c0712bf0h		; a[78] @ 4992
	.word	02f837b4ah,04071644ch		; a[79] @ 5056
	.word	0ef9db22dh,0c0719ca7h		; a[80] @ 5120
	.word	0afb7e910h,04071d503h		; a[81] @ 5184
	.word	06fd21ff3h,0c0720d5fh		; a[82] @ 5248
	.word	02fec56d6h,0407245bbh		; a[83] @ 5312
	.word	0f0068db9h,0c0727e16h		; a[84] @ 5376
	.word	0b020c49ch,04072b672h		; a[85] @ 5440
	.word	0703afb7fh,0c072eeceh		; a[86] @ 5504
	.word	030553261h,04073272ah		; a[87] @ 5568
	.word	0f06f6944h,0c0735f85h		; a[88] @ 5632
	.word	047ae147bh,0407397e1h		; a[89] @ 5696
	.word	007c84b5eh,0c073d03dh		; a[90] @ 5760
	.word	0c7e28241h,040740898h		; a[91] @ 5824
	.word	087fcb924h,0c07440f4h		; a[92] @ 5888
	.word	04816f007h,040747950h		; a[93] @ 5952
	.word	0083126e9h,0c074b1ach		; a[94] @ 6016
	.word	0c84b5dcch,04074ea07h		; a[95] @ 6080
	.word	0886594afh,0c0752263h		; a[96] @ 6144
	.word	0dfa43fe6h,040755abeh		; a[97] @ 6208
	.word	09fbe76c9h,0c075931ah		; a[98] @ 6272
	.word	05fd8adach,04075cb76h		; a[99] @ 6336
	.word	01ff2e48fh,0c07603d2h		; a[100] @ 6400
	.word	0e00d1b71h,040763c2dh		; a[101] @ 6464
	.word	0a0275254h,0c0767489h		; a[102] @ 6528
	.word	060418937h,04076ace5h		; a[103] @ 6592
	.word	0205bc01ah,0c076e541h		; a[104] @ 6656
	.word	0779a6b51h,040771d9ch		; a[105] @ 6720
	.word	037b4a234h,0c07755f8h		; a[106] @ 6784
	.word	0f7ced917h,040778e53h		; a[107] @ 6848
	.word	0b7e90ff9h,0c077c6afh		; a[108] @ 6912
	.word	0780346dch,04077ff0bh		; a[109] @ 6976
	.word	0381d7dbfh,0c0783767h		; a[110] @ 7040
	.word	0f837b4a2h,040786fc2h		; a[111] @ 7104
	.word	0b851eb85h,0c078a81eh		; a[112] @ 7168
	.word	00f9096bch,04078e07ah		; a[113] @ 7232
	.word	0cfaacd9fh,0c07918d5h		; a[114] @ 7296
	.word	08fc50481h,040795131h		; a[115] @ 7360
	.word	04fdf3b64h,0c079898dh		; a[116] @ 7424
	.word	00ff97247h,04079c1e9h		; a[117] @ 7488
	.word	0d013a92ah,0c079fa44h		; a[118] @ 7552
	.word	0902de00dh,0407a32a0h		; a[119] @ 7616
	.word	0504816f0h,0c07a6afch		; a[120] @ 7680
	.word	010624dd3h,0407aa358h		; a[121] @ 7744
	.word	0d07c84b6h,0c07adbb3h		; a[122] @ 7808
	.word	027bb2fech,0407b140fh		; a[123] @ 7872
	.word	0e7d566cfh,0c07b4c6ah		; a[124] @ 7936
	.word	0a7ef9db2h,0407b84c6h		; a[125] @ 8000
	.word	06809d495h,0c07bbd22h		; a[126] @ 8064
	.word	028240b78h,0407bf57eh		; a[127] @ 8128
	.word	0e83e425bh,0c07c2dd9h		; a[128] @ 8192
	.word	0a858793eh,0407c6635h		; a[129] @ 8256
	.word	06872b021h,0c07c9e91h		; a[130] @ 8320
	.word	0bfb15b57h,0407cd6ech		; a[131] @ 8384
	.word	07fcb923ah,0c07d0f48h		; a[132] @ 8448
	.word	03fe5c91dh,0407d47a4h		; a[133] @ 8512
	.word	014e3bcd3h,0c07d841dh		; a[134] @ 8576
	.word	0c01a36e3h,0407db85bh		; a[135] @ 8640
	.word	080346dc6h,0c07df0b7h		; a[136] @ 8704
	.word	0404ea4a9h,0407e2913h		; a[137] @ 8768
	.word	0978d4fdfh,0c07e616eh		; a[138] @ 8832
	.word	057a786c2h,0407e99cah		; a[139] @ 8896
	.word	017c1bda5h,0c07ed226h		; a[140] @ 8960
	.word	0d7dbf488h,0407f0a81h		; a[141] @ 9024
	.word	097f62b6bh,0c07f42ddh		; a[142] @ 9088
	.word	05810624eh,0407f7b39h		; a[143] @ 9152
	.word	0182a9931h,0c07fb395h		; a[144] @ 9216
	.word	0d844d014h,0407febf0h		; a[145] @ 9280
	.word	04c2f837bh,0c0801226h		; a[146] @ 9344
	.word	0f7ced917h,040802e53h		; a[147] @ 9408
	.word	0d7dbf488h,0c0804a81h		; a[148] @ 9472
	.word	0b7e90ff9h,0408066afh		; a[149] @ 9536
	.word	097f62b6bh,0c08082ddh		; a[150] @ 9600
	.word	0780346dch,040809f0bh		; a[151] @ 9664
	.word	05810624eh,0c080bb39h		; a[152] @ 9728
	.word	0381d7dbfh,04080d767h		; a[153] @ 9792
	.word	0182a9931h,0c080f395h		; a[154] @ 9856
	.word	0f837b4a2h,040810fc2h		; a[155] @ 9920
	.word	0d844d014h,0c0812bf0h		; a[156] @ 9984
	.word	0b851eb85h,04081481eh		; a[157] @ 10048
	.word	063f14120h,0c081644ch		; a[158] @ 10112
	.word	043fe5c92h,04081807ah		; a[159] @ 10176
	.word	0240b7803h,0c0819ca8h		; a[160] @ 10240
	.word	004189375h,04081b8d6h		; a[161] @ 10304
	.word	0e425aee6h,0c081d503h		; a[162] @ 10368
	.word	08fc50481h,04081f131h		; a[163] @ 10432
	.word	06fd21ff3h,0c0820d5fh		; a[164] @ 10496
	.word	04fdf3b64h,04082298dh		; a[165] @ 10560
	.word	02fec56d6h,0c08245bbh		; a[166] @ 10624
	.word	00ff97247h,0408261e9h		; a[167] @ 10688
	.word	0f0068db9h,0c0827e16h		; a[168] @ 10752
	.word	0d013a92ah,040829a44h		; a[169] @ 10816
	.word	0b020c49ch,0c082b672h		; a[170] @ 10880
	.word	0902de00dh,04082d2a0h		; a[171] @ 10944
	.word	0703afb7fh,0c082eeceh		; a[172] @ 11008
	.word	01bda511ah,040830afch		; a[173] @ 11072
	.word	0fbe76c8bh,0c0832729h		; a[174] @ 11136
	.word	0dbf487fdh,040834357h		; a[175] @ 11200
	.word	0bc01a36eh,0c0835f85h		; a[176] @ 11264
	.word	09c0ebee0h,040837bb3h		; a[177] @ 11328
	.word	047ae147bh,0c08397e1h		; a[178] @ 11392
	.word	027bb2fech,04083b40fh		; a[179] @ 11456
	.word	007c84b5eh,0c083d03dh		; a[180] @ 11520
	.word	0e7d566cfh,04083ec6ah		; a[181] @ 11584
	.word	0c7e28241h,0c0840898h		; a[182] @ 11648
	.word	0a7ef9db2h,0408424c6h		; a[183] @ 11712
	.word	087fcb924h,0c08440f4h		; a[184] @ 11776
	.word	06809d495h,040845d22h		; a[185] @ 11840
	.word	04816f007h,0c0847950h		; a[186] @ 11904
	.word	028240b78h,04084957eh		; a[187] @ 11968
	.word	0083126e9h,0c084b1ach		; a[188] @ 12032
	.word	0b3d07c85h,04084cdd9h		; a[189] @ 12096
	.word	093dd97f6h,0c084ea07h		; a[190] @ 12160
	.word	073eab368h,040850635h		; a[191] @ 12224
	.word	053f7ced9h,0c0852263h		; a[192] @ 12288
	.word	03404ea4bh,040853e91h		; a[193] @ 12352
	.word	0141205bch,0c0855abfh		; a[194] @ 12416
	.word	0f41f212dh,0408576ech		; a[195] @ 12480
	.word	0d42c3c9fh,0c085931ah		; a[196] @ 12544
	.word	0b4395810h,04085af48h		; a[197] @ 12608
	.word	094467382h,0c085cb76h		; a[198] @ 12672
	.word	03fe5c91dh,04085e7a4h		; a[199] @ 12736
	.word	01ff2e48fh,0c08603d2h		; a[200] @ 12800

;	C:\MATHLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\c6000_7.4.2\bin\opt6x.exe C:\\DOCUME~1\\a0868396\\LOCALS~1\\Temp\\106362 C:\\DOCUME~1\\a0868396\\LOCALS~1\\Temp\\106364 
	.sect	".text"
	.clink
	.global	save_output

;******************************************************************************
;* FUNCTION NAME: save_output                                                 *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,B0,B1,B2,B3,B4,*
;*                           B5,B6,B7,B8,B9,B10,B11,SP,A16,A17,A18,A19,A20,   *
;*                           A21,A22,A23,A24,A25,A26,A27,A28,A29,A30,A31,B16, *
;*                           B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28, *
;*                           B29,B30,B31                                      *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,B0,B1,B2,B3,B4,*
;*                           B5,B6,B7,B8,B9,B10,B11,DP,SP,A16,A17,A18,A19,A20,*
;*                           A21,A22,A23,A24,A25,A26,A27,A28,A29,A30,A31,B16, *
;*                           B17,B18,B19,B20,B21,B22,B23,B24,B25,B26,B27,B28, *
;*                           B29,B30,B31                                      *
;*   Local Frame Size  : 16 Args + 0 Auto + 24 Save = 40 byte                 *
;******************************************************************************
save_output:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 9
           STW     .D2T1   A11,*SP--(8)      ; |106| 

           STDW    .D2T2   B11:B10,*SP--     ; |106| 
||         MV      .L2     B4,B11            ; |106| 
||         MVKL    .S2     $C$SL1+0,B4

           STW     .D2T1   A10,*SP--(8)      ; |106| 
||         MV      .L2X    A4,B10            ; |106| 
||         MVKL    .S1     $C$SL2+0,A4
||         MVKH    .S2     $C$SL1+0,B4

           MV      .L1X    B3,A11            ; |106| 
||         CALLP   .S2     fopen,B3
||         SUB     .D2     SP,16,SP          ; |106| 
||         MVKH    .S1     $C$SL2+0,A4

$C$RL0:    ; CALL OCCURS {fopen} {0}         ; |108| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           CMPGT   .L2     B11,0,B0          ; |110| 
||         MVKL    .S2     $C$SL3+0,B4
||         MV      .L1     A4,A10            ; |108| 

   [!B0]   BNOP    .S1     $C$L2,4           ; |110| 
||         MVKH    .S2     $C$SL3+0,B4

   [ B0]   STW     .D2T2   B4,*+SP(4)        ; |111| 
           ; BRANCHCC OCCURS {$C$L2}         ; |110| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 4

           LDDW    .D2T2   *B10++,B5:B4      ; |111| 
||         CALL    .S1     fprintf           ; |111| 

           MV      .L1     A10,A4            ; |111| 
           NOP             2
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L1:    
;          EXCLUSIVE CPU CYCLES: 2
           ADDKPC  .S2     $C$RL1,B3,0       ; |111| 
           STDW    .D2T2   B5:B4,*+SP(8)     ; |111| 
$C$RL1:    ; CALL OCCURS {fprintf} {0}       ; |111| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1X    B11,1,A0          ; |110| 
||         MVKL    .S2     $C$SL3+0,B4

   [ A0]   B       .S1     $C$L1             ; |110| 
||         MVKH    .S2     $C$SL3+0,B4

   [ A0]   STW     .D2T2   B4,*+SP(4)        ; |111| 

   [ A0]   CALL    .S1     fprintf           ; |111| 
|| [ A0]   LDDW    .D2T2   *B10++,B5:B4      ; |111| 

   [ A0]   MV      .L1     A10,A4            ; |111| 
           SUB     .L2     B11,1,B11         ; |110| 
           NOP             1
           ; BRANCHCC OCCURS {$C$L1}         ; |110| 
;** --------------------------------------------------------------------------*
$C$L2:    
;          EXCLUSIVE CPU CYCLES: 6

           CALLP   .S2     fclose,B3
||         MV      .L1     A10,A4            ; |113| 

$C$RL2:    ; CALL OCCURS {fclose} {0}        ; |113| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           ADDK    .S2     16,SP             ; |114| 

           LDW     .D2T1   *++SP(8),A10      ; |114| 
||         MV      .L2X    A11,B3            ; |114| 

           LDDW    .D2T2   *++SP,B11:B10     ; |114| 
||         RET     .S2     B3                ; |114| 

           LDW     .D2T1   *++SP(8),A11      ; |114| 
           NOP             4
           ; BRANCH OCCURS {B3}              ; |114| 
	.sect	".text"
	.clink
	.global	main

;******************************************************************************
;* FUNCTION NAME: main                                                        *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 8 Args + 220 Auto + 56 Save = 284 byte               *
;******************************************************************************
main:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           STW     .D2T1   A11,*SP--(8)      ; |122| 
           STW     .D2T1   A10,*SP--(8)      ; |122| 
           STDW    .D2T2   B13:B12,*SP--     ; |122| 
           STDW    .D2T2   B11:B10,*SP--     ; |122| 
           STDW    .D2T1   A15:A14,*SP--     ; |122| 
           STDW    .D2T1   A13:A12,*SP--     ; |122| 
           STW     .D2T2   B3,*SP--(8)       ; |122| 

           MVKL    .S1     $C$SL4+0,A4
||         ADDK    .S2     -232,SP           ; |122| 

           CALLP   .S2     driver_init,B3
||         MVKH    .S1     $C$SL4+0,A4

$C$RL3:    ; CALL OCCURS {driver_init} {0}   ; |130| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           MVKL    .S1     a,A13
||         MVKL    .S2     output,B4

           MVKH    .S1     a,A13
||         MVKH    .S2     output,B4

           MV      .L1     A13,A12
||         CALL    .S1     exp               ; |139| 
||         LDW     .D2T1   *B4,A11

           LDDW    .D1T1   *A12++,A5:A4      ; |139| 
           MVK     .S2     0xc9,B4
           NOP             1
           MV      .L1X    B4,A10
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L3:    
;          EXCLUSIVE CPU CYCLES: 1
           ADDKPC  .S2     $C$RL4,B3,0       ; |139| 
$C$RL4:    ; CALL OCCURS {exp} {0}           ; |139| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           SUB     .L1     A10,1,A0          ; |138| 
||         STDW    .D1T1   A5:A4,*A11++      ; |139| 
||         SUB     .S1     A10,1,A10         ; |138| 

   [!A0]   MVKL    .S2     output,B4
|| [!A0]   ZERO    .L2     B10
|| [!A0]   MV      .D2X    A13,B13
|| [ A0]   B       .S1     $C$L3             ; |138| 

   [ A0]   CALL    .S1     exp               ; |139| 
   [ A0]   LDDW    .D1T1   *A12++,A5:A4      ; |139| 
   [!A0]   MVKH    .S2     output,B4
   [!A0]   MVK     .S1     0xc9,A10
   [!A0]   ADD     .L2     4,B4,B11
           ; BRANCHCC OCCURS {$C$L3}         ; |138| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 1
           CALL    .S1     expdp             ; |142| 
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L4:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A13++,A5:A4      ; |142| 
           ADDKPC  .S2     $C$RL5,B3,3       ; |142| 
$C$RL5:    ; CALL OCCURS {expdp} {0}         ; |142| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           LDW     .D2T2   *B11,B4           ; |142| 
||         SUB     .L1     A10,1,A0          ; |141| 
||         SUB     .S1     A10,1,A10         ; |141| 

   [ A0]   BNOP    .S2     $C$L4,3           ; |141| 
|| [!A0]   MVK     .S1     0xc9,A11
|| [!A0]   MV      .L1X    B13,A10

           ADD     .L2     B10,B4,B4         ; |142| 
||         ADD     .S2     8,B10,B10         ; |141| 

   [ A0]   CALL    .S1     expdp             ; |142| 
|| [!A0]   ADD     .L2     4,B11,B10
|| [!A0]   ZERO    .S2     B11
||         STDW    .D2T1   A5:A4,*B4         ; |142| 

           ; BRANCHCC OCCURS {$C$L4}         ; |141| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 1
           CALL    .S1     expdp_c           ; |145| 
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L5:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A10++,A5:A4      ; |145| 
           ADDKPC  .S2     $C$RL6,B3,3       ; |145| 
$C$RL6:    ; CALL OCCURS {expdp_c} {0}       ; |145| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 7

           LDW     .D2T2   *B10,B4           ; |145| 
||         SUB     .L1     A11,1,A0          ; |144| 
||         SUB     .S1     A11,1,A11         ; |144| 

   [ A0]   BNOP    .S1     $C$L5,3           ; |144| 

           ADD     .L2     B11,B4,B4         ; |145| 
||         ADD     .S2     8,B11,B11         ; |144| 

   [ A0]   CALL    .S1     expdp_c           ; |145| 
||         STDW    .D2T1   A5:A4,*B4         ; |145| 

           ; BRANCHCC OCCURS {$C$L5}         ; |144| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 30

           ZERO    .L1     A3
||         MVKL    .S2     0x3f7c70e4,B24
||         MVKL    .S1     0x714251b3,A30
||         ZERO    .L2     B26
||         ZERO    .D1     A5
||         ADD     .D2     4,B10,B12

           SET     .S1     A3,0x15,0x1d,A4
||         ZERO    .L1     A3
||         MVKH    .S2     0x3f7c70e4,B24
||         LDW     .D2T2   *B12,B10
||         ZERO    .D1     A18               ; |100| 

           MVKH    .S1     0x40100000,A3
||         STW     .D2T2   B24,*+SP(44)      ; |99| 
||         MV      .L2     B24,B25
||         MVKL    .S2     0xdd7abcd2,B4
||         MV      .L1     A4,A19
||         MV      .D1     A4,A29

           MV      .L1     A3,A21
||         STW     .D2T1   A3,*+SP(80)       ; |59| 
||         MVKL    .S1     0x6fb3f6e0,A3
||         MVKL    .S2     0xff7a39eb,B30
||         ZERO    .D1     A20               ; |100| 

           MVKH    .S1     0x6fb3f6e0,A3
||         MVKL    .S2     0x3ef152a4,B22
||         STW     .D2T1   A4,*+SP(84)       ; |59| 
||         ZERO    .L1     A16               ; |100| 
||         ZERO    .D1     A24               ; |100| 

           STW     .D2T1   A3,*+SP(40)       ; |99| 
||         MVKL    .S2     0x40862e42,B31
||         MVKL    .S1     0x3fac718e,A31
||         ZERO    .L1     A22               ; |100| 
||         ZERO    .D1     A28               ; |100| 

           MV      .L2X    A3,B24
||         MVKL    .S1     0x3fe63000,A3
||         MVKL    .S2     0x6f58dc1c,B17

           MVKH    .S1     0x3fe63000,A3
||         MVKL    .S2     0x3f403f99,B29

           MVKL    .S2     0xbf2bd010,B9
||         SET     .S1     A5,0x1e,0x1e,A5
||         STW     .D2T1   A3,*+SP(24)       ; |99| 

           MVKL    .S2     0x5c610ca8,B8
||         MVKH    .S1     0x714251b3,A30
||         MV      .L1     A5,A23
||         MV      .D1     A5,A25

           MVKL    .S2     0x3ff71547,B7
||         MVKH    .S1     0x3fac718e,A31
||         MV      .L1     A5,A17            ; |59| 
||         STW     .D2T1   A30,*+SP(56)      ; |100| 
||         MV      .D1     A30,A26

           MVKL    .S2     0x6fde3809,B28
||         MVK     .S1     0x3fe,A14
||         MV      .L1X    B13,A30
||         STW     .D2T1   A31,*+SP(60)      ; |100| 
||         MV      .D1     A31,A27

           MVKL    .S2     0x652b82fe,B6
||         MV      .L1     A14,A31

           MVKL    .S2     0xc086232b,B11
           MVKH    .S2     0xdd7abcd2,B4

           MVKH    .S2     0xff7a39eb,B30
||         STW     .D2T2   B4,*+SP(88)       ; |59| 
||         MV      .L2     B4,B16

           MVKH    .S2     0x3ef152a4,B22
||         STW     .D2T2   B30,*+SP(72)      ; |59| 
||         MV      .L2     B30,B18

           MVKH    .S2     0x40862e42,B31
||         STW     .D2T2   B22,*+SP(52)      ; |99| 
||         ZERO    .L2     B30               ; |100| 

           MVKH    .S2     0x6f58dc1c,B17
||         STW     .D2T2   B31,*+SP(76)      ; |59| 
||         MV      .L2     B31,B19

           MVKH    .S2     0x3f403f99,B29
||         ZERO    .L1     A3                ; |100| 
||         STW     .D2T2   B17,*+SP(48)      ; |99| 
||         MV      .L2X    A3,B31

           MVKH    .S2     0xbf2bd010,B9
||         STW     .D2T2   B29,*+SP(68)      ; |100| 
||         MV      .L2     B22,B23

           MVKH    .S2     0x5c610ca8,B8
||         STW     .D2T2   B9,*+SP(32)       ; |99| 
||         MV      .L2     B17,B22

           MVKH    .S2     0x3ff71547,B7
||         STW     .D2T2   B8,*+SP(28)       ; |99| 
||         MV      .L2     B29,B21

           MVKH    .S2     0x6fde3809,B28
||         STW     .D2T2   B7,*+SP(20)       ; |99| 
||         MV      .L2     B9,B29

           MVKH    .S2     0x652b82fe,B6
||         STW     .D2T2   B28,*+SP(64)      ; |100| 
||         MV      .L2     B28,B20

           MVKH    .S2     0xc086232b,B11
||         STW     .D2T2   B6,*+SP(16)       ; |99| 
||         MV      .L2     B8,B28

           MVKH    .S2     0x3fd00000,B26
||         MV      .L2     B11,B17
||         MV      .D2     B7,B3

           MVK     .S2     0xc9,B5
||         MV      .L2     B6,B2
||         MV      .D2     B26,B27

           STW     .D2T2   B26,*+SP(36)      ; |99| 
||         ZERO    .L2     B26               ; |100| 
||         SUB     .S2     B5,1,B1

           DINT                              ; interrupts off
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : C:/builds/DEV_TI_MATHLIB_3_1_0_0/mathlib/ti/mathlib/src/expdp/expdp_d.c
;*      Loop source line                 : 147
;*      Loop opening brace source line   : 147
;*      Loop closing brace source line   : 149
;*      Known Minimum Trip Count         : 201                    
;*      Known Maximum Trip Count         : 201                    
;*      Known Max Trip Count Factor      : 201
;*      Loop Carried Dependency Bound(^) : 106
;*      Unpartitioned Resource Bound     : 9
;*      Partitioned Resource Bound(*)    : 9
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        3     
;*      .S units                     5        5     
;*      .D units                     1        1     
;*      .M units                     9*       9*    
;*      .X cross paths               5        1     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           7        4     (.L or .S unit)
;*      Addition ops (.LSD)          3        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             7        6     
;*      Bound(.L .S .D .LS .LSD)     6        5     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 106 Schedule found with 1 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |   *            ****************| ***      *     ****************|
;*       1: |   *            ****************| ***      *     ****************|
;*       2: |   *            ****************| ***      *     ****************|
;*       3: |   *            ****************| ***      *     ****************|
;*       4: |   *            ****************| ***      *     ****************|
;*       5: |   *            ****************| ***  **  *     ****************|
;*       6: |   *            ****************| ***  **  *     ****************|
;*       7: |   *            ****************| **** **  *     ****************|
;*       8: |   *            ****************| **** **  *     ****************|
;*       9: |   *            ****************| *******  *     ****************|
;*      10: |   *            ****************| ***  **  *     ****************|
;*      11: |   *            ****************| ***  **  *     ****************|
;*      12: |   *    *       ****************| ***  **  *     ****************|
;*      13: |   *    *       ****************| **** **  *     ****************|
;*      14: |   *    *       ****************| **** **  *     ****************|
;*      15: |   **   *       ****************| ***  **  *     ****************|
;*      16: |   *    **      ****************| ***  **  *     ****************|
;*      17: |   *    **      ****************| ***  **  *     ****************|
;*      18: |   *    **      ****************| *******  *     ****************|
;*      19: |   *    **      ****************| *******  *     ****************|
;*      20: |   *    **      ****************| ***  **  *     ****************|
;*      21: |   *    **      ****************| ***  **  *     ****************|
;*      22: |   *    **      ****************| *******  *     ****************|
;*      23: |   *  ****      ****************| *****    *     ****************|
;*      24: |   *  ****      ****************| *****    *     ****************|
;*      25: |   *  ****      ****************| *******  *     ****************|
;*      26: |   *  ****      ****************| ***      *     ****************|
;*      27: |   *  ****      ****************| ***      *     ****************|
;*      28: |   *  ****      ****************| *****    *     ****************|
;*      29: |   *  ****      ****************| *****    *     ****************|
;*      30: |   *******      ****************| ***      *     ****************|
;*      31: |   *******      ****************| ***      *     ****************|
;*      32: |   *******      ****************| ***    ***     ****************|
;*      33: |   *******      ****************| ***    ***     ****************|
;*      34: |   *******      ****************| ***    ***     ****************|
;*      35: |   *******      ****************| ***    ***     ****************|
;*      36: |   *******      ****************| *****  ***     ****************|
;*      37: |   *******      ****************| ***    ***     ****************|
;*      38: |   *******      ****************| *****  ***     ****************|
;*      39: |   *******      ****************| **********     ****************|
;*      40: |   ***** *      ****************| ****   ***     ****************|
;*      41: |   ***** *      ****************| ****   ***     ****************|
;*      42: |** ***** *      ****************| ***    ***     ****************|
;*      43: |** ***** *      ****************| *****  ***     ****************|
;*      44: |   ***** *      ****************| ***      *     ****************|
;*      45: |   ** ** *      ****************| *****    *     ****************|
;*      46: |   ** ** *      ****************| *******  *     ****************|
;*      47: |   *  ** *      ****************| *****  * *     ****************|
;*      48: |   *  ** *      ****************| *****  * *     ****************|
;*      49: |   *  ** *      ****************| ***    * *     ****************|
;*      50: |   *  ** *      ****************| ***  *** *     ****************|
;*      51: |   ***** *      ****************| ***  *** *     ****************|
;*      52: |   *  ** *      ****************| ***  *** *     ****************|
;*      53: |   *  ** *      ****************| ***  *** *     ****************|
;*      54: |   ***** *      ****************| ***  *** *     ****************|
;*      55: |   ***** *      ****************| ***  *** *     ****************|
;*      56: |** ***** *      ****************| ***  *** *     ****************|
;*      57: |** ***** *      ****************| ***  *** *     ****************|
;*      58: |** ***** *      ****************| ***  *** *     ****************|
;*      59: |** ***** *      ****************| ***  *** *     ****************|
;*      60: |** ***** *      ****************| ******** *     ****************|
;*      61: |** ***   *      ****************| ******** *     ****************|
;*      62: |** ***   *      ****************| ******** *     ****************|
;*      63: |** ***** *      ****************| ******** *     ****************|
;*      64: |   ***   *      ****************| ******** *     ****************|
;*      65: |   ***   *      ****************| ******** *     ****************|
;*      66: |   ***   *      ****************| ******** *     ****************|
;*      67: |** ***   *      ****************| ******** *     ****************|
;*      68: |** ***   *      ****************| ******** *     ****************|
;*      69: |** ***   *      ****************| ******** *     ****************|
;*      70: |** ***   *      ****************| ******** *     ****************|
;*      71: |** ***** *      ****************| ******** *     ****************|
;*      72: |** ***   *      ****************| ******** *     ****************|
;*      73: |** ***   *      ****************| ******** *     ****************|
;*      74: |** ***** *      ****************| ******** *     ****************|
;*      75: |   ***   *      ****************| ******** *     ****************|
;*      76: |   ***   *      ****************| ******** *     ****************|
;*      77: |   ***   *      ****************| ******** *     ****************|
;*      78: |   ***** *      ****************| ******** *     ****************|
;*      79: |   *  ** *      ****************| ******** *     ****************|
;*      80: |   *  ** *      ****************| ******** *     ****************|
;*      81: |   *  ** *      ****************| *******  *     ****************|
;*      82: |   ***** *      ****************| *******  *     ****************|
;*      83: |   *  ** *      ****************| *******  *     ****************|
;*      84: |   *  ****      ****************| *******  *     ****************|
;*      85: |   *******      ****************| *******  *     ****************|
;*      86: |   *     *      ****************| *******  *     ****************|
;*      87: |   *     *      ****************| *******  *     ****************|
;*      88: |   *     *      ****************| *******  *     ****************|
;*      89: |   ***   *      ****************| ******** *     ****************|
;*      90: |   *     *      ****************| *****  * *     ****************|
;*      91: |   *     *      ****************| *****    *     ****************|
;*      92: |   *     *      ****************| *****    *     ****************|
;*      93: |   ***   *      ****************| *****    *     ****************|
;*      94: |   **    *      ****************| *****    *     ****************|
;*      95: |   **    *      ****************| *****    *     ****************|
;*      96: |   ***  **      ****************| *****    *     ****************|
;*      97: |   *            ****************| *****    *     ****************|
;*      98: |   *            ****************| *****    *     ****************|
;*      99: |   *            ****************| ******   *     ****************|
;*      100: |   ***          ****************|****  *   *     ****************|
;*      101: |   ***          ****************|****      *     ****************|
;*      102: |   ***          ****************| ***      *     ****************|
;*      103: |   ***          ****************| ***      *     ****************|
;*      104: |   ***          ****************|****      *     ****************|
;*      105: |   ***          ****************| ***      *     ****************|
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*
;*      Minimum safe trip count       : 1
;*
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 0 + min_trip_cnt * 106 = 21306        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  SUB             B1,1,B1
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C95:
;*   0              LDDW    .D1T2   *A30++,B7:B6      ; |99|  ^ 
;*   1              NOP             4
;*   5              FMPYDP  .M2     B3:B2,B7:B6,B5:B4 ; |99|  ^ 
;*     ||           CMPLTDP .S2     B7:B6,B17:B16,B4  ; |59| 
;*   6              NOP             2
;*   8              MVD     .M1X    B4,A8             ; |59| Post-sched spill
;*   9              DPINT   .L2     B5:B4,B4          ; |99|  ^ 
;*  10              NOP             3
;*  13              INTDP   .L2     B4,B5:B4          ; |99|  ^ 
;*  14              ADD     .L1X    A31,B4,A4         ; |59| 
;*  15              SHL     .S1     A4,20,A9          ; |59| 
;*  16              NOP             2
;*  18              FMPYDP  .M2     B31:B30,B5:B4,B5:B4 ; |99|  ^ 
;*  19              FMPYDP  .M2     B29:B28,B5:B4,B5:B4 ; |99| 
;*  20              NOP             2
;*  22              DADD    .L1X    0,B7:B6,A7:A6     ; |99| Post-sched spill
;*     ||           FSUBDP  .L2     B7:B6,B5:B4,B7:B6 ; |99|  ^ 
;*  23              NOP             2
;*  25              FSUBDP  .L2     B7:B6,B5:B4,B5:B4 ; |99|  ^ 
;*  26              NOP             2
;*  28              FMPYDP  .M2     B5:B4,B5:B4,B9:B8 ; |99|  ^ 
;*  29              DADD    .L1X    0,B5:B4,A5:A4     ; |99| Post-sched spill
;*  30              NOP             2
;*  32              FMPYDP  .M2     B23:B22,B9:B8,B5:B4 ; |99|  ^ 
;*  33              NOP             1
;*  34              FMPYDP  .M2     B21:B20,B9:B8,B5:B4 ; |100| 
;*  35              NOP             1
;*  36              FADDDP  .L2     B25:B24,B5:B4,B7:B6 ; |99|  ^ 
;*  37              NOP             2
;*  39              FMPYDP  .M2     B9:B8,B7:B6,B5:B4 ; |99|  ^ 
;*     ||           FADDDP  .L1X    A27:A26,B5:B4,A1:A0 ; |100| 
;*     ||           MV      .L2X    A8,B4             ; |59| Post-sched spill
;*  40              NOP             1
;*  41              MVD     .M1X    B4,A4             ; |59| Post-sched spill
;*  42              NOP             1
;*  43              FADDDP  .L2     B27:B26,B5:B4,B7:B6 ; |99|  ^ 
;*     ||           FMPYDP  .M2X    B9:B8,A1:A0,B5:B4 ; |100| 
;*  44              DADD    .L2X    0,A5:A4,B5:B4     ; |99| Post-sched spill
;*  45              NOP             1
;*  46              FMPYDP  .M2     B5:B4,B7:B6,B7:B6 ; |99|  ^ 
;*     ||           MV      .L2X    A4,B8             ; |59| Post-sched spill
;*  47              NOP             1
;*  48              FADDDP  .L1X    A29:A28,B5:B4,A5:A4 ; |100| 
;*  49              NOP             2
;*  51              FSUBDP  .L1X    A5:A4,B7:B6,A5:A4 ; |100|  ^ 
;*  52              NOP             2
;*  54              RCPDP   .S1     A5:A4,A1:A0       ; |59|  ^ 
;*  55              NOP             1
;*  56              FMPYDP  .M1     A5:A4,A1:A0,A7:A6 ; |59|  ^ 
;*  57              NOP             2
;*  59              DADD    .L2X    0,A7:A6,B5:B4     ; |99| Post-sched spill
;*  60              FSUBDP  .L1     A25:A24,A7:A6,A7:A6 ; |59|  ^ 
;*  61              NOP             2
;*  63              FMPYDP  .M1     A1:A0,A7:A6,A1:A0 ; |59|  ^ 
;*  64              NOP             3
;*  67              FMPYDP  .M1     A5:A4,A1:A0,A7:A6 ; |59|  ^ 
;*  68              NOP             3
;*  71              FSUBDP  .L1     A23:A22,A7:A6,A7:A6 ; |59|  ^ 
;*  72              NOP             2
;*  74              FMPYDP  .M1     A1:A0,A7:A6,A7:A6 ; |59|  ^ 
;*  75              NOP             3
;*  78              FMPYDP  .M1     A5:A4,A7:A6,A5:A4 ; |59|  ^ 
;*  79              NOP             1
;*  80              MVD     .M1X    B8,A8             ; |59| Post-sched spill
;*  81              NOP             1
;*  82              FSUBDP  .L1     A17:A16,A5:A4,A5:A4 ; |59|  ^ 
;*  83              NOP             2
;*  85              FMPYDP  .M1     A7:A6,A5:A4,A5:A4 ; |59|  ^ 
;*     ||           MVD     .M2X    A8,B8             ; |59| Post-sched spill
;*  86              NOP             3
;*  89              FMPYDP  .M1X    B7:B6,A5:A4,A5:A4 ; |59|  ^ 
;*  90              MVD     .M1X    B8,A4             ; |59| Post-sched spill
;*  91              NOP             2
;*  93              FADDDP  .L1     A19:A18,A5:A4,A5:A4 ; |59|  ^ 
;*  94              NOP             1
;*  95              MV      .S1     A3,A8             ; |59| 
;*     ||           MVD     .M2X    A4,B6             ; |59| Post-sched spill
;*  96              FMPYDP  .M1     A9:A8,A5:A4,A5:A4 ; |59|  ^ 
;*  97              NOP             1
;*  98              CMPGTDP .S2     B5:B4,B19:B18,B0  ; |59| 
;*  99              NOP             1
;*  100      [ B0]   MVK     .L1     0xffffffff,A4     ; |59| Define a twin register
;*     ||   [ B0]   MVKL    .S1     0x7fefffff,A5
;*     ||   [!B0]   FMPYDP  .M1     A21:A20,A5:A4,A5:A4 ; |59|  ^ 
;*     ||           MVD     .M2     B6,B0             ; |59| Post-sched spill
;*     ||   [ B1]   BDEC    .S2     $C$C95,B1         ; |147| 
;*  101      [ B0]   MVKH    .S1     0x7fefffff,A5
;*  102              NOP             2
;*  104      [ B0]   ZERO    .L1     A5:A4             ; |59|  ^ 
;*  105              STDW    .D2T1   A5:A4,*B10++      ; |59|  ^ 
;*  106              ; BRANCHCC OCCURS {$C$C95}        ; |147| 
;*----------------------------------------------------------------------------*
$C$L6:    ; PIPED LOOP PROLOG
;** --------------------------------------------------------------------------*
$C$L7:    ; PIPED LOOP KERNEL
;          EXCLUSIVE CPU CYCLES: 106
           LDDW    .D1T2   *A30++,B7:B6      ; |99| <0,0>  ^ 
           NOP             4

           CMPLTDP .S2     B7:B6,B17:B16,B4  ; |59| <0,5> 
||         FMPYDP  .M2     B3:B2,B7:B6,B5:B4 ; |99| <0,5>  ^ 

           NOP             2
           MVD     .M1X    B4,A8             ; |59| <0,8> Post-sched spill
           DPINT   .L2     B5:B4,B4          ; |99| <0,9>  ^ 
           NOP             3
           INTDP   .L2     B4,B5:B4          ; |99| <0,13>  ^ 
           ADD     .L1X    A31,B4,A4         ; |59| <0,14> 
           SHL     .S1     A4,20,A9          ; |59| <0,15> 
           NOP             2
           FMPYDP  .M2     B31:B30,B5:B4,B5:B4 ; |99| <0,18>  ^ 
           FMPYDP  .M2     B29:B28,B5:B4,B5:B4 ; |99| <0,19> 
           NOP             2

           DADD    .L1X    0,B7:B6,A7:A6     ; |99| <0,22> Post-sched spill
||         FSUBDP  .L2     B7:B6,B5:B4,B7:B6 ; |99| <0,22>  ^ 

           NOP             2
           FSUBDP  .L2     B7:B6,B5:B4,B5:B4 ; |99| <0,25>  ^ 
           NOP             2
           FMPYDP  .M2     B5:B4,B5:B4,B9:B8 ; |99| <0,28>  ^ 
           DADD    .L1X    0,B5:B4,A5:A4     ; |99| <0,29> Post-sched spill
           NOP             2
           FMPYDP  .M2     B23:B22,B9:B8,B5:B4 ; |99| <0,32>  ^ 
           NOP             1
           FMPYDP  .M2     B21:B20,B9:B8,B5:B4 ; |100| <0,34> 
           NOP             1
           FADDDP  .L2     B25:B24,B5:B4,B7:B6 ; |99| <0,36>  ^ 
           NOP             2

           MV      .L2X    A8,B4             ; |59| <0,39> Post-sched spill
||         FADDDP  .L1X    A27:A26,B5:B4,A1:A0 ; |100| <0,39> 
||         FMPYDP  .M2     B9:B8,B7:B6,B5:B4 ; |99| <0,39>  ^ 

           NOP             1
           MVD     .M1X    B4,A4             ; |59| <0,41> Post-sched spill
           NOP             1

           FMPYDP  .M2X    B9:B8,A1:A0,B5:B4 ; |100| <0,43> 
||         FADDDP  .L2     B27:B26,B5:B4,B7:B6 ; |99| <0,43>  ^ 

           DADD    .L2X    0,A5:A4,B5:B4     ; |99| <0,44> Post-sched spill
           NOP             1

           MV      .L2X    A4,B8             ; |59| <0,46> Post-sched spill
||         FMPYDP  .M2     B5:B4,B7:B6,B7:B6 ; |99| <0,46>  ^ 

           NOP             1
           FADDDP  .L1X    A29:A28,B5:B4,A5:A4 ; |100| <0,48> 
           NOP             2
           FSUBDP  .L1X    A5:A4,B7:B6,A5:A4 ; |100| <0,51>  ^ 
           NOP             2
           RCPDP   .S1     A5:A4,A1:A0       ; |59| <0,54>  ^ 
           NOP             1
           FMPYDP  .M1     A5:A4,A1:A0,A7:A6 ; |59| <0,56>  ^ 
           NOP             2
           DADD    .L2X    0,A7:A6,B5:B4     ; |99| <0,59> Post-sched spill
           FSUBDP  .L1     A25:A24,A7:A6,A7:A6 ; |59| <0,60>  ^ 
           NOP             2
           FMPYDP  .M1     A1:A0,A7:A6,A1:A0 ; |59| <0,63>  ^ 
           NOP             3
           FMPYDP  .M1     A5:A4,A1:A0,A7:A6 ; |59| <0,67>  ^ 
           NOP             3
           FSUBDP  .L1     A23:A22,A7:A6,A7:A6 ; |59| <0,71>  ^ 
           NOP             2
           FMPYDP  .M1     A1:A0,A7:A6,A7:A6 ; |59| <0,74>  ^ 
           NOP             3
           FMPYDP  .M1     A5:A4,A7:A6,A5:A4 ; |59| <0,78>  ^ 
           NOP             1
           MVD     .M1X    B8,A8             ; |59| <0,80> Post-sched spill
           NOP             1
           FSUBDP  .L1     A17:A16,A5:A4,A5:A4 ; |59| <0,82>  ^ 
           NOP             2

           MVD     .M2X    A8,B8             ; |59| <0,85> Post-sched spill
||         FMPYDP  .M1     A7:A6,A5:A4,A5:A4 ; |59| <0,85>  ^ 

           NOP             3
           FMPYDP  .M1X    B7:B6,A5:A4,A5:A4 ; |59| <0,89>  ^ 
           MVD     .M1X    B8,A4             ; |59| <0,90> Post-sched spill
           NOP             2
           FADDDP  .L1     A19:A18,A5:A4,A5:A4 ; |59| <0,93>  ^ 
           NOP             1

           MVD     .M2X    A4,B6             ; |59| <0,95> Post-sched spill
||         MV      .S1     A3,A8             ; |59| <0,95> 

           FMPYDP  .M1     A9:A8,A5:A4,A5:A4 ; |59| <0,96>  ^ 
           NOP             1
           CMPGTDP .S2     B5:B4,B19:B18,B0  ; |59| <0,98> 
           NOP             1

           MVD     .M2     B6,B0             ; |59| <0,100> Post-sched spill
|| [ B0]   MVK     .L1     0xffffffff,A4     ; |59| <0,100> Define a twin register
|| [ B0]   MVKL    .S1     0x7fefffff,A5     ; <0,100> 
|| [ B1]   BDEC    .S2     $C$L7,B1          ; |147| <0,100> 
|| [!B0]   FMPYDP  .M1     A21:A20,A5:A4,A5:A4 ; |59| <0,100>  ^ 

   [ B0]   MVKH    .S1     0x7fefffff,A5     ; <0,101> 
           NOP             2
   [ B0]   ZERO    .L1     A5:A4             ; |59| <0,104>  ^ 
           STDW    .D2T1   A5:A4,*B10++      ; |59| <0,105>  ^ 
;** --------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 24
           STW     .D2T2   B3,*+SP(20)
           STW     .D2T2   B28,*+SP(28)
           STW     .D2T2   B27,*+SP(36)
           STW     .D2T2   B25,*+SP(44)
           STW     .D2T2   B24,*+SP(40)
           STW     .D2T2   B23,*+SP(52)
           STW     .D2T2   B22,*+SP(48)
           STW     .D2T2   B21,*+SP(68)
           STW     .D2T2   B20,*+SP(64)
           STW     .D2T2   B19,*+SP(76)
           STW     .D2T2   B18,*+SP(72)
           STW     .D2T2   B16,*+SP(88)
           STW     .D2T1   A26,*+SP(56)
           STW     .D2T1   A21,*+SP(80)
           STW     .D2T1   A19,*+SP(84)

           MVKL    .S1     output,A11
||         STW     .D2T2   B2,*+SP(16)

           MV      .L1     A17,A12
||         STW     .D2T2   B29,*+SP(32)
||         MVK     .S1     0xc9,A6           ; |150| 

           MVKH    .S1     output,A11
||         MV      .L1X    B13,A4            ; |150| 
||         RINT                              ; interrupts on
||         MV      .D1     A25,A13
||         STW     .D2T2   B31,*+SP(24)

           CALLP   .S2     expdp_v,B3
||         LDW     .D1T2   *+A11(16),B4      ; |150| 
||         STW     .D2T1   A27,*+SP(60)
||         MV      .L1     A29,A15
||         MV      .S1     A31,A14
||         MV      .L2     B17,B11

$C$RL7:    ; CALL OCCURS {expdp_v} {0}       ; |150| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 53
           MVK     .S2     0xc9,B4           ; |152| 

           CALLP   .S2     save_output,B3
||         LDW     .D1T1   *+A11(12),A4      ; |152| 

$C$RL8:    ; CALL OCCURS {save_output} {0}   ; |152| 
           MVKL    .S2     0xe1796495,B6
           MVKL    .S2     0x3da5fd7f,B7
           MVKH    .S2     0xe1796495,B6

           LDW     .D1T1   *A11,A4           ; |66| 
||         MVKH    .S2     0x3da5fd7f,B7

           CALLP   .S2     isequal,B3
||         LDW     .D1T2   *+A11(4),B4       ; |66| 
||         MVK     .S1     0xc9,A6           ; |66| 
||         MVK     .L1     0x9,A8            ; |66| 

$C$RL9:    ; CALL OCCURS {isequal} {0}       ; |66| 
           MVKL    .S2     fcn_pass,B4
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     fcn_pass,B4
           MVKH    .S2     0x3da5fd7f,B7

           MV      .L2X    A11,B5            ; |66| 
||         STW     .D2T1   A4,*+B4(4)        ; |66| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D1T2   *+A11(8),B4       ; |67| 
||         LDW     .D2T1   *B5,A4            ; |67| 
||         MVK     .S1     0xc9,A6           ; |67| 
||         MVK     .L1     0x9,A8            ; |67| 

$C$RL10:   ; CALL OCCURS {isequal} {0}       ; |67| 
           MVKL    .S2     fcn_pass,B6
           MVKL    .S2     0x3da5fd7f,B7
           MVKH    .S2     fcn_pass,B6

           MVKH    .S2     0x3da5fd7f,B7
||         STW     .D2T2   B12,*+SP(92)      ; |67| 

           MV      .L2     B12,B4
||         STW     .D2T1   A4,*+B6(8)        ; |67| 
||         MVKL    .S2     0xe1796495,B6

           MV      .L2X    A11,B5
||         LDW     .D2T2   *B4,B4            ; |68| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T1   *B5,A4            ; |68| 
||         MVK     .S1     0xc9,A6           ; |68| 
||         MVK     .L1     0x9,A8            ; |68| 

$C$RL11:   ; CALL OCCURS {isequal} {0}       ; |68| 
           MVKL    .S2     fcn_pass,B4
           MVKL    .S2     0xe1796495,B6
           MVKL    .S2     0x3da5fd7f,B7
           MVKH    .S2     fcn_pass,B4

           ADD     .L1X    4,B12,A3
||         STW     .D2T1   A4,*+B4(12)       ; |68| 
||         MVKH    .S2     0xe1796495,B6

           MV      .L2X    A11,B31           ; |69| 
||         STW     .D2T1   A3,*+SP(96)
||         MVKH    .S2     0x3da5fd7f,B7

           CALLP   .S2     isequal,B3
||         LDW     .D1T2   *A3,B4            ; |69| 
||         LDW     .D2T1   *B31,A4           ; |69| 
||         MVK     .S1     0xc9,A6           ; |69| 
||         MVK     .L1     0x9,A8            ; |69| 

$C$RL12:   ; CALL OCCURS {isequal} {0}       ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     fcn_pass,A3
||         MVKL    .S2     fcn_pass,B4

           MVKH    .S1     fcn_pass,A3
||         MVKH    .S2     fcn_pass,B4

           ADD     .L1     4,A3,A3
           LDW     .D1T1   *A3,A0            ; |72| 
           STW     .D2T1   A4,*+B4(16)       ; |69| 
           ADD     .L2     8,B4,B4
           STW     .D2T2   B4,*+SP(104)      ; |69| 
           STW     .D2T1   A3,*+SP(100)

   [!A0]   B       .S1     $C$L9             ; |72| 
|| [ A0]   LDW     .D2T2   *B4,B0            ; |72| 

   [!A0]   CALL    .S1     print_test_results ; |156| 
   [ A0]   ADD     .L2     4,B4,B4
   [!A0]   MVKL    .S2     all_pass,B5
   [!A0]   ZERO    .L2     B4                ; |72| 
   [!A0]   MVKH    .S2     all_pass,B5
           ; BRANCHCC OCCURS {$C$L9}         ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 10
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
   [!B0]   ZERO    .L1     A0                ; |72| 
           NOP             1
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1

   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
||         MVK     .L2     0x1,B4            ; |72| 

   [!A0]   ZERO    .L2     B4                ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     print_test_results ; |156| 
           MVKL    .S2     all_pass,B5
           MVKH    .S2     all_pass,B5
           NOP             2
;** --------------------------------------------------------------------------*
$C$L9:    
;          EXCLUSIVE CPU CYCLES: 1

           MVK     .L1     0x1,A4            ; |156| 
||         STW     .D2T2   B4,*B5            ; |72| 
||         ADDKPC  .S2     $C$RL13,B3,0      ; |156| 

$C$RL13:   ; CALL OCCURS {print_test_results} {0}  ; |156| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 56
           STW     .D2T2   B12,*+SP(108)     ; |111| 
           LDW     .D2T1   *+SP(16),A18
           LDW     .D2T1   *+SP(20),A19
           LDW     .D2T1   *+SP(28),A20
           LDW     .D2T1   *+SP(32),A21      ; |99| 
           LDW     .D2T1   *+SP(24),A22      ; |99| 
           LDW     .D2T1   *+SP(48),A23      ; |99| 
           LDW     .D2T1   *+SP(52),A24      ; |99| 
           LDW     .D2T1   *+SP(40),A25      ; |99| 
           LDW     .D2T1   *+SP(44),A26      ; |99| 
           LDW     .D2T1   *+SP(36),A27      ; |99| 
           LDW     .D2T1   *+SP(64),A28      ; |99| 
           LDW     .D2T1   *+SP(68),A29      ; |99| 
           LDW     .D2T1   *+SP(56),A30      ; |99| 
           LDW     .D2T1   *+SP(60),A31      ; |100| 
           STW     .D2T1   A15,*+SP(220)     ; |100| 
           STW     .D2T1   A15,*+SP(172)     ; |100| 
           LDW     .D2T1   *+SP(80),A3       ; |111| 
           STW     .D2T1   A13,*+SP(228)     ; |111| 
           STW     .D2T1   A13,*+SP(204)     ; |111| 
           STW     .D2T1   A13,*+SP(196)     ; |111| 
           LDW     .D2T1   *+SP(88),A10      ; |111| 
           LDW     .D2T2   *+SP(76),B13      ; |111| 

           LDW     .D2T2   *+SP(72),B12      ; |111| 
||         ZERO    .L1     A2                ; |168| 

           STW     .D2T1   A2,*+SP(128)      ; |165| 

           STW     .D2T1   A2,*+SP(216)      ; |164| 
||         ZERO    .L2     B27               ; |168| 

           STW     .D2T2   B27,*+SP(168)     ; |165| 
||         MVK     .L2     0x8,B29

           STW     .D2T2   B29,*+SP(12)      ; |166| 
||         ZERO    .L2     B30               ; |168| 

           STW     .D2T2   B30,*+SP(192)     ; |165| 

           STW     .D2T2   B30,*+SP(224)     ; |164| 
||         ZERO    .L1     A4                ; |168| 

           STW     .D2T1   A4,*+SP(208)      ; |164| 
||         MVKL    .S2     a_sc,B6
||         MVK     .L2     0xffffffff,B5     ; |170| 
||         ZERO    .L1     A6                ; |168| 

           STW     .D2T1   A6,*+SP(144)      ; |165| 
||         MV      .L2     B5,B4             ; |170| 
||         MVKH    .S2     a_sc,B6

           STDW    .D2T2   B5:B4,*+B6(56)    ; |170| 
||         MV      .L2     B30,B25           ; |164| 

           STW     .D2T2   B25,*+SP(200)     ; |164| 
           STW     .D2T1   A18,*+SP(120)
           STW     .D2T1   A19,*+SP(124)
           STW     .D2T1   A20,*+SP(136)
           STW     .D2T1   A21,*+SP(140)
           STW     .D2T1   A22,*+SP(132)     ; |99| 
           STW     .D2T1   A23,*+SP(160)     ; |99| 
           STW     .D2T1   A24,*+SP(164)     ; |99| 
           STW     .D2T1   A25,*+SP(152)     ; |99| 
           STW     .D2T1   A26,*+SP(156)     ; |99| 
           STW     .D2T1   A27,*+SP(148)     ; |99| 
           STW     .D2T1   A28,*+SP(184)     ; |99| 
           STW     .D2T1   A29,*+SP(188)     ; |99| 
           STW     .D2T1   A30,*+SP(176)     ; |99| 

           STW     .D2T1   A31,*+SP(180)     ; |99| 
||         ZERO    .L2     B8                ; |168| 
||         ZERO    .S2     B9

           STW     .D2T1   A3,*+SP(212)      ; |111| 
||         MV      .L1X    B6,A15            ; |163| 
||         MV      .L2     B6,B31            ; |163| 
||         MVKH    .S2     0xfff00000,B9
||         ZERO    .S1     A9

           STDW    .D2T2   B9:B8,*+B31(24)   ; |166| 
||         SET     .S1     A9,0x14,0x1d,A9
||         ZERO    .L1     A5
||         ZERO    .D1     A8                ; |168| 

           STDW    .D2T1   A9:A8,*+B31(32)   ; |167| 
||         MV      .L2X    A15,B26           ; |165| 
||         MVKH    .S1     0x80000000,A5
||         ZERO    .L1     A7

           STDW    .D2T1   A5:A4,*+B26(8)    ; |164| 
||         MV      .L2X    A15,B28           ; |166| 
||         SET     .S1     A7,0x14,0x1e,A7

           STDW    .D2T1   A7:A6,*+B28(16)   ; |165| 
||         MV      .L2     B6,B4
||         ADD     .L1     -1,A5,A17
||         MV      .S1X    B5,A16

           ZERO    .L2     B5:B4             ; |163| 
||         STDW    .D2T1   A17:A16,*+B4(48)  ; |169| 
||         ZERO    .S2     B7

           ZERO    .L2     B6                ; |168| 
||         STDW    .D2T2   B5:B4,*B6         ; |163| 
||         MVKH    .S2     0xbff00000,B7

           CALL    .S1     exp               ; |173| 
||         STDW    .D2T2   B7:B6,*+B31(40)   ; |168| 
||         ZERO    .L1     A13               ; |168| 
||         MV      .D1X    B11,A11           ; |111| 
||         ZERO    .L2     B10               ; |168| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L10:    
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A15,A5:A4        ; |173| 
           ADDKPC  .S2     $C$RL14,B3,3      ; |173| 
$C$RL14:   ; CALL OCCURS {exp} {0}           ; |173| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 30
           MVKL    .S2     output,B4
           MVKH    .S2     output,B4
           LDW     .D2T2   *B4,B4            ; |173| 
           NOP             4
           ADD     .L2     B10,B4,B4         ; |173| 
           STDW    .D2T1   A5:A4,*B4         ; |173| 

           CALLP   .S2     expdp,B3
||         LDDW    .D1T1   *A15,A5:A4        ; |174| 

$C$RL15:   ; CALL OCCURS {expdp} {0}         ; |174| 
           MVKL    .S2     output,B4
           MVKH    .S2     output,B4
           LDW     .D2T2   *+B4(4),B4        ; |174| 
           NOP             4
           ADD     .L2     B10,B4,B4         ; |174| 
           STDW    .D2T1   A5:A4,*B4         ; |174| 

           CALLP   .S2     expdp_c,B3
||         LDDW    .D1T1   *A15,A5:A4        ; |175| 

$C$RL16:   ; CALL OCCURS {expdp_c} {0}       ; |175| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 121
           MVKL    .S2     output,B4
           MVKH    .S2     output,B4
           LDW     .D2T2   *+B4(8),B4        ; |175| 
           LDDW    .D2T1   *+SP(120),A7:A6
           LDDW    .D2T1   *+SP(160),A17:A16
           LDW     .D2T2   *+SP(108),B31
           NOP             1
           ADD     .L2     B10,B4,B4         ; |175| 
           STDW    .D2T1   A5:A4,*B4         ; |175| 
           LDDW    .D1T1   *A15++,A5:A4      ; |176| 
           LDDW    .D2T2   *+SP(136),B5:B4
           NOP             3
           FMPYDP  .M1     A7:A6,A5:A4,A7:A6 ; |99| 
           CMPLTDP .S1     A5:A4,A11:A10,A0  ; |119| 
           CMPGTDP .S2X    A5:A4,B13:B12,B0  ; |114| 
           NOP             1
           DPINT   .L1     A7:A6,A3          ; |99| 
           LDDW    .D2T1   *+SP(128),A7:A6
           NOP             2
           INTDP   .L1     A3,A9:A8          ; |99| 
           ADD     .L1     A14,A3,A3         ; |111| 
           NOP             3
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |99| 
           FMPYDP  .M2X    B5:B4,A9:A8,B5:B4 ; |99| 
           NOP             2
           FSUBDP  .L1     A5:A4,A7:A6,A7:A6 ; |99| 
           NOP             2
           FSUBDP  .L1X    A7:A6,B5:B4,A7:A6 ; |99| 
           LDDW    .D2T2   *+SP(184),B5:B4   ; |99| 
           NOP             1
           FMPYDP  .M1     A7:A6,A7:A6,A9:A8 ; |99| 
           NOP             3

           FMPYDP  .M1     A17:A16,A9:A8,A19:A18 ; |99| 
||         LDDW    .D2T1   *+SP(152),A17:A16

           FMPYDP  .M2X    B5:B4,A9:A8,B7:B6 ; |100| 
           LDDW    .D2T2   *+SP(176),B5:B4
           NOP             2
           FADDDP  .L1     A17:A16,A19:A18,A17:A16 ; |99| 
           LDDW    .D2T1   *+SP(144),A19:A18
           FADDDP  .L2     B5:B4,B7:B6,B5:B4 ; |100| 
           FMPYDP  .M1     A9:A8,A17:A16,A17:A16 ; |99| 
           LDDW    .D2T2   *+SP(168),B7:B6
           FMPYDP  .M2X    A9:A8,B5:B4,B5:B4 ; |100| 
           MV      .L1     A13,A8            ; |111| 
           FADDDP  .L1     A19:A18,A17:A16,A17:A16 ; |99| 
           SHL     .S1     A3,20,A9          ; |111| 
           FADDDP  .L2     B7:B6,B5:B4,B5:B4 ; |100| 
           FMPYDP  .M1     A7:A6,A17:A16,A7:A6 ; |99| 
           NOP             4
           FSUBDP  .L2X    B5:B4,A7:A6,B17:B16 ; |100| 
           LDDW    .D2T2   *+SP(192),B5:B4
           NOP             1
           RCPDP   .S2     B17:B16,B7:B6     ; |111| 
           NOP             1
           FMPYDP  .M2     B17:B16,B7:B6,B9:B8 ; |111| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |111| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |111| 
           LDDW    .D2T2   *+SP(200),B5:B4
           NOP             2
           FMPYDP  .M2     B17:B16,B7:B6,B9:B8 ; |111| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |111| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |111| 
           LDDW    .D2T2   *+SP(224),B5:B4
           NOP             2
           FMPYDP  .M2     B17:B16,B7:B6,B9:B8 ; |111| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |111| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |111| 
           NOP             4

           FMPYDP  .M1X    A7:A6,B5:B4,A17:A16 ; |111| 
||         LDDW    .D2T1   *+SP(216),A7:A6   ; |111| 

           LDW     .D2T2   *+SP(12),B5       ; |120| 
           LDW     .D2T2   *B31,B4           ; |176| 
           NOP             2
           FADDDP  .L1     A7:A6,A17:A16,A7:A6 ; |111| 
           SUB     .L2     B5,1,B30          ; |172| 
           SUB     .S1X    B5,1,A2           ; |172| 

           FMPYDP  .M1     A9:A8,A7:A6,A9:A8 ; |111| 
||         LDDW    .D2T1   *+SP(208),A7:A6

           ADD     .L2     B10,B4,B4         ; |176| 
           STW     .D2T2   B30,*+SP(12)      ; |176| 
           ADD     .L2     8,B10,B10         ; |172| 
   [!A2]   MVKL    .S2     output,B10
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |111| 
   [!A2]   MVKH    .S2     output,B10
   [ A2]   BNOP    .S1     $C$L10,1          ; |172| 

   [ B0]   MVKL    .S1     0x7fefffff,A7
|| [ B0]   MVK     .L1     0xffffffff,A6     ; |115| 

   [ B0]   MVKH    .S1     0x7fefffff,A7
   [ A0]   ZERO    .L1     A7:A6             ; |120| 

   [ A2]   CALL    .S1     exp               ; |173| 
||         STDW    .D2T1   A7:A6,*B4         ; |176| 

           ; BRANCHCC OCCURS {$C$L10}        ; |172| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 6
           CALL    .S1     expdp_v           ; |178| 
           LDW     .D2T2   *+B10(16),B4      ; |178| 
           MVKL    .S1     a_sc,A4
           MVKH    .S1     a_sc,A4
           ADDKPC  .S2     $C$RL17,B3,0      ; |178| 
           MVK     .L1     0x8,A6            ; |178| 
$C$RL17:   ; CALL OCCURS {expdp_v} {0}       ; |178| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 43
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     0x3da5fd7f,B7

           LDW     .D2T1   *B10,A4           ; |66| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T2   *+B10(4),B4       ; |66| 
||         MVK     .L1     0x8,A6            ; |66| 
||         MVK     .S1     0x9,A8            ; |66| 

$C$RL18:   ; CALL OCCURS {isequal} {0}       ; |66| 
           MVKL    .S2     0x3da5fd7f,B7

           MVKL    .S1     fcn_pass,A3
||         MVKL    .S2     0xe1796495,B6

           MVKH    .S1     fcn_pass,A3
||         MVKH    .S2     0x3da5fd7f,B7

           STW     .D1T1   A4,*+A3(4)        ; |66| 
||         LDW     .D2T2   *+B10(8),B4       ; |67| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T1   *B10,A4           ; |67| 
||         MVK     .L1     0x8,A6            ; |67| 
||         MVK     .S1     0x9,A8            ; |67| 

$C$RL19:   ; CALL OCCURS {isequal} {0}       ; |67| 
           MVKL    .S2     0x3da5fd7f,B7

           MVKL    .S1     fcn_pass,A5
||         MVKL    .S2     0xe1796495,B6

           MVKH    .S1     fcn_pass,A5
||         MVKH    .S2     0x3da5fd7f,B7

           MV      .L1X    B10,A3            ; |67| 
||         STW     .D1T1   A4,*+A5(8)        ; |67| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D1T1   *A3,A4            ; |68| 
||         LDW     .D2T2   *+B10(12),B4      ; |68| 
||         MVK     .L1     0x8,A6            ; |68| 
||         MVK     .S1     0x9,A8            ; |68| 

$C$RL20:   ; CALL OCCURS {isequal} {0}       ; |68| 
           LDW     .D2T1   *+SP(96),A3       ; |68| 
           MVKL    .S2     0xe1796495,B6
           MVKL    .S1     fcn_pass,A31
           MVKL    .S2     0x3da5fd7f,B7
           MVKH    .S1     fcn_pass,A31

           MVKH    .S2     0xe1796495,B6
||         STW     .D2T1   A3,*+SP(108)      ; |68| 

           MV      .L2X    A3,B4             ; |66| 
||         MV      .L1X    B10,A3            ; |69| 
||         STW     .D1T1   A4,*+A31(12)      ; |68| 
||         MVKH    .S2     0x3da5fd7f,B7

           CALLP   .S2     isequal,B3
||         LDW     .D2T2   *B4,B4            ; |69| 
||         LDW     .D1T1   *A3,A4            ; |69| 
||         MVK     .L1     0x8,A6            ; |69| 
||         MVK     .S1     0x9,A8            ; |69| 

$C$RL21:   ; CALL OCCURS {isequal} {0}       ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 17
           LDW     .D2T1   *+SP(100),A3      ; |69| 
           MVKL    .S1     fcn_pass,A30
           LDW     .D2T1   *+SP(104),A31
           MVKH    .S1     fcn_pass,A30
           STW     .D1T1   A4,*+A30(16)      ; |69| 
           MV      .L2X    A3,B4             ; |69| 
           LDW     .D2T2   *B4,B0            ; |72| 
           STW     .D2T1   A3,*+SP(112)      ; |69| 
           STW     .D2T1   A31,*+SP(116)     ; |72| 
           NOP             2

   [!B0]   MV      .L1     A13,A4
|| [!B0]   B       .S1     $C$L11            ; |72| 
|| [ B0]   LDW     .D2T2   *+SP(116),B4

   [!B0]   CALL    .S1     print_test_results ; |182| 
   [!B0]   MVKL    .S1     all_pass,A3
           MV      .L2     B0,B1             ; guard predicate rewrite
   [!B0]   MVKH    .S1     all_pass,A3

   [ B0]   LDW     .D2T2   *B4,B0            ; |72| 
|| [ B1]   ADD     .L2     4,B4,B4

           ; BRANCHCC OCCURS {$C$L11}        ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
           MVK     .L1     0x1,A4            ; |72| 
           NOP             1
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
   [!B0]   MV      .L1     A13,A0            ; |72| 
           NOP             3
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1
   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
   [!A0]   MV      .L1     A13,A4
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     print_test_results ; |182| 
           MVKL    .S1     all_pass,A3
           MVKH    .S1     all_pass,A3
           NOP             2
;** --------------------------------------------------------------------------*
$C$L11:    
;          EXCLUSIVE CPU CYCLES: 1

           STW     .D1T1   A4,*A3            ; |72| 
||         MVK     .L1     0x3,A4            ; |182| 
||         ADDKPC  .S2     $C$RL22,B3,0      ; |182| 

$C$RL22:   ; CALL OCCURS {print_test_results} {0}  ; |182| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 49
           LDW     .D2T1   *+SP(16),A16
           LDW     .D2T1   *+SP(20),A17
           LDW     .D2T1   *+SP(28),A18
           LDW     .D2T1   *+SP(32),A19      ; |99| 
           LDW     .D2T1   *+SP(48),A20      ; |99| 
           LDW     .D2T1   *+SP(52),A21      ; |99| 
           LDW     .D2T1   *+SP(40),A22      ; |99| 
           LDW     .D2T1   *+SP(44),A23      ; |99| 
           LDW     .D2T1   *+SP(36),A24      ; |99| 
           LDW     .D2T1   *+SP(64),A25      ; |99| 
           LDW     .D2T1   *+SP(68),A26      ; |99| 
           LDW     .D2T1   *+SP(56),A27      ; |99| 
           LDW     .D2T1   *+SP(60),A28      ; |100| 
           LDW     .D2T1   *+SP(84),A29      ; |111| 
           LDW     .D2T1   *+SP(80),A30      ; |111| 
           STW     .D2T1   A12,*+SP(188)     ; |111| 
           STW     .D2T1   A12,*+SP(196)     ; |111| 

           STW     .D2T1   A12,*+SP(220)     ; |111| 
||         ZERO    .L1     A4

           STW     .D2T1   A4,*+SP(208)      ; |185| 
||         ZERO    .L1     A9

           STW     .D2T1   A9,*+SP(136)

           STW     .D2T1   A9,*+SP(200)      ; |185| 
||         ZERO    .L2     B5

           STW     .D2T2   B5,*+SP(160)
||         ZERO    .L2     B6

           STW     .D2T2   B6,*+SP(184)
||         MVK     .S2     0x777,B7

           STW     .D2T2   B7,*+SP(12)
           STW     .D2T2   B5,*+SP(192)      ; |185| 

           LDW     .D2T2   *+SP(72),B10      ; |111| 
||         MVKL    .S1     0xcccccccd,A31

           LDW     .D2T1   *+SP(24),A13      ; |99| 
||         MV      .L2     B5,B31            ; |185| 
||         MVKL    .S1     0xc000cccc,A3

           STW     .D2T2   B31,*+SP(216)     ; |185| 
||         MVKH    .S1     0xcccccccd,A31

           STW     .D2T1   A31,*+SP(224)     ; |191| 
||         MVKH    .S1     0xc000cccc,A3

           STW     .D2T1   A3,*+SP(228)      ; |191| 
           STW     .D2T1   A16,*+SP(120)
           STW     .D2T1   A17,*+SP(124)
           STW     .D2T1   A18,*+SP(128)
           STW     .D2T1   A19,*+SP(132)
           STW     .D2T1   A20,*+SP(152)     ; |99| 
           STW     .D2T1   A21,*+SP(156)     ; |99| 
           STW     .D2T1   A22,*+SP(144)     ; |99| 
           STW     .D2T1   A23,*+SP(148)     ; |99| 
           STW     .D2T1   A24,*+SP(140)     ; |99| 
           STW     .D2T1   A25,*+SP(176)     ; |99| 
           STW     .D2T1   A26,*+SP(180)     ; |99| 
           STW     .D2T1   A27,*+SP(168)     ; |99| 
           STW     .D2T1   A28,*+SP(172)     ; |99| 

           STW     .D2T1   A29,*+SP(164)     ; |100| 
||         MVKL    .S2     a_ext,B4

           STW     .D2T1   A29,*+SP(212)     ; |100| 
||         MVKH    .S2     a_ext,B4
||         ZERO    .L1     A5

           STW     .D2T1   A30,*+SP(204)     ; |111| 
||         SET     .S1     A5,0x14,0x14,A5

           CALL    .S1     exp               ; |187| 
||         STDW    .D2T1   A5:A4,*B4         ; |185| 
||         MV      .L1X    B4,A15            ; |185| 

           LDDW    .D1T1   *A15,A5:A4        ; |187| 
||         LDW     .D2T2   *+SP(92),B12      ; |191| 

           ZERO    .L1     A12
||         ZERO    .L2     B13
||         MV      .S2     B13,B11           ; |191| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L12:    
;          EXCLUSIVE CPU CYCLES: 3
           ADDKPC  .S2     $C$RL23,B3,2      ; |187| 
$C$RL23:   ; CALL OCCURS {exp} {0}           ; |187| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 30
           MVKL    .S2     output,B4
           MVKH    .S2     output,B4
           LDW     .D2T2   *B4,B4            ; |187| 
           NOP             4
           ADD     .L2     B13,B4,B4         ; |187| 
           STDW    .D2T1   A5:A4,*B4         ; |187| 

           CALLP   .S2     expdp,B3
||         LDDW    .D1T1   *A15,A5:A4        ; |188| 

$C$RL24:   ; CALL OCCURS {expdp} {0}         ; |188| 
           MVKL    .S2     output,B4
           MVKH    .S2     output,B4
           LDW     .D2T2   *+B4(4),B4        ; |188| 
           NOP             4
           ADD     .L2     B13,B4,B4         ; |188| 
           STDW    .D2T1   A5:A4,*B4         ; |188| 

           CALLP   .S2     expdp_c,B3
||         LDDW    .D1T1   *A15,A5:A4        ; |189| 

$C$RL25:   ; CALL OCCURS {expdp_c} {0}       ; |189| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 133
           MVKL    .S2     output,B4
           MVKH    .S2     output,B4
           LDW     .D2T2   *+B4(8),B4        ; |189| 
           LDDW    .D2T1   *+SP(120),A7:A6
           LDDW    .D2T1   *+SP(144),A19:A18
           LDW     .D2T2   *B12,B31          ; |190| 
           NOP             1
           ADD     .L2     B13,B4,B4         ; |189| 
           STDW    .D2T1   A5:A4,*B4         ; |189| 
           LDDW    .D1T1   *A15,A5:A4        ; |190| 
           LDDW    .D2T2   *+SP(128),B5:B4
           NOP             3
           FMPYDP  .M1     A7:A6,A5:A4,A7:A6 ; |99| 
           CMPLTDP .S1     A5:A4,A11:A10,A0  ; |119| 
           CMPGTDP .S2X    A5:A4,B11:B10,B0  ; |114| 
           NOP             1
           DPINT   .L1     A7:A6,A3          ; |99| 
           NOP             3
           INTDP   .L1     A3,A7:A6          ; |99| 
           ADD     .L1     A14,A3,A3         ; |111| 
           NOP             3
           FMPYDP  .M1     A13:A12,A7:A6,A9:A8 ; |99| 
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |99| 
           NOP             2
           FSUBDP  .L1     A5:A4,A9:A8,A7:A6 ; |99| 
           LDDW    .D2T1   *+SP(224),A5:A4
           NOP             1
           FSUBDP  .L1X    A7:A6,B5:B4,A17:A16 ; |99| 
           LDDW    .D2T1   *+SP(152),A7:A6
           LDDW    .D2T2   *+SP(176),B5:B4   ; |99| 
           FMPYDP  .M1     A17:A16,A17:A16,A9:A8 ; |99| 
           NOP             3
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |99| 
           FMPYDP  .M2X    B5:B4,A9:A8,B7:B6 ; |100| 
           LDDW    .D2T2   *+SP(168),B5:B4
           NOP             1
           FADDDP  .L1     A19:A18,A7:A6,A7:A6 ; |99| 
           NOP             2

           FMPYDP  .M1     A9:A8,A7:A6,A19:A18 ; |99| 
||         LDDW    .D2T1   *+SP(136),A7:A6

           FADDDP  .L2     B5:B4,B7:B6,B5:B4 ; |100| 
           LDDW    .D2T2   *+SP(160),B7:B6
           NOP             2
           FADDDP  .L1     A7:A6,A19:A18,A7:A6 ; |99| 
           FMPYDP  .M2X    A9:A8,B5:B4,B5:B4 ; |100| 
           NOP             1
           FMPYDP  .M1     A17:A16,A7:A6,A7:A6 ; |99| 
           MV      .L1     A12,A16           ; |111| 
           FADDDP  .L2     B7:B6,B5:B4,B5:B4 ; |100| 
           SHL     .S1     A3,20,A17         ; |111| 
           NOP             1
           FSUBDP  .L2X    B5:B4,A7:A6,B17:B16 ; |100| 
           LDDW    .D2T2   *+SP(184),B5:B4
           NOP             1
           RCPDP   .S2     B17:B16,B7:B6     ; |111| 
           NOP             1
           FMPYDP  .M2     B17:B16,B7:B6,B9:B8 ; |111| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |111| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B7:B6 ; |111| 
           LDDW    .D2T2   *+SP(192),B5:B4
           NOP             2
           FMPYDP  .M2     B17:B16,B7:B6,B9:B8 ; |111| 
           NOP             3
           FSUBDP  .L2     B5:B4,B9:B8,B5:B4 ; |111| 
           NOP             2
           FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |111| 
           LDDW    .D2T2   *+SP(216),B7:B6
           NOP             2
           FMPYDP  .M2     B17:B16,B5:B4,B9:B8 ; |111| 
           NOP             3
           FSUBDP  .L2     B7:B6,B9:B8,B7:B6 ; |111| 
           NOP             2
           FMPYDP  .M2     B5:B4,B7:B6,B5:B4 ; |111| 
           NOP             4

           FMPYDP  .M1X    A7:A6,B5:B4,A9:A8 ; |111| 
||         LDDW    .D2T1   *+SP(208),A7:A6   ; |111| 

           ADD     .L2     B13,B31,B4        ; |190| 
           ADD     .L2     8,B13,B13         ; |186| 
           NOP             2
           FADDDP  .L1     A7:A6,A9:A8,A7:A6 ; |111| 
           NOP             2

           FMPYDP  .M1     A17:A16,A7:A6,A9:A8 ; |111| 
||         LDDW    .D2T1   *+SP(200),A7:A6

           NOP             4
           FMPYDP  .M1     A7:A6,A9:A8,A7:A6 ; |111| 
           NOP             3

   [ B0]   MVKL    .S1     0x7fefffff,A7
|| [ B0]   MVK     .L1     0xffffffff,A6     ; |115| 

   [ B0]   MVKH    .S1     0x7fefffff,A7
   [ A0]   ZERO    .L1     A7:A6             ; |120| 
           STDW    .D2T1   A7:A6,*B4         ; |190| 

           LDDW    .D1T1   *A15,A7:A6        ; |191| 
||         LDW     .D2T2   *+SP(12),B4

           NOP             4

           FMPYDP  .M1     A5:A4,A7:A6,A5:A4 ; |191| 
||         SUB     .L1X    B4,1,A0           ; |186| 
||         SUB     .L2     B4,1,B4           ; |186| 

   [ A0]   BNOP    .S1     $C$L12,1          ; |186| 
|| [!A0]   MVKL    .S2     output,B10

   [!A0]   MVKH    .S2     output,B10

   [ A0]   CALL    .S2     exp               ; |187| 
||         STDW    .D1T1   A5:A4,*++A15      ; |191| 
||         STW     .D2T2   B4,*+SP(12)       ; |191| 
|| [!A0]   MVKL    .S1     a_ext,A4

   [!A0]   CALL    .S1     expdp_v           ; |193| 
|| [ A0]   LDDW    .D1T1   *A15,A5:A4        ; |187| 

   [!A0]   LDW     .D2T2   *+B10(16),B4      ; |193| 
           ; BRANCHCC OCCURS {$C$L12}        ; |186| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 4
           MVKH    .S1     a_ext,A4
           MVK     .S1     0x777,A6          ; |193| 
           ADDKPC  .S2     $C$RL26,B3,1      ; |193| 
$C$RL26:   ; CALL OCCURS {expdp_v} {0}       ; |193| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 43
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     0x3da5fd7f,B7

           LDW     .D2T1   *B10,A4           ; |66| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T2   *+B10(4),B4       ; |66| 
||         MVK     .S1     0x777,A6          ; |66| 
||         MVK     .L1     0x9,A8            ; |66| 

$C$RL27:   ; CALL OCCURS {isequal} {0}       ; |66| 
           MVKL    .S2     fcn_pass,B11
           MVKL    .S2     0x3da5fd7f,B7
           MVKH    .S2     fcn_pass,B11
           MVKL    .S2     0xe1796495,B6

           LDW     .D2T2   *+B10(8),B4       ; |67| 
||         MVKH    .S2     0x3da5fd7f,B7

           STW     .D2T1   A4,*+B11(4)       ; |66| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T1   *B10,A4           ; |67| 
||         MVK     .S1     0x777,A6          ; |67| 
||         MVK     .L1     0x9,A8            ; |67| 

$C$RL28:   ; CALL OCCURS {isequal} {0}       ; |67| 
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     0x3da5fd7f,B7

           MV      .L1X    B10,A3            ; |67| 
||         STW     .D2T1   A4,*+B11(8)       ; |67| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D1T1   *A3,A4            ; |68| 
||         LDW     .D2T2   *+B10(12),B4      ; |68| 
||         MVK     .S1     0x777,A6          ; |68| 
||         MVK     .L1     0x9,A8            ; |68| 

$C$RL29:   ; CALL OCCURS {isequal} {0}       ; |68| 
           LDW     .D2T1   *+SP(96),A3       ; |68| 
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     0x3da5fd7f,B7

           MV      .L2     B10,B4            ; |68| 
||         STW     .D2T1   A4,*+B11(12)      ; |68| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T1   *B4,A4            ; |69| 
||         LDW     .D1T2   *A3,B4            ; |69| 
||         MVK     .S1     0x777,A6          ; |69| 
||         MVK     .L1     0x9,A8            ; |69| 

$C$RL30:   ; CALL OCCURS {isequal} {0}       ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
           LDW     .D2T1   *+SP(100),A3      ; |69| 
           LDW     .D2T2   *+SP(104),B4
           STW     .D2T1   A4,*+B11(16)      ; |69| 
           NOP             2
           LDW     .D1T1   *A3,A0            ; |72| 
           NOP             4

   [!A0]   B       .S1     $C$L13            ; |72| 
|| [ A0]   LDW     .D2T2   *B4,B0            ; |72| 

   [!A0]   CALL    .S1     print_test_results ; |197| 
   [ A0]   ADD     .L2     4,B4,B4
   [!A0]   MVKL    .S2     all_pass,B5
   [!A0]   MV      .L2X    A12,B4
   [!A0]   MVKH    .S2     all_pass,B5
           ; BRANCHCC OCCURS {$C$L13}        ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 10
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
   [!B0]   MV      .L1     A12,A0            ; |72| 
           NOP             1
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1

   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
||         MVK     .L2     0x1,B4            ; |72| 

   [!A0]   MV      .L2X    A12,B4
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     print_test_results ; |197| 
           MVKL    .S2     all_pass,B5
           MVKH    .S2     all_pass,B5
           NOP             2
;** --------------------------------------------------------------------------*
$C$L13:    
;          EXCLUSIVE CPU CYCLES: 1

           MVK     .L1     0x4,A4            ; |197| 
||         STW     .D2T2   B4,*B5            ; |72| 
||         ADDKPC  .S2     $C$RL31,B3,0      ; |197| 

$C$RL31:   ; CALL OCCURS {print_test_results} {0}  ; |197| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
           MVKL    .S1     cycle_counts+24,A3

           MVKH    .S1     cycle_counts+24,A3
||         MV      .L2X    A12,B4            ; |114| 
||         MV      .L1     A12,A10           ; |114| 
||         MV      .D1     A12,A11           ; |114| 

           MVC     .S2     B4,TSCL           ; |115| 
||         STDW    .D1T1   A11:A10,*A3       ; |114| 

           MVC     .S2     TSCL,B6           ; |116| 
           MVC     .S2     TSCH,B4           ; |116| 
           MVKL    .S1     t_start,A3

           MVKH    .S1     t_start,A3
||         MV      .L2     B4,B7             ; |116| 

           MVC     .S2     TSCL,B4           ; |117| 
||         STDW    .D1T2   B7:B6,*A3         ; |116| 

           MVC     .S2     TSCH,B8           ; |117| 
           SUBU    .L2     B4,B6,B5:B4       ; |117| 

           EXT     .S2     B5,24,24,B6       ; |117| 
||         SUB     .L2     B8,B7,B31         ; |117| 
||         MVKL    .S1     t_offset,A3

           ADD     .L2     B31,B6,B5         ; |117| 
||         MVKH    .S1     t_offset,A3

           MVK     .S2     0x80,B4
||         STDW    .D1T2   B5:B4,*A3         ; |117| 

           MVKL    .S1     0x40963000,A5

           MVKL    .S2     input,B4
||         MV      .L1X    B4,A12            ; |117| 
||         MVKH    .S1     0x40963000,A5
||         MV      .L2X    A12,B11

           CALL    .S1     gimme_random      ; |206| 
||         MVKH    .S2     input,B4
||         MV      .L1     A10,A4            ; |206| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L14:    
;          EXCLUSIVE CPU CYCLES: 5
           LDW     .D2T2   *B4,B10           ; |206| 
           MVKL    .S2     0xc0863000,B5
           MVKH    .S2     0xc0863000,B5
           ADDKPC  .S2     $C$RL32,B3,0      ; |206| 
           MV      .L2X    A11,B4            ; |206| 
$C$RL32:   ; CALL OCCURS {gimme_random} {0}  ; |206| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 132
           ADD     .L2     B10,B11,B4        ; |206| 

           STDW    .D2T1   A5:A4,*B4         ; |206| 
||         MVC     .S2     TSCL,B8           ; |122| 

           MVC     .S2     TSCH,B9           ; |122| 
           MVKL    .S1     0x3ff71547,A7
           MVKL    .S1     0x652b82fe,A6
           MVKH    .S1     0x3ff71547,A7
           MVKH    .S1     0x652b82fe,A6
           FMPYDP  .M1     A7:A6,A5:A4,A7:A6 ; |59| 
           MV      .L2X    A11,B4            ; |59| 
           MVKL    .S2     0x3fe63000,B5
           MVKH    .S2     0x3fe63000,B5
           DPINT   .L1     A7:A6,A3          ; |59| 
           MVKL    .S2     0xbf2bd010,B7
           MVKL    .S2     0x5c610ca8,B6
           MVKL    .S1     0x3ef152a4,A17
           INTDP   .L1     A3,A7:A6          ; |59| 
           MVKH    .S2     0xbf2bd010,B7
           MVKL    .S1     0x6f58dc1c,A16
           MVKH    .S2     0x5c610ca8,B6
           MVKH    .S1     0x3ef152a4,A17
           MVKH    .S1     0x6f58dc1c,A16
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |59| 
           FMPYDP  .M1X    B7:B6,A7:A6,A7:A6 ; |59| 
           MVKL    .S2     0x6fb3f6e0,B6
           MVKL    .S2     0x3f7c70e4,B7
           MVKH    .S2     0x6fb3f6e0,B6
           FSUBDP  .L1X    A5:A4,B5:B4,A9:A8 ; |59| 
           MVKH    .S2     0x3f7c70e4,B7
           MVKL    .S2     0x6fde3809,B4
           FSUBDP  .L1     A9:A8,A7:A6,A9:A8 ; |59| 
           MVKL    .S2     0x3f403f99,B5
           MVKH    .S2     0x6fde3809,B4
           FMPYDP  .M1     A9:A8,A9:A8,A7:A6 ; |59| 
           MVKH    .S2     0x3f403f99,B5
           ZERO    .L1     A31
           ZERO    .L2     B31

           FMPYDP  .M1     A17:A16,A7:A6,A19:A18 ; |59| 
||         MVKL    .S1     0x3fac718e,A17

           MVKL    .S1     0x714251b3,A16
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |59| 
           MVKH    .S1     0x3fac718e,A17
           MVKH    .S1     0x714251b3,A16
           FADDDP  .L2X    B7:B6,A19:A18,B7:B6 ; |59| 
           MV      .L1     A10,A18           ; |59| 
           ZERO    .L1     A19
           FMPYDP  .M2X    A7:A6,B7:B6,B7:B6 ; |59| 
           MVKH    .S1     0x3fd00000,A19
           FADDDP  .L1X    A17:A16,B5:B4,A17:A16 ; |59| 
           MV      .L2X    A11,B18           ; |59| 
           FADDDP  .L2X    A19:A18,B7:B6,B5:B4 ; |59| 
           FMPYDP  .M1     A7:A6,A17:A16,A7:A6 ; |59| 
           SET     .S1     A31,0x15,0x1d,A17
           FMPYDP  .M2X    A9:A8,B5:B4,B7:B6 ; |59| 
           MV      .L1     A18,A16           ; |59| 
           FADDDP  .L1     A17:A16,A7:A6,A7:A6 ; |59| 
           SET     .S2     B31,0x1e,0x1e,B5
           MV      .L2X    A11,B4            ; |59| 
           FSUBDP  .L1X    A7:A6,B7:B6,A9:A8 ; |59| 
           ZERO    .L2     B19
           MV      .L2X    A11,B12           ; |59| 
           RCPDP   .S1     A9:A8,A7:A6       ; |59| 
           SET     .S2     B19,0x1e,0x1e,B19
           FMPYDP  .M1     A7:A6,A9:A8,A17:A16 ; |59| 
           ZERO    .L2     B13
           ADD     .L2     B10,B11,B30       ; |114| 
           SET     .S2     B13,0x15,0x1d,B13
           MVKL    .S1     t_start,A30
           FSUBDP  .L2X    B5:B4,A17:A16,B5:B4 ; |59| 
           MVKH    .S1     t_start,A30
           STDW    .D1T2   B9:B8,*A30
           FMPYDP  .M2X    A7:A6,B5:B4,B5:B4 ; |59| 
           ADD     .L1     A14,A3,A3         ; |111| 
           MV      .L1X    B19,A7            ; |59| 
           MV      .L1     A18,A6            ; |59| 
           FMPYDP  .M2X    B5:B4,A9:A8,B17:B16 ; |59| 
           MVKL    .S1     0xc086232b,A19
           MVKH    .S1     0xc086232b,A19
           MV      .L1     A10,A16           ; |114| 
           FSUBDP  .L2     B19:B18,B17:B16,B17:B16 ; |59| 
           MVKL    .S1     0xdd7abcd2,A18
           MVKH    .S1     0xdd7abcd2,A18
           FMPYDP  .M2     B17:B16,B5:B4,B5:B4 ; |59| 
           CMPLTDP .S1     A5:A4,A19:A18,A1  ; |119| 
           ZERO    .L1     A17
           MVKH    .S1     0x40100000,A17
           FMPYDP  .M2X    B5:B4,A9:A8,B17:B16 ; |59| 
           SHL     .S1     A3,20,A9          ; |111| 
           MV      .L1     A10,A8            ; |114| 
           NOP             2
           FSUBDP  .L1X    A7:A6,B17:B16,A7:A6 ; |59| 
           NOP             3
           FMPYDP  .M2X    B5:B4,A7:A6,B5:B4 ; |59| 
           MVKL    .S1     0x40862e42,A7
           MVKL    .S1     0xff7a39eb,A6
           MVKH    .S1     0x40862e42,A7
           FMPYDP  .M2     B7:B6,B5:B4,B5:B4 ; |59| 
           MVKH    .S1     0xff7a39eb,A6
           NOP             2
           FADDDP  .L2     B13:B12,B5:B4,B5:B4 ; |111| 
           NOP             3

           FMPYDP  .M1X    A9:A8,B5:B4,A5:A4 ; |111| 
||         LDDW    .D2T2   *B30,B5:B4        ; |114| 
||         MVKL    .S2     output+12,B30

           MVKH    .S2     output+12,B30
           LDW     .D2T2   *B30,B29          ; |210| 
           NOP             1
           FMPYDP  .M1     A17:A16,A5:A4,A5:A4 ; |111| 
           CMPGTDP .S1X    B5:B4,A7:A6,A0    ; |114| 
           NOP             1
           ADD     .L2     B11,B29,B28       ; |210| 

   [ A0]   MVKL    .S1     0x7fefffff,A5
|| [ A0]   MVK     .L1     0xffffffff,A4     ; |115| 

   [ A0]   MVKH    .S1     0x7fefffff,A5
   [ A1]   ZERO    .L1     A5:A4             ; |120| 

           STDW    .D2T1   A5:A4,*B28        ; |210| 
||         MVC     .S2     TSCL,B18          ; |128| 

           MVC     .S2     TSCH,B19          ; |128| 

           MVKL    .S2     t_offset,B12
||         SUB     .L1     A12,1,A0          ; |204| 
||         MVKL    .S1     cycle_counts+24,A15
||         ADD     .L2     8,B11,B11         ; |204| 
||         SUB     .D1     A12,1,A12         ; |204| 

           MVKH    .S2     t_offset,B12
||         MVKL    .S1     t_stop,A3
|| [ A0]   MV      .L1     A10,A4            ; |206| 

           LDDW    .D2T2   *B12,B5:B4        ; |130| 
||         MVKL    .S2     cycle_counts+24,B6
|| [ A0]   MVKL    .S1     0x40963000,A5

           MVKH    .S2     cycle_counts+24,B6
||         MVKH    .S1     t_stop,A3

           LDDW    .D2T2   *B6,B7:B6         ; |130| 
||         MVKH    .S1     cycle_counts+24,A15

           STDW    .D1T2   B19:B18,*A3       ; |128| 
   [ A0]   MVKH    .S1     0x40963000,A5
           ADDU    .L2     B4,B8,B17:B16     ; |130| 

           ADD     .S2     B17,B5,B8         ; |130| 
|| [ A0]   B       .S1     $C$L14            ; |204| 
||         SUBU    .L2     B18,B16,B5:B4     ; |130| 

           ADD     .D2     B8,B9,B8          ; |130| 
||         EXT     .S2     B5,24,24,B9       ; |130| 
||         ADDU    .L2     B6,B4,B5:B4       ; |130| 

           SUB     .L2     B19,B8,B8         ; |130| 
||         MV      .S2     B4,B6             ; |130| 
||         ADD     .D2     B5,B7,B4          ; |130| 

           ADD     .L2     B8,B9,B5          ; |130| 

           ADD     .L2     B4,B5,B7          ; |130| 
|| [ A0]   MVKL    .S2     input,B4

   [ A0]   CALL    .S1     gimme_random      ; |206| 
|| [ A0]   MVKH    .S2     input,B4
||         STDW    .D1T2   B7:B6,*A15        ; |130| 

           ; BRANCHCC OCCURS {$C$L14}        ; |204| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 6
           CALL    .S1     __c6xabi_fltllif  ; |135| 
           LDDW    .D1T1   *A15,A5:A4        ; |135| 
           ADDKPC  .S2     $C$RL33,B3,3      ; |135| 
$C$RL33:   ; CALL OCCURS {__c6xabi_fltllif} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           ZERO    .L1     A3
           SET     .S1     A3,0x1a,0x1d,A3
           MPYSP   .M1     A3,A4,A3          ; |135| 
           MV      .L1     A10,A12           ; |135| 
           MV      .L1X    B13,A13           ; |135| 
           NOP             1
           SPDP    .S1     A3,A5:A4          ; |135| 
           NOP             1

           CALLP   .S2     __c6xabi_fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |135| 

$C$RL34:   ; CALL OCCURS {__c6xabi_fixdlli} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 11

           MV      .L2X    A15,B4
||         SUBAW   .D1     A15,6,A3

           STDW    .D1T1   A11:A10,*A3       ; |114| 
||         MV      .L2X    A11,B5            ; |114| 

           MVC     .S2     B5,TSCL           ; |115| 
||         STDW    .D2T1   A5:A4,*B4         ; |135| 

           MVC     .S2     TSCL,B4           ; |116| 
           MVC     .S2     TSCH,B5           ; |116| 
           MVC     .S2     TSCL,B7           ; |117| 
           MVC     .S2     TSCH,B6           ; |117| 
           SUBU    .L2     B7,B4,B9:B8       ; |117| 

           EXT     .S2     B9,24,24,B6       ; |117| 
||         SUB     .L2     B6,B5,B5          ; |117| 
||         MVKL    .S1     output,A3

           ADD     .L2     B5,B6,B5          ; |117| 
||         MV      .S2     B8,B4             ; |117| 
||         MVKH    .S1     output,A3

           STDW    .D2T2   B5:B4,*B12        ; |117| 
||         LDW     .D1T1   *A3,A12
||         MVK     .S1     0x80,A15
||         MV      .L1X    B10,A14

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L15:    
;          EXCLUSIVE CPU CYCLES: 8
           MVC     .S2     TSCL,B4           ; |122| 
           MVC     .S2     TSCH,B5           ; |122| 
           CALL    .S1     exp               ; |219| 
           LDDW    .D1T1   *A14++,A5:A4      ; |219| 
           MVKL    .S2     t_start,B6
           MVKH    .S2     t_start,B6
           STDW    .D2T2   B5:B4,*B6         ; |122| 
           ADDKPC  .S2     $C$RL35,B3,0      ; |219| 
$C$RL35:   ; CALL OCCURS {exp} {0}           ; |219| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 20

           STDW    .D1T1   A5:A4,*A12++      ; |219| 
||         MVC     .S2     TSCL,B8           ; |128| 

           MVC     .S2     TSCH,B6           ; |128| 

           MVKL    .S1     t_start,A3
||         MV      .L2     B12,B10           ; |130| 
||         SUB     .L1     A15,1,A0          ; |217| 
||         MV      .D2     B6,B9             ; |128| 
||         MVKL    .S2     cycle_counts,B6
||         SUB     .D1     A15,1,A15         ; |217| 

           MVKH    .S1     t_start,A3
||         LDDW    .D2T2   *B10,B5:B4        ; |130| 
||         MVKH    .S2     cycle_counts,B6

           LDDW    .D1T1   *A3,A7:A6         ; |130| 
||         MVKL    .S1     cycle_counts,A31

           MVKH    .S1     cycle_counts,A31
|| [!A0]   MV      .L1X    B6,A14

           MVKL    .S1     t_stop,A30
           MVKH    .S1     t_stop,A30
           STDW    .D1T2   B9:B8,*A30        ; |128| 
           ADDU    .L1X    B4,A6,A5:A4       ; |130| 
           ADD     .L1X    A5,B5,A6          ; |130| 

           SUBU    .L2X    B8,A4,B5:B4       ; |130| 
||         LDDW    .D1T1   *A31,A5:A4        ; |130| 
||         ADD     .L1     A6,A7,A6          ; |130| 

           EXT     .S2     B5,24,24,B5       ; |130| 
           SUB     .L2X    B9,A6,B31         ; |130| 

   [ A0]   BNOP    .S1     $C$L15,1          ; |217| 
||         ADD     .L2     B31,B5,B5         ; |130| 

           ADDU    .L2X    A4,B4,B17:B16     ; |130| 
           ADD     .L2X    B17,A5,B4         ; |130| 
           ADD     .L2     B4,B5,B17         ; |130| 

   [!A0]   CALL    .S1     __c6xabi_fltllif  ; |135| 
||         STDW    .D2T2   B17:B16,*B6       ; |130| 

           ; BRANCHCC OCCURS {$C$L15}        ; |217| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *A14,A5:A4        ; |135| 
           ADDKPC  .S2     $C$RL36,B3,3      ; |135| 
$C$RL36:   ; CALL OCCURS {__c6xabi_fltllif} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           ZERO    .L1     A3
           SET     .S1     A3,0x1a,0x1d,A3
           MPYSP   .M1     A3,A4,A3          ; |135| 
           MV      .L1     A10,A12           ; |135| 
           NOP             2
           SPDP    .S1     A3,A5:A4          ; |135| 
           NOP             1

           CALLP   .S2     __c6xabi_fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |135| 

$C$RL37:   ; CALL OCCURS {__c6xabi_fixdlli} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 10

           STDW    .D1T1   A11:A10,*+A14(8)  ; |114| 
||         MV      .L2X    A11,B4            ; |114| 

           MVC     .S2     B4,TSCL           ; |115| 
||         STDW    .D1T1   A5:A4,*A14        ; |135| 

           MVC     .S2     TSCL,B4           ; |116| 
           MVC     .S2     TSCH,B6           ; |116| 
           MVC     .S2     TSCL,B5           ; |117| 
           MVC     .S2     TSCH,B7           ; |117| 
           SUBU    .L2     B5,B4,B5:B4       ; |117| 

           EXT     .S2     B5,24,24,B6       ; |117| 
||         SUB     .L2     B7,B6,B5          ; |117| 
||         MVK     .S1     0x80,A3

           ADD     .L2     B5,B6,B5          ; |117| 

           MV      .L2X    A3,B10            ; |117| 
||         STDW    .D2T2   B5:B4,*B10        ; |117| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L16:    
;          EXCLUSIVE CPU CYCLES: 15
           MVC     .S2     TSCL,B4           ; |122| 
           MVC     .S2     TSCH,B5           ; |122| 
           MVKL    .S1     input,A3
           MVKH    .S1     input,A3
           LDW     .D1T1   *A3,A3            ; |228| 
           MVKL    .S2     t_start,B6
           MVKH    .S2     t_start,B6
           STDW    .D2T2   B5:B4,*B6         ; |122| 
           NOP             1

           ADD     .L1     A12,A3,A3         ; |228| 
||         CALL    .S1     expdp             ; |228| 

           LDDW    .D1T1   *A3,A5:A4         ; |228| 
           ADDKPC  .S2     $C$RL38,B3,3      ; |228| 
$C$RL38:   ; CALL OCCURS {expdp} {0}         ; |228| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 24
           MVKL    .S2     output+4,B4
           MVKH    .S2     output+4,B4
           LDW     .D2T2   *B4,B4            ; |228| 
           NOP             4
           ADD     .L1X    A12,B4,A3         ; |228| 

           STDW    .D1T1   A5:A4,*A3         ; |228| 
||         MVC     .S2     TSCL,B16          ; |128| 

           MVC     .S2     TSCH,B8           ; |128| 

           MVKL    .S2     t_start,B4
||         MV      .L1X    B12,A15           ; |128| 
||         ADDAD   .D1     A14,1,A3
||         MVKL    .S1     t_stop,A31
||         MV      .L2     B8,B17            ; |128| 

           MVKH    .S2     t_start,B4
||         LDDW    .D1T1   *A15,A5:A4        ; |130| 
||         SUB     .L1X    B10,1,A0          ; |226| 
||         MVKH    .S1     t_stop,A31
||         SUB     .L2     B10,1,B10         ; |226| 

           ADD     .L1     8,A12,A12         ; |226| 
||         LDDW    .D2T2   *B4,B7:B6         ; |130| 

           MVK     .S2     8,B11
           LDDW    .D1T1   *A3,A7:A6         ; |130| 
           STDW    .D1T2   B17:B16,*A31      ; |128| 
           ADD     .L2X    A14,B11,B11
           ADDU    .L2X    A4,B6,B5:B4       ; |130| 

           ADD     .S2X    B5,A5,B6          ; |130| 
|| [ A0]   B       .S1     $C$L16            ; |226| 
||         SUBU    .L2     B16,B4,B5:B4      ; |130| 

           ADD     .D2     B6,B7,B6          ; |130| 
||         EXT     .S2     B5,24,24,B7       ; |130| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |130| 

           SUB     .L2     B8,B6,B6          ; |130| 
||         ADD     .S2X    B5,A7,B5          ; |130| 

           ADD     .L2     B6,B7,B6          ; |130| 
           ADD     .L2     B5,B6,B5          ; |130| 

   [!A0]   CALL    .S1     __c6xabi_fltllif  ; |135| 
||         STDW    .D2T2   B5:B4,*B11        ; |130| 

           ; BRANCHCC OCCURS {$C$L16}        ; |226| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *+A14(8),A5:A4    ; |135| 
           ADDKPC  .S2     $C$RL39,B3,3      ; |135| 
$C$RL39:   ; CALL OCCURS {__c6xabi_fltllif} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           ZERO    .L1     A3
           SET     .S1     A3,0x1a,0x1d,A3
           MPYSP   .M1     A3,A4,A3          ; |135| 
           MV      .L1     A10,A12           ; |135| 
           NOP             2
           SPDP    .S1     A3,A5:A4          ; |135| 
           NOP             1

           CALLP   .S2     __c6xabi_fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |135| 

$C$RL40:   ; CALL OCCURS {__c6xabi_fixdlli} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 10

           STDW    .D1T1   A11:A10,*+A14(16) ; |114| 
||         MV      .L2X    A11,B4            ; |114| 

           MVC     .S2     B4,TSCL           ; |115| 
||         STDW    .D2T1   A5:A4,*B11        ; |135| 

           MVC     .S2     TSCL,B5           ; |116| 
           MVC     .S2     TSCH,B4           ; |116| 
           MVC     .S2     TSCL,B6           ; |117| 
           MVC     .S2     TSCH,B8           ; |117| 
           SUBU    .L2     B6,B5,B7:B6       ; |117| 

           EXT     .S2     B7,24,24,B5       ; |117| 
||         SUB     .L2     B8,B4,B4          ; |117| 
||         MVK     .S1     0x80,A3

           ADD     .L2     B4,B5,B7          ; |117| 

           STDW    .D1T2   B7:B6,*A15        ; |117| 
||         MV      .L2X    A3,B10            ; |117| 

;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L17:    
;          EXCLUSIVE CPU CYCLES: 15
           MVC     .S2     TSCL,B4           ; |122| 
           MVC     .S2     TSCH,B5           ; |122| 
           MVKL    .S1     input,A3
           MVKH    .S1     input,A3
           LDW     .D1T1   *A3,A3            ; |237| 
           MVKL    .S2     t_start,B6
           MVKH    .S2     t_start,B6
           STDW    .D2T2   B5:B4,*B6         ; |122| 
           NOP             1

           ADD     .L1     A12,A3,A3         ; |237| 
||         CALL    .S1     expdp_c           ; |237| 

           LDDW    .D1T1   *A3,A5:A4         ; |237| 
           ADDKPC  .S2     $C$RL41,B3,3      ; |237| 
$C$RL41:   ; CALL OCCURS {expdp_c} {0}       ; |237| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 24
           MVKL    .S2     output+8,B4
           MVKH    .S2     output+8,B4
           LDW     .D2T2   *B4,B4            ; |237| 
           NOP             4
           ADD     .L1X    A12,B4,A3         ; |237| 

           STDW    .D1T1   A5:A4,*A3         ; |237| 
||         MVC     .S2     TSCL,B16          ; |128| 

           MVC     .S2     TSCH,B4           ; |128| 

           MVKL    .S2     t_start,B11
||         LDDW    .D1T1   *A15,A5:A4        ; |130| 
||         SUB     .L1X    B10,1,A0          ; |235| 
||         MV      .L2     B4,B17            ; |128| 
||         MVKL    .S1     t_stop,A31
||         SUB     .D2     B10,1,B10         ; |235| 

           MVKH    .S1     t_stop,A31
||         ADD     .L1     8,A12,A12         ; |235| 
||         MVKH    .S2     t_start,B11

           LDDW    .D2T2   *B11,B9:B8        ; |130| 
           ADDAD   .D1     A14,2,A3
           LDDW    .D1T1   *A3,A7:A6         ; |130| 
           STDW    .D1T2   B17:B16,*A31      ; |128| 
           MV      .L2X    A3,B12            ; |128| 
           ADDU    .L2X    A4,B8,B7:B6       ; |130| 

           SUBU    .L2     B16,B6,B5:B4      ; |130| 
||         ADD     .S2X    B7,A5,B6          ; |130| 
|| [ A0]   B       .S1     $C$L17            ; |235| 

           ADD     .D2     B6,B9,B6          ; |130| 
||         EXT     .S2     B5,24,24,B7       ; |130| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |130| 

           SUB     .L2     B17,B6,B6         ; |130| 
||         ADD     .S2X    B5,A7,B5          ; |130| 

           ADD     .L2     B6,B7,B6          ; |130| 
           ADD     .L2     B5,B6,B5          ; |130| 

   [!A0]   CALL    .S1     __c6xabi_fltllif  ; |135| 
||         STDW    .D2T2   B5:B4,*B12        ; |130| 

           ; BRANCHCC OCCURS {$C$L17}        ; |235| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 5
           LDDW    .D1T1   *+A14(16),A5:A4   ; |135| 
           ADDKPC  .S2     $C$RL42,B3,3      ; |135| 
$C$RL42:   ; CALL OCCURS {__c6xabi_fltllif} {0}  ; |135| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 107
           ZERO    .L1     A3
           SET     .S1     A3,0x1a,0x1d,A3
           MPYSP   .M1     A3,A4,A3          ; |135| 
           MV      .L1     A10,A12           ; |135| 
           NOP             2
           SPDP    .S1     A3,A5:A4          ; |135| 
           NOP             1

           CALLP   .S2     __c6xabi_fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |135| 

$C$RL43:   ; CALL OCCURS {__c6xabi_fixdlli} {0}  ; |135| 

           MV      .L2X    A11,B4            ; |114| 
||         MV      .L1X    B12,A12           ; |135| 
||         STDW    .D1T1   A11:A10,*+A14(32) ; |114| 

           STDW    .D1T1   A5:A4,*A12        ; |135| 
||         MVC     .S2     B4,TSCL           ; |115| 

           MVC     .S2     TSCL,B4           ; |116| 
           MVC     .S2     TSCH,B5           ; |116| 

           STDW    .D2T2   B5:B4,*B11        ; |116| 
||         MVC     .S2     TSCL,B6           ; |117| 

           MVC     .S2     TSCH,B8           ; |117| 

           MVKL    .S1     input,A3
||         SUBU    .L2     B6,B4,B7:B6       ; |117| 

           MVKH    .S1     input,A3
||         SUB     .L2     B8,B5,B4          ; |117| 
||         EXT     .S2     B7,24,24,B5       ; |117| 

           MVKL    .S1     output,A10
||         ADD     .L2     B4,B5,B7          ; |117| 

           MV      .L2X    A3,B9             ; |244| 
||         MVKH    .S1     output,A10
||         STDW    .D1T2   B7:B6,*A15        ; |117| 

           CALLP   .S2     expdp_v,B3
||         LDW     .D2T1   *B9,A4            ; |244| 
||         LDW     .D1T2   *+A10(16),B4      ; |244| 
||         MVK     .S1     0x80,A6           ; |244| 

$C$RL44:   ; CALL OCCURS {expdp_v} {0}       ; |244| 
           MVC     .S2     TSCL,B8           ; |128| 
           MVC     .S2     TSCH,B4           ; |128| 

           LDDW    .D1T1   *A15,A5:A4        ; |130| 
||         LDDW    .D2T2   *B11,B7:B6        ; |130| 

           MVK     .S2     16,B10
           ADD     .L2X    A12,B10,B10

           MV      .L2     B4,B9             ; |128| 
||         LDDW    .D2T2   *B10,B5:B4        ; |130| 

           MVKL    .S1     t_stop,A31
           ADDU    .L1X    A4,B6,A7:A6       ; |130| 

           MV      .L1     A6,A3             ; |130| 
||         ADD     .S1     A7,A5,A6          ; |130| 

           SUBU    .L1X    B8,A3,A5:A4       ; |130| 

           ADDU    .L1X    B4,A4,A7:A6       ; |130| 
||         ADD     .L2X    A6,B7,B4          ; |130| 

           EXT     .S1     A5,24,24,A3       ; |130| 

           ADD     .L2X    A7,B5,B5          ; |130| 
||         SUB     .S2     B9,B4,B7          ; |130| 

           ADD     .L2X    B7,A3,B7          ; |130| 
||         MVKH    .S1     t_stop,A31

           ADD     .L2     B5,B7,B5          ; |130| 
||         MV      .S2X    A6,B4             ; |130| 

           MV      .L2X    A31,B6            ; |128| 

           CALLP   .S2     __c6xabi_fltllif,B3
||         DADD    .L1X    0,B5:B4,A5:A4     ; |130| 
||         STDW    .D2T2   B9:B8,*B6         ; |128| 

$C$RL45:   ; CALL OCCURS {__c6xabi_fltllif} {0}  ; |130| 
           ZERO    .L1     A3
           SET     .S1     A3,0x1a,0x1d,A3
           MPYSP   .M1     A3,A4,A3          ; |130| 
           MV      .L1     A11,A12           ; |130| 
           NOP             2
           SPDP    .S1     A3,A5:A4          ; |130| 
           NOP             1

           CALLP   .S2     __c6xabi_fixdlli,B3
||         FADDDP  .L1     A13:A12,A5:A4,A5:A4 ; |130| 

$C$RL46:   ; CALL OCCURS {__c6xabi_fixdlli} {0}  ; |130| 
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     0x3da5fd7f,B7

           STDW    .D2T1   A5:A4,*B10        ; |130| 
||         LDW     .D1T2   *+A10(4),B4       ; |66| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D1T1   *A10,A4           ; |66| 
||         MVK     .L1     0x9,A8            ; |66| 
||         MVK     .S1     0x80,A6           ; |66| 

$C$RL47:   ; CALL OCCURS {isequal} {0}       ; |66| 
           MVKL    .S2     0xe1796495,B6
           MVKL    .S2     0x3da5fd7f,B7

           LDW     .D1T2   *+A10(8),B4       ; |67| 
||         MVKL    .S1     fcn_pass,A11
||         MVKH    .S2     0xe1796495,B6

           MV      .L1     A4,A3             ; |66| 
||         LDW     .D1T1   *A10,A4           ; |67| 
||         MVKH    .S1     fcn_pass,A11
||         MVKH    .S2     0x3da5fd7f,B7

           CALLP   .S2     isequal,B3
||         STW     .D1T1   A3,*+A11(4)       ; |66| 
||         MVK     .S1     0x80,A6           ; |67| 
||         MVK     .L1     0x9,A8            ; |67| 

$C$RL48:   ; CALL OCCURS {isequal} {0}       ; |67| 
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6

           STW     .D1T1   A4,*+A11(8)       ; |67| 
||         MVKH    .S2     0x3da5fd7f,B7

           LDW     .D1T2   *+A10(12),B4      ; |68| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D1T1   *A10,A4           ; |68| 
||         MVK     .S1     0x80,A6           ; |68| 
||         MVK     .L1     0x9,A8            ; |68| 

$C$RL49:   ; CALL OCCURS {isequal} {0}       ; |68| 
           LDW     .D2T2   *+SP(108),B4      ; |68| 
           MVKL    .S2     0x3da5fd7f,B7
           MVKL    .S2     0xe1796495,B6
           MVKH    .S2     0x3da5fd7f,B7

           STW     .D1T1   A4,*+A11(12)      ; |68| 
||         MVKH    .S2     0xe1796495,B6

           CALLP   .S2     isequal,B3
||         LDW     .D2T2   *B4,B4            ; |69| 
||         LDW     .D1T1   *A10,A4           ; |69| 
||         MVK     .S1     0x80,A6           ; |69| 
||         MVK     .L1     0x9,A8            ; |69| 

$C$RL50:   ; CALL OCCURS {isequal} {0}       ; |69| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
           LDW     .D2T2   *+SP(112),B4      ; |69| 
           STW     .D1T1   A4,*+A11(16)      ; |69| 
           NOP             3
           LDW     .D2T2   *B4,B0            ; |72| 
           LDW     .D2T2   *+SP(116),B4
           NOP             3

   [!B0]   B       .S1     $C$L18            ; |72| 
||         MV      .L2     B0,B1             ; guard predicate rewrite

   [ B0]   LDW     .D2T2   *B4,B0            ; |72| 
   [ B1]   ADD     .L2     4,B4,B4
           NOP             3
           ; BRANCHCC OCCURS {$C$L18}        ; |72| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
   [ B0]   LDW     .D2T2   *B4,B4            ; |72| 
   [!B0]   MV      .L1     A12,A0            ; |72| 
           CMPEQ   .L1     A4,0,A3           ; |72| 
           XOR     .L1     1,A3,A3           ; |72| 
           NOP             1
   [ B0]   CMPEQ   .L2     B4,0,B4           ; |72| 
   [ B0]   XOR     .L2     1,B4,B4           ; |72| 
           NOP             1
   [ B0]   AND     .L1X    A3,B4,A0          ; |72| 
   [ A0]   B       .S1     $C$L19            ; |72| 
   [ A0]   CALL    .S1     print_test_results ; |250| 
           MVK     .L1     0x1,A3            ; |72| 
   [ A0]   MVKL    .S1     all_pass,A4
   [ A0]   MVKH    .S1     all_pass,A4
           NOP             1
           ; BRANCHCC OCCURS {$C$L19}        ; |72| 
;** --------------------------------------------------------------------------*
$C$L18:    
;          EXCLUSIVE CPU CYCLES: 5
           CALL    .S1     print_test_results ; |250| 
           MVKL    .S1     all_pass,A4
           MVKH    .S1     all_pass,A4
           MV      .L1     A12,A3
           NOP             1
;** --------------------------------------------------------------------------*
$C$L19:    
;          EXCLUSIVE CPU CYCLES: 1

           STW     .D1T1   A3,*A4            ; |72| 
||         MVK     .L1     0x2,A4            ; |250| 
||         ADDKPC  .S2     $C$RL51,B3,0      ; |250| 

$C$RL51:   ; CALL OCCURS {print_test_results} {0}  ; |250| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 30
           MVKL    .S2     $C$SL5+0,B4
           MVKH    .S2     $C$SL5+0,B4

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |251| 

$C$RL52:   ; CALL OCCURS {printf} {0}        ; |251| 
           MVKL    .S2     $C$SL6+0,B4
           MVKH    .S2     $C$SL6+0,B4

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |251| 

$C$RL53:   ; CALL OCCURS {printf} {0}        ; |251| 
           MVKL    .S1     $C$SL4+0,A10
           MVKH    .S1     $C$SL4+0,A10

           CALLP   .S2     print_profile_results,B3
||         MV      .L1     A10,A4            ; |258| 

$C$RL54:   ; CALL OCCURS {print_profile_results} {0}  ; |258| 

           CALLP   .S2     print_memory_results,B3
||         MV      .L1     A10,A4            ; |261| 

$C$RL55:   ; CALL OCCURS {print_memory_results} {0}  ; |261| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 12
           ADDK    .S2     232,SP            ; |262| 
           LDW     .D2T2   *++SP(8),B3       ; |262| 
           LDDW    .D2T1   *++SP,A13:A12     ; |262| 
           LDDW    .D2T1   *++SP,A15:A14     ; |262| 
           LDDW    .D2T2   *++SP,B11:B10     ; |262| 
           LDDW    .D2T2   *++SP,B13:B12     ; |262| 

           LDW     .D2T1   *++SP(8),A10      ; |262| 
||         RET     .S2     B3                ; |262| 

           LDW     .D2T1   *++SP(8),A11      ; |262| 
           NOP             4
           ; BRANCH OCCURS {B3}              ; |262| 
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"w",0
$C$SL2:	.string	"../expdp_output.dat",0
$C$SL3:	.string	"%.15e",10,0
$C$SL4:	.string	"expDP",0
$C$SL5:	.string	"----------------------------------------",0
$C$SL6:	.string	"----------------------------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	fclose
	.global	fopen
	.global	fprintf
	.global	printf
	.global	exp
	.global	driver_init
	.global	print_profile_results
	.global	print_memory_results
	.global	print_test_results
	.global	gimme_random
	.global	isequal
	.global	expdp
	.global	expdp_c
	.global	expdp_v
	.global	t_start
	.global	t_stop
	.global	t_offset
	.global	cycle_counts
	.global	fcn_pass
	.global	all_pass
	.global	a_ext
	.global	a_sc
	.global	output
	.global	input
	.global	__c6xabi_fltllif
	.global	__c6xabi_fixdlli

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(3)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)
