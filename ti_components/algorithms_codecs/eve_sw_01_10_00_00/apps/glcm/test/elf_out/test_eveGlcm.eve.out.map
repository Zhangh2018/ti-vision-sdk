******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Wed Oct 07 00:49:26 2015

OUTPUT FILE NAME:   <.\elf_out\test_eveGlcm.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  0000f858  000107a8  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00007c8d  00000373  RWIX
  WMEM                  40040000   00007fe0  00007774  0000086c  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  0080337a  017fcc86  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006ee0     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    0000021c                       : fwrite.obj (.text:fwrite)
                  80003738    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003940    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003b40    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003d24    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003ef0    000001cc                       : strtol.obj (.text:strtol)
                  800040bc    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004284    000001c8                       : fgets.obj (.text:_dofgets)
                  8000444c    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004604    000001a0                       : strtoul.obj (.text:strtoul)
                  800047a4    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004930    00000170                       : fputs.obj (.text:fputs)
                  80004aa0    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004c08    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d68    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ec4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  8000501c    00000144                       : fread.obj (.text:fread)
                  80005160    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  800052a0    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053e0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  8000551c    0000012c                       : fopen.obj (.text:_openfile)
                  80005648    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005760    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005874    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005968    000000ec                       : lowlev.obj (.text:open)
                  80005a54    000000e8                       : fputc.obj (.text:fputc)
                  80005b3c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005c18    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005ce4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005da8    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e64    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f20    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fd4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006088    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006134    000000a8                       : fopen.obj (.text:_search_fp)
                  800061dc    000000a8                       : memset.obj (.text:memset)
                  80006284    000000a0                       : lowlev.obj (.text:getdevice)
                  80006324    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063c0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000645c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064f4    00000098                       : vcop_memory.obj (.text:vcop_free)
                  8000658c    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006620    00000094                       : memory.obj (.text:mem_free)
                  800066b4    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006744    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800067d4    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006864    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800068f4    00000090                       : fseek.obj (.text:fseek)
                  80006984    00000090                       : ftell.obj (.text:ftell)
                  80006a14    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006aa0    00000088                       : lowlev.obj (.text:close)
                  80006b28    00000084                       : _printfi.obj (.text:_ecpy)
                  80006bac    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006c2c    00000080                       : fltulld.obj (.text:__arp32abi_fltulld)
                  80006cac    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006d2c    00000080                       : printf.obj (.text:printf)
                  80006dac    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006e28    0000007c                       : fclose.obj (.text:_closefile)
                  80006ea4    0000007c                       : atoi.obj (.text:atoi)
                  80006f20    0000007c                       : fflush.obj (.text:fflush)
                  80006f9c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80007014    00000078                       : _printfi.obj (.text:_div)
                  8000708c    00000078                       : _printfi.obj (.text:_pconv_f)
                  80007104    00000078                       : memory.obj (.text:minit)
                  8000717c    00000074                       : trgdrv.obj (.text:HOSTclose)
                  800071f0    00000074                       : fprintf.obj (.text:fprintf)
                  80007264    00000070                       : autoinit.obj (.text:_auto_init)
                  800072d4    00000070                       : vfprintf.obj (.text:vfprintf)
                  80007344    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  800073b0    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80007418    00000068                       : boot.obj (.text:_c_int00)
                  80007480    00000068                       : lowlev.obj (.text:lseek)
                  800074e8    00000068                       : lowlev.obj (.text:read)
                  80007550    00000068                       : lowlev.obj (.text:write)
                  800075b8    00000064                       : imath64.obj (.text:_subcull)
                  8000761c    00000064                       : ltoa.obj (.text:ltoa)
                  80007680    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  800076e0    00000060                       : fflush.obj (.text:_doflush)
                  80007740    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  8000779c    0000005c                       : lowlev.obj (.text:tabinit)
                  800077f8    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  80007854    00000054                       : _printfi.obj (.text:_fcpy)
                  800078a8    00000054                       : renormd.obj (.text:_renormd)
                  800078fc    00000054                       : exit.obj (.text:exit)
                  80007950    00000050                       : fopen.obj (.text:_cleanup)
                  800079a0    00000050                       : lowlev.obj (.text:finddevice)
                  800079f0    00000050                       : rand.obj (.text:rand)
                  80007a40    0000004c                       : memory.obj (.text:malloc)
                  80007a8c    00000048                       : trgmsg.obj (.text:readmsg)
                  80007ad4    00000048                       : lowlev.obj (.text:unlink)
                  80007b1c    00000048                       : trgmsg.obj (.text:writemsg)
                  80007b64    00000040                       : args_main.obj (.text:_args_main)
                  80007ba4    00000040                       : sprintf.obj (.text:sprintf)
                  80007be4    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007c20    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c5c    0000003c                       : fopen.obj (.text:fopen)
                  80007c98    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007cd0    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007d08    00000038                       : sscanf.obj (.text:sscanf)
                  80007d40    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007d74    00000030                       : fclose.obj (.text:fclose)
                  80007da4    00000030                       : rand.obj (.text:srand)
                  80007dd4    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007e00    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007e28    00000028                       : mult.obj (.text:_mpyl)
                  80007e50    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007e74    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007e98    00000020                       : memccpy.obj (.text:memccpy)
                  80007eb8    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007ed4    0000001c                       : sprintf.obj (.text:_outs)
                  80007ef0    00000018                       : fgets.obj (.text:fgets)
                  80007f08    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007f1c    00000014                       : memory.obj (.text:free)
                  80007f30    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f40    00000010                       : sscanf.obj (.text:_inpchar)
                  80007f50    00000010                       : sprintf.obj (.text:_outc)
                  80007f60    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  80007f70    0000000c                       : fprintf.obj (.text:_outc)
                  80007f7c    0000000c                       : printf.obj (.text:_outc)
                  80007f88    0000000c                       : vfprintf.obj (.text:_outc)
                  80007f94    0000000c                       : fprintf.obj (.text:_outs)
                  80007fa0    0000000c                       : printf.obj (.text:_outs)
                  80007fac    0000000c                       : vfprintf.obj (.text:_outs)
                  80007fb8    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007fc4    0000000c                       : remove.obj (.text:remove)
                  80007fd0    00000008                       : exit.obj (.text:abort)
                  80007fd8    00000004                       : _lock.obj (.text:_nop)
                  80007fdc    00000004                       : pre_init.obj (.text:_system_pre_init)

.bam_text 
*          0    80007fe0    000030cc     
                  80007fe0    00000810     libevealgframework.eve.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  800087f0    00000788                                : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  80008f78    00000544                                : bam_execute.obj (.text:BAM_execute)
                  800094bc    0000047c                                : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  80009938    00000414                                : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  80009d4c    00000378                                : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000a0c4    000001cc                                : bam_construct.obj (.text:BAM_createGraph)
                  8000a290    00000158                                : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000a3e8    00000150                                : bam_memory.obj (.text:bam_mem_alloc)
                  8000a538    00000140                                : bam_memory.obj (.text:bam_getMemPacket)
                  8000a678    00000130                                : bam_execute.obj (.text:BAM_process)
                  8000a7a8    00000120                                : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000a8c8    0000010c                                : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000a9d4    000000e8                                : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000aabc    000000e8                                : bam_memory.obj (.text:bam_mem_free)
                  8000aba4    000000ac                                : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000ac50    000000a8                                : bam_memory.obj (.text:bam_minit)
                  8000acf8    00000098                                : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000ad90    00000090                                : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000ae20    0000008c                                : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000aeac    00000074                                : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000af20    00000068                                : bam_memory.obj (.text:bam_mcheck)
                  8000af88    0000004c                                : bam_construct.obj (.text:BAM_initKernelDB)
                  8000afd4    0000003c                                : bam_execute.obj (.text:BAM_controlNode)
                  8000b010    00000038                                : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000b048    00000024                                : alg_osal.obj (.text:PRINTF)
                  8000b06c    00000024                                : alg_osal.obj (.text:TEST_PRINTF)
                  8000b090    00000018                                : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000b0a8    00000004                                : bam_execute.obj (.text:BAM_dummyKernelFunc)

.text      0    8000b0ac    00002e64     
                  8000b0ac    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  8000be38    00000b3c     glcm_tb.obj (.text:glcmTest)
                  8000c974    00000424     glcm_tb.obj (.text:main)
                  8000cd98    000003e8     configparser.obj (.text:ParseContent)
                  8000d180    00000308     configparser.obj (.text:printparams)
                  8000d488    00000234     eve_profile.obj (.text:profiler_end)
                  8000d6bc    00000194     libevenatckernels.eve.lib : vcop_glcm_cn.obj (.text:vcop_glcm_cn)
                  8000d850    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000d9a4    00000104     glcm_ref_cn.obj (.text:glcm_ref_cn)
                  8000daa8    000000d8     configparser.obj (.text:readparamfile)
                  8000db80    000000c4     eve_profile.obj (.text:profiler_init)
                  8000dc44    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000dcb4    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000dd20    00000064     libevenatckernels.eve.lib : vcop_intensity_scaling_cn.obj (.text:vcop_intensity_scaling_cn)
                  8000dd84    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000dddc    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000de2c    00000048     eve_profile.obj (.text:profiler_start)
                  8000de74    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000deac    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000dedc    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000def4    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000df04    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)

.algo_text 
*          0    8000df10    00001970     
                  8000df10    00000324     libevekernels.eve.lib : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_8c_init)
                  8000e234    00000294                           : bam_glcm_exec_funcs.obj (.text:Bam_Glcm_initFrame)
                  8000e4c8    00000230                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_1c_init)
                  8000e6f8    000001a0                           : vcop_glcm_kernel.obj (.text:vcop_accumulate_8c_glcm_init)
                  8000e898    00000128                           : bam_glcm_helper_funcs.obj (.text:BAM_Glcm_getMemRecFunc)
                  8000e9c0    000000e8                           : vcop_intensity_scaling.obj (.text:prepare_lut)
                  8000eaa8    000000a4                           : vcop_glcm_kernel.obj (.text:vcop_accumulate_8c_glcm)
                  8000eb4c    00000094                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_8c_vloops)
                  8000ebe0    0000006c                           : vcop_glcm_kernel.obj (.text:vcop_initialize_glcm)
                  8000ec4c    00000068                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_1c_vloops)
                  8000ecb4    00000068                           : vcop_intensity_scaling_kernel.obj (.text:vcop_intensity_scaling_init)
                  8000ed1c    00000054                           : bam_intensity_scaling_exec_funcs.obj (.text:Bam_Intensity_scaling_initFrame)
                  8000ed70    00000040                           : bam_intensity_scaling_helper_funcs.obj (.text:BAM_Intensity_scaling_getMemRecFunc)
                  8000edb0    00000024                           : vcop_intensity_scaling_kernel.obj (.text:vcop_intensity_scaling_vloops)
                  8000edd4    00000008                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_1c_param_count)
                  8000eddc    00000008                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_8c_param_count)
                  8000ede4    00000004                           : vcop_intensity_scaling_kernel.obj (.text:vcop_intensity_scaling_param_count)
                  8000ede8    000001c8     libeveGlcm.eve.lib : glcm_alg.obj (.text:GLCM_TI_process)
                  8000efb0    0000015c                        : glcm_alg.obj (.text:GLCM_TI_init)
                  8000f10c    00000154                        : glcm_graph.obj (.text:GLCM_TI_initKernelsArgs)
                  8000f260    00000150                        : glcm_graph.obj (.text:GLCM_TI_graphCreate)
                  8000f3b0    000000bc                        : glcm_alg.obj (.text:GLCM_TI_alloc)
                  8000f46c    000000b0                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_getMemRecFunc)
                  8000f51c    00000088                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_setMemRecFunc)
                  8000f5a4    0000005c                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_updateDDRptr)
                  8000f600    0000005c                        : glcm_alg.obj (.text:GLCM_TI_activate)
                  8000f65c    0000005c                        : glcm_alg.obj (.text:GLCM_TI_deactivate)
                  8000f6b8    00000054                        : glcm_graph.obj (.text:GLCM_TI_dmaControl)
                  8000f70c    0000004c                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_frameInitChannel)
                  8000f758    00000038                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_getMemRecFunc)
                  8000f790    00000038                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_trigger)
                  8000f7c8    00000034                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_updateDDRptr)
                  8000f7fc    00000024                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_setMemRecFunc)
                  8000f820    00000020                        : glcm_graph.obj (.text:GLCM_TI_execute)
                  8000f840    0000001c                        : glcm_graph.obj (.text:GLCM_TI_getGraphMemReq)
                  8000f85c    00000018                        : glcm_alg.obj (.text:GLCM_TI_free)
                  8000f874    00000004                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_wait)
                  8000f878    00000004                        : glcm_alg.obj (.text:GLCM_TI_control)
                  8000f87c    00000004                        : glcm_alg.obj (.text:GLCM_TI_numAlloc)

.starterware_text 
*          0    8000f880    000010d8     
                  8000f880    00000560     libevestarterware_eve.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  8000fde0    00000288                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  80010068    000001c4                               : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8001022c    00000178                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  800103a4    000000e8                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8001048c    000000cc                               : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  80010558    000000c0                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  80010618    00000090                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  800106a8    00000074                               : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8001071c    00000050                               : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8001076c    00000048                               : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  800107b4    00000040                               : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  800107f4    00000040                               : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  80010834    0000002c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  80010860    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  8001088c    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  800108b8    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  800108e4    00000020                               : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  80010904    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  8001091c    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  80010934    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)
                  80010948    0000000c                               : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  80010954    00000004                               : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     glcm_tb.obj (.dmemSect)

.stack     1    40024000    00003000     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00002ffc     --HOLE--

.algo_neardata 
*          1    40027000    00000568     
                  40027000    0000000c     libevekernels.eve.lib : vcop_glcm_kernel.obj (.rodata)
                  4002700c    00000004                           : bam_glcm_exec_funcs.obj (.rodata)
                  40027010    00000008     libeveGlcm.eve.lib : glcm_alg.obj (.rodata)
                  40027018    000002b9                        : glcm_bam_dma_node.obj (.const:.string)
                  400272d1    0000013d                        : glcm_graph.obj (.const:.string)
                  4002740e    000000b2                        : glcm_alg.obj (.const:.string)
                  400274c0    00000054                        : glcm_alg.obj (.const)
                  40027514    0000003c                        : glcm_graph.obj (.const:$P$T0$1)
                  40027550    00000010                        : glcm_graph.obj (.const:$P$T1$2)
                  40027560    00000008                        : glcm_graph.obj (.const:.string:GLCM_TI_gMaxBlkSize)

.rts_neardata 
*          1    40027568    00000268     
                  40027568    00000003     rtsarp32_v200.lib : assert.obj (.const:.string)
                  4002756b    00000001     --HOLE-- [fill = 0]
                  4002756c    00000101                       : ctype.obj (.const:.string:_ctypes_)
                  4002766d    00000001     --HOLE-- [fill = 0]
                  4002766e    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  40027675    00000001     --HOLE-- [fill = 0]
                  40027676    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  4002767c    00000023                       : _printfi.obj (.const:.string)
                  4002769f    00000001     --HOLE-- [fill = 0]
                  400276a0    00000050                       : strtod.obj (.const:digits)
                  400276f0    00000048                       : strtod.obj (.const:powerof10)
                  40027738    00000050                       : strtold.obj (.const:digits)
                  40027788    00000048                       : strtold.obj (.const:powerof10)

.bam_neardata 
*          1    400277d0    000001e5     
                  400277d0    00000018     libevealgframework.eve.lib : bam_memory.obj (.bss) [fill = 0]
                  400277e8    00000005                                : bam_memory.obj (.data)
                  400277ed    00000003     --HOLE-- [fill = 0]
                  400277f0    00000008                                : bam_construct_int.obj (.rodata)
                  400277f8    00000004                                : bam_execute.obj (.rodata)
                  400277fc    00000004                                : bam_memory.obj (.rodata)
                  40027800    00000121                                : bam_construct_int.obj (.const:.string)
                  40027921    00000090                                : bam_execute.obj (.const:.string)
                  400279b1    00000001     --HOLE-- [fill = 0]
                  400279b2    00000003                                : bam_construct_int.obj (.const:.string:$P$T0$1)

.cio       1    400279b8    00000120     UNINITIALIZED
                  400279b8    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.starterware_neardata 
*          1    40027ad8    00000118     
                  40027ad8    000000a8     libevestarterware_eve.lib : dma_resource_allocator.obj (.bss) [fill = 0]
                  40027b80    00000060                               : edma_utils_state.obj (.bss) [fill = 0]
                  40027be0    00000004                               : dma_resource_allocator.obj (.data)
                  40027be4    00000004                               : edma_utils.obj (.data)
                  40027be8    00000004                               : edma_utils_autoincrement.obj (.rodata)
                  40027bec    00000004                               : edma_utils_memcpy.obj (.rodata)

.bss       1    40027bf0    00000048     UNINITIALIZED
                  40027bf0    00000048     eve_profile.obj (.bss)

.data      1    40027c38    00000024     
                  40027c38    00000020     boot_arp32.obj (.data)
                  40027c58    00000004     eve_profile.obj (.data)

.rodata    1    40027c5c    00000034     
                  40027c5c    00000028     ti_stats_collector.obj (.rodata)
                  40027c84    00000008     eve_profile.obj (.rodata)
                  40027c8c    00000004     glcm_tb.obj (.rodata)

.wmem      1    40040000    00007000     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00006ff8     --HOLE--

.vcop_parameter_block 
*          1    40047000    00000774     UNINITIALIZED
                  40047000    00000774     libevekernels.eve.lib : vcop_glcm_kernel.obj (.vcop_parameter_block)

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    00800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    007ffff8     --HOLE--

.fardata   1    80830000    00001800     
                  80830000    00001800     glcm_config.obj (.fardata:gsTokenMap_glcm)

.const     1    80831800    00000e56     
                  80831800    000003d2     eve_profile.obj (.const:.string)
                  80831bd2    000003b1     glcm_tb.obj (.const:.string)
                  80831f83    00000252     configparser.obj (.const:.string)
                  808321d5    00000148     glcm_config.obj (.const:.string)
                  8083231d    00000003     --HOLE-- [fill = 0]
                  80832320    00000128     ti_stats_collector.obj (.const:.switchtab)
                  80832448    000000fd     report_utils.obj (.const:.string)
                  80832545    00000069     glcm_ref_cn.obj (.const:.string)
                  808325ae    00000053     ti_mem_manager.obj (.const:.string)
                  80832601    00000043     ti_stats_collector.obj (.const:.string)
                  80832644    00000009     glcm_tb.obj (.const:.string:__FUNCTION__$1)
                  8083264d    00000001     --HOLE-- [fill = 0]
                  8083264e    00000008     configparser.obj (.const:.string:$P$T0$1)

.far       1    80832658    000005c4     UNINITIALIZED
                  80832658    0000056c     glcm_config.obj (.far)
                  80832bc4    00000028     ti_stats_collector.obj (.far)
                  80832bec    00000020     eve_profile.obj (.far)
                  80832c0c    00000010     glcm_tb.obj (.far)

.rts_fardata 
*          1    80832c1c    00000300     
                  80832c1c    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  80832cbc    0000000c                       : memory.obj (.far) [fill = 0]
                  80832cc8    00000008                       : boot.obj (.far) [fill = 0]
                  80832cd0    00000008                       : trgdrv.obj (.far) [fill = 0]
                  80832cd8    000000f0                       : defs.obj (.fardata:_ftable)
                  80832dc8    00000078                       : lowlev.obj (.fardata:_device)
                  80832e40    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  80832ea4    00000050                       : lowlev.obj (.fardata:_stream)
                  80832ef4    00000008                       : _lock.obj (.fardata)
                  80832efc    00000005                       : vcop_memory.obj (.fardata)
                  80832f01    00000003     --HOLE-- [fill = 0]
                  80832f04    00000004                       : defs.obj (.fardata)
                  80832f08    00000004                       : errno.obj (.fardata)
                  80832f0c    00000004                       : fopen.obj (.fardata)
                  80832f10    00000004                       : lowlev.obj (.fardata)
                  80832f14    00000004                       : memory.obj (.fardata)
                  80832f18    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    80832f1c    000001f4     
                  80832f1c    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    80833110    0000017c     
                  80833110    00000010     libevekernels.eve.lib : vcop_glcm_kernel.obj (.far) [fill = 0]
                  80833120    0000001c                           : bam_glcm_helper_funcs.obj (.fardata)
                  8083313c    0000001c                           : bam_intensity_scaling_helper_funcs.obj (.fardata)
                  80833158    00000018                           : bam_glcm_exec_funcs.obj (.fardata)
                  80833170    00000018                           : bam_intensity_scaling_exec_funcs.obj (.fardata)
                  80833188    00000008                           : bam_glcm_helper_funcs.obj (.fardata:GLCM_TI_maxGLCMLevels_1c)
                  80833190    00000008                           : bam_glcm_helper_funcs.obj (.fardata:GLCM_TI_maxGLCMLevels_8c)
                  80833198    00000068     libeveGlcm.eve.lib : glcm_bam_dma_node.obj (.fardata)
                  80833200    00000040                        : glcm_graph.obj (.fardata:bamGlcmKernelExecFuncDB)
                  80833240    00000040                        : glcm_graph.obj (.fardata:bamGlcmKernelHostDB)
                  80833280    0000000c                        : glcm_graph.obj (.fardata)

.bam_fardata 
*          1    8083328c    000000f0     
                  8083328c    00000078     libevealgframework.eve.lib : bam_memory.obj (.far) [fill = 0]
                  80833304    0000000c                                : bam_execute.obj (.far) [fill = 0]
                  80833310    00000008                                : bam_construct.obj (.far) [fill = 0]
                  80833318    00000064                                : bam_memory.obj (.fardata:vcop_mem)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000acf8   BAM_ARP32_computeWrapper
8000afd4   BAM_controlNode
8000aba4   BAM_copyIntMemRec2ExtMem
8000ae20   BAM_copyNodeList
8000a0c4   BAM_createGraph
8000b0a8   BAM_dummyKernelFunc
8000a9d4   BAM_fillKernelInfo
8000a8c8   BAM_getGraphMemSize
8000b010   BAM_getMemPacket
80007fe0   BAM_initGraph
8000aeac   BAM_initGraphInstance
8000af88   BAM_initKernelDB
80009938   BAM_optimizeGraph
8000a678   BAM_process
8000a290   BAM_updateNodes
80007fd0   C$$EXIT
80007b5c   C$$IO$$
80832f1c   CRED_instVirtAddr
80010068   DMA_funcs_hardwareRegSetup
800106a8   DMA_funcs_writeTransferParams
8001022c   DMA_resourceAllocator_allocateResources
80010834   DMA_resourceAllocator_initResources
80010948   DMA_resourceAllocator_setEdma3RmHandle
800108e4   DMA_utils_resetStateStruct
8001048c   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
80010954   EDMA3LLD_SUPPORT_requestResources
8000f880   EDMA_UTILS_autoIncrement_configure
800103a4   EDMA_UTILS_autoIncrement_init
80010558   EDMA_UTILS_autoIncrement_triggerInChannel
8000fde0   EDMA_UTILS_autoIncrement_update
8001071c   EDMA_UTILS_autoIncrement_waitInChannel
800107b4   EDMA_UTILS_globalReset
80010618   EDMA_UTILS_memcpy2D
8001076c   EVE_SCTM_CounterConfig
80010904   EVE_SCTM_CounterRead
80010860   EVE_SCTM_CounterTimerEnable
80010934   EVE_SCTM_Enable
8001088c   EVE_SCTM_InpEvtSelect
8001091c   EVE_SCTM_OverflowCheck
800108b8   EVE_SCTM_SamplingSelect
400274ec   GLCM_TI_IRES
400274c0   GLCM_TI_VISION_FXNS
8000f600   GLCM_TI_activate
8000f3b0   GLCM_TI_alloc
8000f878   GLCM_TI_control
8000f65c   GLCM_TI_deactivate
8000f6b8   GLCM_TI_dmaControl
8000f820   GLCM_TI_execute
8000f85c   GLCM_TI_free
8000f840   GLCM_TI_getGraphMemReq
8000f260   GLCM_TI_graphCreate
8000efb0   GLCM_TI_init
80833188   GLCM_TI_maxGLCMLevels_1c
80833190   GLCM_TI_maxGLCMLevels_8c
8000f87c   GLCM_TI_numAlloc
8000ede8   GLCM_TI_process
8000717c   HOSTclose
80005f20   HOSTlseek
8000645c   HOSTopen
800066b4   HOSTread
80006088   HOSTrename
80006f9c   HOSTunlink
80006a14   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000b048   PRINTF
8000b06c   TEST_PRINTF
8000df04   TI_CreateMemoryHandle
8000dd84   TI_GetMemoryChunk
00007000   WMEM_SIZE
400279b8   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40027000   __TI_STACK_END
00003000   __TI_STACK_SIZE
40027000   __TI_STATIC_BASE
00800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007c98   __arp32abi_abort_msg
8000444c   __arp32abi_addd
80007eb8   __arp32abi_addll
80005c18   __arp32abi_cmpd
80007e50   __arp32abi_cmplls
80007e74   __arp32abi_cmpllu
80006744   __arp32abi_cvtdf
80006bac   __arp32abi_cvtfd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80006dac   __arp32abi_fixdi
800073b0   __arp32abi_fltid
80006c2c   __arp32abi_fltulld
80007740   __arp32abi_isinf
80007680   __arp32abi_llshl
80007d40   __arp32abi_llshru
800040bc   __arp32abi_mpyd
80004ec4   __arp32abi_mpyll
80007e00   __arp32abi_negd
80007f30   __arp32abi_negll
80007cd0   __arp32abi_remull
80007c20   __arp32abi_strasgi
80007dd4   __arp32abi_subd
80007f08   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
8083311c   __ctrl_vcop_accumulate_8c_glcm
80833110   __ctrl_vcop_glcm_compute_1c
80833114   __ctrl_vcop_glcm_compute_8c
40047554   __pblock_vcop_accumulate_8c_glcm
40047014   __pblock_vcop_glcm_compute_1c
40047234   __pblock_vcop_glcm_compute_8c
40047000   __pblock_vcop_initialize_glcm
0000017c   _algo_fardata_size
00000568   _algo_neardata_size
00001970   _algo_text_size
80007b64   _args_main
80007264   _auto_init
000000f0   _bam_fardata_size
000001e5   _bam_neardata_size
000030cc   _bam_text_size
80006324   _buff_read
80007418   _c_int00
80007950   _cleanup
80832cc8   _cleanup_ptr
80006e28   _closefile
4002756c   _ctypes_
800076e0   _doflush
80832ccc   _dtors_ptr
80000120   _dummy_handler
80004c08   _frcaddd
80003940   _frcdivd
80005160   _frcmpyd
80832f04   _ft_end
80832cd8   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
80832ef4   _lock
80007e28   _mpyl
40027c38   _my_stack
80007fd8   _nop
800030d0   _printfi
80007344   _rd_ok
800078a8   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000268   _rts_neardata_size
00006ee0   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
00000118   _starterware_neardata_size
000010d8   _starterware_text_size
80030000   _sys_memory
80007fdc   _system_pre_init
00002e64   _text_size
80832c1c   _tmpnams
80832ef8   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006864   _wrt_ok
80007fd0   abort
80006ea4   atoi
8000a538   bam_getMemPacket
8000af20   bam_mcheck
8000a3e8   bam_mem_alloc
8000aabc   bam_mem_free
8000ac50   bam_minit
8000ad90   bam_releaseMemPacket
400277dc   bam_stat_num_packets
ffffffff   binit
80006aa0   close
80832f08   errno
800078fc   exit
80007d74   fclose
80006f20   fflush
80007ef0   fgets
80007c5c   fopen
800071f0   fprintf
80005a54   fputc
80004930   fputs
8000501c   fread
80007f1c   free
800068f4   fseek
80006984   ftell
8000351c   fwrite
80833198   gBAM_TI_glcmDmaNodeReadKernel
808331b4   gBAM_TI_glcmDmaNodeReadKernelExecFunc
808331ac   gBAM_TI_glcmDmaNodeReadKernelHelperFunc
808331cc   gBAM_TI_glcmDmaNodeWriteKernel
808331e8   gBAM_TI_glcmDmaNodeWriteKernelExecFunc
808331e0   gBAM_TI_glcmDmaNodeWriteKernelHelperFunc
80833158   gBAM_TI_glcmExecFunc
80833134   gBAM_TI_glcmHelperFunc
80833120   gBAM_TI_glcmKernel
80833170   gBAM_TI_intensityScalingExecFunc
80833150   gBAM_TI_intensityScalingHelperFunc
8083313c   gBAM_TI_intensityScalingKernel
80832658   gConfig_glcm
40027b80   gDmaUtilsStateStruct
40027be4   gEdmaCc
80833280   gGlcm_TI_BAM_kernelDBdef
80832bfc   gTest_TI_profileSctm
40027c1c   gTest_TI_profileTsc
8000be38   glcmTest
8000d9a4   glcm_ref_cn
80830000   gsTokenMap_glcm
80007480   lseek
8000761c   ltoa
8000c974   main
80007a40   malloc
80832c0c   memObj_DMEM
80005ce4   mem_alloc
80006620   mem_free
80007e98   memccpy
80005b3c   memcpy
800061dc   memset
80007104   minit
80005968   open
8000e9c0   prepare_lut
80006d2c   printf
8000d180   printparams
8000d488   profiler_end
8000def4   profiler_end_print
8000dedc   profiler_getSP
8000dcb4   profiler_getStackDepth
8000db80   profiler_init
8000deac   profiler_initStack
8000de74   profiler_printStatus
8000de2c   profiler_start
8000dddc   profiler_testCaseInfo
800079f0   rand
800074e8   read
80007a8c   readmsg
8000daa8   readparamfile
80007fc4   remove
8000d850   report_printAppletInfo
80005648   setvbuf
80007ba4   sprintf
80007da4   srand
80007d08   sscanf
8000b0ac   statCollectorControl
8000dc44   statCollectorInit
800015f8   strtod
80003ef0   strtol
80001998   strtold
80001d34   strtoll
80004604   strtoul
80002e84   strtoull
40027bf8   test_module_cyles
80007ad4   unlink
8000eaa8   vcop_accumulate_8c_glcm
8000e6f8   vcop_accumulate_8c_glcm_init
800064f4   vcop_free
8000d6bc   vcop_glcm_cn
8000e4c8   vcop_glcm_compute_1c_init
8000edd4   vcop_glcm_compute_1c_param_count
8000ec4c   vcop_glcm_compute_1c_vloops
8000df10   vcop_glcm_compute_8c_init
8000eddc   vcop_glcm_compute_8c_param_count
8000eb4c   vcop_glcm_compute_8c_vloops
8000ebe0   vcop_initialize_glcm
8000dd20   vcop_intensity_scaling_cn
8000ecb4   vcop_intensity_scaling_init
8000ede4   vcop_intensity_scaling_param_count
8000edb0   vcop_intensity_scaling_vloops
80007f60   vcop_malloc
80004aa0   vcop_memalign
800077f8   vcop_minit
800072d4   vfprintf
80007550   write
80007b1c   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000001   __TI_args_main
00000001   __TI_exit
000000f0   _bam_fardata_size
00000118   _starterware_neardata_size
0000017c   _algo_fardata_size
000001e5   _bam_neardata_size
000001f4   _starterware_fardata_size
00000268   _rts_neardata_size
00000300   _rts_fardata_size
00000568   _algo_neardata_size
000010d8   _starterware_text_size
00001970   _algo_text_size
00002e64   _text_size
00003000   __TI_STACK_SIZE
000030cc   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00006ee0   _rts_text_size
00007000   WMEM_SIZE
00800000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40027000   __TI_STACK_END
40027000   __TI_STATIC_BASE
400274c0   GLCM_TI_VISION_FXNS
400274ec   GLCM_TI_IRES
4002756c   _ctypes_
400277dc   bam_stat_num_packets
400279b8   __CIOBUF_
40027b80   gDmaUtilsStateStruct
40027be4   gEdmaCc
40027bf8   test_module_cyles
40027c1c   gTest_TI_profileTsc
40027c38   _my_stack
40040000   _wmem_memory
40047000   __pblock_vcop_initialize_glcm
40047014   __pblock_vcop_glcm_compute_1c
40047234   __pblock_vcop_glcm_compute_8c
40047554   __pblock_vcop_accumulate_8c_glcm
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
8000351c   fwrite
80003940   _frcdivd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80003ef0   strtol
800040bc   __arp32abi_mpyd
8000444c   __arp32abi_addd
80004604   strtoul
80004930   fputs
80004aa0   vcop_memalign
80004c08   _frcaddd
80004ec4   __arp32abi_mpyll
8000501c   fread
80005160   _frcmpyd
80005648   setvbuf
80005968   open
80005a54   fputc
80005b3c   memcpy
80005c18   __arp32abi_cmpd
80005ce4   mem_alloc
80005f20   HOSTlseek
80006088   HOSTrename
800061dc   memset
80006324   _buff_read
8000645c   HOSTopen
800064f4   vcop_free
80006620   mem_free
800066b4   HOSTread
80006744   __arp32abi_cvtdf
80006864   _wrt_ok
800068f4   fseek
80006984   ftell
80006a14   HOSTwrite
80006aa0   close
80006bac   __arp32abi_cvtfd
80006c2c   __arp32abi_fltulld
80006d2c   printf
80006dac   __arp32abi_fixdi
80006e28   _closefile
80006ea4   atoi
80006f20   fflush
80006f9c   HOSTunlink
80007104   minit
8000717c   HOSTclose
800071f0   fprintf
80007264   _auto_init
800072d4   vfprintf
80007344   _rd_ok
800073b0   __arp32abi_fltid
80007418   _c_int00
80007480   lseek
800074e8   read
80007550   write
8000761c   ltoa
80007680   __arp32abi_llshl
800076e0   _doflush
80007740   __arp32abi_isinf
800077f8   vcop_minit
800078a8   _renormd
800078fc   exit
80007950   _cleanup
800079f0   rand
80007a40   malloc
80007a8c   readmsg
80007ad4   unlink
80007b1c   writemsg
80007b5c   C$$IO$$
80007b64   _args_main
80007ba4   sprintf
80007c20   __arp32abi_strasgi
80007c5c   fopen
80007c98   __arp32abi_abort_msg
80007cd0   __arp32abi_remull
80007d08   sscanf
80007d40   __arp32abi_llshru
80007d74   fclose
80007da4   srand
80007dd4   __arp32abi_subd
80007e00   __arp32abi_negd
80007e28   _mpyl
80007e50   __arp32abi_cmplls
80007e74   __arp32abi_cmpllu
80007e98   memccpy
80007eb8   __arp32abi_addll
80007ef0   fgets
80007f08   __arp32abi_subll
80007f1c   free
80007f30   __arp32abi_negll
80007f60   vcop_malloc
80007fc4   remove
80007fd0   C$$EXIT
80007fd0   abort
80007fd8   _nop
80007fdc   _system_pre_init
80007fe0   BAM_initGraph
80009938   BAM_optimizeGraph
8000a0c4   BAM_createGraph
8000a290   BAM_updateNodes
8000a3e8   bam_mem_alloc
8000a538   bam_getMemPacket
8000a678   BAM_process
8000a8c8   BAM_getGraphMemSize
8000a9d4   BAM_fillKernelInfo
8000aabc   bam_mem_free
8000aba4   BAM_copyIntMemRec2ExtMem
8000ac50   bam_minit
8000acf8   BAM_ARP32_computeWrapper
8000ad90   bam_releaseMemPacket
8000ae20   BAM_copyNodeList
8000aeac   BAM_initGraphInstance
8000af20   bam_mcheck
8000af88   BAM_initKernelDB
8000afd4   BAM_controlNode
8000b010   BAM_getMemPacket
8000b048   PRINTF
8000b06c   TEST_PRINTF
8000b0a8   BAM_dummyKernelFunc
8000b0ac   statCollectorControl
8000be38   glcmTest
8000c974   main
8000d180   printparams
8000d488   profiler_end
8000d6bc   vcop_glcm_cn
8000d850   report_printAppletInfo
8000d9a4   glcm_ref_cn
8000daa8   readparamfile
8000db80   profiler_init
8000dc44   statCollectorInit
8000dcb4   profiler_getStackDepth
8000dd20   vcop_intensity_scaling_cn
8000dd84   TI_GetMemoryChunk
8000dddc   profiler_testCaseInfo
8000de2c   profiler_start
8000de74   profiler_printStatus
8000deac   profiler_initStack
8000dedc   profiler_getSP
8000def4   profiler_end_print
8000df04   TI_CreateMemoryHandle
8000df10   vcop_glcm_compute_8c_init
8000e4c8   vcop_glcm_compute_1c_init
8000e6f8   vcop_accumulate_8c_glcm_init
8000e9c0   prepare_lut
8000eaa8   vcop_accumulate_8c_glcm
8000eb4c   vcop_glcm_compute_8c_vloops
8000ebe0   vcop_initialize_glcm
8000ec4c   vcop_glcm_compute_1c_vloops
8000ecb4   vcop_intensity_scaling_init
8000edb0   vcop_intensity_scaling_vloops
8000edd4   vcop_glcm_compute_1c_param_count
8000eddc   vcop_glcm_compute_8c_param_count
8000ede4   vcop_intensity_scaling_param_count
8000ede8   GLCM_TI_process
8000efb0   GLCM_TI_init
8000f260   GLCM_TI_graphCreate
8000f3b0   GLCM_TI_alloc
8000f600   GLCM_TI_activate
8000f65c   GLCM_TI_deactivate
8000f6b8   GLCM_TI_dmaControl
8000f820   GLCM_TI_execute
8000f840   GLCM_TI_getGraphMemReq
8000f85c   GLCM_TI_free
8000f878   GLCM_TI_control
8000f87c   GLCM_TI_numAlloc
8000f880   EDMA_UTILS_autoIncrement_configure
8000fde0   EDMA_UTILS_autoIncrement_update
80010068   DMA_funcs_hardwareRegSetup
8001022c   DMA_resourceAllocator_allocateResources
800103a4   EDMA_UTILS_autoIncrement_init
8001048c   DMA_utils_updateStateStruct
80010558   EDMA_UTILS_autoIncrement_triggerInChannel
80010618   EDMA_UTILS_memcpy2D
800106a8   DMA_funcs_writeTransferParams
8001071c   EDMA_UTILS_autoIncrement_waitInChannel
8001076c   EVE_SCTM_CounterConfig
800107b4   EDMA_UTILS_globalReset
80010834   DMA_resourceAllocator_initResources
80010860   EVE_SCTM_CounterTimerEnable
8001088c   EVE_SCTM_InpEvtSelect
800108b8   EVE_SCTM_SamplingSelect
800108e4   DMA_utils_resetStateStruct
80010904   EVE_SCTM_CounterRead
8001091c   EVE_SCTM_OverflowCheck
80010934   EVE_SCTM_Enable
80010948   DMA_resourceAllocator_setEdma3RmHandle
80010954   EDMA3LLD_SUPPORT_requestResources
80030000   _sys_memory
80830000   gsTokenMap_glcm
80832658   gConfig_glcm
80832bfc   gTest_TI_profileSctm
80832c0c   memObj_DMEM
80832c1c   _tmpnams
80832cc8   _cleanup_ptr
80832ccc   _dtors_ptr
80832cd8   _ftable
80832ef4   _lock
80832ef8   _unlock
80832f04   _ft_end
80832f08   errno
80832f1c   CRED_instVirtAddr
80833110   __ctrl_vcop_glcm_compute_1c
80833114   __ctrl_vcop_glcm_compute_8c
8083311c   __ctrl_vcop_accumulate_8c_glcm
80833120   gBAM_TI_glcmKernel
80833134   gBAM_TI_glcmHelperFunc
8083313c   gBAM_TI_intensityScalingKernel
80833150   gBAM_TI_intensityScalingHelperFunc
80833158   gBAM_TI_glcmExecFunc
80833170   gBAM_TI_intensityScalingExecFunc
80833188   GLCM_TI_maxGLCMLevels_1c
80833190   GLCM_TI_maxGLCMLevels_8c
80833198   gBAM_TI_glcmDmaNodeReadKernel
808331ac   gBAM_TI_glcmDmaNodeReadKernelHelperFunc
808331b4   gBAM_TI_glcmDmaNodeReadKernelExecFunc
808331cc   gBAM_TI_glcmDmaNodeWriteKernel
808331e0   gBAM_TI_glcmDmaNodeWriteKernelHelperFunc
808331e8   gBAM_TI_glcmDmaNodeWriteKernelExecFunc
80833280   gGlcm_TI_BAM_kernelDBdef
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[278 symbols]
