;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:12:23 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$109)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$60)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$109)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$11, DW_AT_decl_column(0x16)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$3)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$10)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$53)
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x82)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$53)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x86)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x58)
	.dwattr $C$DW$19, DW_AT_decl_column(0x05)

$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$20, DW_AT_decl_column(0x06)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$20


$C$DW$23	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwattr $C$DW$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$23, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$23, DW_AT_decl_column(0x06)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$60)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$23


$C$DW$30	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwattr $C$DW$30, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$30, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$30, DW_AT_decl_column(0x06)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$30


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$10)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$60)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$32


$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x80)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)
$C$DW$37	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$69)
	.dwendtag $C$DW$36


$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x81)
	.dwattr $C$DW$38, DW_AT_decl_column(0x06)

$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x82)
	.dwattr $C$DW$39, DW_AT_decl_column(0x0a)

$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x83)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)

$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("VLIB_compare_mem")
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_memory.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x72)
	.dwattr $C$DW$41, DW_AT_decl_column(0x11)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$52)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$52)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$29)
	.dwendtag $C$DW$41


$C$DW$45	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwattr $C$DW$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_memory.h")
	.dwattr $C$DW$45, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$45, DW_AT_decl_column(0x06)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$19)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$19)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$3)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$3)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$22)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$22)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$22)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$19)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$45


$C$DW$55	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwattr $C$DW$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_memory.h")
	.dwattr $C$DW$55, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$55, DW_AT_decl_column(0x07)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$53)
	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwattr $C$DW$57, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_memory.h")
	.dwattr $C$DW$57, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$57, DW_AT_decl_column(0x07)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$57


$C$DW$59	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_xyGradientsAndMagnitude_cn")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("VLIB_xyGradientsAndMagnitude_cn")
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwattr $C$DW$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../VLIB_xyGradientsAndMagnitude/VLIB_xyGradientsAndMagnitude_cn.h")
	.dwattr $C$DW$59, DW_AT_decl_line(0x20)
	.dwattr $C$DW$59, DW_AT_decl_column(0x09)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$101)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$104)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$104)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$104)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$22)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$22)
	.dwendtag $C$DW$59


$C$DW$66	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_normalFlow_16")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("VLIB_normalFlow_16")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
	.dwattr $C$DW$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\c66/VLIB_normalFlow_16.h")
	.dwattr $C$DW$66, DW_AT_decl_line(0x77)
	.dwattr $C$DW$66, DW_AT_decl_column(0x06)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$79)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$79)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$79)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$79)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$79)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$20)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$29)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$21)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$66


$C$DW$76	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_normalFlow_16_cn")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("VLIB_normalFlow_16_cn")
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
	.dwattr $C$DW$76, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_cn.h")
	.dwattr $C$DW$76, DW_AT_decl_line(0x20)
	.dwattr $C$DW$76, DW_AT_decl_column(0x06)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$21)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$21)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$21)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$21)
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$21)
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$20)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$29)
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$21)
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$76


$C$DW$86	.dwtag  DW_TAG_subprogram, DW_AT_name("normalFlow_16_getTestParams")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("normalFlow_16_getTestParams")
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x31)
	.dwattr $C$DW$86, DW_AT_decl_column(0x06)
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$45)
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$84)
	.dwendtag $C$DW$86

$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$89, DW_AT_decl_line(0x60)
	.dwattr $C$DW$89, DW_AT_decl_column(0x13)
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$90, DW_AT_decl_line(0x62)
	.dwattr $C$DW$90, DW_AT_decl_column(0x13)
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
	.dwattr $C$DW$91, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$91, DW_AT_decl_line(0x63)
	.dwattr $C$DW$91, DW_AT_decl_column(0x13)
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$165)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external
	.dwattr $C$DW$92, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$92, DW_AT_decl_line(0x64)
	.dwattr $C$DW$92, DW_AT_decl_column(0x13)
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
	.dwattr $C$DW$93, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$93, DW_AT_decl_line(0x75)
	.dwattr $C$DW$93, DW_AT_decl_column(0x14)
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external
	.dwattr $C$DW$94, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$94, DW_AT_decl_line(0x76)
	.dwattr $C$DW$94, DW_AT_decl_column(0x14)
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
	.dwattr $C$DW$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$95, DW_AT_decl_line(0x77)
	.dwattr $C$DW$95, DW_AT_decl_column(0x14)
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
	.dwattr $C$DW$96, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$96, DW_AT_decl_line(0x78)
	.dwattr $C$DW$96, DW_AT_decl_column(0x14)
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$156)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwattr $C$DW$97, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h")
	.dwattr $C$DW$97, DW_AT_decl_line(0x79)
	.dwattr $C$DW$97, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\028605 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\028607 
	.sect	".text"
	.clink
	.global	VLIB_normalFlow_16_d

$C$DW$98	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_normalFlow_16_d")
	.dwattr $C$DW$98, DW_AT_low_pc(VLIB_normalFlow_16_d)
	.dwattr $C$DW$98, DW_AT_high_pc(0x00)
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("VLIB_normalFlow_16_d")
	.dwattr $C$DW$98, DW_AT_external
	.dwattr $C$DW$98, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$98, DW_AT_TI_begin_line(0x28)
	.dwattr $C$DW$98, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$98, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$98, DW_AT_decl_line(0x28)
	.dwattr $C$DW$98, DW_AT_decl_column(0x06)
	.dwattr $C$DW$98, DW_AT_TI_max_frame_size(0x90)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 41,column 1,is_stmt,address VLIB_normalFlow_16_d,isa 0

	.dwfde $C$DW$CIE, VLIB_normalFlow_16_d
$C$DW$99	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  40 | void VLIB_normalFlow_16_d (uint8_t LevelOfFeedback)                    
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_normalFlow_16_d                                        *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 60 Auto + 56 Save = 140 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_normalFlow_16_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 47	-----------------------    normalFlow_16_getTestParams(&prm, &test_cases);
;** 50	-----------------------    VLIB_profile_init(2, "VLIB_normalFlow_16");
;** 53	-----------------------    if ( test_cases <= 0 ) goto g36;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  42 | int32_t    tpi;  /* test parameter index */                            
;  45 | normalFlow_16_testParams_t   *prm;                                     
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |41| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |41| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |41| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |41| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |41| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |41| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(96)      ; |41| 
	.dwcfi	cfa_offset, 144
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg20]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg8]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg3]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg20]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg3]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg8]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg8]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg8]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg20]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg21]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$C17")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$C17")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg3]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$C18")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$C18")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg8]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$C19")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$C19")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg3]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$C20")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$C20")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg3]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$C21")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$C21")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg3]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$C22")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$C22")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg8]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$C23")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$C23")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg8]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$C24")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$C24")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg10]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$C25")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$C25")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg12]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg11]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$K63")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$K63")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg12]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$K64")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$K64")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg4]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$U11")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$U11")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg27]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$U129")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$U129")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg5]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$K150")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$K150")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg12]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$K147")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$K147")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg10]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$U153")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$U153")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg15]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$U138")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$U138")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg10]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$K172")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$K172")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$154)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg3]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$U188")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$U188")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg0]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$U112")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$U112")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg20]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$K204")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$K204")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg8]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_breg31 32]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_reg13]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 28]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg29]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg28]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("inp_size")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("inp_size")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg4]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("out_size")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("out_size")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_breg31 36]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("pIn")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("pIn")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_breg31 40]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("pInold")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("pInold")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_breg31 44]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("imDiff")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("imDiff")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_breg31 48]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("Emag")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("Emag")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_breg31 52]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("Ex")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("Ex")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_breg31 56]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("Ey")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("Ey")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_breg31 60]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("LUT")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("LUT")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_breg31 64]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("normalFlowU")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("normalFlowU")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_breg31 68]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("normalFlowV")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("normalFlowV")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_breg31 72]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("normalFlowU_cn")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("normalFlowU_cn")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 76]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("normalFlowV_cn")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("normalFlowV_cn")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_breg31 80]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("maxMag")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("maxMag")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_reg15]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("$O$U77")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("$O$U77")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_reg5]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("$O$U77")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("$O$U77")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg5]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("$O$U75")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("$O$U75")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg21]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("$O$U75")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("$O$U75")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_reg21]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("$O$U81")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("$O$U81")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_reg4]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("$O$U81")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("$O$U81")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_reg4]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_reg26]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("statusU")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("statusU")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_reg10]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("statusU")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("statusU")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_breg31 84]
$C$DW$160	.dwtag  DW_TAG_variable, DW_AT_name("statusV")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("statusV")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_reg4]
$C$DW$161	.dwtag  DW_TAG_variable, DW_AT_name("statusV")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("statusV")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_reg14]
$C$DW$162	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_reg20]
$C$DW$163	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg20]
$C$DW$164	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg20]
$C$DW$165	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg22]
$C$DW$166	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_reg22]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("normalFlow_16_getTestParams")
	.dwattr $C$DW$167, DW_AT_TI_call

           CALLP   .S2     normalFlow_16_getTestParams,B3
||         ADDAW   .D1X    SP,7,A4           ; |47| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 47,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  47 | normalFlow_16_getTestParams(&prm, &test_cases);                        
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {normalFlow_16_getTestParams} {0}  ; |47| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$168, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |50| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 50,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  50 | VLIB_profile_init(2, "VLIB_normalFlow_16");                            
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |50| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$204 = &desc[0];
;**  	-----------------------    U$12 = prm;
;**  	-----------------------    U$11 = 0;
;** 53	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  53 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |53| 
           LDW     .D2T1   *+SP(28),A11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  56 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  57 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;----------------------------------------------------------------------
           ZERO    .L2     B11               ; |53| 
           ZERO    .L1     A13               ; |53| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |53| 

   [!A0]   BNOP    .S1     $C$L27,3          ; |53| 
|| [ A0]   LDHU    .D1T1   *+A11(36),A3      ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | uint32_t    inp_size =   prm[tpi].width * prm[tpi].height + 1;         
;  64 | uint32_t    out_size =   prm[tpi].width * prm[tpi].height;             
;----------------------------------------------------------------------
   [ A0]   LDHU    .D1T1   *+A11(34),A4      ; |63| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L27}        ; |53| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 10,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 63	-----------------------    C$25 = _mpyu((*U$12).width, (*U$12).height);
;** 63	-----------------------    inp_size = C$25+1u;
;** 64	-----------------------    out_size = C$25;
;** 67	-----------------------    pIn = VLIB_malloc(out_size+1u);
;** 68	-----------------------    pInold = VLIB_malloc(inp_size);
;** 69	-----------------------    C$24 = out_size*2u;
;** 69	-----------------------    imDiff = VLIB_malloc(C$24);
;** 70	-----------------------    Emag = VLIB_malloc(C$24);
;** 71	-----------------------    Ex = VLIB_malloc(C$24);
;** 72	-----------------------    Ey = VLIB_malloc(C$24);
;** 74	-----------------------    normalFlowU = VLIB_malloc(C$24);
;** 75	-----------------------    normalFlowV = VLIB_malloc(C$24);
;** 76	-----------------------    normalFlowU_cn = malloc(C$24);
;** 77	-----------------------    normalFlowV_cn = malloc(C$24);
;** 80	-----------------------    if ( !((pIn != NULL)&(pInold != NULL)&(imDiff != NULL)&(Emag != NULL)&(Ex != NULL)&(Ey != NULL)&(normalFlowU != NULL)&(normalFlowV != NULL)&(normalFlowU_cn != NULL)&(normalFlowV_cn != NULL)) ) goto g34;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 67,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | uint8_t   *pIn            =  (uint8_t *) VLIB_malloc(inp_size);        
;----------------------------------------------------------------------
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$169, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |67| 
           ADDKPC  .S2     $C$RL2,B3,1       ; |67| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 63,column 21,is_stmt,isa 0
           MPYU    .M1     A4,A3,A12         ; |63| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 67,column 20,is_stmt,isa 0
           ADD     .L1     1,A12,A4          ; |67| 
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |67| 
$C$DW$L$VLIB_normalFlow_16_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$5$B:
;          EXCLUSIVE CPU CYCLES: 54
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$170, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(40)       ; |67| 
||         ADD     .L1     1,A12,A4          ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 68,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  68 | uint8_t   *pInold         =  (uint8_t *) VLIB_malloc(inp_size);        
;----------------------------------------------------------------------
$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |68| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$171, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         ADD     .L1     A12,A12,A10       ; |69| 
||         STW     .D2T1   A4,*+SP(44)       ; |68| 
||         ADD     .S1     A12,A12,A4        ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 69,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | int16_t   *imDiff         =  (int16_t *) VLIB_malloc(out_size * sizeof(
;     | int16_t));                                                             
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {VLIB_malloc} {0}   ; |69| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$172, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(48)       ; |69| 
||         MV      .L1     A10,A4            ; |70| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 70,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  70 | int16_t   *Emag           =  (int16_t *) VLIB_malloc(out_size * sizeof(
;     | int16_t));                                                             
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {VLIB_malloc} {0}   ; |70| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(52)       ; |70| 
||         MV      .L1     A10,A4            ; |71| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 71,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  71 | int16_t   *Ex             =  (int16_t *) VLIB_malloc(out_size * sizeof(
;     | int16_t));                                                             
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {VLIB_malloc} {0}   ; |71| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$174, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(56)       ; |71| 
||         MV      .L1     A10,A4            ; |72| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 72,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  72 | int16_t   *Ey             =  (int16_t *) VLIB_malloc(out_size * sizeof(
;     | int16_t));                                                             
;  73 | int16_t   *LUT;                                                        
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {VLIB_malloc} {0}   ; |72| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(60)       ; |72| 
||         MV      .L1     A10,A4            ; |74| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 74,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  74 | int16_t   *normalFlowU    =  (int16_t *) VLIB_malloc(out_size * sizeof(
;     | int16_t));                                                             
;----------------------------------------------------------------------
$C$RL8:    ; CALL OCCURS {VLIB_malloc} {0}   ; |74| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$176, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         STW     .D2T1   A4,*+SP(68)       ; |74| 
||         MV      .L1     A10,A4            ; |75| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 75,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  75 | int16_t   *normalFlowV    =  (int16_t *) VLIB_malloc(out_size * sizeof(
;     | int16_t));                                                             
;----------------------------------------------------------------------
$C$RL9:    ; CALL OCCURS {VLIB_malloc} {0}   ; |75| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("malloc")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(72)       ; |75| 
||         MV      .L1     A10,A4            ; |76| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 76,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | int16_t   *normalFlowU_cn =  (int16_t *) malloc(out_size * sizeof(int16
;     | _t));                                                                  
;----------------------------------------------------------------------
$C$RL10:   ; CALL OCCURS {malloc} {0}        ; |76| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("malloc")
	.dwattr $C$DW$178, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(76)       ; |76| 
||         MV      .L1     A10,A4            ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 77,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  77 | int16_t   *normalFlowV_cn =  (int16_t *) malloc(out_size * sizeof(int16
;     | _t));                                                                  
;----------------------------------------------------------------------
$C$RL11:   ; CALL OCCURS {malloc} {0}        ; |77| 
$C$DW$L$VLIB_normalFlow_16_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$6$B:
;          EXCLUSIVE CPU CYCLES: 25

           LDW     .D2T1   *+SP(40),A0       ; |80| 
||         ZERO    .L2     B5                ; |80| 
||         ZERO    .L1     A3                ; |80| 
||         ZERO    .S2     B4                ; |80| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 80,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  80 | if( pIn && pInold && imDiff && Emag && Ex && Ey && normalFlowU && norma
;     | lFlowV && normalFlowU_cn && normalFlowV_cn ) {                         
;  82 |     int32_t    fail, i, maxMag=0;                                      
;  85 |     if( prm[tpi].testPattern == STATIC ) {                             
;  86 |         VLIB_fillBuffer(prm[tpi].testPattern,                          
;  87 |                         (int16_t)255,                                  
;  88 |                         imDiff, prm[tpi].staticImDiff,                 
;  89 |                         prm[tpi].width, prm[tpi].height, prm[tpi].width
;     |  * sizeof(imDiff[0]),                                                  
;  90 |                         sizeof(imDiff[0]), testPatternString);         
;  92 |         VLIB_fillBuffer(prm[tpi].testPattern,                          
;  93 |                         (int16_t)255,                                  
;  94 |                         Emag, prm[tpi].staticEmag,                     
;  95 |                         prm[tpi].width, prm[tpi].height, prm[tpi].width
;     |  * sizeof(Emag[0]),                                                    
;  96 |                         sizeof(Emag[0]), testPatternString);           
;  98 |         VLIB_fillBuffer(prm[tpi].testPattern,                          
;  99 |                         (int16_t)255,                                  
; 100 |                         Ex, prm[tpi].staticEx,                         
; 101 |                         prm[tpi].width, prm[tpi].height, prm[tpi].width
;     |  * sizeof(Ex[0]),                                                      
; 102 |                         sizeof(Ex[0]), testPatternString);             
; 104 |         VLIB_fillBuffer(prm[tpi].testPattern,                          
; 105 |                         (int16_t)255,                                  
; 106 |                         Ey, prm[tpi].staticEy,                         
; 107 |                         prm[tpi].width, prm[tpi].height, prm[tpi].width
;     |  * sizeof(Ey[0]),                                                      
; 108 |                         sizeof(Ey[0]), testPatternString);             
; 110 |     } else {                                                           
; 114 |         VLIB_fillBuffer(RANDOM,                                        
; 115 |                         (uint8_t)255,                                  
; 116 |                         pInold, NULL,                                  
; 117 |                         prm[tpi].width, prm[tpi].height, prm[tpi].width
;     |  * sizeof(pInold[0]),                                                  
; 118 |                         sizeof(pInold[0]), testPatternString);         
; 120 |         VLIB_fillBuffer(prm[tpi].testPattern,                          
; 121 |                         (uint8_t)255,                                  
; 122 |                         pIn, NULL,                                     
; 123 |                         prm[tpi].width, prm[tpi].height, prm[tpi].width
;     |  * sizeof(pIn[0]),                                                     
; 124 |                         sizeof(pIn[0]), testPatternString);            
; 126 |         for( i=0; i < out_size; i++ ) {                                
; 127 |             imDiff[i] = pIn[i] - pInold[i];                            
; 132 |         memset(Ex, 0, (prm[tpi].width + 1) * sizeof(Ex[0]));           
; 133 |         memset(&Ex[prm[tpi].width * (prm[tpi].height - 1) - 1], 0, (prm
;     | [tpi].width + 1) * sizeof(Ex[0]));                                     
; 134 |         memset(Ey, 0, (prm[tpi].width + 1) * sizeof(Ey[0]));           
; 135 |         memset(&Ey[prm[tpi].width * (prm[tpi].height - 1) - 1], 0, (prm
;     | [tpi].width + 1) * sizeof(Ey[0]));                                     
; 136 |         memset(Emag, 0, (prm[tpi].width + 1) * sizeof(Emag[0]));       
; 137 |         memset(&Emag[prm[tpi].width * (prm[tpi].height - 1) - 1], 0, (p
;     | rm[tpi].width + 1) * sizeof(Emag[0]));                                 
; 140 |         VLIB_xyGradientsAndMagnitude_cn(pIn, &Ex[prm[tpi].width + 1], &
;     | Ey[prm[tpi].width + 1], &Emag[prm[tpi].width + 1],                     
; 141 |                                         prm[tpi].width, prm[tpi].height
;     | );                                                                     
; 148 |     for( i=0; i < out_size; i++ ) {                                    
; 149 |         if( maxMag < Emag[i] ) {                                       
; 150 |             maxMag = Emag[i];                                          
; 154 |     LUT = (int16_t *) VLIB_malloc((maxMag + 1) * sizeof(int16_t));     
; 157 |     if( LUT ) {                                                        
; 159 |         int32_t    statusU, statusV;                                   
; 161 |         if( prm[tpi].testPattern == STATIC ) {                         
; 162 |             VLIB_fillBuffer(prm[tpi].testPattern,                      
; 163 |                             (int16_t)255,                              
; 164 |                             LUT, prm[tpi].staticLUT,                   
; 165 |                             (maxMag + 1), 1, (maxMag + 1) * sizeof(LUT[
;     | 0]),                                                                   
; 166 |                             sizeof(LUT[0]), testPatternString);        
; 167 |         } else {                                                       
; 169 |             LUT[0] = 0;                                                
; 171 |             for( i=1; i < (maxMag + 1); i++ ) {                        
; 172 |                 LUT[i] = (int16_t)((float)32767 / i + 0.5f);           
; 177 |         VLIB_profile_start(vlib_KERNEL_OPT);                           
; 178 |         VLIB_normalFlow_16(imDiff, Emag, Ex, Ey, LUT, prm[tpi].T,      
; 179 |                            prm[tpi].width * prm[tpi].height,           
; 180 |                            normalFlowU, normalFlowV);                  
; 181 |         VLIB_profile_stop();                                           
; 185 |         VLIB_profile_start(vlib_KERNEL_CN);                            
; 186 |         VLIB_normalFlow_16_cn(imDiff, Emag, Ex, Ey, LUT, prm[tpi].T,   
; 187 |                               prm[tpi].width * prm[tpi].height,        
; 188 |                               normalFlowU_cn, normalFlowV_cn);         
; 189 |         VLIB_profile_stop();                                           
; 192 |         statusU = VLIB_compare_mem((void *) normalFlowU, (void *)normal
;     | FlowU_cn, prm[tpi].width * prm[tpi].height * sizeof(normalFlowU_cn[0]))
;     | ;                                                                      
; 193 |         statusV = VLIB_compare_mem((void *) normalFlowV, (void *)normal
;     | FlowV_cn, prm[tpi].width * prm[tpi].height * sizeof(normalFlowV_cn[0]))
;     | ;                                                                      
; 194 |         if( statusU == vlib_KERNEL_FAIL || statusV == vlib_KERNEL_FAIL
;     | ) {                                                                    
; 195 |             status_nat_vs_int = vlib_KERNEL_FAIL;                      
; 199 |         statusU = statusV = vlib_KERNEL_PASS;                          
; 200 |         if( prm[tpi].staticOutU != NULL ) {                            
; 201 |             statusU = VLIB_compare_mem((void *) prm[tpi].staticOutU, (v
;     | oid *)normalFlowU_cn, prm[tpi].width * prm[tpi].height * sizeof(normalF
;     | lowU_cn[0]));                                                          
; 203 |         if( prm[tpi].staticOutU != NULL ) {                            
; 204 |             statusV = VLIB_compare_mem((void *) prm[tpi].staticOutV, (v
;     | oid *)normalFlowV_cn, prm[tpi].width * prm[tpi].height * sizeof(normalF
;     | lowV_cn[0]));                                                          
; 206 |         if( statusU == vlib_KERNEL_FAIL || statusV == vlib_KERNEL_FAIL
;     | ) {                                                                    
; 207 |             status_nat_vs_ref = vlib_KERNEL_FAIL;                      
; 211 |         fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_
;     | vs_ref == vlib_KERNEL_FAIL)) ? 1 : 0;                                  
; 213 |         est_test=1;                                                    
; 216 |         sprintf(desc, "%s generated input | Opt results compared to Nat
;     | C results | width=%d, height=%d, numEls=%d",                           
; 217 |                 testPatternString, prm[tpi].width, prm[tpi].height, out
;     | _size);                                                                
; 218 |         VLIB_formula_add_test(out_size, NULL, NULL, fail, desc, NULL); 
; 219 |     } else {                                                           
; 221 |         sprintf(desc, "width=%d, height=%d, numEls=%d",                
; 222 |                 prm[tpi].width, prm[tpi].height, out_size);            
; 223 |         VLIB_skip_test(desc);                                          
; 225 | } else {                                                               
;----------------------------------------------------------------------
           LDW     .D2T2   *+SP(44),B0       ; |80| 
           LDW     .D2T1   *+SP(48),A1       ; |80| 
           LDW     .D2T1   *+SP(52),A2       ; |80| 
           LDW     .D2T2   *+SP(56),B2       ; |80| 

   [ A0]   MVK     .L2     0x1,B5            ; |80| 
||         LDW     .D2T1   *+SP(60),A0       ; |80| 

   [ B0]   MVK     .L2     0x1,B4            ; |80| 
||         LDW     .D2T2   *+SP(68),B1       ; |80| 

   [ A1]   MVK     .L1     0x1,A3            ; |80| 
||         AND     .L2     B4,B5,B5          ; |80| 
||         ZERO    .S2     B4                ; |80| 
||         STW     .D2T1   A4,*+SP(80)       ; |77| 
||         ZERO    .S1     A4                ; |80| 

   [ A2]   MVK     .L2     0x1,B4            ; |80| 
||         LDW     .D2T1   *+SP(72),A2       ; |80| 

           AND     .L2X    A3,B5,B5          ; |80| 
|| [ B2]   MVK     .L1     0x1,A4            ; |80| 
||         LDW     .D2T2   *+SP(80),B2       ; |80| 
||         ZERO    .S1     A3                ; |80| 

           AND     .L2     B4,B5,B5          ; |80| 
||         ZERO    .S2     B4                ; |80| 
||         STW     .D2T1   A12,*+SP(36)      ; |64| 

   [ A0]   MVK     .L2     0x1,B4            ; |80| 
||         LDW     .D2T1   *+SP(76),A0       ; |80| 
||         AND     .S2X    A4,B5,B5          ; |80| 
||         ZERO    .L1     A4                ; |80| 
|| [ B1]   MVK     .S1     0x1,A3            ; |80| 

           AND     .L2     B4,B5,B4          ; |80| 

   [ A2]   MVK     .L1     0x1,A4            ; |80| 
||         AND     .L2X    A3,B4,B5          ; |80| 
||         ZERO    .S1     A3                ; |80| 
||         ZERO    .S2     B4                ; |80| 

   [ B2]   MVK     .L1     0x1,A3            ; |80| 
           AND     .L2X    A4,B5,B5          ; |80| 
   [ A0]   MVK     .L2     0x1,B4            ; |80| 
           AND     .L2     B4,B5,B4          ; |80| 
           AND     .L2X    A3,B4,B0          ; |80| 

   [!B0]   BNOP    .S1     $C$L24,3          ; |80| 
|| [ B0]   LDBU    .D1T1   *A11,A3           ; |85| 
|| [!B0]   MVKL    .S2     $C$SL3+0,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 227,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 227 | sprintf(desc, "width=%d, height=%d, numEls=%d",                        
; 228 |         prm[tpi].width, prm[tpi].height, out_size);                    
; 229 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!B0]   LDHU    .D1T1   *+A11(34),A4      ; |227| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("sprintf")
	.dwattr $C$DW$179, DW_AT_TI_call

   [!B0]   CALL    .S1     sprintf           ; |227| 
||         CMPEQ   .L1     A3,4,A0           ; |85| 
|| [!B0]   LDHU    .D1T1   *+A11(36),A3      ; |227| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 80,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L24}        ; |80| 
$C$DW$L$VLIB_normalFlow_16_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$7$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 85	-----------------------    v$1 = prm;
;**  	-----------------------    K$64 = 255;
;**  	-----------------------    K$63 = &testPatternString[0];
;** 56	-----------------------    status_nat_vs_int = 1;
;** 57	-----------------------    status_nat_vs_ref = 1;
;** 82	-----------------------    maxMag = 0;
;** 85	-----------------------    if ( (*U$12).testPattern == 4 ) goto g12;

           LDW     .D2T2   *+SP(28),B4       ; |85| 
|| [ A0]   B       .S2     $C$L11            ; |85| 
|| [!A0]   LDHU    .D1T1   *+A11(34),A8      ; |114| 
||         MVK     .L2     0x1,B12           ; |57| 
|| [!A0]   MVK     .S1     0xff,A3
||         ZERO    .L1     A15               ; |82| 

   [!A0]   LDHU    .D1T2   *+A11(36),B8      ; |114| 
|| [!A0]   EXTU    .S1     A3,24,24,A5       ; |114| 
||         MV      .L2     B12,B13           ; |57| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 114,column 17,is_stmt,isa 0
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$180, DW_AT_TI_call
   [!A0]   CALL    .S1     VLIB_fillBuffer   ; |114| 
   [!A0]   LDW     .D2T1   *+SP(44),A6       ; |114| 
   [!A0]   MVKL    .S1     testPatternString,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 86,column 17,is_stmt,isa 0
   [ A0]   ADD     .L2     B4,B11,B4         ; |86| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 85,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |85| 
$C$DW$L$VLIB_normalFlow_16_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$8$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 114	-----------------------    C$23 = (*U$12).width;
;** 114	-----------------------    VLIB_fillBuffer(3u, (unsigned char)K$64, (void *)pInold, NULL, C$23, (*U$12).height, C$23, 1u, K$63);
;** 120	-----------------------    C$22 = (*U$12).width;
;** 120	-----------------------    VLIB_fillBuffer((*U$12).testPattern, (unsigned char)K$64, (void *)pIn, NULL, C$22, (*U$12).height, C$22, 1u, K$63);
;** 126	-----------------------    if ( !out_size ) goto g11;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 114,column 17,is_stmt,isa 0
           MV      .L2X    A5,B4             ; |114| 

           MVK     .L1     0x3,A4            ; |114| 
||         MV      .L2X    A15,B6            ; |114| 
||         MV      .D2     B13,B10           ; |114| 
||         ADDKPC  .S2     $C$RL12,B3,0      ; |114| 
||         MVKH    .S1     testPatternString,A12
||         MV      .D1     A8,A10            ; |114| 

$C$RL12:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |114| 
$C$DW$L$VLIB_normalFlow_16_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$9$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 120,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A8      ; |120| 
           MVK     .S1     0xff,A4
           EXTU    .S1     A4,24,24,A5       ; |120| 
           LDW     .D2T1   *+SP(40),A6       ; |120| 

           LDHU    .D1T2   *+A11(36),B8      ; |120| 
||         MV      .L2X    A15,B6            ; |120| 

$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$181, DW_AT_TI_call

           CALLP   .S2     VLIB_fillBuffer,B3
||         LDBU    .D1T1   *A11,A4           ; |120| 
||         MV      .L1     A8,A10            ; |120| 
||         MV      .L2X    A5,B4             ; |120| 

$C$RL13:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |120| 
$C$DW$L$VLIB_normalFlow_16_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$10$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(36),A0       ; |120| 
           LDW     .D2T1   *+SP(44),A4
           LDW     .D2T1   *+SP(48),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 127,column 21,is_stmt,isa 0
           LDW     .D2T1   *+SP(40),A31      ; |127| 
           NOP             1

   [!A0]   BNOP    .S1     $C$L10,1          ; |126| 
||         MV      .L1     A0,A2             ; guard predicate rewrite
||         MV      .L2X    A0,B0             ; branch predicate copy

           CMPLTU  .L1     A4,A3,A0          ; |127| 
|| [ A2]   MV      .S1     A15,A4            ; |127| 

   [ A2]   CMPLTU  .L1     A31,A3,A1         ; |127| 
|| [ A2]   MV      .S1     A15,A3            ; |127| 

   [!A1]   MV      .L1X    B12,A4            ; |127| 

   [!A0]   MV      .L1X    B12,A3            ; |127| 
|| [!B0]   LDHU    .D1T1   *+A11(34),A3      ; |132| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 126,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |126| 
$C$DW$L$VLIB_normalFlow_16_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$11$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 127	-----------------------    if ( !((pIn >= imDiff)|(pInold >= imDiff)) ) goto g9;

           LDW     .D2T2   *+SP(36),B6
||         OR      .L1     A3,A4,A0          ; |127| 

   [!A0]   BNOP    .S1     $C$L5,1           ; |127| 
|| [ A0]   LDW     .D2T2   *+SP(40),B5

   [ A0]   LDW     .D2T1   *+SP(44),A5
   [!A0]   LDW     .D2T1   *+SP(44),A5

           SUB     .L2     B6,1,B6
|| [!A0]   LDW     .D2T2   *+SP(36),B6

   [!A0]   LDW     .D2T2   *+SP(40),B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 127,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |127| 
$C$DW$L$VLIB_normalFlow_16_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$12$B:
;**  	-----------------------    U$75 = pIn;
;**  	-----------------------    U$77 = pInold;
;**  	-----------------------    U$81 = imDiff;
;**  	-----------------------    L$1 = out_size;
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4104u)
;**	-----------------------g8:
;** 127	-----------------------    *U$81++ = *U$75++-*U$77++;
;** 126	-----------------------    if ( L$1 = L$1-1 ) goto g8;
$C$DW$L$VLIB_normalFlow_16_d$12$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c
;*      Loop source line                 : 126
;*      Loop opening brace source line   : 126
;*      Loop closing brace source line   : 128
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 7
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     0        0     
;*      .S units                     0        0     
;*      .D units                     2*       1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             2*       1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           1        0     (.L or .S unit)
;*      Addition ops (.LSD)          0        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     1        1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 7  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    **                          |     *                          |
;*       1: |    **                          |     *                          |
;*       2: |    **                          |     *                          |
;*       3: |    **                          |     *                          |
;*       4: |    **                          |     *                          |
;*       5: |   ***                          |    **                          |
;*       6: |   ***                          |     *                          |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 8
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.8%
;*
;*      Effective ii                : { min 7.00, est 7.13, max 8.00 }
;*
;*
;*      Total cycles (est.)         : 7 + trip_cnt * 7        
;*----------------------------------------------------------------------------*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C120:
;*   0              LDBU    .D1T1   *A5++,A3          ; |127|  ^ 
;*     ||           LDBU    .D2T2   *B5++,B4          ; |127|  ^ 
;*   1              NOP             4
;*   5              SUB     .L1X    B4,A3,A3          ; |127|  ^ 
;*   6              STH     .D1T1   A3,*A4++          ; |127|  ^ 
;*     ||           SPBR            $C$C120
;*   7              NOP             7
;*  14              ; BRANCHCC OCCURS {$C$C120}       ; |126| 
;*----------------------------------------------------------------------------*
$C$L2:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 8

           SPLOOPD 7       ;14               ; (P) 
||         MVC     .S2     B6,ILC

;** --------------------------------------------------------------------------*
$C$L3:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_normalFlow_16_d$14$B:
;          EXCLUSIVE CPU CYCLES: 7

           LDBU    .D1T1   *A5++,A3          ; |127| (P) <0,0>  ^ 
||         LDBU    .D2T2   *B5++,B4          ; |127| (P) <0,0>  ^ 

           SPMASK          D2
||         LDW     .D2T1   *+SP(48),A4

           NOP             3
           SUB     .L1X    B4,A3,A3          ; |127| (P) <0,5>  ^ 
           STH     .D1T1   A3,*A4++          ; |127| (P) <0,6>  ^ 
           SPKERNEL 0,0
$C$DW$L$VLIB_normalFlow_16_d$14$E:
;** --------------------------------------------------------------------------*
$C$L4:    ; PIPED LOOP EPILOG
;          EXCLUSIVE CPU CYCLES: 6
;** 126	-----------------------    goto g11;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 126,column 27,is_stmt,isa 0
           BNOP    .S2     $C$L9,5           ; |126| 
           ; BRANCH OCCURS {$C$L9}           ; |126| 
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$16$B:
;          EXCLUSIVE CPU CYCLES: 3
           LDW     .D2T1   *+SP(44),A5
           LDW     .D2T2   *+SP(36),B6
           LDW     .D2T2   *+SP(40),B5
$C$DW$L$VLIB_normalFlow_16_d$16$E:
;** --------------------------------------------------------------------------*
$C$L5:    
$C$DW$L$VLIB_normalFlow_16_d$17$B:
;          EXCLUSIVE CPU CYCLES: 4
;**	-----------------------g9:
;**  	-----------------------    U$75 = pIn;
;**  	-----------------------    U$77 = pInold;
;**  	-----------------------    U$81 = imDiff;
;**  	-----------------------    L$2 = out_size;
;**  	-----------------------    #pragma[60] (pInold <= imDiff;)
;**  	-----------------------    #pragma[60] (pIn <= imDiff;)
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4160u)
;**	-----------------------g10:
;** 127	-----------------------    *U$81++ = *U$75++-*U$77++;
;** 126	-----------------------    if ( L$2 = L$2-1 ) goto g10;
           NOP             3
           SUB     .L2     B6,1,B6
$C$DW$L$VLIB_normalFlow_16_d$17$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c
;*      Loop source line                 : 126
;*      Loop opening brace source line   : 126
;*      Loop closing brace source line   : 128
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 7
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     0        0     
;*      .S units                     0        0     
;*      .D units                     2*       1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             2*       1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           1        0     (.L or .S unit)
;*      Addition ops (.LSD)          0        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     1        1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 7  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    **                          |     *                          |
;*       1: |    **                          |     *                          |
;*       2: |    **                          |     *                          |
;*       3: |    **                          |     *                          |
;*       4: |    **                          |     *                          |
;*       5: |   ***                          |    **                          |
;*       6: |   ***                          |     *                          |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 8
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.8%
;*
;*      Effective ii                : { min 7.00, est 7.13, max 8.00 }
;*
;*
;*      Total cycles (est.)         : 7 + trip_cnt * 7        
;*----------------------------------------------------------------------------*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C153:
;*   0              LDBU    .D1T1   *A5++,A3          ; |127|  ^ 
;*     ||           LDBU    .D2T2   *B5++,B4          ; |127|  ^ 
;*   1              NOP             4
;*   5              SUB     .L1X    B4,A3,A3          ; |127|  ^ 
;*   6              STH     .D1T1   A3,*A4++          ; |127|  ^ 
;*     ||           SPBR            $C$C153
;*   7              NOP             7
;*  14              ; BRANCHCC OCCURS {$C$C153}       ; |126| 
;*----------------------------------------------------------------------------*
$C$L6:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 8

           SPLOOPD 7       ;14               ; (P) 
||         MVC     .S2     B6,ILC

;** --------------------------------------------------------------------------*
$C$L7:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_normalFlow_16_d$19$B:
;          EXCLUSIVE CPU CYCLES: 7

           LDBU    .D1T1   *A5++,A3          ; |127| (P) <0,0>  ^ 
||         LDBU    .D2T2   *B5++,B4          ; |127| (P) <0,0>  ^ 

           SPMASK          D2
||         LDW     .D2T1   *+SP(48),A4

           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 127,column 21,is_stmt,isa 0
           SUB     .L1X    B4,A3,A3          ; |127| (P) <0,5>  ^ 
           STH     .D1T1   A3,*A4++          ; |127| (P) <0,6>  ^ 
           SPKERNEL 0,0
$C$DW$L$VLIB_normalFlow_16_d$19$E:
;** --------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP EPILOG
;          EXCLUSIVE CPU CYCLES: 1
           NOP             1
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_normalFlow_16_d$21$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 132,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A3      ; |132| 
$C$DW$L$VLIB_normalFlow_16_d$21$E:
;** --------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 126,column 27,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$22$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g11:
;** 132	-----------------------    memset((void *)Ex, 0, ((unsigned)(*U$12).width+1u)*2u);
;** 133	-----------------------    C$21 = (*U$12).width;
;** 133	-----------------------    memset(((*U$12).height-1)*C$21*2+Ex-2, 0, ((unsigned)C$21+1u)*2u);
;** 134	-----------------------    memset((void *)Ey, 0, ((unsigned)(*U$12).width+1u)*2u);
;** 135	-----------------------    C$20 = (*U$12).width;
;** 135	-----------------------    memset(((*U$12).height-1)*C$20*2+Ey-2, 0, ((unsigned)C$20+1u)*2u);
;** 136	-----------------------    memset((void *)Emag, 0, ((unsigned)(*U$12).width+1u)*2u);
;** 137	-----------------------    C$19 = (*U$12).width;
;** 137	-----------------------    memset(((*U$12).height-1)*C$19*2+Emag-2, 0, ((unsigned)C$19+1u)*2u);
;** 140	-----------------------    C$18 = (*U$12).width;
;** 140	-----------------------    C$17 = C$18*2;
;** 140	-----------------------    VLIB_xyGradientsAndMagnitude_cn(pIn, C$17+Ex+2, C$17+Ey+2, C$17+Emag+2, C$18, (*U$12).height);
;** 140	-----------------------    goto g13;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 132,column 17,is_stmt,isa 0
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("memset")
	.dwattr $C$DW$182, DW_AT_TI_call
           CALL    .S1     memset            ; |132| 
           LDW     .D2T1   *+SP(56),A4       ; |132| 
           ADDKPC  .S2     $C$RL14,B3,1      ; |132| 
           ADD     .L1     1,A3,A3           ; |132| 

           ZERO    .L2     B4                ; |132| 
||         ADD     .L1     A3,A3,A6          ; |132| 

$C$RL14:   ; CALL OCCURS {memset} {0}        ; |132| 
$C$DW$L$VLIB_normalFlow_16_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$23$B:
;          EXCLUSIVE CPU CYCLES: 95
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 133,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A4      ; |133| 
           LDHU    .D1T1   *+A11(34),A3      ; |133| 
           LDW     .D2T1   *+SP(56),A5
           ZERO    .L2     B4                ; |133| 
           NOP             1
           SUB     .L1     A4,1,A4           ; |133| 
           MPY32   .M1     A3,A4,A4          ; |133| 
           ADD     .L1     1,A3,A3           ; |133| 
           ADD     .L1     A3,A3,A6          ; |133| 
           NOP             1
           ADDAH   .D1     A5,A4,A4          ; |133| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("memset")
	.dwattr $C$DW$183, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         SUB     .L1     A4,2,A4           ; |133| 

$C$RL15:   ; CALL OCCURS {memset} {0}        ; |133| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 134,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A3      ; |134| 
           LDW     .D2T1   *+SP(60),A4       ; |134| 
           NOP             3
           ADD     .L2X    1,A3,B4           ; |134| 
           ADD     .L2     B4,B4,B5          ; |134| 
           ZERO    .L2     B4                ; |134| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("memset")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         MV      .L1X    B5,A6             ; |134| 

$C$RL16:   ; CALL OCCURS {memset} {0}        ; |134| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 135,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A4      ; |135| 
           LDHU    .D1T1   *+A11(34),A3      ; |135| 
           LDW     .D2T1   *+SP(60),A5
           ZERO    .L2     B4                ; |135| 
           NOP             1
           SUB     .L1     A4,1,A4           ; |135| 
           MPY32   .M1     A3,A4,A4          ; |135| 
           ADD     .L1     1,A3,A3           ; |135| 
           ADD     .L1     A3,A3,A6          ; |135| 
           NOP             1
           ADDAH   .D1     A5,A4,A4          ; |135| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("memset")
	.dwattr $C$DW$185, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         SUB     .L1     A4,2,A4           ; |135| 

$C$RL17:   ; CALL OCCURS {memset} {0}        ; |135| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 136,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A3      ; |136| 
           LDW     .D2T1   *+SP(52),A4       ; |136| 
           NOP             3
           ADD     .L2X    1,A3,B4           ; |136| 
           ADD     .L2     B4,B4,B5          ; |136| 
           ZERO    .L2     B4                ; |136| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("memset")
	.dwattr $C$DW$186, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         MV      .L1X    B5,A6             ; |136| 

$C$RL18:   ; CALL OCCURS {memset} {0}        ; |136| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 137,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A4      ; |137| 
           LDHU    .D1T1   *+A11(34),A3      ; |137| 
           LDW     .D2T1   *+SP(52),A5
           ZERO    .L2     B4                ; |137| 
           NOP             1
           SUB     .L1     A4,1,A4           ; |137| 
           MPY32   .M1     A3,A4,A4          ; |137| 
           ADD     .L1     1,A3,A3           ; |137| 
           ADD     .L1     A3,A3,A6          ; |137| 
           NOP             1
           ADDAH   .D1     A5,A4,A4          ; |137| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("memset")
	.dwattr $C$DW$187, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         SUB     .L1     A4,2,A4           ; |137| 

$C$RL19:   ; CALL OCCURS {memset} {0}        ; |137| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 140,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(60),A4       ; |140| 
           LDHU    .D1T1   *+A11(34),A8      ; |140| 
           LDW     .D2T1   *+SP(56),A31      ; |140| 
           LDW     .D2T1   *+SP(52),A5       ; |140| 
           LDHU    .D1T2   *+A11(36),B8      ; |140| 
           NOP             1
           ADD     .L1     A8,A8,A3          ; |140| 

           ADD     .L1     A4,A3,A6          ; |140| 
||         ADD     .S1     A31,A3,A4         ; |140| 

           ADD     .L1     A5,A3,A3          ; |140| 
           ADD     .L2X    2,A4,B4           ; |140| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x08)
	.dwattr $C$DW$188, DW_AT_name("VLIB_xyGradientsAndMagnitude_cn")
	.dwattr $C$DW$188, DW_AT_TI_call

           ADD     .L2X    2,A3,B6           ; |140| 
||         ADD     .L1     2,A6,A6           ; |140| 
||         CALLP   .S2     VLIB_xyGradientsAndMagnitude_cn,B3
||         LDW     .D2T1   *+SP(40),A4       ; |140| 

$C$RL20:   ; CALL OCCURS {VLIB_xyGradientsAndMagnitude_cn} {0}  ; |140| 
$C$DW$L$VLIB_normalFlow_16_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$24$B:
;          EXCLUSIVE CPU CYCLES: 6

           BNOP    .S1     $C$L12,4          ; |140| 
||         LDW     .D2T1   *+SP(36),A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 148,column 23,is_stmt,isa 0
   [!A0]   B       .S1     $C$L16            ; |148| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 140,column 17,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L12}          ; |140| 
$C$DW$L$VLIB_normalFlow_16_d$24$E:
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 85,column 13,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$25$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g12:
;** 86	-----------------------    C$15 = U$11+v$1;
;** 86	-----------------------    C$16 = (*C$15).width;
;** 86	-----------------------    VLIB_fillBuffer((*C$15).testPattern, (unsigned char)K$64, (void *)imDiff, (*C$15).staticImDiff, C$16, (*C$15).height, (unsigned short)(C$16*2), 2u, K$63);
;** 92	-----------------------    C$14 = (*U$12).width;
;** 92	-----------------------    VLIB_fillBuffer((*U$12).testPattern, (unsigned char)K$64, (void *)Emag, (*U$12).staticEmag, C$14, (*U$12).height, (unsigned short)(C$14*2), 2u, K$63);
;** 98	-----------------------    C$13 = (*U$12).width;
;** 98	-----------------------    VLIB_fillBuffer((*U$12).testPattern, (unsigned char)K$64, (void *)Ex, (*U$12).staticEx, C$13, (*U$12).height, (unsigned short)(C$13*2), 2u, K$63);
;** 104	-----------------------    C$12 = (*U$12).width;
;** 104	-----------------------    VLIB_fillBuffer((*U$12).testPattern, (unsigned char)K$64, (void *)Ey, (*U$12).staticEy, C$12, (*U$12).height, (unsigned short)(C$12*2), 2u, K$63);

           LDHU    .D2T2   *+B4(34),B5       ; |86| 
||         MVK     .S1     0xff,A3

           LDBU    .D2T1   *B4,A4            ; |86| 
||         EXTU    .S1     A3,24,24,A3       ; |86| 

$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$189, DW_AT_TI_call

           CALL    .S2     VLIB_fillBuffer   ; |86| 
||         LDW     .D2T2   *+B4(4),B6        ; |86| 
||         MVKL    .S1     testPatternString,A12

           MVKH    .S1     testPatternString,A12
||         LDHU    .D2T2   *+B4(36),B8       ; |86| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 86,column 17,is_stmt,isa 0
           MV      .L2X    A3,B4             ; |86| 
           EXTU    .S2     B5,17,16,B7       ; |86| 
           MV      .L1X    B5,A8             ; |86| 

           MV      .L1X    B7,A10            ; |86| 
||         ADDKPC  .S2     $C$RL21,B3,0      ; |86| 
||         MV      .S1     A1,A6             ; |86| 
||         MVK     .L2     0x2,B10           ; |86| 

$C$RL21:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |86| 
$C$DW$L$VLIB_normalFlow_16_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$26$B:
;          EXCLUSIVE CPU CYCLES: 39
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 92,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A8      ; |92| 
           MVK     .S1     0xff,A3
           LDW     .D1T2   *+A11(8),B6       ; |92| 
           EXTU    .S1     A3,24,24,A7       ; |92| 
           LDBU    .D1T1   *A11,A4           ; |92| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     VLIB_fillBuffer,B3
||         LDW     .D2T1   *+SP(52),A6       ; |92| 
||         LDHU    .D1T2   *+A11(36),B8      ; |92| 
||         EXTU    .S1     A8,17,16,A10      ; |92| 
||         MV      .L2X    A7,B4             ; |92| 

$C$RL22:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 98,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A8      ; |98| 
           MVK     .S1     0xff,A3
           LDW     .D1T2   *+A11(12),B6      ; |98| 
           EXTU    .S1     A3,24,24,A7       ; |98| 
           LDBU    .D1T1   *A11,A4           ; |98| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$191, DW_AT_TI_call

           CALLP   .S2     VLIB_fillBuffer,B3
||         LDW     .D2T1   *+SP(56),A6       ; |98| 
||         LDHU    .D1T2   *+A11(36),B8      ; |98| 
||         EXTU    .S1     A8,17,16,A10      ; |98| 
||         MV      .L2X    A7,B4             ; |98| 

$C$RL23:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |98| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 104,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(34),A8      ; |104| 
           MVK     .S1     0xff,A3
           LDW     .D1T2   *+A11(16),B6      ; |104| 
           EXTU    .S1     A3,24,24,A5       ; |104| 
           LDBU    .D1T1   *A11,A4           ; |104| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$192, DW_AT_TI_call

           CALLP   .S2     VLIB_fillBuffer,B3
||         LDW     .D2T1   *+SP(60),A6       ; |104| 
||         LDHU    .D1T2   *+A11(36),B8      ; |104| 
||         EXTU    .S1     A8,17,16,A10      ; |104| 
||         MV      .L2X    A5,B4             ; |104| 

$C$RL24:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |104| 
           LDW     .D2T1   *+SP(36),A0
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 148,column 23,is_stmt,isa 0
   [!A0]   B       .S1     $C$L16            ; |148| 
$C$DW$L$VLIB_normalFlow_16_d$26$E:
;** --------------------------------------------------------------------------*
$C$L12:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 140,column 17,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$27$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g13:
;** 148	-----------------------    if ( !out_size ) goto g16;
   [ A0]   MVC     .S2X    A0,ILC
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 149,column 17,is_stmt,isa 0
   [ A0]   LDW     .D2T1   *+SP(52),A5       ; |149| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 148,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |148| 
$C$DW$L$VLIB_normalFlow_16_d$27$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 149,column 17,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$28$B:
;**  	-----------------------    U$129 = Emag;
;** 149	-----------------------    L$3 = out_size;
;**  	-----------------------    #pragma MUST_ITERATE(1, 2147483647, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
;**	-----------------------g15:
;** 150	-----------------------    C$11 = *U$129++;
;** 150	-----------------------    (maxMag > C$11) ? maxMag : (maxMag = C$11);
;** 148	-----------------------    if ( L$3 = L$3-1 ) goto g15;
$C$DW$L$VLIB_normalFlow_16_d$28$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c
;*      Loop source line                 : 148
;*      Loop opening brace source line   : 148
;*      Loop closing brace source line   : 152
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 2
;*      Unpartitioned Resource Bound     : 1
;*      Partitioned Resource Bound(*)    : 1
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1*       0     
;*      .S units                     0        0     
;*      .D units                     1*       0     
;*      .M units                     0        0     
;*      .X cross paths               0        0     
;*      .T address paths             1*       0     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          1        0     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1*       0     
;*      Bound(.L .S .D .LS .LSD)     1*       0     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 2  Schedule found with 4 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |*  ***                          |                                |
;*       1: |   ***                          |                                |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 0
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 2
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.000, max 0.000 }
;*      Mem bank perf. penalty (est.) : 0.0%
;*
;*
;*      Total cycles (est.)         : 6 + trip_cnt * 2        
;*----------------------------------------------------------------------------*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C84:
;*   0              LDH     .D1T1   *A5++,A3          ; |150| 
;*   1              NOP             4
;*   5              CMPGT   .L1     A4,A3,A0          ; |150|  ^ 
;*   6      [!A0]   MV      .L1     A3,A4             ; |150|  ^ 
;*     ||           SPBR            $C$C84
;*   7              NOP             1
;*   8              ; BRANCHCC OCCURS {$C$C84}        ; |148| 
;*----------------------------------------------------------------------------*
$C$L13:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 7
           SPLOOP  2       ;8                ; (P) 
;** --------------------------------------------------------------------------*
$C$L14:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_normalFlow_16_d$30$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 150,column 21,is_stmt,isa 0
           LDH     .D1T1   *A5++,A3          ; |150| (P) <0,0> 
           NOP             3

           SPMASK          L1
||         MV      .L1     A15,A4

           CMPGT   .L1     A4,A3,A0          ; |150| (P) <0,5>  ^ 

           SPKERNEL 2,0
|| [!A0]   MV      .L1     A3,A4             ; |150| <0,6>  ^ 

$C$DW$L$VLIB_normalFlow_16_d$30$E:
;** --------------------------------------------------------------------------*
$C$L15:    ; PIPED LOOP EPILOG
;          EXCLUSIVE CPU CYCLES: 5
           NOP             1
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$32$B:
;          EXCLUSIVE CPU CYCLES: 1
           MV      .L1     A4,A15
$C$DW$L$VLIB_normalFlow_16_d$32$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 148,column 23,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$33$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g16:
;** 154	-----------------------    U$138 = (unsigned)(maxMag*2)+2u;
;** 154	-----------------------    LUT = VLIB_malloc(U$138);
;** 157	-----------------------    v$1 = prm;
;** 157	-----------------------    if ( LUT == NULL ) goto g33;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 154,column 13,is_stmt,isa 0
           MVK     .L1     2,A3              ; |154| 
           ADDAH   .D1     A3,A15,A10        ; |154| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$193, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         MV      .L1     A10,A4            ; |154| 

$C$RL25:   ; CALL OCCURS {VLIB_malloc} {0}   ; |154| 
$C$DW$L$VLIB_normalFlow_16_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$34$B:
;          EXCLUSIVE CPU CYCLES: 7

           MV      .L1     A4,A0             ; |157| 
||         STW     .D2T1   A4,*+SP(64)       ; |154| 

   [!A0]   BNOP    .S1     $C$L23,4          ; |157| 
||         LDW     .D2T2   *+SP(28),B4       ; |157| 
|| [ A0]   LDBU    .D1T1   *A11,A4           ; |161| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 221,column 17,is_stmt,isa 0
   [!A0]   ADD     .L2     B4,B11,B4         ; |221| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 157,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |157| 
$C$DW$L$VLIB_normalFlow_16_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$35$B:
;          EXCLUSIVE CPU CYCLES: 7
;**  	-----------------------    K$172 = &cycles[0];
;** 161	-----------------------    if ( (*U$12).testPattern == 4 ) goto g21;

           CMPEQ   .L1     A4,4,A0           ; |161| 
||         LDW     .D2T1   *+SP(64),A3       ; |169| 

   [ A0]   B       .S1     $C$L18            ; |161| 
||         MV      .L1     A0,A1             ; |161| branch predicate copy
|| [!A0]   ZERO    .D1     A4                ; |169| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 162,column 21,is_stmt,isa 0
   [ A1]   ADD     .L2     B4,B11,B4         ; |162| 
   [ A1]   ADD     .L1     1,A15,A4          ; |162| 
   [ A1]   EXTU    .S1     A4,16,16,A8       ; |162| 

   [!A0]   STH     .D1T1   A4,*A3            ; |169| 
||         CMPGT   .L1     A15,0,A0          ; |171| 

   [ A1]   LDBU    .D2T1   *B4,A4            ; |162| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 161,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |161| 
$C$DW$L$VLIB_normalFlow_16_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$36$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 169	-----------------------    *LUT = 0;
;** 171	-----------------------    if ( maxMag <= 0 ) goto g22;

   [!A0]   BNOP    .S2     $C$L19,1          ; |171| 
|| [ A0]   ZERO    .L2     B4
|| [ A0]   MVKL    .S1     0x46fffe00,A10
|| [ A0]   STW     .D2T1   A15,*+SP(32)      ; |172| 
|| [ A0]   ADD     .L1     2,A3,A15

   [ A0]   SET     .S2     B4,0x18,0x1d,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 26,is_stmt,isa 0
   [ A0]   MVK     .L2     0x1,B10           ; |171| 
   [ A0]   MVKH    .S1     0x46fffe00,A10
   [ A0]   MV      .L1X    B4,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L19}        ; |171| 
$C$DW$L$VLIB_normalFlow_16_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$37$B:
;**  	-----------------------    U$153 = &LUT[1];
;** 172	-----------------------    L$4 = maxMag;
;**  	-----------------------    K$150 = 0.5F;
;**  	-----------------------    K$147 = 32767.0F;
;** 171	-----------------------    i = 1;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)
$C$DW$L$VLIB_normalFlow_16_d$37$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 26,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$38$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g20:
;** 172	-----------------------    *U$153++ = (short)(K$147/(float)i+K$150);
;** 171	-----------------------    ++i;
;** 171	-----------------------    if ( L$4 = L$4-1 ) goto g20;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 172,column 25,is_stmt,isa 0
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("__c6xabi_divf")
	.dwattr $C$DW$194, DW_AT_TI_call
           CALL    .S1     __c6xabi_divf     ; |172| 
           INTSP   .L2     B10,B4            ; |172| 
           ADDKPC  .S2     $C$RL26,B3,2      ; |172| 
           MV      .L1     A10,A4            ; |172| 
$C$RL26:   ; CALL OCCURS {__c6xabi_divf} {0}  ; |172| 
$C$DW$L$VLIB_normalFlow_16_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$39$B:
;          EXCLUSIVE CPU CYCLES: 12
           LDW     .D2T2   *+SP(32),B4
           FADDSP  .L1     A12,A4,A3         ; |172| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 49,is_stmt,isa 0
           ADD     .L2     1,B10,B10         ; |171| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 172,column 25,is_stmt,isa 0
           SPTRUNC .L1     A3,A3             ; |172| 

           SUB     .L1X    B4,1,A0           ; |171| 
||         SUB     .L2     B4,1,B4           ; |171| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 31,is_stmt,isa 0
   [ A0]   BNOP    .S1     $C$L17,3          ; |171| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 172,column 25,is_stmt,isa 0
           STH     .D1T1   A3,*A15++         ; |172| 
           STW     .D2T2   B4,*+SP(32)       ; |172| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |171| 
$C$DW$L$VLIB_normalFlow_16_d$39$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$40$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 171	-----------------------    goto g22;
           B       .S1     $C$L20            ; |171| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$195, DW_AT_TI_call
           CALL    .S1     VLIB_cache_inval  ; |140| 
           MVKL    .S1     act_kernel,A15
           MVKH    .S1     act_kernel,A15
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           ZERO    .L2     B4                ; |137| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 31,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L20}          ; |171| 
$C$DW$L$VLIB_normalFlow_16_d$40$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 161,column 17,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$41$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g21:
;** 162	-----------------------    C$10 = U$11+v$1;
;** 162	-----------------------    VLIB_fillBuffer((*C$10).testPattern, (unsigned char)K$64, (void *)LUT, (*C$10).staticLUT, (unsigned short)(maxMag+1), 1u, (unsigned short)U$138, 2u, K$63);
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$196, DW_AT_TI_call

           CALL    .S2     VLIB_fillBuffer   ; |162| 
||         LDW     .D2T2   *+B4(20),B6       ; |162| 
||         MVK     .S1     0xff,A3

           LDW     .D2T1   *+SP(64),A6       ; |162| 
||         EXTU    .S1     A3,24,24,A3       ; |162| 

           MVKL    .S1     testPatternString,A12
           MVKH    .S1     testPatternString,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 162,column 21,is_stmt,isa 0
           MV      .L2X    A3,B4             ; |162| 

           ADDKPC  .S2     $C$RL27,B3,0      ; |162| 
||         MVK     .L2     0x2,B10           ; |162| 
||         MVK     .D2     0x1,B8            ; |162| 
||         EXTU    .S1     A10,16,16,A10     ; |162| 

$C$RL27:   ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |162| 
$C$DW$L$VLIB_normalFlow_16_d$41$E:
;** --------------------------------------------------------------------------*
$C$L19:    
$C$DW$L$VLIB_normalFlow_16_d$42$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$197, DW_AT_TI_call
           CALL    .S1     VLIB_cache_inval  ; |140| 
           MVKL    .S1     act_kernel,A15
           MVKH    .S1     act_kernel,A15
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           ZERO    .L2     B4                ; |137| 
           NOP             1
$C$DW$L$VLIB_normalFlow_16_d$42$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 171,column 31,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$43$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g22:
;** 137	-----------------------    act_kernel = 0;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 178	-----------------------    VLIB_normalFlow_16(imDiff, Emag, Ex, Ey, LUT, (*U$12).T, (int)_mpyu((*U$12).width, (*U$12).height), normalFlowU, normalFlowV);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$9 = act_kernel;  // [16]
;** 156	-----------------------    *((C$9<<3)+K$172) = *((C$9<<3)+K$172)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 137	-----------------------    act_kernel = 1;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 186	-----------------------    VLIB_normalFlow_16_cn(imDiff, Emag, Ex, Ey, LUT, (*U$12).T, (int)_mpyu((*U$12).width, (*U$12).height), normalFlowU_cn, normalFlowV_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$8 = act_kernel;  // [16]
;** 156	-----------------------    *((C$8<<3)+K$172) = *((C$8<<3)+K$172)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 192	-----------------------    statusU = VLIB_compare_mem((void *)normalFlowU, (void *)normalFlowU_cn, (int)(_mpyu((*U$12).width, (*U$12).height)*2u));

           ADDKPC  .S2     $C$RL28,B3,0      ; |140| 
||         STW     .D1T2   B4,*A15           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_normalFlow_16_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$44$B:
;          EXCLUSIVE CPU CYCLES: 123
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("getSP")
	.dwattr $C$DW$198, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL29:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("initStack")
	.dwattr $C$DW$199, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL30:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 178,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A4      ; |178| 

           LDHU    .D1T1   *+A11(34),A6      ; |178| 
||         LDW     .D2T2   *+SP(68),B10      ; |178| 

           MVKL    .S1     beg_count,A3
||         LDW     .D2T2   *+SP(60),B6       ; |178| 

           MVKH    .S1     beg_count,A3
||         LDW     .D2T1   *+SP(72),A12      ; |178| 

           STDW    .D1T2   B5:B4,*A3         ; |146| 
||         LDW     .D2T1   *+SP(64),A8       ; |178| 

           LDW     .D2T2   *+SP(52),B4       ; |178| 

           MPYU    .M1     A6,A4,A10         ; |178| 
||         LDW     .D2T1   *+SP(56),A6       ; |178| 

$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("VLIB_normalFlow_16")
	.dwattr $C$DW$200, DW_AT_TI_call

           CALLP   .S2     VLIB_normalFlow_16,B3
||         LDW     .D2T1   *+SP(48),A4       ; |178| 
||         LDH     .D1T2   *+A11(32),B8      ; |178| 

$C$RL31:   ; CALL OCCURS {VLIB_normalFlow_16} {0}  ; |178| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 

           MVKL    .S1     beg_count,A10
||         MVKL    .S2     overhead,B4

           MVKH    .S2     overhead,B4
||         MVKH    .S1     beg_count,A10
||         LDW     .D1T1   *A15,A3           ; |156| 

           LDDW    .D1T1   *A10,A7:A6        ; |156| 
||         LDDW    .D2T2   *B4,B5:B4         ; |156| 

           MVKL    .S1     cycles,A4
           MVKH    .S1     cycles,A4
           NOP             2

           LDDW    .D1T1   *+A4[A3],A9:A8    ; |156| 
||         ADDU    .L1X    B4,A6,A5:A4       ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADD     .L1X    A5,B5,A5          ; |156| 
           ADD     .L1     A5,A7,A6          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 
           SUB     .L2X    B7,A6,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1X    B4,A31,A6         ; |156| 
||         ADD     .S1     A5,A9,A5          ; |156| 

           ADD     .L1     A5,A6,A5          ; |156| 
||         MVKL    .S1     cycles,A6
||         MVKL    .S2     end_count,B4

           MVKH    .S1     cycles,A6
||         MVKH    .S2     end_count,B4

$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("setStackDepth")
	.dwattr $C$DW$201, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A6[A3]    ; |156| 
||         STDW    .D2T2   B7:B6,*B4         ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL32:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 

           MVK     .L2     1,B4              ; |137| 
||         MV      .L1     A15,A3            ; |137| 

$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$202, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL33:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("getSP")
	.dwattr $C$DW$203, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("initStack")
	.dwattr $C$DW$204, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL35:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 186,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A4      ; |186| 
           LDHU    .D1T1   *+A11(34),A5      ; |186| 
           LDW     .D2T1   *+SP(64),A8       ; |186| 
           LDW     .D2T1   *+SP(56),A6       ; |186| 
           LDW     .D2T2   *+SP(60),B6       ; |186| 

           MV      .L1     A10,A15           ; |146| 
||         LDW     .D2T2   *+SP(76),B10      ; |186| 

           STDW    .D1T2   B5:B4,*A15        ; |146| 
||         LDW     .D2T1   *+SP(80),A12      ; |186| 

           LDW     .D2T2   *+SP(52),B4       ; |186| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("VLIB_normalFlow_16_cn")
	.dwattr $C$DW$205, DW_AT_TI_call

           CALLP   .S2     VLIB_normalFlow_16_cn,B3
||         MPYU    .M1     A5,A4,A10         ; |186| 
||         LDW     .D2T1   *+SP(48),A4       ; |186| 
||         LDH     .D1T2   *+A11(32),B8      ; |186| 

$C$RL36:   ; CALL OCCURS {VLIB_normalFlow_16_cn} {0}  ; |186| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKH    .S1     act_kernel,A3

           LDW     .D1T1   *A3,A8            ; |156| 
||         MVKL    .S2     overhead,B4

           MVKH    .S2     overhead,B4

           LDDW    .D2T2   *B4,B9:B8         ; |156| 
||         LDDW    .D1T1   *A15,A5:A4        ; |156| 

           MVKL    .S1     cycles,A31
           MVKH    .S1     cycles,A31

           LDDW    .D1T1   *+A31[A8],A7:A6   ; |156| 
||         MVKL    .S1     end_count,A3

           MVKH    .S1     end_count,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B8,A4,B5:B4       ; |156| 

           ADD     .L2     B5,B9,B8          ; |156| 
||         MV      .S2X    A3,B16

           ADD     .S2X    B8,A5,B8          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           EXT     .S2     B5,24,24,B9       ; |156| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |156| 
||         SUB     .D2     B7,B8,B8          ; |156| 

           ADD     .L2X    B5,A7,B5          ; |156| 
||         ADD     .S2     B8,B9,B8          ; |156| 
||         MVKL    .S1     cycles,A3

           ADD     .L2     B5,B8,B5          ; |156| 
||         MVKH    .S1     cycles,A3
||         STDW    .D2T2   B7:B6,*B16        ; |153| 

$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("setStackDepth")
	.dwattr $C$DW$206, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B5:B4,*+A3[A8]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL37:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 192,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A3      ; |192| 
           LDHU    .D1T1   *+A11(34),A4      ; |192| 
           MV      .L2     B10,B4            ; |192| 
           NOP             3
           MPYU    .M1     A4,A3,A3          ; |192| 
           LDW     .D2T1   *+SP(68),A4       ; |192| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x04)
	.dwattr $C$DW$207, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$207, DW_AT_TI_call

           ADD     .L1     A3,A3,A6          ; |192| 
||         CALLP   .S2     VLIB_compare_mem,B3

$C$RL38:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |192| 
$C$DW$L$VLIB_normalFlow_16_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$45$B:
;          EXCLUSIVE CPU CYCLES: 14
;** 193	-----------------------    statusV = VLIB_compare_mem((void *)normalFlowV, (void *)normalFlowV_cn, (int)(_mpyu((*U$12).width, (*U$12).height)*2u));
;** 194	-----------------------    if ( !((statusU == 0)|(statusV == 0)) ) goto g24;
;** 195	-----------------------    status_nat_vs_int = 0;
;**	-----------------------g24:
;** 200	-----------------------    v$1 = prm;
;** 200	-----------------------    U$188 = (*U$12).staticOutU;
;** 200	-----------------------    if ( U$188 ) goto g26;
;** 199	-----------------------    statusU = 1;
;**  	-----------------------    goto g27;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 193,column 17,is_stmt,isa 0
           LDHU    .D1T1   *+A11(36),A3      ; |193| 

           MV      .L1     A4,A10            ; |192| 
||         LDHU    .D1T1   *+A11(34),A4      ; |193| 

           MV      .L2X    A12,B4            ; |193| 
           NOP             3
           MPYU    .M1     A4,A3,A3          ; |193| 
           LDW     .D2T1   *+SP(72),A4       ; |193| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x04)
	.dwattr $C$DW$208, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$208, DW_AT_TI_call

           ADD     .L1     A3,A3,A6          ; |193| 
||         CALLP   .S2     VLIB_compare_mem,B3

$C$RL39:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |193| 
$C$DW$L$VLIB_normalFlow_16_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$46$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 200,column 17,is_stmt,isa 0
           LDW     .D1T1   *+A11(24),A0      ; |200| 
           LDW     .D2T2   *+SP(28),B4       ; |200| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 194,column 17,is_stmt,isa 0
           CMPEQ   .L1     A4,0,A4           ; |194| 
           CMPEQ   .L1     A10,0,A3          ; |194| 
           OR      .L1     A4,A3,A1          ; |194| 

   [!A0]   B       .S1     $C$L21
|| [ A0]   LDHU    .D1T1   *+A11(34),A4      ; |201| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 201,column 21,is_stmt,isa 0
   [ A0]   LDHU    .D1T1   *+A11(36),A3      ; |201| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 195,column 21,is_stmt,isa 0
   [ A1]   ZERO    .L2     B13               ; |195| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 201,column 21,is_stmt,isa 0
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$209, DW_AT_TI_call
   [ A0]   CALL    .S1     VLIB_compare_mem  ; |201| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 199,column 17,is_stmt,isa 0
   [!A0]   MVK     .L1     0x1,A3            ; |199| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 195,column 21,is_stmt,isa 0
   [!A0]   STW     .D2T1   A3,*+SP(84)       ; |195| 
           ; BRANCHCC OCCURS {$C$L21}  
$C$DW$L$VLIB_normalFlow_16_d$46$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 200,column 17,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$47$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g26:
;** 201	-----------------------    statusU = VLIB_compare_mem((void *)U$188, (void *)normalFlowU_cn, (int)(_mpyu((*U$12).width, (*U$12).height)*2u));
;** 201	-----------------------    v$1 = prm;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 201,column 21,is_stmt,isa 0
           MPYU    .M1     A4,A3,A3          ; |201| 
           MV      .L2     B10,B4            ; |201| 

           ADDKPC  .S2     $C$RL40,B3,0      ; |201| 
||         MV      .L1     A0,A4             ; |201| 
||         ADD     .S1     A3,A3,A6          ; |201| 

$C$RL40:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |201| 
$C$DW$L$VLIB_normalFlow_16_d$47$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$48$B:
;          EXCLUSIVE CPU CYCLES: 5
           LDW     .D2T2   *+SP(28),B4       ; |201| 
           STW     .D2T1   A4,*+SP(84)       ; |201| 
           NOP             3
$C$DW$L$VLIB_normalFlow_16_d$48$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_normalFlow_16_d$49$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g27:
;** 203	-----------------------    U$112 = U$11+v$1;
;** 203	-----------------------    if ( (*U$112).staticOutU ) goto g29;
;** 199	-----------------------    statusV = 1;
;**  	-----------------------    goto g30;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 203,column 17,is_stmt,isa 0
           ADD     .L2     B4,B11,B4         ; |203| 
           LDW     .D2T2   *+B4(24),B0       ; |203| 
           NOP             4

   [!B0]   B       .S1     $C$L22
|| [ B0]   LDHU    .D2T2   *+B4(36),B6       ; |204| 
|| [!B0]   MVK     .L1     0x1,A14           ; |199| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 204,column 21,is_stmt,isa 0
   [ B0]   LDHU    .D2T2   *+B4(34),B7       ; |204| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 216,column 17,is_stmt,isa 0
   [!B0]   LDHU    .D2T2   *+B4(34),B7       ; |216| 

   [!B0]   LDHU    .D2T2   *+B4(36),B5       ; |216| 
|| [!B0]   MVKL    .S2     testPatternString,B4

   [!B0]   MVKH    .S2     testPatternString,B4
|| [ B0]   LDW     .D2T1   *+B4(28),A4       ; |204| 

$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("VLIB_compare_mem")
	.dwattr $C$DW$210, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_compare_mem  ; |204| 
|| [!B0]   STW     .D2T2   B4,*+SP(8)        ; |216| 

           ; BRANCHCC OCCURS {$C$L22}  
$C$DW$L$VLIB_normalFlow_16_d$49$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 203,column 17,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$50$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g29:
;** 204	-----------------------    statusV = VLIB_compare_mem((*U$112).staticOutV, (void *)normalFlowV_cn, (int)(_mpyu((*U$112).width, (*U$112).height)*2u));
;**  	-----------------------    U$112 = prm+U$11;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 204,column 21,is_stmt,isa 0
           MPYU    .M2     B7,B6,B4          ; |204| 
           ADDKPC  .S2     $C$RL41,B3,0      ; |204| 
           ADD     .L2     B4,B4,B6          ; |204| 
           MV      .L2X    A12,B4            ; |204| 
           MV      .L1X    B6,A6             ; |204| 
$C$RL41:   ; CALL OCCURS {VLIB_compare_mem} {0}  ; |204| 
$C$DW$L$VLIB_normalFlow_16_d$50$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$51$B:
;          EXCLUSIVE CPU CYCLES: 10
           LDW     .D2T2   *+SP(28),B4
           MV      .L1     A4,A14            ; |204| 
           NOP             3
           ADD     .L2     B11,B4,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 216,column 17,is_stmt,isa 0
           LDHU    .D2T2   *+B4(34),B7       ; |216| 

           LDHU    .D2T2   *+B4(36),B5       ; |216| 
||         MVKL    .S2     testPatternString,B4

           MVKH    .S2     testPatternString,B4
           STW     .D2T2   B4,*+SP(8)        ; |216| 
$C$DW$L$VLIB_normalFlow_16_d$51$E:
;** --------------------------------------------------------------------------*
$C$L22:    
$C$DW$L$VLIB_normalFlow_16_d$52$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g30:
;** 206	-----------------------    if ( !((statusU == 0)|(statusV == 0)) ) goto g32;
;** 207	-----------------------    status_nat_vs_ref = 0;
;**	-----------------------g32:
;** 213	-----------------------    est_test = 1;
;** 216	-----------------------    sprintf(K$204, (const char *)"%s generated input | Opt results compared to NatC results | width=%d, height=%d, numEls=%d", K$63, (int)(*U$112).width, (int)(*U$112).height, out_size);
;** 218	-----------------------    VLIB_formula_add_test((int)out_size, 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$204, 0);
;** 219	-----------------------    goto g35;
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x04)
	.dwattr $C$DW$211, DW_AT_name("sprintf")
	.dwattr $C$DW$211, DW_AT_TI_call

           LDW     .D2T2   *+SP(36),B4       ; |216| 
||         CALL    .S2     sprintf           ; |216| 
||         MVKL    .S1     $C$SL2+0,A3

           MVKH    .S1     $C$SL2+0,A3
||         MVKL    .S2     est_test,B6
||         STW     .D2T2   B7,*+SP(12)       ; |216| 

           STW     .D2T1   A3,*+SP(4)        ; |216| 
||         MVK     .L1     1,A3              ; |213| 
||         MVKH    .S2     est_test,B6
||         MVKL    .S1     desc,A4

           STW     .D2T1   A3,*B6            ; |213| 
||         MVKH    .S1     desc,A4

           STW     .D2T2   B5,*+SP(16)       ; |216| 

           STW     .D2T2   B4,*+SP(20)       ; |216| 
||         ADDKPC  .S2     $C$RL42,B3,0      ; |216| 

$C$RL42:   ; CALL OCCURS {sprintf} {0}       ; |216| 
$C$DW$L$VLIB_normalFlow_16_d$52$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$53$B:
;          EXCLUSIVE CPU CYCLES: 15
           LDW     .D2T1   *+SP(84),A3       ; |216| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 206,column 17,is_stmt,isa 0
           CMPEQ   .L1     A14,0,A4          ; |206| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 218,column 17,is_stmt,isa 0
           CMPEQ   .L2     B13,0,B4          ; |218| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |218| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 206,column 17,is_stmt,isa 0
           CMPEQ   .L1     A3,0,A3           ; |206| 
           OR      .L1     A4,A3,A0          ; |206| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 207,column 21,is_stmt,isa 0
   [ A0]   ZERO    .L2     B12               ; |207| 

           LDW     .D2T1   *+SP(36),A4       ; |206| 
||         CMPEQ   .L2     B12,0,B5          ; |218| 

$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$212, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         OR      .L2     B5,B4,B6          ; |218| 
||         ZERO    .D2     B4                ; |218| 
||         MVKH    .S1     desc,A8
||         ZERO    .L1     A6                ; |218| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 218,column 17,is_stmt,isa 0
$C$RL43:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |218| 
$C$DW$L$VLIB_normalFlow_16_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$54$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 219,column 13,is_stmt,isa 0
           BNOP    .S1     $C$L25,5          ; |219| 
           ; BRANCH OCCURS {$C$L25}          ; |219| 
$C$DW$L$VLIB_normalFlow_16_d$54$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 157,column 13,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$55$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g33:
;** 221	-----------------------    C$7 = U$11+v$1;
;** 221	-----------------------    sprintf(K$204, (const char *)"width=%d, height=%d, numEls=%d", (int)(*C$7).width, (int)(*C$7).height, out_size);
;** 223	-----------------------    VLIB_skip_test(K$204);
;** 223	-----------------------    goto g35;

           LDHU    .D2T2   *+B4(36),B6       ; |221| 
||         MVKL    .S2     $C$SL3+0,B5
||         MVKL    .S1     desc,A4

           MVKH    .S1     desc,A4
||         LDHU    .D2T2   *+B4(34),B7       ; |221| 

$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("sprintf")
	.dwattr $C$DW$213, DW_AT_TI_call

           CALL    .S1     sprintf           ; |221| 
||         LDW     .D2T2   *+SP(36),B4       ; |221| 

           MVKH    .S2     $C$SL3+0,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 221,column 17,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |221| 
           STW     .D2T2   B6,*+SP(12)       ; |221| 
           STW     .D2T2   B7,*+SP(8)        ; |221| 

           STW     .D2T2   B4,*+SP(16)       ; |221| 
||         ADDKPC  .S2     $C$RL44,B3,0      ; |221| 

$C$RL44:   ; CALL OCCURS {sprintf} {0}       ; |221| 
$C$DW$L$VLIB_normalFlow_16_d$55$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$56$B:
;          EXCLUSIVE CPU CYCLES: 7
           MVKL    .S1     desc,A4
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$214, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 223,column 17,is_stmt,isa 0
$C$RL45:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |223| 
$C$DW$L$VLIB_normalFlow_16_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$57$B:
;          EXCLUSIVE CPU CYCLES: 6
           B       .S1     $C$L26            ; |223| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 233,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 233 | free(normalFlowV_cn);                                                  
;----------------------------------------------------------------------
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("free")
	.dwattr $C$DW$215, DW_AT_TI_call
           CALL    .S1     free              ; |233| 
           LDW     .D2T1   *+SP(80),A4       ; |233| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 223,column 17,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L26}          ; |223| 
$C$DW$L$VLIB_normalFlow_16_d$57$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 80,column 9,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$58$B:
;          EXCLUSIVE CPU CYCLES: 5
;**	-----------------------g34:
;** 227	-----------------------    sprintf(K$204, (const char *)"width=%d, height=%d, numEls=%d", (int)(*U$12).width, (int)(*U$12).height, out_size);
;** 229	-----------------------    VLIB_skip_test(K$204);
           MVKH    .S2     $C$SL3+0,B4

           MV      .L2X    A12,B5            ; |227| 
||         STW     .D2T2   B4,*+SP(4)        ; |227| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 227,column 13,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(16)       ; |227| 

           STW     .D2T1   A4,*+SP(8)        ; |227| 
||         MVKL    .S1     desc,A4

           STW     .D2T1   A3,*+SP(12)       ; |227| 
||         MVKH    .S1     desc,A4
||         ADDKPC  .S2     $C$RL46,B3,0      ; |227| 

$C$RL46:   ; CALL OCCURS {sprintf} {0}       ; |227| 
$C$DW$L$VLIB_normalFlow_16_d$58$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$59$B:
;          EXCLUSIVE CPU CYCLES: 7
           MVKL    .S1     desc,A4
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$216, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 229,column 13,is_stmt,isa 0
$C$RL47:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |229| 
$C$DW$L$VLIB_normalFlow_16_d$59$E:
;** --------------------------------------------------------------------------*
$C$L25:    
$C$DW$L$VLIB_normalFlow_16_d$60$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 233,column 9,is_stmt,isa 0
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("free")
	.dwattr $C$DW$217, DW_AT_TI_call
           CALL    .S1     free              ; |233| 
           LDW     .D2T1   *+SP(80),A4       ; |233| 
           NOP             3
$C$DW$L$VLIB_normalFlow_16_d$60$E:
;** --------------------------------------------------------------------------*
$C$L26:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 219,column 13,is_stmt,isa 0
$C$DW$L$VLIB_normalFlow_16_d$61$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g35:
;** 233	-----------------------    free((void *)normalFlowV_cn);
;** 234	-----------------------    free((void *)normalFlowU_cn);
;** 235	-----------------------    VLIB_free((void *)normalFlowV);
;** 236	-----------------------    VLIB_free((void *)normalFlowU);
;** 237	-----------------------    VLIB_free((void *)LUT);
;** 238	-----------------------    VLIB_free((void *)Ey);
;** 239	-----------------------    VLIB_free((void *)Ex);
;** 240	-----------------------    VLIB_free((void *)Emag);
;** 241	-----------------------    VLIB_free((void *)imDiff);
;** 242	-----------------------    VLIB_free((void *)pInold);
;** 243	-----------------------    VLIB_free((void *)pIn);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 233,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL48,B3,0      ; |233| 
$C$RL48:   ; CALL OCCURS {free} {0}          ; |233| 
$C$DW$L$VLIB_normalFlow_16_d$61$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$62$B:
;          EXCLUSIVE CPU CYCLES: 60
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("free")
	.dwattr $C$DW$218, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(76),A4       ; |234| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 234,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 234 | free(normalFlowU_cn);                                                  
;----------------------------------------------------------------------
$C$RL49:   ; CALL OCCURS {free} {0}          ; |234| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("VLIB_free")
	.dwattr $C$DW$219, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(72),A4       ; |235| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 235,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 235 | VLIB_free(normalFlowV);                                                
;----------------------------------------------------------------------
$C$RL50:   ; CALL OCCURS {VLIB_free} {0}     ; |235| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("VLIB_free")
	.dwattr $C$DW$220, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(68),A4       ; |236| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 236,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | VLIB_free(normalFlowU);                                                
;----------------------------------------------------------------------
$C$RL51:   ; CALL OCCURS {VLIB_free} {0}     ; |236| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("VLIB_free")
	.dwattr $C$DW$221, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(64),A4       ; |237| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 237,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 237 | VLIB_free(LUT);                                                        
;----------------------------------------------------------------------
$C$RL52:   ; CALL OCCURS {VLIB_free} {0}     ; |237| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("VLIB_free")
	.dwattr $C$DW$222, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(60),A4       ; |238| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 238,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | VLIB_free(Ey);                                                         
;----------------------------------------------------------------------
$C$RL53:   ; CALL OCCURS {VLIB_free} {0}     ; |238| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("VLIB_free")
	.dwattr $C$DW$223, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(56),A4       ; |239| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 239,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | VLIB_free(Ex);                                                         
;----------------------------------------------------------------------
$C$RL54:   ; CALL OCCURS {VLIB_free} {0}     ; |239| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("VLIB_free")
	.dwattr $C$DW$224, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(52),A4       ; |240| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 240,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | VLIB_free(Emag);                                                       
;----------------------------------------------------------------------
$C$RL55:   ; CALL OCCURS {VLIB_free} {0}     ; |240| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("VLIB_free")
	.dwattr $C$DW$225, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(48),A4       ; |241| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 241,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | VLIB_free(imDiff);                                                     
;----------------------------------------------------------------------
$C$RL56:   ; CALL OCCURS {VLIB_free} {0}     ; |241| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("VLIB_free")
	.dwattr $C$DW$226, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(44),A4       ; |242| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 242,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 242 | VLIB_free(pInold);                                                     
;----------------------------------------------------------------------
$C$RL57:   ; CALL OCCURS {VLIB_free} {0}     ; |242| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("VLIB_free")
	.dwattr $C$DW$227, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(40),A4       ; |243| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 243,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 243 | VLIB_free(pIn);                                                        
;----------------------------------------------------------------------
$C$RL58:   ; CALL OCCURS {VLIB_free} {0}     ; |243| 
$C$DW$L$VLIB_normalFlow_16_d$62$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_normalFlow_16_d$63$B:
;          EXCLUSIVE CPU CYCLES: 14
;** 53	-----------------------    U$11 += 40;
;** 53	-----------------------    U$12 += 40;
;** 53	-----------------------    if ( test_cases > (++tpi) ) goto g3;
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |53| 
           ADD     .L1     1,A13,A13         ; |53| 
           ADDK    .S1     40,A11            ; |53| 
           ADDK    .S2     40,B11            ; |53| 
           NOP             1
           CMPGT   .L1     A3,A13,A0         ; |53| 

   [ A0]   BNOP    .S1     $C$L1,3           ; |53| 
|| [ A0]   LDHU    .D1T1   *+A11(36),A3      ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 63,column 21,is_stmt,isa 0
   [ A0]   LDHU    .D1T1   *+A11(34),A4      ; |63| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 53,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |53| 
$C$DW$L$VLIB_normalFlow_16_d$63$E:
;** --------------------------------------------------------------------------*
$C$L27:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g36:
;** 247	-----------------------    VLIB_profile_cycle_report(2, "N = numEls", "numEls");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [19]
;** 168	-----------------------    VLIB_stack_memory();  // [19]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL5+0,B4

           MVKL    .S1     $C$SL4+0,A6
||         MVKH    .S2     $C$SL5+0,B4

$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$228, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL4+0,A6
||         MVK     .L1     0x2,A4            ; |247| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 247,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 247 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 248 |                           "N = numEls",                                
; 249 |                           "numEls");                                   
; 252 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL59:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |247| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL6+0,B4
           MVKH    .S2     $C$SL6+0,B4
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("printf")
	.dwattr $C$DW$229, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL60:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$230, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL61:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c",line 253,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(96),B3      ; |253| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |253| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$232	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$232, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.se66:$C$L1:1:1443280343")
	.dwattr $C$DW$232, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$232, DW_AT_TI_begin_line(0x35)
	.dwattr $C$DW$232, DW_AT_TI_end_line(0xf4)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$4$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$4$E)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$58$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$58$E)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$50$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$50$E)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$47$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$47$E)
$C$DW$237	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$237, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$41$B)
	.dwattr $C$DW$237, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$41$E)
$C$DW$238	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$238, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$35$B)
	.dwattr $C$DW$238, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$35$E)
$C$DW$239	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$239, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$36$B)
	.dwattr $C$DW$239, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$36$E)
$C$DW$240	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$240, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$37$B)
	.dwattr $C$DW$240, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$37$E)
$C$DW$241	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$241, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$40$B)
	.dwattr $C$DW$241, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$40$E)
$C$DW$242	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$242, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$42$B)
	.dwattr $C$DW$242, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$42$E)
$C$DW$243	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$243, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$43$B)
	.dwattr $C$DW$243, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$43$E)
$C$DW$244	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$244, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$44$B)
	.dwattr $C$DW$244, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$44$E)
$C$DW$245	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$245, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$45$B)
	.dwattr $C$DW$245, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$45$E)
$C$DW$246	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$246, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$46$B)
	.dwattr $C$DW$246, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$46$E)
$C$DW$247	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$247, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$48$B)
	.dwattr $C$DW$247, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$48$E)
$C$DW$248	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$248, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$49$B)
	.dwattr $C$DW$248, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$49$E)
$C$DW$249	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$249, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$51$B)
	.dwattr $C$DW$249, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$51$E)
$C$DW$250	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$250, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$52$B)
	.dwattr $C$DW$250, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$52$E)
$C$DW$251	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$251, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$53$B)
	.dwattr $C$DW$251, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$53$E)
$C$DW$252	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$252, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$54$B)
	.dwattr $C$DW$252, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$54$E)
$C$DW$253	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$253, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$59$B)
	.dwattr $C$DW$253, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$59$E)
$C$DW$254	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$254, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$28$B)
	.dwattr $C$DW$254, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$28$E)
$C$DW$255	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$255, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$25$B)
	.dwattr $C$DW$255, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$25$E)
$C$DW$256	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$256, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$16$B)
	.dwattr $C$DW$256, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$16$E)
$C$DW$257	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$257, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$17$B)
	.dwattr $C$DW$257, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$17$E)
$C$DW$258	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$258, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$11$B)
	.dwattr $C$DW$258, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$11$E)
$C$DW$259	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$259, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$12$B)
	.dwattr $C$DW$259, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$12$E)
$C$DW$260	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$260, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$5$B)
	.dwattr $C$DW$260, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$5$E)
$C$DW$261	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$261, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$6$B)
	.dwattr $C$DW$261, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$6$E)
$C$DW$262	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$262, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$7$B)
	.dwattr $C$DW$262, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$7$E)
$C$DW$263	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$263, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$8$B)
	.dwattr $C$DW$263, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$8$E)
$C$DW$264	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$264, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$9$B)
	.dwattr $C$DW$264, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$9$E)
$C$DW$265	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$265, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$10$B)
	.dwattr $C$DW$265, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$10$E)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$21$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$21$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$22$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$22$E)
$C$DW$268	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$268, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$23$B)
	.dwattr $C$DW$268, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$23$E)
$C$DW$269	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$269, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$24$B)
	.dwattr $C$DW$269, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$24$E)
$C$DW$270	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$270, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$26$B)
	.dwattr $C$DW$270, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$26$E)
$C$DW$271	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$271, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$27$B)
	.dwattr $C$DW$271, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$27$E)
$C$DW$272	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$272, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$32$B)
	.dwattr $C$DW$272, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$32$E)
$C$DW$273	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$273, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$33$B)
	.dwattr $C$DW$273, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$33$E)
$C$DW$274	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$274, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$34$B)
	.dwattr $C$DW$274, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$34$E)
$C$DW$275	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$275, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$55$B)
	.dwattr $C$DW$275, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$55$E)
$C$DW$276	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$276, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$56$B)
	.dwattr $C$DW$276, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$56$E)
$C$DW$277	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$277, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$57$B)
	.dwattr $C$DW$277, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$57$E)
$C$DW$278	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$278, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$60$B)
	.dwattr $C$DW$278, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$60$E)
$C$DW$279	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$279, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$61$B)
	.dwattr $C$DW$279, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$61$E)
$C$DW$280	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$280, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$62$B)
	.dwattr $C$DW$280, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$62$E)
$C$DW$281	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$281, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$63$B)
	.dwattr $C$DW$281, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$63$E)

$C$DW$282	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$282, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.se66:$C$L17:2:1443280343")
	.dwattr $C$DW$282, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$282, DW_AT_TI_begin_line(0xab)
	.dwattr $C$DW$282, DW_AT_TI_end_line(0xad)
$C$DW$283	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$283, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$38$B)
	.dwattr $C$DW$283, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$38$E)
$C$DW$284	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$284, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$39$B)
	.dwattr $C$DW$284, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$39$E)
	.dwendtag $C$DW$282


$C$DW$285	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$285, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.se66:$C$L14:2:1443280343")
	.dwattr $C$DW$285, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$285, DW_AT_TI_begin_line(0x94)
	.dwattr $C$DW$285, DW_AT_TI_end_line(0x98)
$C$DW$286	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$286, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$30$B)
	.dwattr $C$DW$286, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$30$E)
	.dwendtag $C$DW$285


$C$DW$287	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$287, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.se66:$C$L7:2:1443280343")
	.dwattr $C$DW$287, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$287, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$287, DW_AT_TI_end_line(0x80)
$C$DW$288	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$288, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$19$B)
	.dwattr $C$DW$288, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$19$E)
	.dwendtag $C$DW$287


$C$DW$289	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$289, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.se66:$C$L3:2:1443280343")
	.dwattr $C$DW$289, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$289, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$289, DW_AT_TI_end_line(0x80)
$C$DW$290	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$290, DW_AT_low_pc($C$DW$L$VLIB_normalFlow_16_d$14$B)
	.dwattr $C$DW$290, DW_AT_high_pc($C$DW$L$VLIB_normalFlow_16_d$14$E)
	.dwendtag $C$DW$289

	.dwendtag $C$DW$232

	.dwattr $C$DW$98, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_normalFlow_16/VLIB_normalFlow_16_d.c")
	.dwattr $C$DW$98, DW_AT_TI_end_line(0xfd)
	.dwattr $C$DW$98, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$98

;; Inlined function references:
;; [ 15] VLIB_profile_start
;; [ 16] VLIB_profile_stop
;; [ 19] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_normalFlow_16",0
$C$SL2:	.string	"%s generated input | Opt results compared to NatC results |"
	.string	" width=%d, height=%d, numEls=%d",0
$C$SL3:	.string	"width=%d, height=%d, numEls=%d",0
$C$SL4:	.string	"numEls",0
$C$SL5:	.string	"N = numEls",0
$C$SL6:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_compare_mem
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_xyGradientsAndMagnitude_cn
	.global	VLIB_normalFlow_16
	.global	VLIB_normalFlow_16_cn
	.global	normalFlow_16_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles
	.global	__c6xabi_divf

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$37	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x04)
$C$DW$291	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$291, DW_AT_decl_column(0x05)
$C$DW$292	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$292, DW_AT_decl_column(0x05)
$C$DW$293	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$293, DW_AT_decl_column(0x05)
$C$DW$294	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$294, DW_AT_decl_column(0x05)
$C$DW$295	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$295, DW_AT_decl_column(0x05)
$C$DW$296	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$296, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$296, DW_AT_decl_column(0x05)
$C$DW$297	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$297, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0x80)
	.dwattr $C$DW$297, DW_AT_decl_column(0x05)
$C$DW$298	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$298, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0x81)
	.dwattr $C$DW$298, DW_AT_decl_column(0x05)
$C$DW$299	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$299, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0x82)
	.dwattr $C$DW$299, DW_AT_decl_column(0x05)
$C$DW$300	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$300, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0x83)
	.dwattr $C$DW$300, DW_AT_decl_column(0x05)
$C$DW$301	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$301, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x84)
	.dwattr $C$DW$301, DW_AT_decl_column(0x05)
$C$DW$302	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$302, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x85)
	.dwattr $C$DW$302, DW_AT_decl_column(0x05)
$C$DW$303	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$303, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x86)
	.dwattr $C$DW$303, DW_AT_decl_column(0x05)
$C$DW$304	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$304, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x87)
	.dwattr $C$DW$304, DW_AT_decl_column(0x05)
$C$DW$305	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$305, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x88)
	.dwattr $C$DW$305, DW_AT_decl_column(0x05)
$C$DW$306	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$306, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x89)
	.dwattr $C$DW$306, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x0e)
$C$DW$T$38	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$38, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$38, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x03)

$C$DW$T$39	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x04)
$C$DW$307	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$307, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$307, DW_AT_decl_column(0x05)
$C$DW$308	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$308, DW_AT_decl_column(0x05)
$C$DW$309	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$309, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$309, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x06)

$C$DW$T$40	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x04)
$C$DW$310	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$310, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x72)
	.dwattr $C$DW$310, DW_AT_decl_column(0x05)
$C$DW$311	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$311, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x73)
	.dwattr $C$DW$311, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\../common/VLIB_test.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x06)

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x28)
$C$DW$312	.dwtag  DW_TAG_member
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$312, DW_AT_name("testPattern")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$312, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x24)
	.dwattr $C$DW$312, DW_AT_decl_column(0x0e)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$313, DW_AT_name("staticImDiff")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("staticImDiff")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x25)
	.dwattr $C$DW$313, DW_AT_decl_column(0x0e)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$314, DW_AT_name("staticEmag")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("staticEmag")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x26)
	.dwattr $C$DW$314, DW_AT_decl_column(0x0e)
$C$DW$315	.dwtag  DW_TAG_member
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$315, DW_AT_name("staticEx")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("staticEx")
	.dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$315, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x27)
	.dwattr $C$DW$315, DW_AT_decl_column(0x0e)
$C$DW$316	.dwtag  DW_TAG_member
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$316, DW_AT_name("staticEy")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("staticEy")
	.dwattr $C$DW$316, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$316, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$316, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x28)
	.dwattr $C$DW$316, DW_AT_decl_column(0x0e)
$C$DW$317	.dwtag  DW_TAG_member
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$317, DW_AT_name("staticLUT")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("staticLUT")
	.dwattr $C$DW$317, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$317, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$317, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x29)
	.dwattr $C$DW$317, DW_AT_decl_column(0x0e)
$C$DW$318	.dwtag  DW_TAG_member
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$318, DW_AT_name("staticOutU")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("staticOutU")
	.dwattr $C$DW$318, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$318, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$318, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$318, DW_AT_decl_column(0x0e)
$C$DW$319	.dwtag  DW_TAG_member
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$319, DW_AT_name("staticOutV")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("staticOutV")
	.dwattr $C$DW$319, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$319, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$319, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$319, DW_AT_decl_column(0x0e)
$C$DW$320	.dwtag  DW_TAG_member
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$320, DW_AT_name("T")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("T")
	.dwattr $C$DW$320, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$320, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$320, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$320, DW_AT_decl_column(0x0e)
$C$DW$321	.dwtag  DW_TAG_member
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$321, DW_AT_name("width")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$321, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$321, DW_AT_decl_column(0x0e)
$C$DW$322	.dwtag  DW_TAG_member
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$322, DW_AT_name("height")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$322, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$322, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$23

	.dwattr $C$DW$T$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x10)
$C$DW$T$41	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$41, DW_AT_address_class(0x20)
$C$DW$T$43	.dwtag  DW_TAG_typedef, DW_AT_name("normalFlow_16_testParams_t")
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$43, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\VLIB_normalFlow_16_idat.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x03)
$C$DW$T$44	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$44, DW_AT_address_class(0x20)
$C$DW$T$45	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$T$45, DW_AT_address_class(0x20)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x18)
$C$DW$323	.dwtag  DW_TAG_member
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$323, DW_AT_name("fd")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$323, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$323, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$323, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x49)
	.dwattr $C$DW$323, DW_AT_decl_column(0x0b)
$C$DW$324	.dwtag  DW_TAG_member
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$324, DW_AT_name("buf")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$324, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$324, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$324, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$324, DW_AT_decl_column(0x16)
$C$DW$325	.dwtag  DW_TAG_member
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$325, DW_AT_name("pos")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$325, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$325, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$325, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$325, DW_AT_decl_column(0x16)
$C$DW$326	.dwtag  DW_TAG_member
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$326, DW_AT_name("bufend")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$326, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$326, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$326, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$326, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$326, DW_AT_decl_column(0x16)
$C$DW$327	.dwtag  DW_TAG_member
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$327, DW_AT_name("buff_stop")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$327, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$327, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$327, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$327, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$327, DW_AT_decl_column(0x16)
$C$DW$328	.dwtag  DW_TAG_member
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$328, DW_AT_name("flags")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$328, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$328, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$328, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$328, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$328, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x03)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x08)
$C$DW$329	.dwtag  DW_TAG_member
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$329, DW_AT_name("quot")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$329, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$329, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$329, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$329, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$329, DW_AT_decl_column(0x16)
$C$DW$330	.dwtag  DW_TAG_member
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$330, DW_AT_name("rem")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$330, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$330, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$330, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$47, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$47, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$47, DW_AT_decl_column(0x23)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x08)
$C$DW$331	.dwtag  DW_TAG_member
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$331, DW_AT_name("quot")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$331, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$331, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$331, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$331, DW_AT_decl_line(0x40)
	.dwattr $C$DW$331, DW_AT_decl_column(0x17)
$C$DW$332	.dwtag  DW_TAG_member
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$332, DW_AT_name("rem")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$332, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$332, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$332, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$332, DW_AT_decl_line(0x40)
	.dwattr $C$DW$332, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x24)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x10)
$C$DW$333	.dwtag  DW_TAG_member
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$333, DW_AT_name("quot")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$333, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$333, DW_AT_decl_line(0x43)
	.dwattr $C$DW$333, DW_AT_decl_column(0x1c)
$C$DW$334	.dwtag  DW_TAG_member
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$334, DW_AT_name("rem")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$334, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$334, DW_AT_decl_line(0x43)
	.dwattr $C$DW$334, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x29)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x24)
$C$DW$335	.dwtag  DW_TAG_member
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$335, DW_AT_name("area")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$335, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$335, DW_AT_decl_line(0x69)
	.dwattr $C$DW$335, DW_AT_decl_column(0x0d)
$C$DW$336	.dwtag  DW_TAG_member
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$336, DW_AT_name("xsum")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$336, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$336, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$336, DW_AT_decl_column(0x0d)
$C$DW$337	.dwtag  DW_TAG_member
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$337, DW_AT_name("ysum")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$337, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$337, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$337, DW_AT_decl_column(0x0d)
$C$DW$338	.dwtag  DW_TAG_member
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$338, DW_AT_name("xmin")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$338, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$338, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$338, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$338, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$338, DW_AT_decl_column(0x0d)
$C$DW$339	.dwtag  DW_TAG_member
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$339, DW_AT_name("ymin")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$339, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$339, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$339, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$339, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$339, DW_AT_decl_column(0x0d)
$C$DW$340	.dwtag  DW_TAG_member
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$340, DW_AT_name("xmax")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$340, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$340, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$340, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$340, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$340, DW_AT_decl_column(0x0d)
$C$DW$341	.dwtag  DW_TAG_member
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$341, DW_AT_name("ymax")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$341, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$341, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$341, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$341, DW_AT_decl_line(0x70)
	.dwattr $C$DW$341, DW_AT_decl_column(0x0d)
$C$DW$342	.dwtag  DW_TAG_member
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$342, DW_AT_name("seedx")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$342, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$342, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$342, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$342, DW_AT_decl_line(0x72)
	.dwattr $C$DW$342, DW_AT_decl_column(0x0d)
$C$DW$343	.dwtag  DW_TAG_member
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$343, DW_AT_name("seedy")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$343, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$343, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$343, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$343, DW_AT_decl_line(0x73)
	.dwattr $C$DW$343, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x03)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x10)
$C$DW$344	.dwtag  DW_TAG_member
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$344, DW_AT_name("daylight")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$344, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$344, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$344, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$344, DW_AT_decl_line(0x52)
	.dwattr $C$DW$344, DW_AT_decl_column(0x0b)
$C$DW$345	.dwtag  DW_TAG_member
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$345, DW_AT_name("timezone")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$345, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$345, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$345, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$345, DW_AT_decl_line(0x53)
	.dwattr $C$DW$345, DW_AT_decl_column(0x0b)
$C$DW$346	.dwtag  DW_TAG_member
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$346, DW_AT_name("tzname")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$346, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$346, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$346, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$346, DW_AT_decl_line(0x54)
	.dwattr $C$DW$346, DW_AT_decl_column(0x0b)
$C$DW$347	.dwtag  DW_TAG_member
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$347, DW_AT_name("dstname")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$347, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$347, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$347, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$347, DW_AT_decl_line(0x55)
	.dwattr $C$DW$347, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x01)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$88	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$88, DW_AT_address_class(0x20)
$C$DW$T$98	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$98, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$98, DW_AT_decl_column(0x1d)
$C$DW$T$99	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$99, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$99, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$99, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$100	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$100, DW_AT_address_class(0x20)
$C$DW$T$101	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$100)
$C$DW$T$102	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$102, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$102, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$103	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$103, DW_AT_address_class(0x20)
$C$DW$T$20	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$20, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$20, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$20, DW_AT_decl_column(0x1d)
$C$DW$T$21	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$21, DW_AT_address_class(0x20)
$C$DW$T$104	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$104, DW_AT_type(*$C$DW$T$21)
$C$DW$T$77	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$77, DW_AT_type(*$C$DW$T$20)
$C$DW$T$78	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$T$78, DW_AT_address_class(0x20)
$C$DW$T$79	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$79, DW_AT_type(*$C$DW$T$78)
$C$DW$T$105	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$105, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$105, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$22	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x1c)
$C$DW$T$107	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$107, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$107, DW_AT_decl_column(0x16)
$C$DW$T$106	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$106, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$106, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$129	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$129, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$129, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$129, DW_AT_decl_column(0x0d)
$C$DW$T$29	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$29, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$29, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x1d)
$C$DW$T$121	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$121, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$121, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$121, DW_AT_decl_column(0x11)

$C$DW$T$34	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$34, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$348	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$348, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$34

$C$DW$T$84	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$84, DW_AT_address_class(0x20)
$C$DW$T$124	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$124, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$124, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$124, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$124, DW_AT_decl_column(0x17)
$C$DW$T$125	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$125, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$125, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$125, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$125, DW_AT_decl_column(0x17)
$C$DW$T$126	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$126, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$126, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$126, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$126, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$126, DW_AT_decl_column(0x17)
$C$DW$T$127	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$127, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$127, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$127, DW_AT_decl_column(0x17)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$130	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$130, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$130, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$130, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$130, DW_AT_decl_column(0x17)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x16)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x19)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x16)
$C$DW$T$69	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$69, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$69, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$69, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$69, DW_AT_decl_column(0x1c)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x16)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x16)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x16)
$C$DW$T$139	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$139, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$T$139, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$139, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$139, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$139, DW_AT_decl_column(0x16)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x21)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x17)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$142)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x20)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x16)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$145)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x21)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x17)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x17)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$154	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$154, DW_AT_address_class(0x20)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x20)

$C$DW$T$156	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_byte_size(0x10)
$C$DW$349	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$349, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$156

$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x16)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x16)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x0f)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_normalFlow_16\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x10)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$31	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$31, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$31, DW_AT_name("signed char")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x01)

$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x04)
$C$DW$350	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$350, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$32

$C$DW$T$60	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$60, DW_AT_address_class(0x20)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x12)
$C$DW$T$108	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$31)
$C$DW$T$109	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$109, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$T$109, DW_AT_address_class(0x20)

$C$DW$T$165	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
$C$DW$351	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$165


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x10)
$C$DW$352	.dwtag  DW_TAG_member
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$352, DW_AT_name("_v")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$352, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$352, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$352, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$352, DW_AT_decl_line(0x44)
	.dwattr $C$DW$352, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x01)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x01)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$166)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x13)

$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_name("tm")
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x24)
$C$DW$353	.dwtag  DW_TAG_member
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$353, DW_AT_name("tm_sec")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$353, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$353, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$353, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$353, DW_AT_decl_line(0x41)
	.dwattr $C$DW$353, DW_AT_decl_column(0x09)
$C$DW$354	.dwtag  DW_TAG_member
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$354, DW_AT_name("tm_min")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$354, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$354, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$354, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$354, DW_AT_decl_line(0x42)
	.dwattr $C$DW$354, DW_AT_decl_column(0x09)
$C$DW$355	.dwtag  DW_TAG_member
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$355, DW_AT_name("tm_hour")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$355, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$355, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$355, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$355, DW_AT_decl_line(0x43)
	.dwattr $C$DW$355, DW_AT_decl_column(0x09)
$C$DW$356	.dwtag  DW_TAG_member
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$356, DW_AT_name("tm_mday")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$356, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$356, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$356, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$356, DW_AT_decl_line(0x44)
	.dwattr $C$DW$356, DW_AT_decl_column(0x09)
$C$DW$357	.dwtag  DW_TAG_member
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$357, DW_AT_name("tm_mon")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$357, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$357, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$357, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$357, DW_AT_decl_line(0x45)
	.dwattr $C$DW$357, DW_AT_decl_column(0x09)
$C$DW$358	.dwtag  DW_TAG_member
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$358, DW_AT_name("tm_year")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$358, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$358, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$358, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$358, DW_AT_decl_line(0x46)
	.dwattr $C$DW$358, DW_AT_decl_column(0x09)
$C$DW$359	.dwtag  DW_TAG_member
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$359, DW_AT_name("tm_wday")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$359, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$359, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$359, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$359, DW_AT_decl_line(0x47)
	.dwattr $C$DW$359, DW_AT_decl_column(0x09)
$C$DW$360	.dwtag  DW_TAG_member
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$360, DW_AT_name("tm_yday")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$360, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$360, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$360, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$360, DW_AT_decl_line(0x48)
	.dwattr $C$DW$360, DW_AT_decl_column(0x09)
$C$DW$361	.dwtag  DW_TAG_member
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$361, DW_AT_name("tm_isdst")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$361, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$361, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$361, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$361, DW_AT_decl_line(0x49)
	.dwattr $C$DW$361, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

