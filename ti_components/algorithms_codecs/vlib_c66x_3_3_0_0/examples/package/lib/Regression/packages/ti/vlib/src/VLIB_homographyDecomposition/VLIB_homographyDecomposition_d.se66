;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:10:46 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("fabs")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("fabs")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/math.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$1, DW_AT_decl_column(0x11)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$17)
	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
	.dwattr $C$DW$3, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$3, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$3, DW_AT_decl_column(0x0b)
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$11)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$3


$C$DW$6	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
	.dwattr $C$DW$6, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$6, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$6, DW_AT_decl_column(0x19)
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$117)
$C$DW$8	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$6


$C$DW$9	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
	.dwattr $C$DW$9, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$9, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$9, DW_AT_decl_column(0x19)
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$64)
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$117)
$C$DW$12	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$9


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x86)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("memalign")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("memalign")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x87)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$59)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$59)
	.dwendtag $C$DW$15


$C$DW$18	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwattr $C$DW$18, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$18, DW_AT_decl_line(0x58)
	.dwattr $C$DW$18, DW_AT_decl_column(0x05)

$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$19, DW_AT_decl_column(0x06)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$10)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$64)
	.dwendtag $C$DW$19


$C$DW$22	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwattr $C$DW$22, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$22, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$22, DW_AT_decl_column(0x06)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$64)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$22


$C$DW$29	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwattr $C$DW$29, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$29, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$29, DW_AT_decl_column(0x06)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$64)
	.dwendtag $C$DW$29


$C$DW$31	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external
	.dwattr $C$DW$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$31, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$31, DW_AT_decl_column(0x06)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$10)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$64)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$64)
	.dwendtag $C$DW$31


$C$DW$35	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwattr $C$DW$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$35, DW_AT_decl_line(0x80)
	.dwattr $C$DW$35, DW_AT_decl_column(0x06)
$C$DW$36	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$73)
	.dwendtag $C$DW$35


$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x81)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)

$C$DW$38	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwattr $C$DW$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$38, DW_AT_decl_line(0x82)
	.dwattr $C$DW$38, DW_AT_decl_column(0x0a)

$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x83)
	.dwattr $C$DW$39, DW_AT_decl_column(0x06)

$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_memory.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$40, DW_AT_decl_column(0x06)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$19)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$19)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$3)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$3)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$22)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$22)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$22)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$19)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$64)
	.dwendtag $C$DW$40


$C$DW$50	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("VLIB_memalign")
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwattr $C$DW$50, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_memory.h")
	.dwattr $C$DW$50, DW_AT_decl_line(0xb1)
	.dwattr $C$DW$50, DW_AT_decl_column(0x07)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$59)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$59)
	.dwendtag $C$DW$50


$C$DW$53	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("VLIB_align_free")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwattr $C$DW$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_memory.h")
	.dwattr $C$DW$53, DW_AT_decl_line(0xb6)
	.dwattr $C$DW$53, DW_AT_decl_column(0x07)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$53


$C$DW$55	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_homographyDecomposition")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("VLIB_homographyDecomposition")
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwattr $C$DW$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\c66/VLIB_homographyDecomposition.h")
	.dwattr $C$DW$55, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$55, DW_AT_decl_column(0x0c)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$124)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$124)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$21)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$55


$C$DW$60	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_homographyDecomposition_cn")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("VLIB_homographyDecomposition_cn")
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
	.dwattr $C$DW$60, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_cn.h")
	.dwattr $C$DW$60, DW_AT_decl_line(0x22)
	.dwattr $C$DW$60, DW_AT_decl_column(0x0c)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$124)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$124)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$21)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$21)
	.dwendtag $C$DW$60


$C$DW$65	.dwtag  DW_TAG_subprogram, DW_AT_name("homographyDecomposition_getTestParams")
	.dwattr $C$DW$65, DW_AT_TI_symbol_name("homographyDecomposition_getTestParams")
	.dwattr $C$DW$65, DW_AT_declaration
	.dwattr $C$DW$65, DW_AT_external
	.dwattr $C$DW$65, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$65, DW_AT_decl_line(0x32)
	.dwattr $C$DW$65, DW_AT_decl_column(0x06)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$48)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$81)
	.dwendtag $C$DW$65

$C$DW$68	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
	.dwattr $C$DW$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$68, DW_AT_decl_line(0x60)
	.dwattr $C$DW$68, DW_AT_decl_column(0x13)
$C$DW$69	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$69, DW_AT_declaration
	.dwattr $C$DW$69, DW_AT_external
	.dwattr $C$DW$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$69, DW_AT_decl_line(0x62)
	.dwattr $C$DW$69, DW_AT_decl_column(0x13)
$C$DW$70	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
	.dwattr $C$DW$70, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$70, DW_AT_decl_line(0x63)
	.dwattr $C$DW$70, DW_AT_decl_column(0x13)
$C$DW$71	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$71, DW_AT_declaration
	.dwattr $C$DW$71, DW_AT_external
	.dwattr $C$DW$71, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$71, DW_AT_decl_line(0x64)
	.dwattr $C$DW$71, DW_AT_decl_column(0x13)
$C$DW$72	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
	.dwattr $C$DW$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$72, DW_AT_decl_line(0x75)
	.dwattr $C$DW$72, DW_AT_decl_column(0x14)
$C$DW$73	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external
	.dwattr $C$DW$73, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$73, DW_AT_decl_line(0x76)
	.dwattr $C$DW$73, DW_AT_decl_column(0x14)
$C$DW$74	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external
	.dwattr $C$DW$74, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$74, DW_AT_decl_line(0x77)
	.dwattr $C$DW$74, DW_AT_decl_column(0x14)
$C$DW$75	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
	.dwattr $C$DW$75, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$75, DW_AT_decl_line(0x78)
	.dwattr $C$DW$75, DW_AT_decl_column(0x14)
$C$DW$76	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$162)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
	.dwattr $C$DW$76, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h")
	.dwattr $C$DW$76, DW_AT_decl_line(0x79)
	.dwattr $C$DW$76, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\020724 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\020726 
	.sect	".text"
	.clink
	.global	VLIB_homographyDecomposition_d

$C$DW$77	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_homographyDecomposition_d")
	.dwattr $C$DW$77, DW_AT_low_pc(VLIB_homographyDecomposition_d)
	.dwattr $C$DW$77, DW_AT_high_pc(0x00)
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("VLIB_homographyDecomposition_d")
	.dwattr $C$DW$77, DW_AT_external
	.dwattr $C$DW$77, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$77, DW_AT_TI_begin_line(0x2b)
	.dwattr $C$DW$77, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$77, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$77, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$77, DW_AT_decl_column(0x06)
	.dwattr $C$DW$77, DW_AT_TI_max_frame_size(0xb8)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 44,column 1,is_stmt,address VLIB_homographyDecomposition_d,isa 0

	.dwfde $C$DW$CIE, VLIB_homographyDecomposition_d
$C$DW$78	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$78, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  43 | void VLIB_homographyDecomposition_d(uint8_t LevelOfFeedback)           
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_homographyDecomposition_d                              *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 104 Auto + 56 Save = 184 byte              *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_homographyDecomposition_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 16
;** 50	-----------------------    homographyDecomposition_getTestParams(&prm, &test_cases);
;** 53	-----------------------    VLIB_profile_init(2, "VLIB_homographyDecomposition");
;** 56	-----------------------    if ( test_cases <= 0 ) goto g47;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  45 | int32_t    tpi;  /* test parameter index */                            
;  48 | homographyDecomposition_testParams_t   *prm;                           
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |44| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |44| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |44| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |44| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |44| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |44| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(8)       ; |44| 
	.dwcfi	cfa_offset, 56
	.dwcfi	save_reg_to_mem, 19, -48
           ADDK    .S2     -128,SP           ; |44| 
	.dwcfi	cfa_offset, 184
$C$DW$79	.dwtag  DW_TAG_variable, DW_AT_name("$O$C1")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("$O$C1")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$79, DW_AT_location[DW_OP_reg17]
$C$DW$80	.dwtag  DW_TAG_variable, DW_AT_name("$O$C2")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("$O$C2")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$80, DW_AT_location[DW_OP_reg3]
$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$81, DW_AT_location[DW_OP_reg3]
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$82, DW_AT_location[DW_OP_reg22]
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("$O$K11")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("$O$K11")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$83, DW_AT_location[DW_OP_reg20]
$C$DW$84	.dwtag  DW_TAG_variable, DW_AT_name("$O$U50")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("$O$U50")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$84, DW_AT_location[DW_OP_breg31 32]
$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("$O$K106")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("$O$K106")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$85, DW_AT_location[DW_OP_reg12]
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("$O$U57")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("$O$U57")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$86, DW_AT_location[DW_OP_breg31 36]
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("$O$U59")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("$O$U59")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$87, DW_AT_location[DW_OP_reg4]
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("$O$K113")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("$O$K113")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$160)
	.dwattr $C$DW$88, DW_AT_location[DW_OP_reg4]
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("$O$U131")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("$O$U131")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$89, DW_AT_location[DW_OP_reg26]
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("$O$U125")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("$O$U125")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$90, DW_AT_location[DW_OP_breg31 40]
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("$O$U126")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("$O$U126")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg28]
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$U146")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$U146")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_breg31 40]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$U147")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$U147")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg28]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$U156")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$U156")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_breg31 40]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$U157")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$U157")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg28]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$U185")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$U185")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg12]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$U186")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$U186")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg10]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$U196")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$U196")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg12]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$U197")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$U197")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg10]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$U204")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$U204")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg12]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$U205")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$U205")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg10]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$K231")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$K231")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg8]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$U51")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$U51")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_breg31 44]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$U173")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$U173")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_breg31 40]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$U194")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$U194")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_breg31 48]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$U176")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$U176")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_breg31 52]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_breg31 48]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_breg31 52]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_breg31 48]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_breg31 48]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$L5")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$L5")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_breg31 56]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$L6")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$L6")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_breg31 60]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$L7")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$L7")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_breg31 40]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$L8")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$L8")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_breg31 40]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("err_flag")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("err_flag")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg1]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("rot_cn")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("rot_cn")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_breg31 64]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("rot")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("rot")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_breg31 68]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("a")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("a")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg13]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("err_cnt_cn")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("err_cnt_cn")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_breg31 72]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("err_cnt_c6x")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("err_cnt_c6x")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_breg31 76]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("n")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("n")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_breg31 80]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("proj_cn")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("proj_cn")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_breg31 84]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("trans_cn")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("trans_cn")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_breg31 88]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("pRot_cn")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("pRot_cn")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 92]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("proj")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("proj")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_breg31 96]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("trans")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("trans")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_breg31 100]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("pRot")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("pRot")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_breg31 104]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("pA")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("pA")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_breg31 108]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg15]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg14]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_breg31 28]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_breg31 112]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 116]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 120]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$U127")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$U127")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg12]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$U127")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$U127")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_breg31 124]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$U128")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$U128")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg10]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("$O$U128")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("$O$U128")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg28]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("$O$U148")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("$O$U148")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_reg12]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("$O$U148")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("$O$U148")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_breg31 56]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("$O$U149")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("$O$U149")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_reg10]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$U149")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$U149")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg28]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("$O$U158")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("$O$U158")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg12]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("$O$U158")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("$O$U158")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_breg31 48]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("$O$U159")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("$O$U159")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg10]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("$O$U159")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("$O$U159")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_reg28]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("$O$U122")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("$O$U122")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_breg31 56]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("$O$U122")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("$O$U122")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 128]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_reg22]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_reg22]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("homographyDecomposition_getTestParams")
	.dwattr $C$DW$151, DW_AT_TI_call

           CALLP   .S2     homographyDecomposition_getTestParams,B3
||         STW     .D2T1   A4,*+SP(116)      ; |44| 
||         ADDAW   .D1X    SP,7,A4           ; |50| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 50,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  50 | homographyDecomposition_getTestParams(&prm, &test_cases);              
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {homographyDecomposition_getTestParams} {0}  ; |50| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$152, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x2,A4            ; |53| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 53,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  53 | VLIB_profile_init(2, "VLIB_homographyDecomposition");                  
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |53| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 56,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  56 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |56| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 56,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  59 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  60 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;----------------------------------------------------------------------
           ZERO    .L2     B5                ; |56| 
           ZERO    .L2     B6                ; |56| 
           STW     .D2T2   B5,*+SP(112)
           STW     .D2T2   B6,*+SP(32)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 56,column 17,is_stmt,isa 0
           CMPGT   .L1     A3,0,A0           ; |56| 
   [!A0]   BNOP    .S1     $C$L25,5          ; |56| 
           ; BRANCHCC OCCURS {$C$L25}        ; |56| 
;** --------------------------------------------------------------------------*
;**  	-----------------------    K$231 = &desc[0];
;**  	-----------------------    K$11 = 72u;
;**  	-----------------------    U$50 = 0;
;** 56	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 56,column 10,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$5$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 63	-----------------------    pA = VLIB_memalign(8u, K$11);
;** 64	-----------------------    pRot = VLIB_memalign(8u, K$11);
;** 65	-----------------------    trans = VLIB_memalign(8u, 24u);
;** 66	-----------------------    proj = VLIB_memalign(8u, 24u);
;** 67	-----------------------    pRot_cn = memalign(8u, K$11);
;** 68	-----------------------    trans_cn = memalign(8u, 24u);
;** 69	-----------------------    proj_cn = memalign(8u, 24u);
;** 72	-----------------------    v$1 = prm;
;** 72	-----------------------    if ( !((pA != NULL)&(pRot != NULL)&(trans != NULL)&(proj != NULL)&(pRot_cn != NULL)&(trans_cn != NULL)&(proj_cn != NULL)) ) goto g45;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | VLIB_D64   *pA       =  (VLIB_D64 *) VLIB_memalign(8, 3 * 3 * sizeof(VL
;     | IB_D64));                                                              
;----------------------------------------------------------------------
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$153, DW_AT_TI_call
           CALL    .S1     VLIB_memalign     ; |63| 
           MVK     .S2     0x48,B4
           ADDKPC  .S2     $C$RL2,B3,2       ; |63| 
           MVK     .L1     0x8,A4            ; |63| 
$C$RL2:    ; CALL OCCURS {VLIB_memalign} {0}  ; |63| 
$C$DW$L$VLIB_homographyDecomposition_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$6$B:
;          EXCLUSIVE CPU CYCLES: 42

           MV      .L1     A4,A10            ; |63| 
||         MVK     .S2     0x48,B4

$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$154, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         STW     .D2T1   A10,*+SP(108)     ; |63| 
||         MVK     .L1     0x8,A4            ; |64| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | VLIB_D64   *pRot     =  (VLIB_D64 *) VLIB_memalign(8, 3 * 3 * sizeof(VL
;     | IB_D64));                                                              
;----------------------------------------------------------------------
$C$RL3:    ; CALL OCCURS {VLIB_memalign} {0}  ; |64| 

           MV      .L1     A4,A11            ; |64| 
||         MVK     .S2     0x18,B4           ; |65| 

$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$155, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         STW     .D2T1   A11,*+SP(104)     ; |64| 
||         MVK     .L1     0x8,A4            ; |65| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 65,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  65 | VLIB_D64   *trans    =  (VLIB_D64 *) VLIB_memalign(8, 3 * sizeof(VLIB_D
;     | 64));                                                                  
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {VLIB_memalign} {0}  ; |65| 

           MV      .L1     A4,A12            ; |65| 
||         MVK     .S2     0x18,B4           ; |66| 

$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$156, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         STW     .D2T1   A12,*+SP(100)     ; |65| 
||         MVK     .L1     0x8,A4            ; |66| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 66,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  66 | VLIB_D64   *proj     =  (VLIB_D64 *) VLIB_memalign(8, 3 * sizeof(VLIB_D
;     | 64));                                                                  
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {VLIB_memalign} {0}  ; |66| 

           MV      .L1     A4,A13            ; |66| 
||         MVK     .S2     0x48,B4

$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("memalign")
	.dwattr $C$DW$157, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         STW     .D2T1   A13,*+SP(96)      ; |66| 
||         MVK     .L1     0x8,A4            ; |67| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 67,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  67 | VLIB_D64   *pRot_cn  =  (VLIB_D64 *) memalign(8, 3 * 3 * sizeof(VLIB_D6
;     | 4));                                                                   
;----------------------------------------------------------------------
$C$RL6:    ; CALL OCCURS {memalign} {0}      ; |67| 

           MV      .L1     A4,A14            ; |67| 
||         MVK     .S2     0x18,B4           ; |68| 

$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("memalign")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         STW     .D2T1   A14,*+SP(92)      ; |67| 
||         MVK     .L1     0x8,A4            ; |68| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 68,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  68 | VLIB_D64   *trans_cn =  (VLIB_D64 *) memalign(8, 3 * sizeof(VLIB_D64));
;----------------------------------------------------------------------
$C$RL7:    ; CALL OCCURS {memalign} {0}      ; |68| 

           MV      .L1     A4,A15            ; |68| 
||         MVK     .S2     0x18,B4           ; |69| 

$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("memalign")
	.dwattr $C$DW$159, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         STW     .D2T1   A15,*+SP(88)      ; |68| 
||         MVK     .L1     0x8,A4            ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 69,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | VLIB_D64   *proj_cn  =  (VLIB_D64 *) memalign(8, 3 * sizeof(VLIB_D64));
;----------------------------------------------------------------------
$C$RL8:    ; CALL OCCURS {memalign} {0}      ; |69| 
$C$DW$L$VLIB_homographyDecomposition_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$7$B:
;          EXCLUSIVE CPU CYCLES: 16

           ZERO    .L1     A3                ; |72| 
||         ZERO    .S1     A5                ; |72| 
||         MV      .D1     A10,A0            ; |72| 
||         MV      .L2X    A11,B0            ; |72| 
||         ZERO    .S2     B4                ; |72| 
||         ZERO    .D2     B5                ; |72| 

   [ A0]   MVK     .L1     0x1,A5            ; |72| 
|| [ B0]   MVK     .S1     0x1,A3            ; |72| 
||         MV      .D1     A12,A2            ; |72| 
||         STW     .D2T1   A4,*+SP(84)       ; |69| 

           AND     .L1     A3,A5,A3          ; |72| 
|| [ A2]   MVK     .L2     0x1,B4            ; |72| 
||         MV      .S1     A13,A1            ; |72| 
||         MV      .D1     A14,A2            ; |72| 

   [ A1]   MVK     .L2     0x1,B5            ; |72| 
||         MV      .L1     A15,A1            ; |72| 
||         ZERO    .S1     A5                ; |72| 

           AND     .L2X    B4,A3,B6          ; |72| 
||         ZERO    .S2     B4                ; |72| 
||         ZERO    .L1     A3                ; |72| 

           AND     .L2     B5,B6,B5          ; |72| 
|| [ A2]   MVK     .S2     0x1,B4            ; |72| 
||         MV      .L1     A4,A2             ; |72| 
|| [ A1]   MVK     .S1     0x1,A3            ; |72| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 72,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  72 | if( pA && pRot && trans && proj && pRot_cn && trans_cn && proj_cn ) {  
;  74 |     int32_t    fail;                                                   
;  75 |     int32_t    n;                                                      
;  76 |     int32_t    err_cnt_c6x = 0;                                        
;  77 |     int32_t    err_cnt_cn  = 0;                                        
;  78 |     H3x3_t    *a = (H3x3_t *)pA;                                       
;  79 |     H3x3_t    *rot = (H3x3_t *)pRot;                                   
;  80 |     H3x3_t    *rot_cn = (H3x3_t *)pRot_cn;                             
;  82 |     #if defined (_TMS320C6600_CLK_MEASURE)                             
;  83 |     uint32_t    start_time, end_time;                                  
;  84 |     VLIB_D64    time_ave = 0.0;                                        
;  85 |     VLIB_D64    cycle_ave_c66 = 0.0;                                   
;  86 |     #endif                                                             
;  88 |     for( n=0; n < prm[tpi].testIterations; n++ ) {                     
;  90 |         int32_t    i, j;                                               
;  91 |         int32_t    err_flag = 0;                                       
;  94 |         if( prm[tpi].testPattern == STATIC ) {                         
;  95 |             a->H[0][0] = prm[tpi].staticInH[n * 9];                    
;  96 |             a->H[0][1] = prm[tpi].staticInH[n * 9 + 1];                
;  97 |             a->H[0][2] = prm[tpi].staticInH[n * 9 + 2];                
;  98 |             a->H[1][0] = prm[tpi].staticInH[n * 9 + 3];                
;  99 |             a->H[1][1] = prm[tpi].staticInH[n * 9 + 4];                
; 100 |             a->H[1][2] = prm[tpi].staticInH[n * 9 + 5];                
; 101 |             a->H[2][0] = prm[tpi].staticInH[n * 9 + 6];                
; 102 |             a->H[2][1] = prm[tpi].staticInH[n * 9 + 7];                
; 103 |             a->H[2][2] = prm[tpi].staticInH[n * 9 + 8];                
; 104 |             //printf_matrix(a, 3, 3);                                  
; 108 |         VLIB_fillBuffer(prm[tpi].testPattern, 0, NULL, NULL,           
; 109 |                         0, 0, 0, sizeof(uint8_t), testPatternString);  
; 112 |         VLIB_profile_start(vlib_KERNEL_OPT);                           
; 113 |         #if defined (_TMS320C6600_CLK_MEASURE)                         
; 114 |         TSCL = 0;                                                      
; 115 |         start_time = TSCL;                                             
; 116 |         #endif                                                         
; 117 |         VLIB_homographyDecomposition(a->H, rot->H, trans, proj);       
; 118 |         #if defined (_TMS320C6600_CLK_MEASURE)                         
; 119 |         end_time = TSCL;                                               
; 120 |         #endif                                                         
; 121 |         VLIB_profile_stop();                                           
; 123 |         #if defined (_TMS320C6600_CLK_MEASURE)                         
; 124 |         printf("[%d][Faugeras] Number of cycles : %d cycles\n", n, end_
;     | time - start_time);                                                    
; 125 |         printf("[%d][Faugeras] Time(ms) : %f ms\n", n, (VLIB_D64)(end_t
;     | ime - start_time) / (VLIB_D64)(700000));                               
; 126 |         time_ave += (VLIB_D64)(end_time - start_time) / (VLIB_D64)(7000
;     | 00);                                                                   
; 127 |         cycle_ave_c66 += end_time - start_time;                        
; 128 |         #endif                                                         
; 131 |         VLIB_profile_start(vlib_KERNEL_CN);                            
; 132 |         VLIB_homographyDecomposition_cn(a->H, rot_cn->H, trans_cn, proj
;     | _cn);                                                                  
; 133 |         VLIB_profile_stop();                                           
; 136 |         for( i=0; i < 3; i++ ) {                                       
; 137 |             for( j=0; j < 3; j++ ) {                                   
; 138 |                 if( fabs(rot->H[i][j] - rot_cn->H[i][j]) > prm[tpi].tes
;     | tErrorThreshold ) {                                                    
; 139 |                     printf("#######[C66-CN][%d]Rotation Matrix FAILED\n
;     | ", n);                                                                 
; 140 |                     printf("#######%.15g, %.15g\n", rot->H[i][j], rot_c
;     | n->H[i][j]);                                                           
; 141 |                     status_nat_vs_int = vlib_KERNEL_FAIL;              
; 142 |                     err_flag = 1;                                      
; 147 |         for( i=0; i < 3; i++ ) {                                       
; 148 |             if( fabs(trans[i] - trans_cn[i]) > prm[tpi].testErrorThresh
;     | old ) {                                                                
; 149 |                 printf("#######[C66-CN][%d]Translation Matrix FAILED\n"
;     | , n);                                                                  
; 150 |                 printf("#######%.15g, %.15g\n", trans[i], trans_cn[i]);
; 151 |                 status_nat_vs_int = vlib_KERNEL_FAIL;                  
; 152 |                 err_flag = 1;                                          
; 156 |         for( i=0; i < 3; i++ ) {                                       
; 157 |             if( fabs(proj[i] - proj_cn[i]) > prm[tpi].testErrorThreshol
;     | d ) {                                                                  
; 158 |                 printf("#######[C66-CN][%d]Projection Matrix FAILED\n",
;     |  n);                                                                   
; 159 |                 printf("#######%.15g, %.15g\n", proj[i], proj_cn[i]);  
; 160 |                 status_nat_vs_int = vlib_KERNEL_FAIL;                  
; 161 |                 err_flag = 1;                                          
; 165 |         if( status_nat_vs_int == vlib_KERNEL_PASS ) {                  
; 166 |             #ifdef DEBUG_SVD_MESSAGE                                   
; 167 |             printf("[C66-CN][%d]Faugeras Decomposition Passed\n", n);  
; 168 |             #endif                                                     
; 169 |         } else {                                                       
; 170 |             err_cnt_c6x++;                                             
; 171 |             printf("[C66-CN][%d]Faugeras Decomposition Failed : [err:%d
;     | ]\n", n, err_cnt_c6x);                                                 
; 175 |         if((prm[tpi].staticOutRot != NULL) && (prm[tpi].staticOutTr !=
;     | NULL) && (prm[tpi].staticOutPr != NULL)) {                             
; 177 |             int32_t    cnt = 0;                                        
; 179 |             err_flag = 0;                                              
; 181 |             for( i=0; i < 3; i++ ) {                                   
; 182 |                 for( j=0; j < 3; j++ ) {                               
; 183 |                     if( fabs(rot_cn->H[i][j] - prm[tpi].staticOutRot[n
;     | * 9 + cnt]) > prm[tpi].testErrorThreshold ) {                          
; 184 |                         printf("#######[CN-REF][%d]Rotation Matrix FAIL
;     | ED\n", n);                                                             
; 185 |                         printf("#######%.15g, %.15g\n", rot_cn->H[i][j]
;     | , prm[tpi].staticOutRot[n * 9 + cnt]);                                 
; 186 |                         status_nat_vs_ref = vlib_KERNEL_FAIL;          
; 187 |                         err_flag = 1;                                  
; 189 |                     cnt++;                                             
; 193 |             for( i=0; i < 3; i++ ) {                                   
; 194 |                 if( fabs(trans_cn[i] - prm[tpi].staticOutTr[n * 3 + i])
;     |  > prm[tpi].testErrorThreshold ) {                                     
; 195 |                     printf("#######[CN-REF][%d]Translation Matrix FAILE
;     | D\n", n);                                                              
; 196 |                     printf("#######%.15g, %.15g\n", trans_cn[i], prm[tp
;     | i].staticOutTr[n * 3 + i]);                                            
; 197 |                     status_nat_vs_ref = vlib_KERNEL_FAIL;              
; 198 |                     err_flag = 1;                                      
; 202 |             for( i=0; i < 3; i++ ) {                                   
; 203 |                 if( fabs(proj_cn[i] - prm[tpi].staticOutPr[n * 3 + i])
;     | > prm[tpi].testErrorThreshold ) {                                      
; 204 |                     printf("#######[CN-REF][%d]Projection Matrix FAILED
;     | \n", n);                                                               
; 205 |                     printf("#######%.15g, %.15g\n", proj_cn[i], prm[tpi
;     | ].staticOutPr[n * 3 + i]);                                             
; 206 |                     status_nat_vs_ref = vlib_KERNEL_FAIL;              
; 207 |                     err_flag = 1;                                      
; 211 |             if( err_flag == 0 ) {                                      
; 212 |                 #ifdef DEBUG_SVD_MESSAGE                               
; 213 |                 printf("[CN-REF][%d]Faugeras Decomposition Passed\n", n
;     | );                                                                     
; 214 |                 #endif                                                 
; 215 |             } else {                                                   
; 216 |                 err_cnt_cn++;                                          
; 217 |                 printf("[CN-REF][%d]Faugeras Decomposition Failed : [er
;     | r:%d]\n", n, err_cnt_cn);                                              
; 222 |     #if defined (_TMS320C6600_CLK_MEASURE)                             
; 223 |     printf("###########################\n");                           
; 224 |     printf("[Faugeras] Average Time(ms) : %f ms\n", time_ave / prm[tpi]
;     | .testIterations);                                                      
; 225 |     printf("[Faugeras] Average Cycles) : %f ms\n", cycle_ave_c66 / prm[
;     | tpi].testIterations);                                                  
; 226 |     printf("###########################\n");                           
; 227 |     #endif                                                             
; 228 |     if( LevelOfFeedback > 0 ) {                                        
; 229 |         printf("[Faugeras] [C66-CN] error # : %d\n", err_cnt_c6x);     
; 230 |         printf("[Faugeras] [CN-REF] error # : %d\n", err_cnt_cn);      
; 234 |     fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_r
;     | ef == vlib_KERNEL_FAIL)) ? 1 : 0;                                      
; 236 |     est_test=1;                                                        
; 239 |     sprintf(desc, "%s generated input | Opt and NatC results compared t
;     | o ref | \"Num pt\" value is actually the number of times the \         
; 240 | test was called, so that the value shown is the average cycle count per
;     |  call", testPatternString);                                            
; 241 |     VLIB_formula_add_test(prm[tpi].testIterations, NULL, NULL, fail, de
;     | sc, NULL);                                                             
; 243 | } else {                                                               
;----------------------------------------------------------------------
           AND     .L2     B4,B5,B4          ; |72| 
   [ A2]   MVK     .L1     0x1,A5            ; |72| 

           AND     .L1X    A3,B4,A3          ; |72| 
||         LDW     .D2T2   *+SP(28),B4       ; |72| 

           AND     .L1     A5,A3,A0          ; |72| 

   [!A0]   BNOP    .S1     $C$L23,2          ; |72| 
|| [!A0]   LDW     .D2T2   *+SP(32),B5

   [ A0]   MV      .L2     B4,B5
||         STW     .D2T2   B4,*+SP(120)      ; |72| 

   [ A0]   LDW     .D2T2   *+SP(32),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 245,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 245 | sprintf(desc, "Test iterations= %d", prm[tpi].testIterations);         
; 246 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!A0]   ADD     .L2     B4,B5,B4          ; |245| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 72,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |72| 
$C$DW$L$VLIB_homographyDecomposition_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$8$B:
;          EXCLUSIVE CPU CYCLES: 15
;** 78	-----------------------    a = (struct $fake1 *)pA;
;** 79	-----------------------    rot = (struct $fake1 *)pRot;
;** 80	-----------------------    rot_cn = (struct $fake1 *)pRot_cn;
;** 88	-----------------------    U$51 = U$50+v$1;
;**  	-----------------------    K$106 = &testPatternString[0];
;** 59	-----------------------    status_nat_vs_int = 1;
;** 60	-----------------------    status_nat_vs_ref = 1;
;** 76	-----------------------    err_cnt_c6x = 0;
;** 77	-----------------------    err_cnt_cn = 0;
;** 88	-----------------------    if ( !(*U$51).testIterations ) goto g42;

           LDW     .D2T1   *+SP(92),A4       ; |59| 
||         ZERO    .L2     B6                ; |77| 
||         MV      .L1     A11,A31           ; |80| 
||         MVK     .S1     0x1,A14           ; |59| 
||         MV      .D1     A10,A13           ; |79| 

           STW     .D2T2   B6,*+SP(76)       ; |59| 
||         MV      .L1     A14,A15           ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 79,column 24,is_stmt,isa 0
           STW     .D2T1   A31,*+SP(68)      ; |79| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 23,is_stmt,isa 0
           ADD     .L2     B5,B4,B4          ; |88| 
           LDHU    .D2T2   *+B4(20),B0       ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 80,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(64)       ; |80| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 23,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(44)       ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 18,is_stmt,isa 0
           LDW     .D2T1   *+SP(44),A4       ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 77,column 24,is_stmt,isa 0
           ZERO    .L2     B5                ; |77| 

   [!B0]   BNOP    .S1     $C$L21,1          ; |88| 
|| [ B0]   MV      .L2     B6,B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 18,is_stmt,isa 0
   [ B0]   STW     .D2T2   B4,*+SP(80)       ; |88| 
   [ B0]   STW     .D2T1   A4,*+SP(36)
           LDW     .D2T2   *+SP(36),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 59,column 20,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(72)       ; |59| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L21}        ; |88| 
$C$DW$L$VLIB_homographyDecomposition_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$9$B:
;          EXCLUSIVE CPU CYCLES: 5
;**  	-----------------------    K$113 = &cycles[0];
;**  	-----------------------    U$57 = U$51;
;** 88	-----------------------    n = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 94,column 17,is_stmt,isa 0
           LDBU    .D2T1   *B4,A4            ; |94| 
           MV      .L2     B4,B7
$C$DW$L$VLIB_homographyDecomposition_d$9$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L2
;** --------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 18,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$10$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g6:
;** 94	-----------------------    if ( (U$59 = (*U$57).testPattern) != 4 ) goto g8;
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 94,column 17,is_stmt,isa 0
           CMPEQ   .L1     A4,4,A0           ; |94| 

   [ A0]   MV      .L2     B4,B8
|| [ A0]   LDW     .D2T2   *+B7(4),B4        ; |95| 
|| [!A0]   B       .S2     $C$L3             ; |94| 
|| [ A0]   MV      .L1X    B5,A5             ; |95| 
|| [!A0]   MVKL    .S1     testPatternString,A12

   [ A0]   MV      .L1X    B5,A4             ; |95| 
|| [ A0]   LDW     .D2T1   *+B8(4),A31       ; |96| 
|| [ A0]   MV      .L2     B5,B31            ; |95| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 108,column 17,is_stmt,isa 0
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$160, DW_AT_TI_call
   [!A0]   CALL    .S1     VLIB_fillBuffer   ; |108| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 95,column 21,is_stmt,isa 0
   [ A0]   SHL     .S1     A5,6,A3           ; |95| 
   [ A0]   ADDAD   .D1     A3,A4,A3          ; |95| 
           ADD     .L1X    B4,A3,A3          ; |95| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 94,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |94| 
$C$DW$L$VLIB_homographyDecomposition_d$10$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$11$B:
;          EXCLUSIVE CPU CYCLES: 66
;** 95	-----------------------    *(double *)a = *(n*72+(*U$57).staticInH);
;** 96	-----------------------    C$4 = n*72;
;** 96	-----------------------    *((double *)a+8) = *((*U$57).staticInH+C$4+8);
;** 97	-----------------------    *((double *)a+16) = *((*U$57).staticInH+C$4+16);
;** 98	-----------------------    *((double *)a+24) = *((*U$57).staticInH+C$4+24);
;** 99	-----------------------    *((double *)a+32) = *((*U$57).staticInH+C$4+32);
;** 100	-----------------------    *((double *)a+40) = *((*U$57).staticInH+C$4+40);
;** 101	-----------------------    *((double *)a+48) = *((*U$57).staticInH+C$4+48);
;** 102	-----------------------    *((double *)a+56) = *((*U$57).staticInH+C$4+56);
;** 103	-----------------------    *((double *)a+64) = *((*U$57).staticInH+C$4+64);
;**  	-----------------------    U$50 = tpi<<5;
;**  	-----------------------    U$59 = (*(U$50+v$1)).testPattern;
;** 95	-----------------------    K$11 = 72u;

           MV      .L2     B8,B30
||         LDDW    .D1T2   *A3,B5:B4         ; |95| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 96,column 21,is_stmt,isa 0
           SHL     .S2     B31,6,B6          ; |96| 
           ADDAD   .D2     B6,B31,B6         ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 97,column 21,is_stmt,isa 0
           LDW     .D2T1   *+B30(4),A6       ; |97| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 96,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A31,A3         ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 95,column 21,is_stmt,isa 0
           STDW    .D1T2   B5:B4,*A13        ; |95| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 96,column 21,is_stmt,isa 0
           LDDW    .D1T1   *+A3(8),A5:A4     ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 98,column 21,is_stmt,isa 0
           LDW     .D2T1   *+B30(4),A30      ; |98| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 97,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A6,A29         ; |97| 
           LDW     .D2T2   *+SP(112),B29
           LDW     .D2T2   *+SP(120),B28
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 96,column 21,is_stmt,isa 0
           STDW    .D1T1   A5:A4,*+A13(8)    ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 97,column 21,is_stmt,isa 0
           LDDW    .D1T1   *+A29(16),A5:A4   ; |97| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 98,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A30,A3         ; |98| 
           MVKL    .S1     testPatternString,A12
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 97,column 21,is_stmt,isa 0
           STDW    .D1T1   A5:A4,*+A13(16)   ; |97| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 98,column 21,is_stmt,isa 0
           LDDW    .D1T1   *+A3(24),A5:A4    ; |98| 
           NOP             4
           STDW    .D1T1   A5:A4,*+A13(24)   ; |98| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 99,column 21,is_stmt,isa 0
           LDW     .D2T1   *+B30(4),A3       ; |99| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 100,column 21,is_stmt,isa 0
           LDW     .D2T1   *+B30(4),A6       ; |100| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 101,column 21,is_stmt,isa 0
           LDW     .D2T1   *+B30(4),A28      ; |101| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 99,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A3,A3          ; |99| 
           LDDW    .D1T1   *+A3(32),A5:A4    ; |99| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 100,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A6,A27         ; |100| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 101,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A28,A3         ; |101| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 99,column 21,is_stmt,isa 0
           STDW    .D1T1   A5:A4,*+A13(32)   ; |99| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 100,column 21,is_stmt,isa 0
           LDDW    .D1T1   *+A27(40),A5:A4   ; |100| 
           NOP             4
           STDW    .D1T1   A5:A4,*+A13(40)   ; |100| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 101,column 21,is_stmt,isa 0
           LDDW    .D1T1   *+A3(48),A5:A4    ; |101| 
           NOP             4
           STDW    .D1T1   A5:A4,*+A13(48)   ; |101| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 102,column 21,is_stmt,isa 0
           LDW     .D2T1   *+B30(4),A3       ; |102| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 103,column 21,is_stmt,isa 0
           LDW     .D2T2   *+B30(4),B4       ; |103| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 102,column 21,is_stmt,isa 0
           ADD     .L1X    B6,A3,A3          ; |102| 
           LDDW    .D1T1   *+A3(56),A5:A4    ; |102| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 103,column 21,is_stmt,isa 0
           ADD     .L2     B6,B4,B4          ; |103| 
           SHL     .S2     B29,5,B6
           STW     .D2T2   B6,*+SP(32)
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 102,column 21,is_stmt,isa 0
           STDW    .D1T1   A5:A4,*+A13(56)   ; |102| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 103,column 21,is_stmt,isa 0
           LDDW    .D2T2   *+B4(64),B5:B4    ; |103| 
           LDBU    .D2T1   *+B6[B28],A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 108,column 17,is_stmt,isa 0
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$161, DW_AT_TI_call
           CALL    .S1     VLIB_fillBuffer   ; |108| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 103,column 21,is_stmt,isa 0
           STDW    .D1T2   B5:B4,*+A13(64)   ; |103| 
$C$DW$L$VLIB_homographyDecomposition_d$11$E:
;** --------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 94,column 17,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$12$B:
;          EXCLUSIVE CPU CYCLES: 2
;**	-----------------------g8:
;** 108	-----------------------    VLIB_fillBuffer(U$59, 0u, NULL, NULL, 0u, 0u, 0u, 1u, K$106);
;** 137	-----------------------    act_kernel = 0;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 117	-----------------------    VLIB_homographyDecomposition((double (*)[3])a, (double (*)[3])rot, trans, proj);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$3 = act_kernel;  // [16]
;** 156	-----------------------    *((C$3<<3)+K$113) = *((C$3<<3)+K$113)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 137	-----------------------    act_kernel = 1;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 132	-----------------------    VLIB_homographyDecomposition_cn((double (*)[3])a, (double (*)[3])rot_cn, trans_cn, proj_cn);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$2 = act_kernel;  // [16]
;** 156	-----------------------    *((C$2<<3)+K$113) = *((C$2<<3)+K$113)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]

           ZERO    .L2     B8                ; |108| 
||         MVK     .S2     0x1,B10           ; |108| 
||         ZERO    .L1     A8                ; |108| 

           ADDKPC  .S2     $C$RL9,B3,0       ; |108| 
||         ZERO    .L2     B4                ; |108| 
||         ZERO    .D2     B6                ; |108| 
||         MVKH    .S1     testPatternString,A12
||         ZERO    .L1     A6                ; |108| 
||         ZERO    .D1     A10               ; |108| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 108,column 17,is_stmt,isa 0
$C$RL9:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |108| 
$C$DW$L$VLIB_homographyDecomposition_d$12$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$13$B:
;          EXCLUSIVE CPU CYCLES: 105
           MVKL    .S1     act_kernel,A10

           MVKH    .S1     act_kernel,A10
||         ZERO    .L1     A3                ; |137| 

$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$162, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A10           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL10:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("getSP")
	.dwattr $C$DW$163, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("initStack")
	.dwattr $C$DW$164, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL12:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 
           MVKL    .S1     beg_count,A11

           MVKH    .S1     beg_count,A11
||         LDW     .D2T2   *+SP(96),B6       ; |117| 

           STDW    .D1T2   B5:B4,*A11        ; |146| 
||         LDW     .D2T1   *+SP(100),A6      ; |117| 

$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("VLIB_homographyDecomposition")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     VLIB_homographyDecomposition,B3
||         LDW     .D2T2   *+SP(68),B4       ; |117| 
||         MV      .L1     A13,A4            ; |117| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 117,column 17,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {VLIB_homographyDecomposition} {0}  ; |117| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
           MVKL    .S2     overhead,B10

           MVKH    .S2     overhead,B10
||         LDW     .D1T1   *A10,A3           ; |156| 

           LDDW    .D2T2   *B10,B5:B4        ; |156| 
||         LDDW    .D1T1   *A11,A7:A6        ; |156| 

           MVKL    .S1     cycles,A4
           MVKH    .S1     cycles,A4
           MVKL    .S1     end_count,A12
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A4[A3],A9:A8    ; |156| 
           ADDU    .L1X    B4,A6,A5:A4       ; |156| 
           ADD     .L1X    A5,B5,A5          ; |156| 
           ADD     .L1     A5,A7,A6          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 
           SUB     .L2X    B7,A6,B4          ; |156| 

           EXT     .S1     A5,24,24,A31      ; |156| 
||         ADDU    .L1     A8,A4,A5:A4       ; |156| 

           ADD     .L1X    B4,A31,A6         ; |156| 
||         ADD     .D1     A5,A9,A5          ; |156| 
||         MVKH    .S1     end_count,A12

           ADD     .L1     A5,A6,A5          ; |156| 
||         MVKL    .S1     cycles,A6

           MVKH    .S1     cycles,A6
||         STDW    .D1T2   B7:B6,*A12        ; |153| 

$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("setStackDepth")
	.dwattr $C$DW$166, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A6[A3]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL14:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           MVK     .L1     1,A3              ; |137| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$167, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T1   A3,*A10           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL15:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("getSP")
	.dwattr $C$DW$168, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("initStack")
	.dwattr $C$DW$169, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL17:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |146| 
           MVC     .S2     TSCH,B5           ; |146| 

           STDW    .D1T2   B5:B4,*A11        ; |146| 
||         LDW     .D2T1   *+SP(88),A6       ; |132| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 132,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(84),B6       ; |132| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("VLIB_homographyDecomposition_cn")
	.dwattr $C$DW$170, DW_AT_TI_call

           CALLP   .S2     VLIB_homographyDecomposition_cn,B3
||         LDW     .D2T2   *+SP(64),B4       ; |132| 
||         MV      .L1     A13,A4            ; |132| 

$C$RL18:   ; CALL OCCURS {VLIB_homographyDecomposition_cn} {0}  ; |132| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |153| 
           MVC     .S2     TSCH,B7           ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A10,A3           ; |156| 
           LDDW    .D2T2   *B10,B9:B8        ; |156| 
           LDDW    .D1T1   *A11,A5:A4        ; |156| 
           MVKL    .S1     cycles,A6
           MVKH    .S1     cycles,A6
           LDDW    .D1T1   *+A6[A3],A7:A6    ; |156| 
           MV      .L2X    A12,B16
           ADDU    .L2X    B8,A4,B5:B4       ; |156| 
           ADD     .L2     B5,B9,B8          ; |156| 

           ADD     .S2X    B8,A5,B8          ; |156| 
||         SUBU    .L2     B6,B4,B5:B4       ; |156| 

           EXT     .S2     B5,24,24,B9       ; |156| 
||         ADDU    .L2X    A6,B4,B5:B4       ; |156| 
||         SUB     .D2     B7,B8,B8          ; |156| 

           ADD     .L2X    B5,A7,B5          ; |156| 
||         ADD     .S2     B8,B9,B8          ; |156| 
||         MVKL    .S1     cycles,A4

           ADD     .L2     B5,B8,B5          ; |156| 
||         MVKH    .S1     cycles,A4
||         STDW    .D2T2   B7:B6,*B16        ; |153| 

$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("setStackDepth")
	.dwattr $C$DW$171, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B5:B4,*+A4[A3]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_homographyDecomposition_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$14$B:
;          EXCLUSIVE CPU CYCLES: 14
;** 136	-----------------------    v$1 = prm;
;**  	-----------------------    U$57 = U$50+v$1;
;**  	-----------------------    U$50 = tpi<<5;
;**  	-----------------------    U$131 = (*(U$50+v$1)).testErrorThreshold;
;** 136	-----------------------    L$1 = 3;
;**  	-----------------------    U$122 = 0;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 136,column 27,is_stmt,isa 0
           LDW     .D2T2   *+SP(28),B4       ; |136| 
           LDW     .D2T2   *+SP(112),B6
           LDW     .D2T2   *+SP(32),B5
           MVK     .L2     0x3,B31           ; |136| 
           STW     .D2T2   B31,*+SP(48)
           LDW     .D2T1   *+SP(64),A3
           STW     .D2T2   B4,*+SP(120)      ; |136| 

           SHL     .S2     B6,5,B5
||         ADD     .L2     B4,B5,B6

           STW     .D2T2   B5,*+SP(32)

           ADD     .L2     B4,B5,B4
||         LDW     .D2T2   *+SP(68),B5
||         MVK     .S2     0x3,B31           ; |137| 

           STW     .D2T2   B31,*+SP(52)

           LDDW    .D2T2   *+B4(24),B11:B10
||         ZERO    .L2     B4

           STW     .D2T2   B6,*+SP(36)

           ADD     .L1X    B4,A3,A12
||         STW     .D2T2   B4,*+SP(56)

$C$DW$L$VLIB_homographyDecomposition_d$14$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L4
;** --------------------------------------------------------------------------*
$C$L4:    
$C$DW$L$VLIB_homographyDecomposition_d$15$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g9:
;**  	-----------------------    U$125 = (double *)rot+U$122;
;**  	-----------------------    U$127 = (double *)rot_cn+U$122;
;** 137	-----------------------    L$2 = 3;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           ADD     .L2     B4,B5,B4
           STW     .D2T2   B4,*+SP(40)
           LDW     .D2T2   *+SP(40),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 138,column 25,is_stmt,isa 0
           LDDW    .D1T1   *A12++,A11:A10    ; |138| 
           NOP             2
$C$DW$L$VLIB_homographyDecomposition_d$15$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 137,column 31,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$16$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g10:
;** 138	-----------------------    U$128 = *U$127++;
;** 138	-----------------------    U$126 = *U$125++;
;** 138	-----------------------    if ( ABS(U$126-U$128) <= U$131 ) goto g12;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 138,column 25,is_stmt,isa 0
           LDDW    .D2T2   *B4++,B13:B12     ; |138| 
           STW     .D2T2   B4,*+SP(40)       ; |138| 
           NOP             3
           FSUBDP  .L2X    B13:B12,A11:A10,B5:B4 ; |138| 
           NOP             2
           ABSDP   .S2     B5:B4,B5:B4       ; |138| 
           NOP             1
           CMPGTDP .S2     B5:B4,B11:B10,B0  ; |138| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 139,column 29,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |139| 

   [!B0]   BNOP    .S1     $C$L6,1           ; |138| 
|| [!B0]   LDW     .D2T2   *+SP(52),B4

$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("printf")
	.dwattr $C$DW$172, DW_AT_TI_call
   [ B0]   CALL    .S1     printf            ; |139| 
   [ B0]   MVKL    .S1     $C$SL2+0,A3
   [ B0]   MVKH    .S1     $C$SL2+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 137,column 31,is_stmt,isa 0
   [!B0]   SUB     .L1X    B4,1,A0           ; |137| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 138,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |138| 
$C$DW$L$VLIB_homographyDecomposition_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$17$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 139	-----------------------    printf((const char *)"#######[C66-CN][%d]Rotation Matrix FAILED\n", n);
;** 140	-----------------------    printf((const char *)"#######%.15g, %.15g\n", U$126, U$128);
;** 141	-----------------------    status_nat_vs_int = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 139,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |139| 

           STW     .D2T1   A3,*+SP(4)        ; |139| 
||         ADDKPC  .S2     $C$RL20,B3,0      ; |139| 

$C$RL20:   ; CALL OCCURS {printf} {0}        ; |139| 
$C$DW$L$VLIB_homographyDecomposition_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$18$B:
;          EXCLUSIVE CPU CYCLES: 8

           MVKL    .S2     $C$SL3+0,B4
||         STDW    .D2T2   B13:B12,*+SP(8)   ; |140| 

           MVKH    .S2     $C$SL3+0,B4
||         STDW    .D2T1   A11:A10,*+SP(16)  ; |140| 

$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("printf")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |140| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 140,column 29,is_stmt,isa 0
$C$RL21:   ; CALL OCCURS {printf} {0}        ; |140| 
$C$DW$L$VLIB_homographyDecomposition_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$19$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(52),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 141,column 29,is_stmt,isa 0
           ZERO    .L1     A14               ; |141| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 137,column 31,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |137| 
$C$DW$L$VLIB_homographyDecomposition_d$19$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 138,column 25,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$20$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g12:
;** 137	-----------------------    if ( L$2 = L$2-1 ) goto g10;

   [ A0]   B       .S1     $C$L5             ; |137| 
||         SUB     .L2     B4,1,B4           ; |137| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 137,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(52)       ; |137| 
   [ A0]   LDW     .D2T2   *+SP(40),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 138,column 25,is_stmt,isa 0
   [ A0]   LDDW    .D1T1   *A12++,A11:A10    ; |138| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 137,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |137| 
$C$DW$L$VLIB_homographyDecomposition_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$21$B:
;** 136	-----------------------    U$122 += 24;
$C$DW$L$VLIB_homographyDecomposition_d$21$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 136,column 27,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$22$B:
;          EXCLUSIVE CPU CYCLES: 12
;** 136	-----------------------    if ( L$1 = L$1-1 ) goto g9;
           LDW     .D2T2   *+SP(48),B5
           LDW     .D2T2   *+SP(56),B4
           LDW     .D2T1   *+SP(64),A3
           NOP             2

           SUB     .L1X    B5,1,A0           ; |136| 
||         SUB     .L2     B5,1,B5           ; |136| 

   [ A0]   MVK     .L2     0x3,B31           ; |137| 
|| [ A0]   B       .S1     $C$L4             ; |136| 
||         STW     .D2T2   B5,*+SP(48)       ; |136| 

           LDW     .D2T2   *+SP(68),B5
           ADDK    .S2     24,B4             ; |136| 
           STW     .D2T2   B4,*+SP(56)       ; |136| 
           ADD     .L1X    B4,A3,A12
   [ A0]   STW     .D2T2   B31,*+SP(52)
           ; BRANCHCC OCCURS {$C$L4}         ; |136| 
$C$DW$L$VLIB_homographyDecomposition_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$23$B:
;**  	-----------------------    U$146 = trans;
$C$DW$L$VLIB_homographyDecomposition_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$24$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$148 = trans_cn;
;** 147	-----------------------    L$3 = 3;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D2T1   *+SP(100),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 147,column 27,is_stmt,isa 0
           MVK     .L2     0x3,B4            ; |147| 
           STW     .D2T2   B4,*+SP(48)       ; |147| 
           LDW     .D2T1   *+SP(88),A12      ; |147| 
           NOP             1
           STW     .D2T1   A3,*+SP(40)
           LDW     .D2T2   *+SP(40),B4
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 148,column 21,is_stmt,isa 0
           LDDW    .D1T1   *A12++,A11:A10    ; |148| 
$C$DW$L$VLIB_homographyDecomposition_d$24$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 147,column 27,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$25$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g15:
;** 148	-----------------------    U$149 = *U$148++;
;** 148	-----------------------    U$147 = *U$146++;
;** 148	-----------------------    if ( ABS(U$147-U$149) <= U$131 ) goto g17;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 148,column 21,is_stmt,isa 0
           LDDW    .D2T2   *B4++,B13:B12     ; |148| 
           STW     .D2T2   B4,*+SP(40)       ; |148| 
           NOP             3
           FSUBDP  .L2X    B13:B12,A11:A10,B5:B4 ; |148| 
           NOP             2
           ABSDP   .S2     B5:B4,B5:B4       ; |148| 
           NOP             1
           CMPGTDP .S2     B5:B4,B11:B10,B0  ; |148| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 149,column 25,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |149| 

   [!B0]   BNOP    .S1     $C$L8,1           ; |148| 
|| [!B0]   LDW     .D2T2   *+SP(48),B4

$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("printf")
	.dwattr $C$DW$174, DW_AT_TI_call
   [ B0]   CALL    .S1     printf            ; |149| 
   [ B0]   MVKL    .S1     $C$SL4+0,A3
   [ B0]   MVKH    .S1     $C$SL4+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 147,column 27,is_stmt,isa 0
   [!B0]   SUB     .L1X    B4,1,A0           ; |147| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 148,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L8}         ; |148| 
$C$DW$L$VLIB_homographyDecomposition_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$26$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 149	-----------------------    printf((const char *)"#######[C66-CN][%d]Translation Matrix FAILED\n", n);
;** 150	-----------------------    printf((const char *)"#######%.15g, %.15g\n", U$147, U$149);
;** 151	-----------------------    status_nat_vs_int = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 149,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |149| 

           STW     .D2T1   A3,*+SP(4)        ; |149| 
||         ADDKPC  .S2     $C$RL22,B3,0      ; |149| 

$C$RL22:   ; CALL OCCURS {printf} {0}        ; |149| 
$C$DW$L$VLIB_homographyDecomposition_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$27$B:
;          EXCLUSIVE CPU CYCLES: 8

           MVKL    .S2     $C$SL3+0,B4
||         STDW    .D2T2   B13:B12,*+SP(8)   ; |150| 

           MVKH    .S2     $C$SL3+0,B4
||         STDW    .D2T1   A11:A10,*+SP(16)  ; |150| 

$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("printf")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |150| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 150,column 25,is_stmt,isa 0
$C$RL23:   ; CALL OCCURS {printf} {0}        ; |150| 
$C$DW$L$VLIB_homographyDecomposition_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$28$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(48),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 151,column 25,is_stmt,isa 0
           ZERO    .L1     A14               ; |151| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 147,column 27,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |147| 
$C$DW$L$VLIB_homographyDecomposition_d$28$E:
;** --------------------------------------------------------------------------*
$C$L8:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 148,column 21,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$29$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g17:
;** 147	-----------------------    if ( L$3 = L$3-1 ) goto g15;

   [ A0]   B       .S1     $C$L7             ; |147| 
||         SUB     .L2     B4,1,B4           ; |147| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 147,column 27,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(48)       ; |147| 
   [ A0]   LDW     .D2T2   *+SP(40),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 148,column 21,is_stmt,isa 0
   [ A0]   LDDW    .D1T1   *A12++,A11:A10    ; |148| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 147,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L7}         ; |147| 
$C$DW$L$VLIB_homographyDecomposition_d$29$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$30$B:
;**  	-----------------------    U$156 = proj;
$C$DW$L$VLIB_homographyDecomposition_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$31$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$158 = proj_cn;
;** 156	-----------------------    L$4 = 3;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D2T1   *+SP(96),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 156,column 27,is_stmt,isa 0
           MVK     .L2     0x3,B4            ; |156| 
           STW     .D2T2   B4,*+SP(48)       ; |156| 
           LDW     .D2T1   *+SP(84),A12      ; |156| 
           NOP             1
           STW     .D2T1   A3,*+SP(40)
           LDW     .D2T2   *+SP(40),B4
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 157,column 21,is_stmt,isa 0
           LDDW    .D1T1   *A12++,A11:A10    ; |157| 
$C$DW$L$VLIB_homographyDecomposition_d$31$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L9:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 156,column 27,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$32$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g19:
;** 157	-----------------------    U$159 = *U$158++;
;** 157	-----------------------    U$157 = *U$156++;
;** 157	-----------------------    if ( ABS(U$157-U$159) <= U$131 ) goto g21;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 157,column 21,is_stmt,isa 0
           LDDW    .D2T2   *B4++,B13:B12     ; |157| 
           STW     .D2T2   B4,*+SP(40)       ; |157| 
           NOP             3
           FSUBDP  .L2X    B13:B12,A11:A10,B5:B4 ; |157| 
           NOP             2
           ABSDP   .S2     B5:B4,B5:B4       ; |157| 
           NOP             1
           CMPGTDP .S2     B5:B4,B11:B10,B0  ; |157| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 158,column 25,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |158| 

   [!B0]   BNOP    .S1     $C$L10,1          ; |157| 
|| [!B0]   LDW     .D2T2   *+SP(48),B4

$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("printf")
	.dwattr $C$DW$176, DW_AT_TI_call
   [ B0]   CALL    .S1     printf            ; |158| 
   [ B0]   MVKL    .S1     $C$SL5+0,A3
   [ B0]   MVKH    .S1     $C$SL5+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 156,column 27,is_stmt,isa 0
   [!B0]   SUB     .L1X    B4,1,A0           ; |156| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 157,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |157| 
$C$DW$L$VLIB_homographyDecomposition_d$32$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$33$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 158	-----------------------    printf((const char *)"#######[C66-CN][%d]Projection Matrix FAILED\n", n);
;** 159	-----------------------    printf((const char *)"#######%.15g, %.15g\n", U$157, U$159);
;** 160	-----------------------    status_nat_vs_int = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 158,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |158| 

           STW     .D2T1   A3,*+SP(4)        ; |158| 
||         ADDKPC  .S2     $C$RL24,B3,0      ; |158| 

$C$RL24:   ; CALL OCCURS {printf} {0}        ; |158| 
$C$DW$L$VLIB_homographyDecomposition_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$34$B:
;          EXCLUSIVE CPU CYCLES: 8

           MVKL    .S2     $C$SL3+0,B4
||         STDW    .D2T2   B13:B12,*+SP(8)   ; |159| 

           MVKH    .S2     $C$SL3+0,B4
||         STDW    .D2T1   A11:A10,*+SP(16)  ; |159| 

$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("printf")
	.dwattr $C$DW$177, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |159| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 159,column 25,is_stmt,isa 0
$C$RL25:   ; CALL OCCURS {printf} {0}        ; |159| 
$C$DW$L$VLIB_homographyDecomposition_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$35$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(48),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 160,column 25,is_stmt,isa 0
           ZERO    .L1     A14               ; |160| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 156,column 27,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |156| 
$C$DW$L$VLIB_homographyDecomposition_d$35$E:
;** --------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 157,column 21,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$36$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g21:
;** 156	-----------------------    if ( L$4 = L$4-1 ) goto g19;

   [ A0]   B       .S1     $C$L9             ; |156| 
||         SUB     .L2     B4,1,B4           ; |156| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 156,column 27,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(48)       ; |156| 
   [ A0]   LDW     .D2T2   *+SP(40),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 157,column 21,is_stmt,isa 0
   [ A0]   LDDW    .D1T1   *A12++,A11:A10    ; |157| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 156,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L9}         ; |156| 
$C$DW$L$VLIB_homographyDecomposition_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$37$B:
;** 169	-----------------------    if ( status_nat_vs_int == 1 ) goto g24;
$C$DW$L$VLIB_homographyDecomposition_d$37$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 169,column 17,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$38$B:
;          EXCLUSIVE CPU CYCLES: 7

           CMPEQ   .L1     A14,1,A0          ; |169| 
||         LDW     .D2T2   *+SP(76),B5       ; |171| 

   [ A0]   B       .S1     $C$L11            ; |169| 
|| [ A0]   LDW     .D2T2   *+SP(36),B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 171,column 21,is_stmt,isa 0
   [!A0]   LDW     .D2T2   *+SP(80),B6       ; |171| 
   [!A0]   MVKL    .S2     $C$SL6+0,B4
   [!A0]   MVKH    .S2     $C$SL6+0,B4
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("printf")
	.dwattr $C$DW$178, DW_AT_TI_call

   [!A0]   CALL    .S1     printf            ; |171| 
||         ADD     .L2     1,B5,B5           ; |171| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 175,column 17,is_stmt,isa 0
   [ A0]   LDW     .D2T2   *+B4(12),B6       ; |175| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 169,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |169| 
$C$DW$L$VLIB_homographyDecomposition_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$39$B:
;          EXCLUSIVE CPU CYCLES: 10
;** 171	-----------------------    printf((const char *)"[C66-CN][%d]Faugeras Decomposition Failed : [err:%d]\n", n, ++err_cnt_c6x);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 171,column 21,is_stmt,isa 0
           STW     .D2T2   B6,*+SP(8)        ; |171| 
           STW     .D2T2   B5,*+SP(12)       ; |171| 
           STW     .D2T2   B5,*+SP(76)       ; |171| 

           STW     .D2T2   B4,*+SP(4)        ; |171| 
||         ADDKPC  .S2     $C$RL26,B3,0      ; |171| 

$C$RL26:   ; CALL OCCURS {printf} {0}        ; |171| 
           LDW     .D2T2   *+SP(36),B4
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 175,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B4(12),B6       ; |175| 
$C$DW$L$VLIB_homographyDecomposition_d$39$E:
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 169,column 17,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$40$B:
;          EXCLUSIVE CPU CYCLES: 15
;**	-----------------------g24:
;** 175	-----------------------    U$176 = (*U$57).staticOutPr;
;** 175	-----------------------    U$173 = (*U$57).staticOutTr;
;** 175	-----------------------    C$1 = (*U$57).staticOutRot;
;** 175	-----------------------    if ( !((C$1 != NULL)&(U$173 != NULL)&(U$176 != NULL)) ) goto g41;

           ZERO    .L1     A3                ; |175| 
||         LDW     .D2T2   *+B4(8),B1        ; |175| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 175,column 17,is_stmt,isa 0
           LDW     .D2T2   *+B4(16),B5       ; |175| 
           ZERO    .L1     A4                ; |175| 
           ZERO    .L2     B4                ; |175| 

           MV      .L1X    B6,A0             ; |175| 
||         STW     .D2T2   B6,*+SP(40)       ; |175| 

   [ B1]   MVK     .L1     0x1,A4            ; |175| 
|| [ A0]   MVK     .S1     0x1,A3            ; |175| 

           AND     .L1     A3,A4,A3          ; |175| 
||         MV      .S1X    B5,A2             ; |175| 
||         STW     .D2T2   B5,*+SP(52)       ; |175| 

   [ A2]   MVK     .L2     0x1,B4            ; |175| 
||         LDW     .D2T2   *+SP(80),B5

           AND     .L2X    B4,A3,B0          ; |175| 

   [!B0]   BNOP    .S2     $C$L19,1          ; |175| 
|| [ B0]   MVK     .S1     72,A3

   [ B0]   MVK     .S2     24,B4

           MPYLI   .M1X    A3,B5,A5:A4
||         MPYLI   .M2     B4,B5,B5:B4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 179,column 21,is_stmt,isa 0
   [ B0]   ZERO    .L2     B31               ; |179| 
   [ B0]   STW     .D2T2   B31,*+SP(128)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 175,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L19}        ; |175| 
$C$DW$L$VLIB_homographyDecomposition_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$41$B:
;          EXCLUSIVE CPU CYCLES: 7
;**  	-----------------------    U$185 = _lo(_mpyli(72, n))+C$1;
;**  	-----------------------    U$194 = _lo(_mpyli(24, n));
;** 181	-----------------------    L$5 = 3;
;**  	-----------------------    U$122 = 0;
;** 179	-----------------------    err_flag = 0;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           LDW     .D2T1   *+SP(64),A3
||         MVK     .L2     0x3,B6            ; |181| 
||         ZERO    .L1     A1                ; |179| 

           STW     .D2T2   B4,*+SP(48)
           LDW     .D2T2   *+SP(128),B4
           ADD     .L1X    B1,A4,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
           MVK     .L2     0x3,B5            ; |182| 
           STW     .D2T2   B5,*+SP(60)
           STW     .D2T2   B6,*+SP(56)
$C$DW$L$VLIB_homographyDecomposition_d$41$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L12
;** --------------------------------------------------------------------------*
$C$L12:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 179,column 21,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$42$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g26:
;**  	-----------------------    U$127 = (double *)rot_cn+U$122;
;** 182	-----------------------    L$6 = 3;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           ADD     .L2X    B4,A3,B4
           STW     .D2T2   B4,*+SP(124)
           LDW     .D2T2   *+SP(124),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 183,column 29,is_stmt,isa 0
           LDDW    .D1T1   *A12++,A11:A10    ; |183| 
           NOP             2
$C$DW$L$VLIB_homographyDecomposition_d$42$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$43$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g27:
;** 183	-----------------------    U$186 = *U$185++;
;** 183	-----------------------    U$128 = *U$127++;
;** 183	-----------------------    if ( ABS(U$128-U$186) <= U$131 ) goto g29;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 183,column 29,is_stmt,isa 0
           LDDW    .D2T2   *B4++,B13:B12     ; |183| 
           STW     .D2T2   B4,*+SP(124)      ; |183| 
           NOP             3
           FSUBDP  .L2X    B13:B12,A11:A10,B5:B4 ; |183| 
           NOP             2
           ABSDP   .S2     B5:B4,B5:B4       ; |183| 
           NOP             1
           CMPGTDP .S2     B5:B4,B11:B10,B0  ; |183| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 184,column 33,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |184| 

   [!B0]   BNOP    .S1     $C$L14,1          ; |183| 
|| [!B0]   LDW     .D2T2   *+SP(60),B4

$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("printf")
	.dwattr $C$DW$179, DW_AT_TI_call
   [ B0]   CALL    .S1     printf            ; |184| 
   [ B0]   MVKL    .S1     $C$SL7+0,A3
   [ B0]   MVKH    .S1     $C$SL7+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
   [!B0]   SUB     .L1X    B4,1,A0           ; |182| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 183,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |183| 
$C$DW$L$VLIB_homographyDecomposition_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$44$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 184	-----------------------    printf((const char *)"#######[CN-REF][%d]Rotation Matrix FAILED\n", n);
;** 185	-----------------------    printf((const char *)"#######%.15g, %.15g\n", U$128, U$186);
;** 186	-----------------------    status_nat_vs_ref = 0;
;** 187	-----------------------    err_flag = 1;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 184,column 33,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |184| 

           STW     .D2T1   A3,*+SP(4)        ; |184| 
||         ADDKPC  .S2     $C$RL27,B3,0      ; |184| 

$C$RL27:   ; CALL OCCURS {printf} {0}        ; |184| 
$C$DW$L$VLIB_homographyDecomposition_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$45$B:
;          EXCLUSIVE CPU CYCLES: 8

           MVKL    .S2     $C$SL3+0,B4
||         STDW    .D2T2   B13:B12,*+SP(8)   ; |185| 

           MVKH    .S2     $C$SL3+0,B4
||         STDW    .D2T1   A11:A10,*+SP(16)  ; |185| 

$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("printf")
	.dwattr $C$DW$180, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |185| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 185,column 33,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {printf} {0}        ; |185| 
$C$DW$L$VLIB_homographyDecomposition_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$46$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(60),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 186,column 33,is_stmt,isa 0
           ZERO    .L1     A15               ; |186| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 187,column 33,is_stmt,isa 0
           MVK     .L1     0x1,A1            ; |187| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |182| 
$C$DW$L$VLIB_homographyDecomposition_d$46$E:
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 183,column 29,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$47$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g29:
;** 182	-----------------------    if ( L$6 = L$6-1 ) goto g27;

   [ A0]   B       .S1     $C$L13            ; |182| 
||         SUB     .L2     B4,1,B4           ; |182| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(60)       ; |182| 
   [ A0]   LDW     .D2T2   *+SP(124),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 183,column 29,is_stmt,isa 0
   [ A0]   LDDW    .D1T1   *A12++,A11:A10    ; |183| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |182| 
$C$DW$L$VLIB_homographyDecomposition_d$47$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$48$B:
;** 181	-----------------------    U$122 += 24;
$C$DW$L$VLIB_homographyDecomposition_d$48$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 181,column 31,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$49$B:
;          EXCLUSIVE CPU CYCLES: 13
;** 181	-----------------------    if ( L$5 = L$5-1 ) goto g26;
           LDW     .D2T2   *+SP(128),B4
           LDW     .D2T2   *+SP(56),B5
           NOP             3
           ADDK    .S2     24,B4             ; |181| 

           SUB     .L1X    B5,1,A0           ; |181| 
||         STW     .D2T2   B4,*+SP(128)      ; |181| 

   [ A0]   B       .S1     $C$L12            ; |181| 
|| [ A0]   LDW     .D2T2   *+SP(128),B4

   [ A0]   LDW     .D2T1   *+SP(64),A3
           SUB     .L2     B5,1,B5           ; |181| 
           STW     .D2T2   B5,*+SP(56)       ; |181| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 182,column 35,is_stmt,isa 0
   [ A0]   MVK     .L2     0x3,B5            ; |182| 
   [ A0]   STW     .D2T2   B5,*+SP(60)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 181,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |181| 
$C$DW$L$VLIB_homographyDecomposition_d$49$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$50$B:
;**  	-----------------------    U$148 = trans_cn;
$C$DW$L$VLIB_homographyDecomposition_d$50$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$51$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$196 = U$173+U$194;
;** 193	-----------------------    L$7 = 3;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D2T1   *+SP(88),A31
           LDW     .D2T1   *+SP(40),A4
           LDW     .D2T1   *+SP(48),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 193,column 31,is_stmt,isa 0
           MVK     .L2     0x3,B4            ; |193| 
           STW     .D2T2   B4,*+SP(40)
           STW     .D2T1   A31,*+SP(56)
           LDW     .D2T2   *+SP(56),B4
           ADD     .L1     A3,A4,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 194,column 25,is_stmt,isa 0
           LDDW    .D1T1   *A12++,A11:A10    ; |194| 
           NOP             1
$C$DW$L$VLIB_homographyDecomposition_d$51$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L15:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 193,column 31,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$52$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g32:
;** 194	-----------------------    U$197 = *U$196++;
;** 194	-----------------------    U$149 = *U$148++;
;** 194	-----------------------    if ( ABS(U$149-U$197) <= U$131 ) goto g34;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 194,column 25,is_stmt,isa 0
           LDDW    .D2T2   *B4++,B13:B12     ; |194| 
           STW     .D2T2   B4,*+SP(56)       ; |194| 
           NOP             3
           FSUBDP  .L2X    B13:B12,A11:A10,B5:B4 ; |194| 
           NOP             2
           ABSDP   .S2     B5:B4,B5:B4       ; |194| 
           NOP             1
           CMPGTDP .S2     B5:B4,B11:B10,B0  ; |194| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 195,column 29,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |195| 

   [!B0]   BNOP    .S1     $C$L16,1          ; |194| 
|| [!B0]   LDW     .D2T2   *+SP(40),B4

$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("printf")
	.dwattr $C$DW$181, DW_AT_TI_call
   [ B0]   CALL    .S1     printf            ; |195| 
   [ B0]   MVKL    .S1     $C$SL8+0,A3
   [ B0]   MVKH    .S1     $C$SL8+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 193,column 31,is_stmt,isa 0
   [!B0]   SUB     .L1X    B4,1,A0           ; |193| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 194,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |194| 
$C$DW$L$VLIB_homographyDecomposition_d$52$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$53$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 195	-----------------------    printf((const char *)"#######[CN-REF][%d]Translation Matrix FAILED\n", n);
;** 196	-----------------------    printf((const char *)"#######%.15g, %.15g\n", U$149, U$197);
;** 197	-----------------------    status_nat_vs_ref = 0;
;** 198	-----------------------    err_flag = 1;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 195,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |195| 

           STW     .D2T1   A3,*+SP(4)        ; |195| 
||         ADDKPC  .S2     $C$RL29,B3,0      ; |195| 

$C$RL29:   ; CALL OCCURS {printf} {0}        ; |195| 
$C$DW$L$VLIB_homographyDecomposition_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$54$B:
;          EXCLUSIVE CPU CYCLES: 8

           MVKL    .S2     $C$SL3+0,B4
||         STDW    .D2T2   B13:B12,*+SP(8)   ; |196| 

           MVKH    .S2     $C$SL3+0,B4
||         STDW    .D2T1   A11:A10,*+SP(16)  ; |196| 

$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("printf")
	.dwattr $C$DW$182, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |196| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 196,column 29,is_stmt,isa 0
$C$RL30:   ; CALL OCCURS {printf} {0}        ; |196| 
$C$DW$L$VLIB_homographyDecomposition_d$54$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$55$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(40),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 197,column 29,is_stmt,isa 0
           ZERO    .L1     A15               ; |197| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 198,column 29,is_stmt,isa 0
           MVK     .L1     0x1,A1            ; |198| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 193,column 31,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |193| 
$C$DW$L$VLIB_homographyDecomposition_d$55$E:
;** --------------------------------------------------------------------------*
$C$L16:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 194,column 25,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$56$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g34:
;** 193	-----------------------    if ( L$7 = L$7-1 ) goto g32;

   [ A0]   B       .S1     $C$L15            ; |193| 
||         SUB     .L2     B4,1,B4           ; |193| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 193,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(40)       ; |193| 
   [ A0]   LDW     .D2T2   *+SP(56),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 194,column 25,is_stmt,isa 0
   [ A0]   LDDW    .D1T1   *A12++,A11:A10    ; |194| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 193,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |193| 
$C$DW$L$VLIB_homographyDecomposition_d$56$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$57$B:
;**  	-----------------------    U$158 = proj_cn;
$C$DW$L$VLIB_homographyDecomposition_d$57$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$58$B:
;          EXCLUSIVE CPU CYCLES: 10
;**  	-----------------------    U$204 = U$176+U$194;
;** 202	-----------------------    L$8 = 3;
;**  	-----------------------    #pragma MUST_ITERATE(3, 3, 3)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           LDW     .D2T1   *+SP(84),A31
           LDW     .D2T1   *+SP(48),A4
           LDW     .D2T1   *+SP(52),A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 202,column 31,is_stmt,isa 0
           MVK     .L2     0x3,B4            ; |202| 
           STW     .D2T2   B4,*+SP(40)
           STW     .D2T1   A31,*+SP(48)
           LDW     .D2T2   *+SP(48),B4
           ADD     .L1     A4,A3,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 203,column 25,is_stmt,isa 0
           LDDW    .D1T1   *A12++,A11:A10    ; |203| 
           NOP             1
$C$DW$L$VLIB_homographyDecomposition_d$58$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains control code
;*----------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 202,column 31,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$59$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g36:
;** 203	-----------------------    U$205 = *U$204++;
;** 203	-----------------------    U$159 = *U$158++;
;** 203	-----------------------    if ( ABS(U$159-U$205) <= U$131 ) goto g38;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 203,column 25,is_stmt,isa 0
           LDDW    .D2T2   *B4++,B13:B12     ; |203| 
           STW     .D2T2   B4,*+SP(48)       ; |203| 
           NOP             3
           FSUBDP  .L2X    B13:B12,A11:A10,B5:B4 ; |203| 
           NOP             2
           ABSDP   .S2     B5:B4,B5:B4       ; |203| 
           NOP             1
           CMPGTDP .S2     B5:B4,B11:B10,B0  ; |203| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 204,column 29,is_stmt,isa 0
           LDW     .D2T2   *+SP(80),B4       ; |204| 

   [!B0]   BNOP    .S1     $C$L18,1          ; |203| 
|| [!B0]   LDW     .D2T2   *+SP(40),B4

$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("printf")
	.dwattr $C$DW$183, DW_AT_TI_call
   [ B0]   CALL    .S1     printf            ; |204| 
   [ B0]   MVKL    .S1     $C$SL9+0,A3
   [ B0]   MVKH    .S1     $C$SL9+0,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 202,column 31,is_stmt,isa 0
   [!B0]   SUB     .L1X    B4,1,A0           ; |202| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 203,column 25,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |203| 
$C$DW$L$VLIB_homographyDecomposition_d$59$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$60$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 204	-----------------------    printf((const char *)"#######[CN-REF][%d]Projection Matrix FAILED\n", n);
;** 205	-----------------------    printf((const char *)"#######%.15g, %.15g\n", U$159, U$205);
;** 206	-----------------------    status_nat_vs_ref = 0;
;** 207	-----------------------    err_flag = 1;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 204,column 29,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |204| 

           STW     .D2T1   A3,*+SP(4)        ; |204| 
||         ADDKPC  .S2     $C$RL31,B3,0      ; |204| 

$C$RL31:   ; CALL OCCURS {printf} {0}        ; |204| 
$C$DW$L$VLIB_homographyDecomposition_d$60$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$61$B:
;          EXCLUSIVE CPU CYCLES: 8

           MVKL    .S2     $C$SL3+0,B4
||         STDW    .D2T2   B13:B12,*+SP(8)   ; |205| 

           MVKH    .S2     $C$SL3+0,B4
||         STDW    .D2T1   A11:A10,*+SP(16)  ; |205| 

$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("printf")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |205| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 205,column 29,is_stmt,isa 0
$C$RL32:   ; CALL OCCURS {printf} {0}        ; |205| 
$C$DW$L$VLIB_homographyDecomposition_d$61$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$62$B:
;          EXCLUSIVE CPU CYCLES: 6
           LDW     .D2T2   *+SP(40),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 206,column 29,is_stmt,isa 0
           ZERO    .L1     A15               ; |206| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 207,column 29,is_stmt,isa 0
           MVK     .L1     0x1,A1            ; |207| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 202,column 31,is_stmt,isa 0
           SUB     .L1X    B4,1,A0           ; |202| 
$C$DW$L$VLIB_homographyDecomposition_d$62$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 203,column 25,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$63$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g38:
;** 202	-----------------------    if ( L$8 = L$8-1 ) goto g36;

   [ A0]   B       .S1     $C$L17            ; |202| 
||         SUB     .L2     B4,1,B4           ; |202| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 202,column 31,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(40)       ; |202| 
   [ A0]   LDW     .D2T2   *+SP(48),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 203,column 25,is_stmt,isa 0
   [ A0]   LDDW    .D1T1   *A12++,A11:A10    ; |203| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 202,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |202| 
$C$DW$L$VLIB_homographyDecomposition_d$63$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$64$B:
;** 215	-----------------------    if ( !err_flag ) goto g41;
$C$DW$L$VLIB_homographyDecomposition_d$64$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 215,column 21,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$65$B:
;          EXCLUSIVE CPU CYCLES: 6

   [!A1]   B       .S1     $C$L20            ; |215| 
|| [ A1]   LDW     .D2T2   *+SP(80),B4       ; |217| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 217,column 25,is_stmt,isa 0
   [ A1]   LDW     .D2T2   *+SP(72),B6       ; |217| 
   [!A1]   LDW     .D2T2   *+SP(36),B4
   [!A1]   LDW     .D2T2   *+SP(80),B5
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("printf")
	.dwattr $C$DW$185, DW_AT_TI_call
   [ A1]   CALL    .S1     printf            ; |217| 
   [ A1]   MVKL    .S2     $C$SL10+0,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 215,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L20}        ; |215| 
$C$DW$L$VLIB_homographyDecomposition_d$65$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$66$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 217	-----------------------    printf((const char *)"[CN-REF][%d]Faugeras Decomposition Failed : [err:%d]\n", n, ++err_cnt_cn);

           STW     .D2T2   B4,*+SP(8)        ; |217| 
||         ADD     .L2     1,B6,B4           ; |217| 
||         MVKH    .S2     $C$SL10+0,B5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 217,column 25,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(12)       ; |217| 
           STW     .D2T2   B4,*+SP(72)       ; |217| 

           STW     .D2T2   B5,*+SP(4)        ; |217| 
||         ADDKPC  .S2     $C$RL33,B3,0      ; |217| 

$C$RL33:   ; CALL OCCURS {printf} {0}        ; |217| 
$C$DW$L$VLIB_homographyDecomposition_d$66$E:
;** --------------------------------------------------------------------------*
$C$L19:    
$C$DW$L$VLIB_homographyDecomposition_d$67$B:
;          EXCLUSIVE CPU CYCLES: 4
           LDW     .D2T2   *+SP(36),B4
           LDW     .D2T2   *+SP(80),B5
           NOP             2
$C$DW$L$VLIB_homographyDecomposition_d$67$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 175,column 17,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$68$B:
;          EXCLUSIVE CPU CYCLES: 13
;**	-----------------------g41:
;** 88	-----------------------    if ( (*U$57).testIterations > (++n) ) goto g6;
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 23,is_stmt,isa 0
           LDHU    .D2T2   *+B4(20),B4       ; |88| 
           ADD     .L2     1,B5,B5           ; |88| 
           STW     .D2T2   B5,*+SP(80)       ; |88| 
           NOP             2

           CMPGT   .L2     B4,B5,B0          ; |88| 
||         LDW     .D2T2   *+SP(36),B4

   [ B0]   BNOP    .S1     $C$L2,3           ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 94,column 17,is_stmt,isa 0
   [ B0]   LDBU    .D2T1   *B4,A4            ; |94| 
   [ B0]   MV      .L2     B4,B7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 88,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L2}         ; |88| 
$C$DW$L$VLIB_homographyDecomposition_d$68$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_homographyDecomposition_d$69$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g42:
;** 228	-----------------------    if ( !LevelOfFeedback ) goto g44;
           LDW     .D2T1   *+SP(116),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 229,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(76),B4       ; |229| 
           NOP             3

   [!A0]   B       .S2     $C$L22            ; |228| 
|| [ A0]   MVKL    .S1     $C$SL11+0,A3

   [!A0]   MVKL    .S1     testPatternString,A3
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("printf")
	.dwattr $C$DW$186, DW_AT_TI_call

   [ A0]   CALL    .S2     printf            ; |229| 
|| [!A0]   MVKH    .S1     testPatternString,A3

   [!A0]   MVKL    .S1     est_test,A4
|| [!A0]   STW     .D2T1   A3,*+SP(8)        ; |239| 
|| [!A0]   MVK     .L1     1,A3              ; |236| 
|| [!A0]   MVKL    .S2     $C$SL13+0,B4

$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("sprintf")
	.dwattr $C$DW$187, DW_AT_TI_call

   [!A0]   CALL    .S2     sprintf           ; |239| 
|| [!A0]   MVKH    .S1     est_test,A4

   [!A0]   STW     .D1T1   A3,*A4            ; |236| 
|| [ A0]   MVKH    .S1     $C$SL11+0,A3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 228,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L22}        ; |228| 
$C$DW$L$VLIB_homographyDecomposition_d$69$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$70$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 229	-----------------------    printf((const char *)"[Faugeras] [C66-CN] error # : %d\n", err_cnt_c6x);
;** 230	-----------------------    printf((const char *)"[Faugeras] [CN-REF] error # : %d\n", err_cnt_cn);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 229,column 17,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(8)        ; |229| 

           STW     .D2T1   A3,*+SP(4)        ; |229| 
||         ADDKPC  .S2     $C$RL34,B3,0      ; |229| 

$C$RL34:   ; CALL OCCURS {printf} {0}        ; |229| 
$C$DW$L$VLIB_homographyDecomposition_d$70$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$71$B:
;          EXCLUSIVE CPU CYCLES: 16
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 230,column 17,is_stmt,isa 0
           LDW     .D2T2   *+SP(72),B5       ; |230| 
           MVKL    .S2     $C$SL12+0,B4
           MVKH    .S2     $C$SL12+0,B4
           STW     .D2T2   B4,*+SP(4)        ; |230| 
           NOP             1
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("printf")
	.dwattr $C$DW$188, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B5,*+SP(8)        ; |230| 

$C$RL35:   ; CALL OCCURS {printf} {0}        ; |230| 
           MVKL    .S1     testPatternString,A3
           MVKL    .S1     est_test,A4
           MVKH    .S1     testPatternString,A3
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x0c)
	.dwattr $C$DW$189, DW_AT_name("sprintf")
	.dwattr $C$DW$189, DW_AT_TI_call

           STW     .D2T1   A3,*+SP(8)        ; |239| 
||         MVK     .L1     1,A3              ; |236| 
||         MVKH    .S1     est_test,A4
||         CALL    .S2     sprintf           ; |239| 

           STW     .D1T1   A3,*A4            ; |236| 
||         MVKL    .S2     $C$SL13+0,B4

$C$DW$L$VLIB_homographyDecomposition_d$71$E:
;** --------------------------------------------------------------------------*
$C$L22:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 228,column 13,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$72$B:
;          EXCLUSIVE CPU CYCLES: 4
;**	-----------------------g44:
;** 236	-----------------------    est_test = 1;
;** 239	-----------------------    sprintf(K$231, (const char *)"%s generated input | Opt and NatC results compared to ref | \"Num pt\" value is actually the number of times the test was called, so that the value shown is the average cycle count per call", K$106);
;** 241	-----------------------    VLIB_formula_add_test((int)(*U$51).testIterations, 0, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$231, 0);
;** 243	-----------------------    goto g46;
           MVKL    .S1     desc,A4
           MVKH    .S1     desc,A4
           MVKH    .S2     $C$SL13+0,B4

           STW     .D2T2   B4,*+SP(4)        ; |239| 
||         ADDKPC  .S2     $C$RL36,B3,0      ; |239| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 239,column 13,is_stmt,isa 0
$C$RL36:   ; CALL OCCURS {sprintf} {0}       ; |239| 
$C$DW$L$VLIB_homographyDecomposition_d$72$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$73$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 241,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(44),A3       ; |241| 
           CMPEQ   .L1     A14,0,A5          ; |241| 
           CMPEQ   .L2X    A15,0,B4          ; |241| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |241| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         LDHU    .D1T1   *+A3(20),A4       ; |241| 
||         OR      .L2X    B4,A5,B6          ; |241| 
||         ZERO    .D2     B4                ; |241| 
||         MVKH    .S1     desc,A8
||         ZERO    .L1     A6                ; |241| 

$C$RL37:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |241| 
$C$DW$L$VLIB_homographyDecomposition_d$73$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$74$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 243,column 9,is_stmt,isa 0
           B       .S1     $C$L24            ; |243| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 250,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 250 | align_free(proj_cn);                                                   
;----------------------------------------------------------------------
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("free")
	.dwattr $C$DW$191, DW_AT_TI_call
           CALL    .S1     free              ; |250| 
           LDW     .D2T1   *+SP(84),A4       ; |250| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 243,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L24}          ; |243| 
$C$DW$L$VLIB_homographyDecomposition_d$74$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 72,column 9,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$75$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g45:
;** 245	-----------------------    sprintf(K$231, (const char *)"Test iterations= %d", (int)(*(U$50+v$1)).testIterations);
;** 246	-----------------------    VLIB_skip_test(K$231);
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

           CALL    .S1     sprintf           ; |245| 
||         LDHU    .D2T2   *+B4(20),B4       ; |245| 
||         MVKL    .S2     $C$SL14+0,B5

           MVKL    .S1     desc,A4
           MVKH    .S2     $C$SL14+0,B5
           MVKH    .S1     desc,A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 245,column 13,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |245| 

           STW     .D2T2   B4,*+SP(8)        ; |245| 
||         ADDKPC  .S2     $C$RL38,B3,0      ; |245| 

$C$RL38:   ; CALL OCCURS {sprintf} {0}       ; |245| 
$C$DW$L$VLIB_homographyDecomposition_d$75$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$76$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$193, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 246,column 13,is_stmt,isa 0
$C$RL39:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |246| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 250,column 9,is_stmt,isa 0
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("free")
	.dwattr $C$DW$194, DW_AT_TI_call
           CALL    .S1     free              ; |250| 
           LDW     .D2T1   *+SP(84),A4       ; |250| 
           NOP             3
$C$DW$L$VLIB_homographyDecomposition_d$76$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 243,column 9,is_stmt,isa 0
$C$DW$L$VLIB_homographyDecomposition_d$77$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g46:
;** 250	-----------------------    free((void *)proj_cn);
;** 251	-----------------------    free((void *)trans_cn);
;** 252	-----------------------    free((void *)pRot_cn);
;** 253	-----------------------    VLIB_align_free((void *)proj);
;** 254	-----------------------    VLIB_align_free((void *)trans);
;** 255	-----------------------    VLIB_align_free((void *)pRot);
;** 256	-----------------------    VLIB_align_free((void *)pA);
;** 56	-----------------------    U$50 += 32;
;** 56	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 250,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL40,B3,0      ; |250| 
$C$RL40:   ; CALL OCCURS {free} {0}          ; |250| 
$C$DW$L$VLIB_homographyDecomposition_d$77$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$78$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("free")
	.dwattr $C$DW$195, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(88),A4       ; |251| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 251,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 251 | align_free(trans_cn);                                                  
;----------------------------------------------------------------------
$C$RL41:   ; CALL OCCURS {free} {0}          ; |251| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("free")
	.dwattr $C$DW$196, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(92),A4       ; |252| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 252,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 252 | align_free(pRot_cn);                                                   
;----------------------------------------------------------------------
$C$RL42:   ; CALL OCCURS {free} {0}          ; |252| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$197, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(96),A4       ; |253| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 253,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 253 | VLIB_align_free(proj);                                                 
;----------------------------------------------------------------------
$C$RL43:   ; CALL OCCURS {VLIB_align_free} {0}  ; |253| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$198, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(100),A4      ; |254| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 254,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 254 | VLIB_align_free(trans);                                                
;----------------------------------------------------------------------
$C$RL44:   ; CALL OCCURS {VLIB_align_free} {0}  ; |254| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$199, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(104),A4      ; |255| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 255,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 255 | VLIB_align_free(pRot);                                                 
;----------------------------------------------------------------------
$C$RL45:   ; CALL OCCURS {VLIB_align_free} {0}  ; |255| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$200, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(108),A4      ; |256| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 256,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 256 | VLIB_align_free(pA);                                                   
;----------------------------------------------------------------------
$C$RL46:   ; CALL OCCURS {VLIB_align_free} {0}  ; |256| 
$C$DW$L$VLIB_homographyDecomposition_d$78$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_homographyDecomposition_d$79$B:
;          EXCLUSIVE CPU CYCLES: 14

           MVKL    .S1     test_cases,A3
||         LDW     .D2T2   *+SP(112),B4

           MVKH    .S1     test_cases,A3
||         LDW     .D2T2   *+SP(32),B5       ; |56| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 56,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |56| 
           NOP             2
           ADD     .L2     1,B4,B4           ; |56| 

           ADDK    .S2     32,B5             ; |56| 
||         STW     .D2T2   B4,*+SP(112)      ; |56| 

           CMPGT   .L2X    A3,B4,B0          ; |56| 
||         STW     .D2T2   B5,*+SP(32)       ; |56| 

   [ B0]   BNOP    .S1     $C$L1,5           ; |56| 
           ; BRANCHCC OCCURS {$C$L1}         ; |56| 
$C$DW$L$VLIB_homographyDecomposition_d$79$E:
;** --------------------------------------------------------------------------*
$C$L25:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g47:
;** 260	-----------------------    VLIB_profile_cycle_report(1, NULL, "1 homography matrix");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [18]
;** 168	-----------------------    VLIB_stack_memory();  // [18]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL15+0,A6
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$201, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL15+0,A6
||         MVK     .L1     0x1,A4            ; |260| 
||         ZERO    .L2     B4                ; |260| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 260,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 260 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 261 |                           NULL,                                        
; 262 |                           "1 homography matrix");                      
; 265 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL47:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |260| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL16+0,B4
           MVKH    .S2     $C$SL16+0,B4
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("printf")
	.dwattr $C$DW$202, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL48:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$203, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL49:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c",line 266,column 1,is_stmt,isa 0
           ADDK    .S2     128,SP            ; |266| 
	.dwcfi	cfa_offset, 56
           LDW     .D2T2   *++SP(8),B3
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |266| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$205	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$205, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L1:1:1443280247")
	.dwattr $C$DW$205, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$205, DW_AT_TI_begin_line(0x38)
	.dwattr $C$DW$205, DW_AT_TI_end_line(0x101)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$5$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$5$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$75$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$75$E)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$70$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$70$E)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$9$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$9$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$6$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$6$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$7$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$7$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$8$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$8$E)
$C$DW$213	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$69$B)
	.dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$69$E)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$71$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$71$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$72$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$72$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$73$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$73$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$74$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$74$E)
$C$DW$218	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$218, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$76$B)
	.dwattr $C$DW$218, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$76$E)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$77$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$77$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$78$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$78$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$79$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$79$E)

$C$DW$222	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$222, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L2:2:1443280247")
	.dwattr $C$DW$222, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$222, DW_AT_TI_begin_line(0x58)
	.dwattr $C$DW$222, DW_AT_TI_end_line(0xdc)
$C$DW$223	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$223, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$10$B)
	.dwattr $C$DW$223, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$10$E)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$66$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$66$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$11$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$11$E)
$C$DW$226	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$226, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$12$B)
	.dwattr $C$DW$226, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$12$E)
$C$DW$227	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$227, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$13$B)
	.dwattr $C$DW$227, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$13$E)
$C$DW$228	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$228, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$14$B)
	.dwattr $C$DW$228, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$14$E)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$23$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$23$E)
$C$DW$230	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$230, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$24$B)
	.dwattr $C$DW$230, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$24$E)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$30$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$30$E)
$C$DW$232	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$232, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$31$B)
	.dwattr $C$DW$232, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$31$E)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$37$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$37$E)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$38$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$38$E)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$39$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$39$E)
$C$DW$236	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$236, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$40$B)
	.dwattr $C$DW$236, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$40$E)
$C$DW$237	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$237, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$41$B)
	.dwattr $C$DW$237, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$41$E)
$C$DW$238	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$238, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$50$B)
	.dwattr $C$DW$238, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$50$E)
$C$DW$239	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$239, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$51$B)
	.dwattr $C$DW$239, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$51$E)
$C$DW$240	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$240, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$57$B)
	.dwattr $C$DW$240, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$57$E)
$C$DW$241	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$241, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$58$B)
	.dwattr $C$DW$241, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$58$E)
$C$DW$242	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$242, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$64$B)
	.dwattr $C$DW$242, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$64$E)
$C$DW$243	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$243, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$65$B)
	.dwattr $C$DW$243, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$65$E)
$C$DW$244	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$244, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$67$B)
	.dwattr $C$DW$244, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$67$E)
$C$DW$245	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$245, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$68$B)
	.dwattr $C$DW$245, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$68$E)

$C$DW$246	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$246, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L4:3:1443280247")
	.dwattr $C$DW$246, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$246, DW_AT_TI_begin_line(0x88)
	.dwattr $C$DW$246, DW_AT_TI_end_line(0x91)
$C$DW$247	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$247, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$15$B)
	.dwattr $C$DW$247, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$15$E)
$C$DW$248	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$248, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$21$B)
	.dwattr $C$DW$248, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$21$E)
$C$DW$249	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$249, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$22$B)
	.dwattr $C$DW$249, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$22$E)

$C$DW$250	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$250, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L5:4:1443280247")
	.dwattr $C$DW$250, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$250, DW_AT_TI_begin_line(0x89)
	.dwattr $C$DW$250, DW_AT_TI_end_line(0x90)
$C$DW$251	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$251, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$16$B)
	.dwattr $C$DW$251, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$16$E)
$C$DW$252	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$252, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$17$B)
	.dwattr $C$DW$252, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$17$E)
$C$DW$253	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$253, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$18$B)
	.dwattr $C$DW$253, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$18$E)
$C$DW$254	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$254, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$19$B)
	.dwattr $C$DW$254, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$19$E)
$C$DW$255	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$255, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$20$B)
	.dwattr $C$DW$255, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$20$E)
	.dwendtag $C$DW$250

	.dwendtag $C$DW$246


$C$DW$256	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$256, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L7:3:1443280247")
	.dwattr $C$DW$256, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$256, DW_AT_TI_begin_line(0x93)
	.dwattr $C$DW$256, DW_AT_TI_end_line(0x9a)
$C$DW$257	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$257, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$25$B)
	.dwattr $C$DW$257, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$25$E)
$C$DW$258	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$258, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$26$B)
	.dwattr $C$DW$258, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$26$E)
$C$DW$259	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$259, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$27$B)
	.dwattr $C$DW$259, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$27$E)
$C$DW$260	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$260, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$28$B)
	.dwattr $C$DW$260, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$28$E)
$C$DW$261	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$261, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$29$B)
	.dwattr $C$DW$261, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$29$E)
	.dwendtag $C$DW$256


$C$DW$262	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$262, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L9:3:1443280247")
	.dwattr $C$DW$262, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$262, DW_AT_TI_begin_line(0x9c)
	.dwattr $C$DW$262, DW_AT_TI_end_line(0xa3)
$C$DW$263	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$263, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$32$B)
	.dwattr $C$DW$263, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$32$E)
$C$DW$264	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$264, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$33$B)
	.dwattr $C$DW$264, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$33$E)
$C$DW$265	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$265, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$34$B)
	.dwattr $C$DW$265, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$34$E)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$35$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$35$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$36$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$36$E)
	.dwendtag $C$DW$262


$C$DW$268	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$268, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L12:3:1443280247")
	.dwattr $C$DW$268, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$268, DW_AT_TI_begin_line(0xb5)
	.dwattr $C$DW$268, DW_AT_TI_end_line(0xbf)
$C$DW$269	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$269, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$42$B)
	.dwattr $C$DW$269, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$42$E)
$C$DW$270	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$270, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$48$B)
	.dwattr $C$DW$270, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$48$E)
$C$DW$271	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$271, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$49$B)
	.dwattr $C$DW$271, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$49$E)

$C$DW$272	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$272, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L13:4:1443280247")
	.dwattr $C$DW$272, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$272, DW_AT_TI_begin_line(0xb6)
	.dwattr $C$DW$272, DW_AT_TI_end_line(0xbe)
$C$DW$273	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$273, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$43$B)
	.dwattr $C$DW$273, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$43$E)
$C$DW$274	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$274, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$44$B)
	.dwattr $C$DW$274, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$44$E)
$C$DW$275	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$275, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$45$B)
	.dwattr $C$DW$275, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$45$E)
$C$DW$276	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$276, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$46$B)
	.dwattr $C$DW$276, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$46$E)
$C$DW$277	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$277, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$47$B)
	.dwattr $C$DW$277, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$47$E)
	.dwendtag $C$DW$272

	.dwendtag $C$DW$268


$C$DW$278	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$278, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L15:3:1443280247")
	.dwattr $C$DW$278, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$278, DW_AT_TI_begin_line(0xc1)
	.dwattr $C$DW$278, DW_AT_TI_end_line(0xc8)
$C$DW$279	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$279, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$52$B)
	.dwattr $C$DW$279, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$52$E)
$C$DW$280	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$280, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$53$B)
	.dwattr $C$DW$280, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$53$E)
$C$DW$281	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$281, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$54$B)
	.dwattr $C$DW$281, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$54$E)
$C$DW$282	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$282, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$55$B)
	.dwattr $C$DW$282, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$55$E)
$C$DW$283	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$283, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$56$B)
	.dwattr $C$DW$283, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$56$E)
	.dwendtag $C$DW$278


$C$DW$284	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$284, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.se66:$C$L17:3:1443280247")
	.dwattr $C$DW$284, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$284, DW_AT_TI_begin_line(0xca)
	.dwattr $C$DW$284, DW_AT_TI_end_line(0xd1)
$C$DW$285	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$285, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$59$B)
	.dwattr $C$DW$285, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$59$E)
$C$DW$286	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$286, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$60$B)
	.dwattr $C$DW$286, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$60$E)
$C$DW$287	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$287, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$61$B)
	.dwattr $C$DW$287, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$61$E)
$C$DW$288	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$288, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$62$B)
	.dwattr $C$DW$288, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$62$E)
$C$DW$289	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$289, DW_AT_low_pc($C$DW$L$VLIB_homographyDecomposition_d$63$B)
	.dwattr $C$DW$289, DW_AT_high_pc($C$DW$L$VLIB_homographyDecomposition_d$63$E)
	.dwendtag $C$DW$284

	.dwendtag $C$DW$222

	.dwendtag $C$DW$205

	.dwattr $C$DW$77, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_homographyDecomposition/VLIB_homographyDecomposition_d.c")
	.dwattr $C$DW$77, DW_AT_TI_end_line(0x10a)
	.dwattr $C$DW$77, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$77

;; Inlined function references:
;; [ 15] VLIB_profile_start
;; [ 16] VLIB_profile_stop
;; [ 18] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_homographyDecomposition",0
$C$SL2:	.string	"#######[C66-CN][%d]Rotation Matrix FAILED",10,0
$C$SL3:	.string	"#######%.15g, %.15g",10,0
$C$SL4:	.string	"#######[C66-CN][%d]Translation Matrix FAILED",10,0
$C$SL5:	.string	"#######[C66-CN][%d]Projection Matrix FAILED",10,0
$C$SL6:	.string	"[C66-CN][%d]Faugeras Decomposition Failed : [err:%d]",10,0
$C$SL7:	.string	"#######[CN-REF][%d]Rotation Matrix FAILED",10,0
$C$SL8:	.string	"#######[CN-REF][%d]Translation Matrix FAILED",10,0
$C$SL9:	.string	"#######[CN-REF][%d]Projection Matrix FAILED",10,0
$C$SL10:	.string	"[CN-REF][%d]Faugeras Decomposition Failed : [err:%d]",10,0
$C$SL11:	.string	"[Faugeras] [C66-CN] error # : %d",10,0
$C$SL12:	.string	"[Faugeras] [CN-REF] error # : %d",10,0
$C$SL13:	.string	"%s generated input | Opt and NatC results compared to ref |"
	.string	" ",34,"Num pt",34," value is actually the number of times t"
	.string	"he test was called, so that the value shown is the average "
	.string	"cycle count per call",0
$C$SL14:	.string	"Test iterations= %d",0
$C$SL15:	.string	"1 homography matrix",0
$C$SL16:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	free
	.global	memalign
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_memalign
	.global	VLIB_align_free
	.global	VLIB_homographyDecomposition
	.global	VLIB_homographyDecomposition_cn
	.global	homographyDecomposition_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$40	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x04)
$C$DW$290	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$290, DW_AT_decl_column(0x05)
$C$DW$291	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$291, DW_AT_decl_column(0x05)
$C$DW$292	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$292, DW_AT_decl_column(0x05)
$C$DW$293	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$293, DW_AT_decl_column(0x05)
$C$DW$294	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$294, DW_AT_decl_column(0x05)
$C$DW$295	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$295, DW_AT_decl_column(0x05)
$C$DW$296	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$296, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x80)
	.dwattr $C$DW$296, DW_AT_decl_column(0x05)
$C$DW$297	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$297, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0x81)
	.dwattr $C$DW$297, DW_AT_decl_column(0x05)
$C$DW$298	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$298, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0x82)
	.dwattr $C$DW$298, DW_AT_decl_column(0x05)
$C$DW$299	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$299, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0x83)
	.dwattr $C$DW$299, DW_AT_decl_column(0x05)
$C$DW$300	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$300, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0x84)
	.dwattr $C$DW$300, DW_AT_decl_column(0x05)
$C$DW$301	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$301, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x85)
	.dwattr $C$DW$301, DW_AT_decl_column(0x05)
$C$DW$302	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$302, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x86)
	.dwattr $C$DW$302, DW_AT_decl_column(0x05)
$C$DW$303	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$303, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x87)
	.dwattr $C$DW$303, DW_AT_decl_column(0x05)
$C$DW$304	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$304, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x88)
	.dwattr $C$DW$304, DW_AT_decl_column(0x05)
$C$DW$305	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$305, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x89)
	.dwattr $C$DW$305, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x0e)
$C$DW$T$41	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x03)

$C$DW$T$42	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x04)
$C$DW$306	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$306, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$306, DW_AT_decl_column(0x05)
$C$DW$307	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$307, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$307, DW_AT_decl_column(0x05)
$C$DW$308	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$308, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$308, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x06)

$C$DW$T$43	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x04)
$C$DW$309	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$309, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x72)
	.dwattr $C$DW$309, DW_AT_decl_column(0x05)
$C$DW$310	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$310, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x73)
	.dwattr $C$DW$310, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\../common/VLIB_test.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x06)

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x20)
$C$DW$311	.dwtag  DW_TAG_member
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$311, DW_AT_name("testPattern")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$311, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x29)
	.dwattr $C$DW$311, DW_AT_decl_column(0x0f)
$C$DW$312	.dwtag  DW_TAG_member
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$312, DW_AT_name("staticInH")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("staticInH")
	.dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$312, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$312, DW_AT_decl_column(0x0f)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$313, DW_AT_name("staticOutRot")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("staticOutRot")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$313, DW_AT_decl_column(0x0f)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$314, DW_AT_name("staticOutTr")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("staticOutTr")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$314, DW_AT_decl_column(0x0f)
$C$DW$315	.dwtag  DW_TAG_member
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$315, DW_AT_name("staticOutPr")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("staticOutPr")
	.dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$315, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$315, DW_AT_decl_column(0x0f)
$C$DW$316	.dwtag  DW_TAG_member
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$316, DW_AT_name("testIterations")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("testIterations")
	.dwattr $C$DW$316, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$316, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$316, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$316, DW_AT_decl_column(0x0f)
$C$DW$317	.dwtag  DW_TAG_member
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$317, DW_AT_name("testErrorThreshold")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("testErrorThreshold")
	.dwattr $C$DW$317, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$317, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$317, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$317, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$23

	.dwattr $C$DW$T$23, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x28)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x10)
$C$DW$T$44	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$44, DW_AT_address_class(0x20)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("homographyDecomposition_testParams_t")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x03)
$C$DW$T$47	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$47, DW_AT_address_class(0x20)
$C$DW$T$48	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$T$48, DW_AT_address_class(0x20)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x48)
$C$DW$318	.dwtag  DW_TAG_member
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$318, DW_AT_name("H")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("H")
	.dwattr $C$DW$318, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$318, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$318, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x25)
	.dwattr $C$DW$318, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x24)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("H3x3_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\VLIB_homographyDecomposition_idat.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x26)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x03)
$C$DW$T$50	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$T$50, DW_AT_address_class(0x20)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x18)
$C$DW$319	.dwtag  DW_TAG_member
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$319, DW_AT_name("fd")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$319, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$319, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$319, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x49)
	.dwattr $C$DW$319, DW_AT_decl_column(0x0b)
$C$DW$320	.dwtag  DW_TAG_member
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$320, DW_AT_name("buf")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$320, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$320, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$320, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$320, DW_AT_decl_column(0x16)
$C$DW$321	.dwtag  DW_TAG_member
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$321, DW_AT_name("pos")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$321, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$321, DW_AT_decl_column(0x16)
$C$DW$322	.dwtag  DW_TAG_member
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$322, DW_AT_name("bufend")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$322, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$322, DW_AT_decl_column(0x16)
$C$DW$323	.dwtag  DW_TAG_member
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$323, DW_AT_name("buff_stop")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$323, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$323, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$323, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$323, DW_AT_decl_column(0x16)
$C$DW$324	.dwtag  DW_TAG_member
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$324, DW_AT_name("flags")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$324, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$324, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$324, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$324, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x03)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x08)
$C$DW$325	.dwtag  DW_TAG_member
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$325, DW_AT_name("quot")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$325, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$325, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$325, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$325, DW_AT_decl_column(0x16)
$C$DW$326	.dwtag  DW_TAG_member
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$326, DW_AT_name("rem")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$326, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$326, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$326, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$326, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$326, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x23)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$327	.dwtag  DW_TAG_member
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$327, DW_AT_name("quot")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$327, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$327, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$327, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$327, DW_AT_decl_line(0x40)
	.dwattr $C$DW$327, DW_AT_decl_column(0x17)
$C$DW$328	.dwtag  DW_TAG_member
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$328, DW_AT_name("rem")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$328, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$328, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$328, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$328, DW_AT_decl_line(0x40)
	.dwattr $C$DW$328, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x24)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x10)
$C$DW$329	.dwtag  DW_TAG_member
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$329, DW_AT_name("quot")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$329, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$329, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$329, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$329, DW_AT_decl_line(0x43)
	.dwattr $C$DW$329, DW_AT_decl_column(0x1c)
$C$DW$330	.dwtag  DW_TAG_member
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$330, DW_AT_name("rem")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$330, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$330, DW_AT_decl_line(0x43)
	.dwattr $C$DW$330, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$55	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$55, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$55, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x29)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x24)
$C$DW$331	.dwtag  DW_TAG_member
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$331, DW_AT_name("area")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$331, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$331, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$331, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$331, DW_AT_decl_line(0x69)
	.dwattr $C$DW$331, DW_AT_decl_column(0x0d)
$C$DW$332	.dwtag  DW_TAG_member
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$332, DW_AT_name("xsum")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$332, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$332, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$332, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$332, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$332, DW_AT_decl_column(0x0d)
$C$DW$333	.dwtag  DW_TAG_member
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$333, DW_AT_name("ysum")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$333, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$333, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$333, DW_AT_decl_column(0x0d)
$C$DW$334	.dwtag  DW_TAG_member
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$334, DW_AT_name("xmin")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$334, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$334, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$334, DW_AT_decl_column(0x0d)
$C$DW$335	.dwtag  DW_TAG_member
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$335, DW_AT_name("ymin")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$335, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$335, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$335, DW_AT_decl_column(0x0d)
$C$DW$336	.dwtag  DW_TAG_member
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$336, DW_AT_name("xmax")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$336, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$336, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$336, DW_AT_decl_column(0x0d)
$C$DW$337	.dwtag  DW_TAG_member
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$337, DW_AT_name("ymax")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$337, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$337, DW_AT_decl_line(0x70)
	.dwattr $C$DW$337, DW_AT_decl_column(0x0d)
$C$DW$338	.dwtag  DW_TAG_member
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$338, DW_AT_name("seedx")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$338, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$338, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$338, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$338, DW_AT_decl_line(0x72)
	.dwattr $C$DW$338, DW_AT_decl_column(0x0d)
$C$DW$339	.dwtag  DW_TAG_member
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$339, DW_AT_name("seedy")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$339, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$339, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$339, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$339, DW_AT_decl_line(0x73)
	.dwattr $C$DW$339, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x10)
$C$DW$T$56	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x03)

$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x10)
$C$DW$340	.dwtag  DW_TAG_member
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$340, DW_AT_name("daylight")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$340, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$340, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$340, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$340, DW_AT_decl_line(0x52)
	.dwattr $C$DW$340, DW_AT_decl_column(0x0b)
$C$DW$341	.dwtag  DW_TAG_member
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$341, DW_AT_name("timezone")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$341, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$341, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$341, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$341, DW_AT_decl_line(0x53)
	.dwattr $C$DW$341, DW_AT_decl_column(0x0b)
$C$DW$342	.dwtag  DW_TAG_member
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$342, DW_AT_name("tzname")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$342, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$342, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$342, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$342, DW_AT_decl_line(0x54)
	.dwattr $C$DW$342, DW_AT_decl_column(0x0b)
$C$DW$343	.dwtag  DW_TAG_member
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$343, DW_AT_name("dstname")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$343, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$343, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$343, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$343, DW_AT_decl_line(0x55)
	.dwattr $C$DW$343, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x01)
$C$DW$T$57	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$57, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$57, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$57, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$57, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$57, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$58	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$58, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$58, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$58, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$58, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$58, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$85	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$85, DW_AT_address_class(0x20)
$C$DW$T$107	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$107, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$107, DW_AT_decl_column(0x1d)
$C$DW$T$108	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$108, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$108, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$110	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$19)
$C$DW$T$111	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$111, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$111, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$111, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$112	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$112, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$112, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$112, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$112, DW_AT_decl_column(0x1d)
$C$DW$T$113	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$113, DW_AT_type(*$C$DW$T$112)
	.dwattr $C$DW$T$113, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$113, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$113, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$113, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$22	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$22, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$22, DW_AT_decl_column(0x1c)
$C$DW$T$115	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$115, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$115, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$115, DW_AT_decl_column(0x16)
$C$DW$T$114	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$114, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$114, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$114, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$114, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$135	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$135, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$135, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$135, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$135, DW_AT_decl_column(0x0d)
$C$DW$T$32	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x1d)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x11)

$C$DW$T$37	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x10)
$C$DW$344	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$344, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$37

$C$DW$T$81	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$81, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$81, DW_AT_address_class(0x20)
$C$DW$T$130	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$130, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$130, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$130, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$130, DW_AT_decl_column(0x17)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x17)
$C$DW$T$132	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$132, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$132, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$132, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$132, DW_AT_decl_column(0x17)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x17)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x17)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x16)
$C$DW$T$59	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$59, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$59, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$59, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$59, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$59, DW_AT_decl_column(0x19)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x16)
$C$DW$T$73	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$73, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$73, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$73, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$73, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$73, DW_AT_decl_column(0x1c)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x16)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x16)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x16)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x16)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$148	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$148, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$148, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$148, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$148, DW_AT_decl_column(0x21)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$148)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x17)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$148)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x20)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x16)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x21)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x17)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x17)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$160	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$160, DW_AT_address_class(0x20)
$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x20)

$C$DW$T$162	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_byte_size(0x10)
$C$DW$345	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$345, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$162

$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x16)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$161)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x16)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x0f)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$20	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_homographyDecomposition\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$20, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$20, DW_AT_decl_column(0x10)
$C$DW$T$21	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$21, DW_AT_address_class(0x20)

$C$DW$T$24	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$24, DW_AT_byte_size(0x18)
$C$DW$346	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$346, DW_AT_upper_bound(0x02)
	.dwendtag $C$DW$T$24


$C$DW$T$25	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$T$25, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x48)
$C$DW$347	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$347, DW_AT_upper_bound(0x02)
$C$DW$348	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$348, DW_AT_upper_bound(0x02)
	.dwendtag $C$DW$T$25

$C$DW$T$124	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$124, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$124, DW_AT_address_class(0x20)
$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$34	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$34, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$34, DW_AT_name("signed char")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x01)

$C$DW$T$35	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$35, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x04)
$C$DW$349	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$349, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$35

$C$DW$T$64	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$64, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$64, DW_AT_address_class(0x20)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x12)
$C$DW$T$116	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$34)
$C$DW$T$117	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$T$117, DW_AT_address_class(0x20)

$C$DW$T$174	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
$C$DW$350	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$174


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x10)
$C$DW$351	.dwtag  DW_TAG_member
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$351, DW_AT_name("_v")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$351, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$351, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$351, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$351, DW_AT_decl_line(0x44)
	.dwattr $C$DW$351, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$38

	.dwattr $C$DW$T$38, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x01)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x01)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x13)

$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("tm")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x24)
$C$DW$352	.dwtag  DW_TAG_member
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$352, DW_AT_name("tm_sec")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$352, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$352, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$352, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$352, DW_AT_decl_line(0x41)
	.dwattr $C$DW$352, DW_AT_decl_column(0x09)
$C$DW$353	.dwtag  DW_TAG_member
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$353, DW_AT_name("tm_min")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$353, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$353, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$353, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$353, DW_AT_decl_line(0x42)
	.dwattr $C$DW$353, DW_AT_decl_column(0x09)
$C$DW$354	.dwtag  DW_TAG_member
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$354, DW_AT_name("tm_hour")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$354, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$354, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$354, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$354, DW_AT_decl_line(0x43)
	.dwattr $C$DW$354, DW_AT_decl_column(0x09)
$C$DW$355	.dwtag  DW_TAG_member
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$355, DW_AT_name("tm_mday")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$355, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$355, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$355, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$355, DW_AT_decl_line(0x44)
	.dwattr $C$DW$355, DW_AT_decl_column(0x09)
$C$DW$356	.dwtag  DW_TAG_member
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$356, DW_AT_name("tm_mon")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$356, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$356, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$356, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$356, DW_AT_decl_line(0x45)
	.dwattr $C$DW$356, DW_AT_decl_column(0x09)
$C$DW$357	.dwtag  DW_TAG_member
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$357, DW_AT_name("tm_year")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$357, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$357, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$357, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$357, DW_AT_decl_line(0x46)
	.dwattr $C$DW$357, DW_AT_decl_column(0x09)
$C$DW$358	.dwtag  DW_TAG_member
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$358, DW_AT_name("tm_wday")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$358, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$358, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$358, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$358, DW_AT_decl_line(0x47)
	.dwattr $C$DW$358, DW_AT_decl_column(0x09)
$C$DW$359	.dwtag  DW_TAG_member
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$359, DW_AT_name("tm_yday")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$359, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$359, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$359, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$359, DW_AT_decl_line(0x48)
	.dwattr $C$DW$359, DW_AT_decl_column(0x09)
$C$DW$360	.dwtag  DW_TAG_member
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$360, DW_AT_name("tm_isdst")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$360, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$360, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$360, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$360, DW_AT_decl_line(0x49)
	.dwattr $C$DW$360, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

