;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:07:16 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$138)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$24)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$138)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x82)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$85)
	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x86)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x58)
	.dwattr $C$DW$15, DW_AT_decl_column(0x05)

$C$DW$16	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwattr $C$DW$16, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$16, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$16, DW_AT_decl_column(0x06)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$24)
	.dwendtag $C$DW$16


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$19, DW_AT_decl_column(0x06)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$10)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$24)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$19


$C$DW$26	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwattr $C$DW$26, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$26, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$26, DW_AT_decl_column(0x06)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$24)
	.dwendtag $C$DW$26


$C$DW$28	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwattr $C$DW$28, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$28, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$28, DW_AT_decl_column(0x06)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$10)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$24)
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$24)
	.dwendtag $C$DW$28


$C$DW$32	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwattr $C$DW$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$32, DW_AT_decl_line(0x80)
	.dwattr $C$DW$32, DW_AT_decl_column(0x06)
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$48)
	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwattr $C$DW$34, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$34, DW_AT_decl_line(0x81)
	.dwattr $C$DW$34, DW_AT_decl_column(0x06)

$C$DW$35	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwattr $C$DW$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$35, DW_AT_decl_line(0x82)
	.dwattr $C$DW$35, DW_AT_decl_column(0x0a)

$C$DW$36	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwattr $C$DW$36, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$36, DW_AT_decl_line(0x83)
	.dwattr $C$DW$36, DW_AT_decl_column(0x06)

$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$19)
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$19)
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$3)
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$3)
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$21)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$21)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$21)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$19)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$24)
	.dwendtag $C$DW$37


$C$DW$47	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("VLIB_memalign")
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwattr $C$DW$47, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$47, DW_AT_decl_line(0xb1)
	.dwattr $C$DW$47, DW_AT_decl_column(0x07)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$85)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$85)
	.dwendtag $C$DW$47


$C$DW$50	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwattr $C$DW$50, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$50, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$50, DW_AT_decl_column(0x07)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$85)
	.dwendtag $C$DW$50


$C$DW$52	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("VLIB_align_free")
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwattr $C$DW$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$52, DW_AT_decl_line(0xb6)
	.dwattr $C$DW$52, DW_AT_decl_column(0x07)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$52


$C$DW$54	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwattr $C$DW$54, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h")
	.dwattr $C$DW$54, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$54, DW_AT_decl_column(0x07)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$54


$C$DW$56	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_afast9_detectCorners")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("VLIB_afast9_detectCorners")
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwattr $C$DW$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66/VLIB_afast9_detectCorners.h")
	.dwattr $C$DW$56, DW_AT_decl_line(0x79)
	.dwattr $C$DW$56, DW_AT_decl_column(0x09)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$130)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$21)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$21)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$48)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$19)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$135)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$127)
	.dwendtag $C$DW$56


$C$DW$64	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_afast9_detectCorners_cn")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("VLIB_afast9_detectCorners_cn")
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
	.dwattr $C$DW$64, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_cn.h")
	.dwattr $C$DW$64, DW_AT_decl_line(0x22)
	.dwattr $C$DW$64, DW_AT_decl_column(0x09)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$129)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$21)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$21)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$48)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$19)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$22)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$64


$C$DW$72	.dwtag  DW_TAG_subprogram, DW_AT_name("afast9_detectCorners_getTestParams")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("afast9_detectCorners_getTestParams")
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
	.dwattr $C$DW$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$72, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$72, DW_AT_decl_column(0x06)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$74)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$107)
	.dwendtag $C$DW$72

$C$DW$75	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
	.dwattr $C$DW$75, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$75, DW_AT_decl_line(0x60)
	.dwattr $C$DW$75, DW_AT_decl_column(0x13)
$C$DW$76	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
	.dwattr $C$DW$76, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$76, DW_AT_decl_line(0x62)
	.dwattr $C$DW$76, DW_AT_decl_column(0x13)
$C$DW$77	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
	.dwattr $C$DW$77, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$77, DW_AT_decl_line(0x63)
	.dwattr $C$DW$77, DW_AT_decl_column(0x13)
$C$DW$78	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$193)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
	.dwattr $C$DW$78, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$78, DW_AT_decl_line(0x64)
	.dwattr $C$DW$78, DW_AT_decl_column(0x13)
$C$DW$79	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
	.dwattr $C$DW$79, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$79, DW_AT_decl_line(0x75)
	.dwattr $C$DW$79, DW_AT_decl_column(0x14)
$C$DW$80	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
	.dwattr $C$DW$80, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$80, DW_AT_decl_line(0x76)
	.dwattr $C$DW$80, DW_AT_decl_column(0x14)
$C$DW$81	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
	.dwattr $C$DW$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$81, DW_AT_decl_line(0x77)
	.dwattr $C$DW$81, DW_AT_decl_column(0x14)
$C$DW$82	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x78)
	.dwattr $C$DW$82, DW_AT_decl_column(0x14)
$C$DW$83	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$185)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwattr $C$DW$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h")
	.dwattr $C$DW$83, DW_AT_decl_line(0x79)
	.dwattr $C$DW$83, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\005882 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\005884 
	.sect	".text"
	.clink
	.global	VLIB_afast9_detectCorners_d

$C$DW$84	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_afast9_detectCorners_d")
	.dwattr $C$DW$84, DW_AT_low_pc(VLIB_afast9_detectCorners_d)
	.dwattr $C$DW$84, DW_AT_high_pc(0x00)
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("VLIB_afast9_detectCorners_d")
	.dwattr $C$DW$84, DW_AT_external
	.dwattr $C$DW$84, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$84, DW_AT_TI_begin_line(0x25)
	.dwattr $C$DW$84, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$84, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$84, DW_AT_decl_line(0x25)
	.dwattr $C$DW$84, DW_AT_decl_column(0x06)
	.dwattr $C$DW$84, DW_AT_TI_max_frame_size(0x70)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 38,column 1,is_stmt,address VLIB_afast9_detectCorners_d,isa 0

	.dwfde $C$DW$CIE, VLIB_afast9_detectCorners_d
$C$DW$85	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$85, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  37 | void VLIB_afast9_detectCorners_d(uint8_t LevelOfFeedback)              
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_afast9_detectCorners_d                                 *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 24 Args + 28 Auto + 56 Save = 108 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_afast9_detectCorners_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 44	-----------------------    afast9_detectCorners_getTestParams(&prm, &test_cases);
;** 47	-----------------------    VLIB_profile_init(3, "VLIB_afast9_detectCorners");
;** 50	-----------------------    if ( test_cases <= 0 ) goto g34;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  39 | int32_t    tpi;  /* test parameter index */                            
;  42 | afast9_detectCorners_testParams_t   *prm;                              
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |38| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |38| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |38| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |38| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |38| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |38| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(64)      ; |38| 
	.dwcfi	cfa_offset, 112
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$86, DW_AT_location[DW_OP_reg22]
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_location[DW_OP_reg4]
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$88, DW_AT_location[DW_OP_regx 0x25]
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$89, DW_AT_location[DW_OP_reg0]
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$90, DW_AT_location[DW_OP_reg26]
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$91, DW_AT_location[DW_OP_reg10]
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$92, DW_AT_location[DW_OP_reg3]
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("$O$f5")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("$O$f5")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_location[DW_OP_reg0]
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("$O$f6")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("$O$f6")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_location[DW_OP_reg0]
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("$O$K18")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("$O$K18")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg3]
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$U15")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$U15")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg13]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$K35")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$K35")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg20]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$K50")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$K50")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg12]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$K54")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$K54")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg20]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$K71")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$K71")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_regx 0x35]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$U72")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$U72")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_regx 0x3a]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$U93")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$U93")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_regx 0x2a]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$K96")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$K96")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_regx 0x29]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$U106")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$U106")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg24]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$K122")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$K122")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$183)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg15]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$U137")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$U137")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$133)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg6]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$U138")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$U138")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg5]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$U136")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$U136")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg22]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$U157")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$U157")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$133)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg5]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$U14")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$U14")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg27]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$K173")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$K173")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg8]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg17]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg4]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg4]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$128)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_breg31 32]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg14]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_breg31 28]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg28]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg12]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("totalFeatureHalfWords")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("totalFeatureHalfWords")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_breg31 36]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("im1")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("im1")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_breg31 40]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("outFeatures")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("outFeatures")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_breg31 44]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("scratch")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("scratch")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_breg31 48]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("outFeatures_cn")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("outFeatures_cn")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 52]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("numFeatures")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("numFeatures")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg29]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("numFeatures_cn")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("numFeatures_cn")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg10]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("row")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("row")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_regx 0x27]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("col")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("col")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_regx 0x26]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$V1")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$V1")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_regx 0x3f]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("$O$U135")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("$O$U135")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$133)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg21]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("$O$U135")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("$O$U135")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$133)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg22]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg20]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_reg21]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_regx 0x40]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg26]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg22]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_reg22]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$138, DW_AT_name("afast9_detectCorners_getTestParams")
	.dwattr $C$DW$138, DW_AT_TI_call

           CALLP   .S2     afast9_detectCorners_getTestParams,B3
||         STW     .D2T1   A4,*+SP(32)       ; |38| 
||         ADDAW   .D1X    SP,7,A4           ; |44| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 44,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  44 | afast9_detectCorners_getTestParams(&prm, &test_cases);                 
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {afast9_detectCorners_getTestParams} {0}  ; |44| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$139, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$139, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x3,A4            ; |47| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 47,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  47 | VLIB_profile_init(3, "VLIB_afast9_detectCorners");                     
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |47| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    K$50 = &testPatternString[0];
;**  	-----------------------    K$54 = 128;
;**  	-----------------------    K$173 = &desc[0];
;**  	-----------------------    U$15 = prm-24;
;**  	-----------------------    K$18 = 0xfffffffau;
;**  	-----------------------    K$35 = 512u;
;**  	-----------------------    U$14 = 0;
;** 50	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(28),A5

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
;  50 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A4            ; |50| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  53 | int32_t    status_nat_vs_int = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Optimized */                                                  
;  54 | int32_t    status_nat_vs_ref = vlib_KERNEL_PASS; /* Test status : Natur
;     | al c vs. Static Reference */                                           
;  57 | uint16_t    totalHalfWordsInRow    = ((prm[tpi].imageWidth  - 2 * 3) &
;     | 0xFFF0U) >> 0x4U;                                                      
;  58 | uint32_t    totalFeatureHalfWords  = totalHalfWordsInRow * (prm[tpi].im
;     | ageHeight - 2 * 3);                                                    
;----------------------------------------------------------------------
           ZERO    .L2     B11               ; |50| 
           ZERO    .L1     A14               ; |50| 
           SUB     .D1     A5,24,A13
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |50| 

   [!A0]   BNOP    .S2     $C$L21,2          ; |50| 
|| [ A0]   ADDK    .S1     24,A13            ; |58| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 61,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  61 | uint8_t    *im1             =  (uint8_t *)  VLIB_malloc(prm[tpi].imageP
;     | itch * prm[tpi].imageHeight);                                          
;----------------------------------------------------------------------
   [ A0]   LDHU    .D1T1   *+A13(16),A3      ; |61| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 58,column 21,is_stmt,isa 0
   [ A0]   LDHU    .D1T1   *+A13(12),A11     ; |58| 
   [ A0]   LDHU    .D1T1   *+A13(14),A10     ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L21}        ; |50| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 10,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 58	-----------------------    C$13 = _extu((*(U$15 += 24)).imageWidth+K$18, 16u, 20u);
;** 58	-----------------------    C$12 = (*U$15).imageHeight;
;** 58	-----------------------    totalFeatureHalfWords = _mpyu(C$12, C$13)+(unsigned)_mpyus(C$13, (-6));
;** 61	-----------------------    im1 = VLIB_malloc((unsigned)((*U$15).imagePitch*C$12));
;** 62	-----------------------    C$11 = totalFeatureHalfWords*2u;
;** 62	-----------------------    outFeatures = VLIB_malloc(C$11);
;** 63	-----------------------    scratch = VLIB_memalign(8u, K$35);
;** 64	-----------------------    outFeatures_cn = malloc(C$11);
;** 69	-----------------------    if ( !((im1 != NULL)&(scratch != NULL)&(outFeatures != NULL)&(outFeatures_cn != NULL)) ) goto g32;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 61,column 21,is_stmt,isa 0
$C$DW$140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$140, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$140, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |61| 
           ADDKPC  .S2     $C$RL2,B3,2       ; |61| 
           MPYU    .M1     A10,A3,A4         ; |61| 
           NOP             1
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |61| 
$C$DW$L$VLIB_afast9_detectCorners_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$5$B:
;          EXCLUSIVE CPU CYCLES: 28
           MVK     .L1     0xfffffffa,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 58,column 21,is_stmt,isa 0
           ADD     .L1     A3,A11,A3         ; |58| 
           EXTU    .S1     A3,16,20,A3       ; |58| 

           STW     .D2T1   A4,*+SP(40)       ; |61| 
||         MPYU    .M1     A10,A3,A4         ; |58| 

           MPYSU   .M2X    -6,A3,B4          ; |58| 
           NOP             1
           ADD     .L2X    B4,A4,B4          ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 62,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  62 | uint16_t   *outFeatures     =  (uint16_t *) VLIB_malloc(totalFeatureHal
;     | fWords * sizeof(uint16_t));                                            
;----------------------------------------------------------------------
           ADD     .L2     B4,B4,B10         ; |62| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 58,column 21,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(36)       ; |58| 
$C$DW$141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$141, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$141, DW_AT_TI_call

           CALLP   .S2     VLIB_malloc,B3
||         MV      .L1X    B10,A4            ; |62| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 62,column 21,is_stmt,isa 0
$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |62| 
           MVK     .S2     0x200,B4
$C$DW$142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$142, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$142, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         STW     .D2T1   A4,*+SP(44)       ; |62| 
||         MVK     .L1     0x8,A4            ; |63| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 63,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  63 | uint8_t    *scratch         =  (uint8_t *)  VLIB_memalign(8, 32 * 16); 
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {VLIB_memalign} {0}  ; |63| 
$C$DW$143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$143, DW_AT_name("malloc")
	.dwattr $C$DW$143, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D2T1   A4,*+SP(48)       ; |63| 
||         MV      .L1X    B10,A4            ; |64| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 64,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  64 | uint16_t   *outFeatures_cn  =  (uint16_t *) malloc(totalFeatureHalfWord
;     | s * sizeof(uint16_t));                                                 
;  65 | uint32_t    numFeatures;                                               
;  66 | uint32_t    numFeatures_cn;                                            
;----------------------------------------------------------------------
$C$RL5:    ; CALL OCCURS {malloc} {0}        ; |64| 
$C$DW$L$VLIB_afast9_detectCorners_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$6$B:
;          EXCLUSIVE CPU CYCLES: 17

           ZERO    .L2     B4                ; |69| 
||         ZERO    .L1     A3                ; |69| 
||         MV      .S1     A4,A2             ; |69| 
||         LDW     .D2T1   *+SP(48),A1       ; |69| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 69,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  69 | if( im1 && scratch && outFeatures && outFeatures_cn ) {                
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(40),A0       ; |69| 
           LDW     .D2T2   *+SP(44),B0       ; |69| 
           ZERO    .L2     B5                ; |69| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 64,column 21,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(52)       ; |64| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 69,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  71 | int32_t    fail;                                                       
;  72 | int32_t    i;                                                          
;----------------------------------------------------------------------
   [ A1]   MVK     .L2     0x1,B4            ; |69| 
   [ A0]   MVK     .L2     0x1,B5            ; |69| 

   [ B0]   MVK     .L1     0x1,A3            ; |69| 
||         AND     .L2     B4,B5,B5          ; |69| 
||         ZERO    .S2     B4                ; |69| 

   [ A2]   MVK     .L2     0x1,B4            ; |69| 
           AND     .L2X    A3,B5,B5          ; |69| 
           AND     .L2     B4,B5,B0          ; |69| 

   [!B0]   B       .S1     $C$L19            ; |69| 
|| [ B0]   LDHU    .D1T1   *+A13(16),A10     ; |75| 
|| [ B0]   MVK     .S2     0x80,B4

   [ B0]   LDW     .D2T1   *+SP(40),A6       ; |75| 
|| [ B0]   LDHU    .D1T2   *+A13(14),B8      ; |75| 
|| [ B0]   MVKL    .S1     testPatternString,A12

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 75,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  75 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
;  76 |                 (uint8_t)128,                                          
;  77 |                 im1, prm[tpi].staticIn,                                
;  78 |                 prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].ima
;     | gePitch,                                                               
;  79 |                 sizeof(uint8_t), testPatternString);                   
;  81 | if( prm[tpi].testPattern == CUSTOM ) {  /* Custom pattern of 3x3 blocks
;     |  to generate most corners*/                                            
;  82 |     uint32_t    row, col;                                              
;  83 |     uint8_t     val = 128;                                             
;  85 |     for( row= 0; row < prm[tpi].imageHeight; row++ ) {                 
;  86 |         for( col=0; col < prm[tpi].imageWidth - 5; col+=6 ) {          
;  87 |             im1[row * prm[tpi].imagePitch + col] = 0;                  
;  88 |             im1[row * prm[tpi].imagePitch + col + 1] = 0;              
;  89 |             im1[row * prm[tpi].imagePitch + col + 2] = 0;              
;  90 |             if((row % 6) < 3 ) {                                       
;  91 |                 im1[row * prm[tpi].imagePitch + col + 3] = 0;          
;  92 |                 im1[row * prm[tpi].imagePitch + col + 4] = 0;          
;  93 |                 im1[row * prm[tpi].imagePitch + col + 5] = 0;          
;  94 |             } else {                                                   
;  95 |                 im1[row * prm[tpi].imagePitch + col + 3] = val;        
;  96 |                 im1[row * prm[tpi].imagePitch + col + 4] = val;        
;  97 |                 im1[row * prm[tpi].imagePitch + col + 5] = val;        
; 104 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 106 | numFeatures = VLIB_afast9_detectCorners(im1,                           
; 107 |                                         prm[tpi].imageWidth,           
; 108 |                                         prm[tpi].imageHeight,          
; 109 |                                         prm[tpi].imagePitch,           
; 110 |                                         prm[tpi].threshold,            
; 111 |                                         outFeatures,                   
; 112 |                                         scratch);                      
; 113 | VLIB_profile_stop();                                                   
; 116 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 117 | numFeatures_cn = VLIB_afast9_detectCorners_cn(im1,                     
; 118 |                                               prm[tpi].imageWidth,     
; 119 |                                               prm[tpi].imageHeight,    
; 120 |                                               prm[tpi].imagePitch,     
; 121 |                                               prm[tpi].threshold,      
; 122 |                                               outFeatures_cn,          
; 123 |                                               scratch);                
; 124 | VLIB_profile_stop();                                                   
; 126 | for( i=0; i < totalFeatureHalfWords; i++ ) {                           
; 127 |     if( outFeatures_cn[i] != outFeatures[i] ) {                        
; 128 |         status_nat_vs_int = vlib_KERNEL_FAIL;                          
; 129 |         if( LevelOfFeedback > 0 ) {                                    
; 130 |             printf(" Mismatch in Index = %u,%x,%x \n", i, outFeatures_c
;     | n[i], outFeatures[i]);                                                 
; 132 |         break;                                                         
; 136 | if( numFeatures != numFeatures_cn ) {                                  
; 137 |     status_nat_vs_int = vlib_KERNEL_FAIL;                              
; 141 | if( prm[tpi].staticOut != NULL ) {                                     
; 142 |     if( numFeatures_cn == numFeatures ) {                              
; 143 |         for( i=0; i < totalFeatureHalfWords; i++ ) {                   
; 144 |             if( outFeatures_cn[i] != prm[tpi].staticOut[i] ) {         
; 145 |                 status_nat_vs_ref = vlib_KERNEL_FAIL;                  
; 146 |                 if( LevelOfFeedback > 0 ) {                            
; 147 |                     printf(" Mismatch in Index = %u \n", i);           
; 149 |                 break;                                                 
; 152 |     } else {                                                           
; 153 |         status_nat_vs_ref = vlib_KERNEL_FAIL;                          
; 158 | fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) ||                     
; 159 |         (status_nat_vs_ref == vlib_KERNEL_FAIL)) ? 1 : 0;              
; 161 | est_test=1;                                                            
; 164 | sprintf(desc, "%s generated input | Opt and NatC results compared | wid
;     | th= %d, height= %d, n_features found= %d, %s",                         
; 165 |         testPatternString, prm[tpi].imageWidth, prm[tpi].imageHeight, n
;     | umFeatures, prm[tpi].desc);                                            
; 167 | VLIB_formula_add_test(totalFeatureHalfWords * 16, prm[tpi].imageHeight
;     | - 6, NULL, fail, desc, NULL);                                          
; 169 | } else {                                                               
;----------------------------------------------------------------------
   [ B0]   LDHU    .D1T1   *+A13(12),A8      ; |75| 
$C$DW$144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$144, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$144, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |75| 
|| [ B0]   LDW     .D1T2   *+A13(4),B6       ; |75| 

   [ B0]   LDBU    .D1T1   *A13,A4           ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 171,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 171 | sprintf(desc, "width= %d, height= %d",                                 
; 172 |         prm[tpi].imageWidth, prm[tpi].imageHeight);                    
; 173 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!B0]   LDHU    .D1T1   *+A13(12),A4      ; |171| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 69,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L19}        ; |69| 
$C$DW$L$VLIB_afast9_detectCorners_d$6$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$7$B:
;          EXCLUSIVE CPU CYCLES: 3
;** 75	-----------------------    VLIB_fillBuffer((*U$15).testPattern, (unsigned char)K$54, (void *)im1, (*U$15).staticIn, (*U$15).imageWidth, (*U$15).imageHeight, (*U$15).imagePitch, 1u, K$50);
;** 81	-----------------------    v$1 = prm;
;**  	-----------------------    K$122 = &cycles[0];
;** 53	-----------------------    status_nat_vs_int = 1;
;** 54	-----------------------    status_nat_vs_ref = 1;
;** 81	-----------------------    if ( (*U$15).testPattern != 5 ) goto g14;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 75,column 13,is_stmt,isa 0
           EXTU    .S2     B4,24,24,B4       ; |75| 
           MVK     .L2     0x1,B10           ; |75| 

           MVKH    .S1     testPatternString,A12
||         ADDKPC  .S2     $C$RL6,B3,0       ; |75| 

$C$RL6:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |75| 
$C$DW$L$VLIB_afast9_detectCorners_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$8$B:
;          EXCLUSIVE CPU CYCLES: 12

           MV      .L2     B10,B12           ; |81| 
||         LDBU    .D1T1   *A13,A3           ; |81| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 81,column 13,is_stmt,isa 0
           MV      .L1X    B10,A12           ; |81| 
           MVKL    .S1     cycles,A15
           LDW     .D2T2   *+SP(28),B27      ; |81| 
           MVKH    .S1     cycles,A15
           CMPEQ   .L1     A3,5,A0           ; |81| 

   [!A0]   BNOP    .S1     $C$L7,3           ; |81| 
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   LDHU    .D1T1   *+A13(14),A0      ; |85| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 85,column 30,is_stmt,isa 0
   [!A1]   MVK     .L1     0x1,A0            ; |85| nullify predicate
   [!A0]   B       .S1     $C$L7             ; |85| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 81,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L7}         ; |81| 
$C$DW$L$VLIB_afast9_detectCorners_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$9$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 85	-----------------------    if ( !(C$10 = (*U$15).imageHeight) ) goto g14;
   [ A0]   LDHU    .D1T2   *+A13(12),B26
   [ A0]   ADD     .L2     B27,B11,B21
   [ A0]   MVK     .S1     0x80,A20
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 85,column 30,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L7}         ; |85| 
$C$DW$L$VLIB_afast9_detectCorners_d$9$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$10$B:
;          EXCLUSIVE CPU CYCLES: 2
;**  	-----------------------    V$1 = (*U$15).imageWidth;
;** 86	-----------------------    L$1 = (unsigned)C$10;
;** 85	-----------------------    row = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4096u)

           ZERO    .L1     A18               ; |85| 
||         ZERO    .S1     A23
||         MV      .D1X    B21,A22
||         CMPEQ   .L2     B26,5,B0          ; |86| 
||         MV      .S2X    A0,B1             ; |86| 
||         ZERO    .D2     B16

           MV      .L2X    A20,B20
||         SUB     .S2     B26,5,B8

$C$DW$L$VLIB_afast9_detectCorners_d$10$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L2
;** --------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 85,column 22,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$11$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g7:
;** 86	-----------------------    if ( (unsigned)V$1 == 5u ) goto g13;

   [ B0]   BNOP    .S1     $C$L6,5           ; |86| 
|| [!B0]   MVK     .L2     0x1,B0            ; init sploopw predicate

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 86,column 33,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |86| 
$C$DW$L$VLIB_afast9_detectCorners_d$11$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 86,column 26,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$12$B:
;**  	-----------------------    K$71 = 0;
;**  	-----------------------    K$96 = K$54;
;**  	-----------------------    U$72 = U$14+v$1;
;**  	-----------------------    U$93 = row-_mpyhlu(_mpyu(row, 43691u)>>2, 6u);
;**  	-----------------------    U$106 = (unsigned)V$1-5u;
;** 86	-----------------------    col = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 10922, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(0u)
;**	-----------------------g9:
;** 87	-----------------------    im1[(int)col+(int)((unsigned)(*U$72).imagePitch*row)] = K$71;
;** 88	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+1] = K$71;
;** 89	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+2] = K$71;
;** 90	-----------------------    if ( U$93 < 3u ) goto g11;
;** 95	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+3] = K$96;
;** 96	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+4] = K$96;
;** 97	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+5] = K$96;
;** 97	-----------------------    goto g12;
;**	-----------------------g11:
;** 91	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+3] = K$71;
;** 92	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+4] = K$71;
;** 93	-----------------------    im1[(unsigned)(*U$72).imagePitch*row+col+5] = K$71;
;**	-----------------------g12:
;** 86	-----------------------    if ( (col += 6u) < U$106 ) goto g9;
$C$DW$L$VLIB_afast9_detectCorners_d$12$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c
;*      Loop source line                 : 86
;*      Loop opening brace source line   : 86
;*      Loop closing brace source line   : 99
;*      Known Minimum Trip Count         : 1                    
;*      Known Maximum Trip Count         : 10922                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 7
;*      Unpartitioned Resource Bound     : 9
;*      Partitioned Resource Bound(*)    : 9
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        1     
;*      .S units                     0        0     
;*      .D units                     9*       9*    
;*      .M units                     5        4     
;*      .X cross paths               1        2     
;*      .T address paths             9*       9*    
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)         10       12     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        1     
;*      Bound(.L .S .D .LS .LSD)     7        8     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 9  Schedule found with 4 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |** ** * *       ********        |    ******      ****** * *      |
;*       1: |** ** * *       ********        |    ******      ******** *      |
;*       2: |** *  * **      ********        |    ******      **********      |
;*       3: |** **** **      ********        |    ******      * ********      |
;*       4: |** *******      ********        |    ******      ******** *      |
;*       5: |** **** **      ********        |*   ******      * ****** *      |
;*       6: |** **** *       ********        |    ** ***      * ****** *      |
;*       7: |** **** *       ********        |    ** ***      * ****** *      |
;*       8: |** ** * *       ********        |    ** ***      ****** * *      |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 3
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 4
;*
;*      Mem bank conflicts/iter(est.) : { min 2.000, est 2.875, max 9.000 }
;*      Mem bank perf. penalty (est.) : 24.2%
;*
;*      Effective ii                : { min 11.00, est 11.88, max 18.00 }
;*
;*
;*      Total cycles (est.)         : 27 + trip_cnt * 9        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MV              A23,B16
;*                  MV              A22,B21
;*                  MV              A20,B20
;*                  MV              A19,B4
;*                  MV              A18,B9
;*                  MV              A17,B19
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C175:
;*   8              LDHU    .D2T1   *+B21(16),A4      ; |88| 
;*   9              LDHU    .D2T2   *+B21(16),B7      ; |89| 
;*  10              NOP             3
;*  13              MPY32   .M1     A18,A4,A3         ; |88| 
;*  14              NOP             1
;*  15              LDHU    .D2T2   *+B21(16),B6      ; |87| 
;*  16              CMPLTU  .L1     A21,3,A1          ; |90|  ^ 
;*  17              MPY32   .M2     B9,B7,B6          ; |89| 
;*     ||   [ A1]   LDHU    .D1T2   *+A22(16),B25     ; |93| 
;*  18      [!A1]   LDHU    .D1T1   *+A22(16),A16     ; |95|  ^ 
;*  19      [ A1]   LDHU    .D1T2   *+A22(16),B23     ; |91|  ^ 
;*  20              MV      .L1X    B6,A4             ; |87| Define a twin register
;*     ||   [!A1]   LDHU    .D1T2   *+A22(16),B18     ; |96|  ^ 
;*  21              MPY32   .M1     A18,A4,A4         ; |87| 
;*     ||   [ A1]   LDHU    .D1T1   *+A22(16),A6      ; |92| 
;*  22      [!A1]   LDHU    .D1T1   *+A22(16),A8      ; |97| 
;*  23              ADD     .L1     A17,A3,A3         ; |88| 
;*     ||           ADD     .L2     B19,B6,B5         ; |89| 
;*     ||           MPY32   .M1     A18,A16,A4        ; |95|  ^ 
;*     ||           MPY32   .M2     B9,B25,B7         ; |93| 
;*  24              ADD     .L2     B4,B5,B5          ; |89| 
;*     ||           MPY32   .M2     B9,B23,B22        ; |91|  ^ 
;*  25              ADD     .L2X    B4,A3,B17         ; |88| Define a twin register
;*     ||           MV      .S1     A1,A0             ; |90|  ^ Split a long life(pre-sched)
;*     ||           MPY32   .M2     B9,B18,B7         ; |96|  ^ 
;*  26              ADD     .L2X    A4,B19,B6         ; |87| Define a twin register
;*     ||           MPY32   .M1     A18,A6,A5         ; |92| 
;*  27              ADD     .L1     A17,A4,A4         ; |95|  ^ 
;*     ||           MPY32   .M1     A18,A8,A7         ; |97| 
;*     ||           ADD     .L2     B19,B7,B7         ; |93| 
;*  28              STB     .D2T1   A23,*+B6[B4]      ; |87| 
;*     ||           ADD     .L1     A19,A4,A9         ; |95|  ^ 
;*     ||           ADD     .S2     B19,B22,B24       ; |91|  ^ 
;*     ||           ADD     .L2     B4,B7,B22         ; |93| 
;*  29              STB     .D2T1   A23,*+B17(1)      ; |88| 
;*     ||           ADD     .S2     B19,B7,B7         ; |96|  ^ 
;*     ||           ADD     .L2     6,B19,B19         ; |86| 
;*  30              STB     .D2T2   B16,*+B5(2)       ; |89| 
;*     ||           ADD     .S2     B4,B24,B17        ; |91|  ^ 
;*     ||           ADD     .L1     A17,A5,A5         ; |92| 
;*     ||           CMPLTU  .L2     B19,B8,B5         ; |86| 
;*  31              ADD     .L2     B4,B7,B5          ; |96|  ^ 
;*     ||           ADD     .S1     A17,A7,A4         ; |97| 
;*     ||   [ A0]   STB     .D2T2   B16,*+B17(3)      ; |91| 
;*     ||           ADD     .L1     6,A17,A17         ; |86| Define a twin register
;*     ||           MV      .S2     B5,B0             ; |86| 
;*  32      [!A0]   STB     .D1T1   A20,*+A9(3)       ; |95| 
;*     ||   [!A0]   STB     .D2T2   B20,*+B5(4)       ; |96| 
;*     ||           ADD     .S1     A19,A4,A4         ; |97| 
;*     ||   [ B0]   SPWBR           $C$C175
;*  33      [!A0]   STB     .D1T1   A20,*+A4(5)       ; |97| 
;*     ||           ADD     .L1     A19,A5,A5         ; |92| 
;*  34      [ A0]   STB     .D1T1   A23,*+A5(4)       ; |92| 
;*     ||   [ A0]   STB     .D2T2   B16,*+B22(5)      ; |93| 
;*  35              NOP             1
;*  36              ; BRANCHCC OCCURS {$C$C175}       ; |86| 
;*----------------------------------------------------------------------------*
$C$L3:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 28
   [ B0]   SPLOOPW 9       ;36               ; (P) 
;** --------------------------------------------------------------------------*
$C$L4:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_afast9_detectCorners_d$14$B:
;          EXCLUSIVE CPU CYCLES: 9
           NOP             7

           SPMASK          S1
||         MVKL    .S1     0xaaab,A3

           SPMASK          S1
||         MVKH    .S1     0xaaab,A3
||         LDHU    .D2T1   *+B21(16),A4      ; |88| (P) <0,8> 

           SPMASK          M1
||         MPYU    .M1     A18,A3,A5
||         LDHU    .D2T2   *+B21(16),B7      ; |89| (P) <0,9> 

           NOP             1

           SPMASK          L1,S1
||         MVK     .L1     6,A5
||         SHRU    .S1     A5,2,A7

           SPMASK          M1
||         MPYHLU  .M1     A7,A5,A5

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 88,column 25,is_stmt,isa 0
           MPY32   .M1     A18,A4,A3         ; |88| (P) <0,13> 
           NOP             1

           SPMASK          L1
||         SUB     .L1     A18,A5,A21
||         LDHU    .D2T2   *+B21(16),B6      ; |87| (P) <0,15> 

           SPMASK          L2,D2
||         LDW     .D2T1   *+SP(40),A19
||         MV      .L2X    A18,B9
||         CMPLTU  .L1     A21,3,A1          ; |90| (P) <0,16>  ^ 

           MPY32   .M2     B9,B7,B6          ; |89| (P) <0,17> 
|| [ A1]   LDHU    .D1T2   *+A22(16),B25     ; |93| (P) <0,17> 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 95,column 29,is_stmt,isa 0
   [!A1]   LDHU    .D1T1   *+A22(16),A16     ; |95| (P) <0,18>  ^ 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 91,column 29,is_stmt,isa 0
   [ A1]   LDHU    .D1T2   *+A22(16),B23     ; |91| (P) <0,19>  ^ 

           MV      .L1X    B6,A4             ; |87| (P) <0,20> Define a twin register
|| [!A1]   LDHU    .D1T2   *+A22(16),B18     ; |96| (P) <0,20>  ^ 

   [ A1]   LDHU    .D1T1   *+A22(16),A6      ; |92| (P) <0,21> 
||         MPY32   .M1     A18,A4,A4         ; |87| (P) <0,21> 

           SPMASK          L1,L2
||         ZERO    .L1     A17
||         ZERO    .L2     B19
|| [!A1]   LDHU    .D1T1   *+A22(16),A8      ; |97| (P) <0,22> 

           SPMASK          S2
||         MV      .S2X    A19,B4
||         ADD     .L2     B19,B6,B5         ; |89| (P) <0,23> 
||         MPY32   .M1     A18,A16,A4        ; |95| (P) <0,23>  ^ 
||         ADD     .L1     A17,A3,A3         ; |88| (P) <0,23> 
||         MPY32   .M2     B9,B25,B7         ; |93| (P) <0,23> 

           ADD     .L2     B4,B5,B5          ; |89| (P) <0,24> 
||         MPY32   .M2     B9,B23,B22        ; |91| (P) <0,24>  ^ 

           ADD     .L2X    B4,A3,B17         ; |88| (P) <0,25> Define a twin register
||         MPY32   .M2     B9,B18,B7         ; |96| (P) <0,25>  ^ 
||         MV      .S1     A1,A0             ; |90| (P) <0,25>  ^ Split a long life(pre-sched)

           ADD     .L2X    A4,B19,B6         ; |87| (P) <0,26> Define a twin register
||         MPY32   .M1     A18,A6,A5         ; |92| (P) <0,26> 

           ADD     .L1     A17,A4,A4         ; |95| <0,27>  ^ 
||         MPY32   .M1     A18,A8,A7         ; |97| <0,27> 
||         ADD     .L2     B19,B7,B7         ; |93| <0,27> 

           ADD     .L2     B4,B7,B22         ; |93| <0,28> 
||         ADD     .L1     A19,A4,A9         ; |95| <0,28>  ^ 
||         ADD     .S2     B19,B22,B24       ; |91| <0,28>  ^ 
||         STB     .D2T1   A23,*+B6[B4]      ; |87| <0,28> 

           ADD     .L2     6,B19,B19         ; |86| <0,29> 
||         ADD     .S2     B19,B7,B7         ; |96| <0,29>  ^ 
||         STB     .D2T1   A23,*+B17(1)      ; |88| <0,29> 

           STB     .D2T2   B16,*+B5(2)       ; |89| <0,30> 
||         CMPLTU  .L2     B19,B8,B5         ; |86| <0,30> 
||         ADD     .S2     B4,B24,B17        ; |91| <0,30>  ^ 
||         ADD     .L1     A17,A5,A5         ; |92| <0,30> 

           ADD     .L2     B4,B7,B5          ; |96| <0,31>  ^ 
||         ADD     .L1     6,A17,A17         ; |86| <0,31> Define a twin register
||         ADD     .S1     A17,A7,A4         ; |97| <0,31> 
|| [ A0]   STB     .D2T2   B16,*+B17(3)      ; |91| <0,31> 
||         MV      .S2     B5,B0             ; |86| <0,31> 

           ADD     .S1     A19,A4,A4         ; |97| <0,32> 
|| [!A0]   STB     .D2T2   B20,*+B5(4)       ; |96| <0,32> 
|| [!A0]   STB     .D1T1   A20,*+A9(3)       ; |95| <0,32> 

           ADD     .L1     A19,A5,A5         ; |92| <0,33> 
|| [!A0]   STB     .D1T1   A20,*+A4(5)       ; |97| <0,33> 

   [ A0]   STB     .D2T2   B16,*+B22(5)      ; |93| <0,34> 
|| [ A0]   STB     .D1T1   A23,*+A5(4)       ; |92| <0,34> 

           SPKERNEL 0,0
$C$DW$L$VLIB_afast9_detectCorners_d$14$E:
;** --------------------------------------------------------------------------*
$C$L5:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$16$B:
;          EXCLUSIVE CPU CYCLES: 1
           STW     .D2T1   A19,*+SP(40)
$C$DW$L$VLIB_afast9_detectCorners_d$16$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 86,column 33,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$17$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g13:
;** 85	-----------------------    ++row;
;** 85	-----------------------    if ( L$1 = L$1-1 ) goto g7;

           SUB     .S2     B1,1,B1           ; |85| 
||         ADD     .L1     1,A18,A18         ; |85| 
||         CMPEQ   .L2     B26,5,B0          ; |86| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 85,column 30,is_stmt,isa 0
   [ B1]   BNOP    .S1     $C$L2,5           ; |85| 
           ; BRANCHCC OCCURS {$C$L2}         ; |85| 
$C$DW$L$VLIB_afast9_detectCorners_d$17$E:
;** --------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 81,column 13,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$18$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g14:
;** 137	-----------------------    act_kernel = 0;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 106	-----------------------    numFeatures = VLIB_afast9_detectCorners(im1, (*U$15).imageWidth, (*U$15).imageHeight, (unsigned)(*U$15).imagePitch, (*U$15).threshold, outFeatures, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    C$9 = act_kernel;  // [15]
;** 156	-----------------------    *((C$9<<3)+K$122) = *((C$9<<3)+K$122)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
;** 137	-----------------------    act_kernel = 1;  // [14]
;** 140	-----------------------    VLIB_cache_inval();  // [14]
;** 143	-----------------------    initStack(getSP());  // [14]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [14]
;** 117	-----------------------    numFeatures_cn = VLIB_afast9_detectCorners_cn(im1, (*U$15).imageWidth, (*U$15).imageHeight, (unsigned)(*U$15).imagePitch, (*U$15).threshold, outFeatures_cn, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [15]
;** 153	-----------------------    end_count = v$2;  // [15]
;** 156	-----------------------    C$8 = act_kernel;  // [15]
;** 156	-----------------------    *((C$8<<3)+K$122) = *((C$8<<3)+K$122)+(v$2-(beg_count+overhead));  // [15]
;** 159	-----------------------    setStackDepth();  // [15]
;** 126	-----------------------    if ( !totalFeatureHalfWords ) goto g20;
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$145, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$145, DW_AT_TI_call
           CALL    .S1     VLIB_cache_inval  ; |140| 
           MVKL    .S1     act_kernel,A11
           MVKH    .S1     act_kernel,A11
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 137,column 5,is_stmt,isa 0
           ZERO    .L2     B4                ; |137| 
           STW     .D1T2   B4,*A11           ; |137| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
           ADDKPC  .S2     $C$RL7,B3,0       ; |140| 
$C$RL7:    ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_afast9_detectCorners_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$19$B:
;          EXCLUSIVE CPU CYCLES: 101
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("getSP")
	.dwattr $C$DW$146, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL8:    ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("initStack")
	.dwattr $C$DW$147, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL9:    ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 

           MVKL    .S1     beg_count,A3
||         LDHU    .D1T1   *+A13(14),A6      ; |106| 

           MVKH    .S1     beg_count,A3
||         MV      .L2     B4,B7             ; |146| 
||         LDW     .D2T2   *+SP(44),B8       ; |106| 
||         LDBU    .D1T1   *+A13(18),A8      ; |106| 

           STDW    .D1T2   B7:B6,*A3         ; |146| 

           LDW     .D2T1   *+SP(48),A10      ; |106| 
||         LDHU    .D1T2   *+A13(12),B4      ; |106| 

$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("VLIB_afast9_detectCorners")
	.dwattr $C$DW$148, DW_AT_TI_call

           CALLP   .S2     VLIB_afast9_detectCorners,B3
||         LDHU    .D1T2   *+A13(16),B6      ; |106| 
||         LDW     .D2T1   *+SP(40),A4       ; |106| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 106,column 13,is_stmt,isa 0
$C$RL10:   ; CALL OCCURS {VLIB_afast9_detectCorners} {0}  ; |106| 

           MV      .L2X    A4,B13            ; |106| 
||         MVC     .S2     TSCL,B6           ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B7           ; |153| 

           MVKL    .S2     overhead,B10
||         MVKL    .S1     beg_count,A10

           MVKH    .S2     overhead,B10
||         MVKH    .S1     beg_count,A10
||         LDW     .D1T1   *A11,A16          ; |156| 

           LDDW    .D2T2   *B10,B5:B4        ; |156| 
||         LDDW    .D1T1   *A10,A9:A8        ; |156| 

           NOP             4

           ADDU    .L1X    B4,A8,A5:A4       ; |156| 
||         LDDW    .D1T1   *+A15[A16],A7:A6  ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADD     .L1X    A5,B5,A3          ; |156| 
           ADD     .L1     A3,A9,A3          ; |156| 
           SUBU    .L1X    B6,A4,A5:A4       ; |156| 

           SUB     .L2X    B7,A3,B4          ; |156| 
||         EXT     .S1     A5,24,24,A31      ; |156| 

           ADDU    .L1     A6,A4,A5:A4       ; |156| 
||         MVKL    .S1     end_count,A3

           ADD     .L1     A5,A7,A6          ; |156| 
||         ADD     .D1X    B4,A31,A5         ; |156| 
||         MVKH    .S1     end_count,A3

           ADD     .L1     A6,A5,A5          ; |156| 
||         STDW    .D1T2   B7:B6,*A3         ; |153| 

$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("setStackDepth")
	.dwattr $C$DW$149, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A15[A16]  ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 

           MVK     .L2     1,B4              ; |137| 
||         MV      .L1     A11,A3            ; |137| 

$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$150, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$150, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL12:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("getSP")
	.dwattr $C$DW$151, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("initStack")
	.dwattr $C$DW$152, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL14:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 117,column 13,is_stmt,isa 0
           LDBU    .D1T1   *+A13(18),A8      ; |117| 

           LDW     .D2T2   *+SP(52),B8       ; |117| 
||         LDHU    .D1T1   *+A13(14),A6      ; |117| 

           MV      .L1     A10,A11           ; |146| 
||         MV      .L2     B4,B7             ; |146| 
||         LDHU    .D1T2   *+A13(12),B4      ; |117| 

           STDW    .D1T2   B7:B6,*A11        ; |146| 
||         LDW     .D2T1   *+SP(40),A4       ; |117| 

$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("VLIB_afast9_detectCorners_cn")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALLP   .S2     VLIB_afast9_detectCorners_cn,B3
||         LDHU    .D1T2   *+A13(16),B6      ; |117| 
||         LDW     .D2T1   *+SP(48),A10      ; |117| 

$C$RL15:   ; CALL OCCURS {VLIB_afast9_detectCorners_cn} {0}  ; |117| 

           MV      .L1     A4,A10            ; |117| 
||         MVC     .S2     TSCL,B6           ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B4           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKH    .S1     act_kernel,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T1   *A3,A4            ; |156| 
           LDDW    .D2T2   *B10,B9:B8        ; |156| 
           LDDW    .D1T1   *A11,A9:A8        ; |156| 
           MVKL    .S1     end_count,A3
           MVKH    .S1     end_count,A3
           LDDW    .D1T1   *+A15[A4],A7:A6   ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MV      .L2     B4,B7             ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B8,A8,B5:B4       ; |156| 

           ADD     .L2     B5,B9,B5          ; |156| 
||         MV      .S2     B4,B8             ; |156| 
||         MV      .D2X    A3,B4

           SUBU    .L2     B6,B8,B9:B8       ; |156| 
||         ADD     .S2X    B5,A9,B5          ; |156| 

           EXT     .S2     B9,24,24,B16      ; |156| 
||         ADDU    .L2X    A6,B8,B9:B8       ; |156| 
||         SUB     .D2     B7,B5,B5          ; |156| 

           ADD     .L2X    B9,A7,B5          ; |156| 
||         ADD     .S2     B5,B16,B9         ; |156| 

           ADD     .L2     B5,B9,B9          ; |156| 
||         STDW    .D2T2   B7:B6,*B4         ; |153| 

$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("setStackDepth")
	.dwattr $C$DW$154, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B9:B8,*+A15[A4]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_afast9_detectCorners_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$20$B:
;          EXCLUSIVE CPU CYCLES: 11
           LDW     .D2T1   *+SP(36),A0       ; |159| 
           NOP             4

   [!A0]   BNOP    .S1     $C$L11,5          ; |126| 
|| [ A0]   MV      .L1     A0,A4
|| [ A0]   LDW     .D2T1   *+SP(52),A3       ; |127| 
|| [ A0]   MVK     .D1     0x1,A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 126,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |126| 
$C$DW$L$VLIB_afast9_detectCorners_d$20$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 126,column 50,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$21$B:
;**  	-----------------------    U$135 = outFeatures_cn;
;**  	-----------------------    U$137 = outFeatures;
;** 127	-----------------------    L$3 = totalFeatureHalfWords;
;** 126	-----------------------    --U$137;
;** 126	-----------------------    --U$135;
;** 126	-----------------------    i = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 4294967295, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g16:
;** 127	-----------------------    U$138 = *(++U$137);
;** 127	-----------------------    U$136 = *(++U$135);
;** 127	-----------------------    f$5 = (U$136 != U$138)-1;
;** 126	-----------------------    ++i;
;** 126	-----------------------    L$3 = L$3-1;
;** 126	-----------------------    if ( L$3&f$5 ) goto g16;
;**  	-----------------------    if ( f$5 ) goto g20;
$C$DW$L$VLIB_afast9_detectCorners_d$21$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c
;*      Loop source line                 : 126
;*      Loop opening brace source line   : 126
;*      Loop closing brace source line   : 134
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 1
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        0     
;*      .S units                     1        0     
;*      .D units                     1        1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          3        1     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     2*       1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    ***                         |    ***                         |
;*       1: |    ***                         |    ***                         |
;*       2: |   ****                         |    ***                         |
;*       3: |    ****                        |    ***                         |
;*       4: |   ****                         |    ***                         |
;*       5: |*   ***                         |    ***                         |
;*       6: |    ***                         |    ***                         |
;*       7: |    ***                         |    ***                         |
;*       8: |    ***                         |    ***                         |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.4%
;*
;*      Effective ii                : { min 9.00, est 9.13, max 10.00 }
;*
;*
;*      Total cycles (est.)         : 9 + trip_cnt * 9        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C120:
;*   5      [ A0]   LDHU    .D1T1   *++A6,A5          ; |127|  ^ 
;*     ||   [ A0]   LDHU    .D2T2   *++B5,B6          ; |127|  ^ 
;*   6              NOP             4
;*  10              CMPEQ   .L1X    B6,A5,A3          ; |127|  ^ 
;*  11              EXT     .S1     A3,31,31,A7       ; |127|  ^ 
;*     ||           SUB     .L1     A4,1,A4           ; |126|  ^ 
;*  12              AND     .L1     A7,A4,A3          ; |126|  ^ 
;*  13              MV      .L1     A3,A0             ; |126|  ^ 
;*  14      [ A0]   SPWBR           $C$C120
;*  15              NOP             2
;*  17              ADD     .L2     1,B4,B4           ; |126| 
;*  18              ; BRANCHCC OCCURS {$C$C120}       ; |126| 
;*----------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 10

   [ A0]   SPLOOPW 9       ;18               ; (P) 
||         LDW     .D2T1   *+SP(44),A5       ; |127| 

;** --------------------------------------------------------------------------*
$C$L9:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_afast9_detectCorners_d$23$B:
;          EXCLUSIVE CPU CYCLES: 9
           NOP             4

           SPMASK          L1,L2
||         SUB     .L2X    A3,2,B5           ; |126| 
||         SUB     .L1     A5,2,A6           ; |126| 

   [ A0]   LDHU    .D1T1   *++A6,A5          ; |127| (P) <0,5>  ^ 
|| [ A0]   LDHU    .D2T2   *++B5,B6          ; |127| (P) <0,5>  ^ 

           NOP             2

           SPMASK          L2
||         MVK     .L2     0xffffffff,B4     ; |126| 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 127,column 17,is_stmt,isa 0
           CMPEQ   .L1X    B6,A5,A3          ; |127| <0,10>  ^ 

           SUB     .L1     A4,1,A4           ; |126| <0,11>  ^ 
||         EXT     .S1     A3,31,31,A7       ; |127| <0,11>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 126,column 23,is_stmt,isa 0
           AND     .L1     A7,A4,A3          ; |126| <0,12>  ^ 
           MV      .L1     A3,A0             ; |126| <0,13>  ^ 
           NOP             2
           NOP             1

           SPKERNEL 0,0
||         ADD     .L2     1,B4,B4           ; |126| <0,17> 

$C$DW$L$VLIB_afast9_detectCorners_d$23$E:
;** --------------------------------------------------------------------------*
$C$L10:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$25$B:
;          EXCLUSIVE CPU CYCLES: 7
           MV      .L1     A7,A0

           MV      .L1     A0,A1             ; branch predicate copy
|| [!A0]   ZERO    .L2     B12               ; |128| 
|| [ A0]   B       .S1     $C$L13
||         LDW     .D2T1   *+SP(32),A0       ; |128| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 141,column 13,is_stmt,isa 0
   [ A1]   LDW     .D1T1   *+A13(8),A0       ; |141| 
           NOP             4
           ; BRANCHCC OCCURS {$C$L13}  
$C$DW$L$VLIB_afast9_detectCorners_d$25$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$26$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 128	-----------------------    status_nat_vs_int = 0;
;** 129	-----------------------    if ( !LevelOfFeedback ) goto g20;

   [!A0]   BNOP    .S1     $C$L12,2          ; |129| 
|| [ A0]   MVKL    .S2     $C$SL2+0,B5

   [ A0]   MVKH    .S2     $C$SL2+0,B5
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("printf")
	.dwattr $C$DW$155, DW_AT_TI_call

   [ A0]   CALL    .S1     printf            ; |130| 
|| [!A0]   LDW     .D1T1   *+A13(8),A0       ; |141| 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 129,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |129| 
$C$DW$L$VLIB_afast9_detectCorners_d$26$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$27$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 130	-----------------------    printf((const char *)" Mismatch in Index = %u,%x,%x \n", i, (int)U$136, (int)U$138);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 130,column 25,is_stmt,isa 0
           STW     .D2T2   B5,*+SP(4)        ; |130| 
           STW     .D2T1   A5,*+SP(16)       ; |130| 
           STW     .D2T2   B6,*+SP(12)       ; |130| 

           STW     .D2T2   B4,*+SP(8)        ; |130| 
||         ADDKPC  .S2     $C$RL17,B3,0      ; |130| 

$C$RL17:   ; CALL OCCURS {printf} {0}        ; |130| 
$C$DW$L$VLIB_afast9_detectCorners_d$27$E:
;** --------------------------------------------------------------------------*
$C$L11:    
$C$DW$L$VLIB_afast9_detectCorners_d$28$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 141,column 13,is_stmt,isa 0
           LDW     .D1T1   *+A13(8),A0       ; |141| 
           NOP             1
$C$DW$L$VLIB_afast9_detectCorners_d$28$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_afast9_detectCorners_d$29$B:
;          EXCLUSIVE CPU CYCLES: 3
           NOP             3
$C$DW$L$VLIB_afast9_detectCorners_d$29$E:
;** --------------------------------------------------------------------------*
$C$L13:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 126,column 23,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$30$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g20:
;** 136	-----------------------    if ( numFeatures == numFeatures_cn ) goto g22;
;** 137	-----------------------    status_nat_vs_int = 0;
;**	-----------------------g22:
;** 141	-----------------------    v$1 = prm;
;** 141	-----------------------    if ( (*U$15).staticOut == NULL ) goto g31;

           CMPEQ   .L2X    B13,A10,B0        ; |136| 
|| [!A0]   B       .S1     $C$L17            ; |141| 
||         LDW     .D2T2   *+SP(28),B10      ; |141| 

   [!B0]   ZERO    .L2     B12               ; |137| 
||         LDW     .D2T2   *+SP(36),B0       ; |142| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 142,column 17,is_stmt,isa 0
   [ A0]   CMPEQ   .L2X    A10,B13,B1        ; |142| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 141,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |141| 
$C$DW$L$VLIB_afast9_detectCorners_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$31$B:
;          EXCLUSIVE CPU CYCLES: 7
;** 142	-----------------------    if ( numFeatures_cn != numFeatures ) goto g30;
;** 143	-----------------------    if ( !totalFeatureHalfWords ) goto g31;

   [!B1]   ZERO    .L2     B0
|| [!B1]   ZERO    .L1     A12               ; |153| 

   [!B0]   BNOP    .S2     $C$L17,2          ; |143| 
|| [ B0]   MVK     .L1     0x1,A0
|| [ B0]   SHL     .S1     A14,4,A3

   [ B0]   ADDAD   .D1     A3,A14,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 144,column 25,is_stmt,isa 0
   [ B0]   LDW     .D2T1   *+SP(52),A31      ; |144| 
   [ B0]   ADD     .L2X    B10,A3,B5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 143,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L17}        ; |143| 
$C$DW$L$VLIB_afast9_detectCorners_d$31$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 143,column 58,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$32$B:
;**  	-----------------------    U$135 = outFeatures_cn;
;**  	-----------------------    U$157 = (v$1[tpi]).staticOut;
;** 144	-----------------------    L$4 = totalFeatureHalfWords;
;** 143	-----------------------    --U$157;
;** 143	-----------------------    --U$135;
;** 143	-----------------------    i = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 4294967295, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g26:
;** 144	-----------------------    f$6 = (*(++U$135) != *(++U$157))-1;
;** 143	-----------------------    ++i;
;** 143	-----------------------    L$4 = L$4-1;
;** 143	-----------------------    if ( L$4&f$6 ) goto g26;
;**  	-----------------------    if ( f$6 ) goto g31;
$C$DW$L$VLIB_afast9_detectCorners_d$32$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c
;*      Loop source line                 : 143
;*      Loop opening brace source line   : 143
;*      Loop closing brace source line   : 151
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 1
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        0     
;*      .S units                     1        0     
;*      .D units                     1        1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          3        1     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     2*       1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    ** *                        |    ***                         |
;*       1: |    ** *                        |    ***                         |
;*       2: |   *** *                        |    ***                         |
;*       3: |    ****                        |    ***                         |
;*       4: |   *** *                        |    ***                         |
;*       5: |*   ** *                        |    ***                         |
;*       6: |    ** *                        |    ***                         |
;*       7: |    ** *                        |    ***                         |
;*       8: |    ** *                        |    ***                         |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.4%
;*
;*      Effective ii                : { min 9.00, est 9.13, max 10.00 }
;*
;*
;*      Total cycles (est.)         : 9 + trip_cnt * 9        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C66:
;*   5      [ A0]   LDHU    .D1T1   *++A5,A7          ; |144|  ^ 
;*     ||   [ A0]   LDHU    .D2T2   *++B6,B4          ; |144|  ^ 
;*   6              NOP             4
;*  10              CMPEQ   .L1X    B4,A7,A3          ; |144|  ^ 
;*  11              EXT     .S1     A3,31,31,A6       ; |144|  ^ 
;*     ||           SUB     .L1     A4,1,A4           ; |143|  ^ 
;*  12              AND     .L1     A6,A4,A3          ; |143|  ^ 
;*  13              MV      .L1     A3,A0             ; |143|  ^ 
;*  14      [ A0]   SPWBR           $C$C66
;*  15              NOP             2
;*  17              ADD     .L2     1,B5,B5           ; |143| 
;*  18              ; BRANCHCC OCCURS {$C$C66}        ; |143| 
;*----------------------------------------------------------------------------*
$C$L14:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 10

   [ A0]   SPLOOPW 9       ;18               ; (P) 
||         LDW     .D2T2   *+B5(8),B5

;** --------------------------------------------------------------------------*
$C$L15:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_afast9_detectCorners_d$34$B:
;          EXCLUSIVE CPU CYCLES: 9
           NOP             4

           SPMASK          L1,L2,D2
||         LDW     .D2T1   *+SP(36),A4
||         SUB     .L2X    A31,2,B6          ; |143| 
||         SUB     .L1X    B5,2,A5           ; |143| 

   [ A0]   LDHU    .D1T1   *++A5,A7          ; |144| (P) <0,5>  ^ 
|| [ A0]   LDHU    .D2T2   *++B6,B4          ; |144| (P) <0,5>  ^ 

           NOP             2

           SPMASK          L2
||         MVK     .L2     0xffffffff,B5     ; |143| 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 144,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B4,A7,A3          ; |144| <0,10>  ^ 

           SUB     .L1     A4,1,A4           ; |143| <0,11>  ^ 
||         EXT     .S1     A3,31,31,A6       ; |144| <0,11>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 143,column 31,is_stmt,isa 0
           AND     .L1     A6,A4,A3          ; |143| <0,12>  ^ 
           MV      .L1     A3,A0             ; |143| <0,13>  ^ 
           NOP             2
           NOP             1

           SPKERNEL 0,0
||         ADD     .L2     1,B5,B5           ; |143| <0,17> 

$C$DW$L$VLIB_afast9_detectCorners_d$34$E:
;** --------------------------------------------------------------------------*
$C$L16:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$36$B:
;          EXCLUSIVE CPU CYCLES: 7

           MV      .L1     A6,A0
||         ADD     .L2     B10,B11,B6        ; |164| 

   [ A0]   B       .S1     $C$L18
||         MV      .L1     A0,A1             ; branch predicate copy
|| [!A0]   ZERO    .D1     A12               ; |145| 
||         LDW     .D2T1   *+SP(32),A0       ; |145| 

   [ A1]   LDW     .D2T2   *+B6(20),B4       ; |164| 
|| [ A1]   MVKL    .S2     testPatternString,B7
|| [ A1]   MVKL    .S1     est_test,A4

   [ A1]   LDHU    .D2T2   *+B6(14),B5       ; |164| 
|| [ A1]   MVKL    .S2     $C$SL4+0,B8

   [ A1]   MVKH    .S2     testPatternString,B7
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 164,column 13,is_stmt,isa 0
   [ A1]   LDHU    .D2T2   *+B6(12),B6       ; |164| 
   [ A1]   MVKH    .S2     $C$SL4+0,B8
           ; BRANCHCC OCCURS {$C$L18}  
$C$DW$L$VLIB_afast9_detectCorners_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$37$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 145	-----------------------    status_nat_vs_ref = 0;
;** 146	-----------------------    if ( !LevelOfFeedback ) goto g31;

   [!A0]   MVKL    .S2     $C$SL4+0,B8
|| [!A0]   ADD     .L2     B10,B11,B6        ; |164| 
|| [!A0]   B       .S1     $C$L18            ; |146| 

   [!A0]   LDW     .D2T2   *+B6(20),B4       ; |164| 
|| [!A0]   MVKL    .S2     testPatternString,B7
|| [!A0]   MVKL    .S1     est_test,A4

$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x08)
	.dwattr $C$DW$156, DW_AT_name("printf")
	.dwattr $C$DW$156, DW_AT_TI_call

   [!A0]   LDHU    .D2T2   *+B6(14),B5       ; |164| 
|| [ A0]   MVKL    .S2     $C$SL3+0,B4
|| [ A0]   CALL    .S1     printf            ; |147| 

   [!A0]   MVKH    .S2     $C$SL4+0,B8
|| [!A0]   LDHU    .D2T2   *+B6(12),B6       ; |164| 

   [!A0]   MVKH    .S2     testPatternString,B7
   [ A0]   MVKH    .S2     $C$SL3+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 146,column 29,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L18}        ; |146| 
$C$DW$L$VLIB_afast9_detectCorners_d$37$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$38$B:
;          EXCLUSIVE CPU CYCLES: 2
;** 147	-----------------------    printf((const char *)" Mismatch in Index = %u \n", i);
;** 147	-----------------------    goto g31;
;**	-----------------------g30:
;** 153	-----------------------    status_nat_vs_ref = 0;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 147,column 33,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |147| 

           STW     .D2T2   B5,*+SP(8)        ; |147| 
||         ADDKPC  .S2     $C$RL18,B3,0      ; |147| 

$C$RL18:   ; CALL OCCURS {printf} {0}        ; |147| 
$C$DW$L$VLIB_afast9_detectCorners_d$38$E:
;** --------------------------------------------------------------------------*
$C$L17:    
$C$DW$L$VLIB_afast9_detectCorners_d$39$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 164,column 13,is_stmt,isa 0
           ADD     .L2     B10,B11,B6        ; |164| 

           LDHU    .D2T2   *+B6(14),B5       ; |164| 
||         MVKL    .S2     $C$SL4+0,B8

           LDW     .D2T2   *+B6(20),B4       ; |164| 
||         MVKL    .S2     testPatternString,B7

           LDHU    .D2T2   *+B6(12),B6       ; |164| 
||         MVKH    .S2     $C$SL4+0,B8

           MVKH    .S2     testPatternString,B7
||         MVKL    .S1     est_test,A4

$C$DW$L$VLIB_afast9_detectCorners_d$39$E:
;** --------------------------------------------------------------------------*
$C$L18:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 141,column 13,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$40$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g31:
;** 161	-----------------------    est_test = 1;
;** 164	-----------------------    C$7 = U$14+v$1;
;** 164	-----------------------    sprintf(K$173, (const char *)"%s generated input | Opt and NatC results compared | width= %d, height= %d, n_features found= %d, %s", K$50, (int)(*C$7).imageWidth, (int)(*C$7).imageHeight, numFeatures, (*C$7).desc);
;** 167	-----------------------    VLIB_formula_add_test((int)(totalFeatureHalfWords<<4), (*U$15).imageHeight-6, 0, (status_nat_vs_int == 0)|(status_nat_vs_ref == 0), K$173, 0);
;** 169	-----------------------    goto g33;

           MVKH    .S1     est_test,A4
||         STW     .D2T2   B7,*+SP(8)        ; |164| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 164,column 13,is_stmt,isa 0
           STW     .D2T2   B13,*+SP(20)      ; |164| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x04)
	.dwattr $C$DW$157, DW_AT_name("sprintf")
	.dwattr $C$DW$157, DW_AT_TI_call

           STW     .D2T2   B5,*+SP(16)       ; |164| 
||         CALL    .S1     sprintf           ; |164| 

           MVK     .L1     1,A3              ; |161| 
||         STW     .D2T2   B6,*+SP(12)       ; |164| 

           STW     .D2T2   B8,*+SP(4)        ; |164| 
           STW     .D2T2   B4,*+SP(24)       ; |164| 

           STW     .D1T1   A3,*A4            ; |161| 
||         MVKL    .S1     desc,A4

           MVKH    .S1     desc,A4
||         ADDKPC  .S2     $C$RL19,B3,0      ; |164| 

$C$RL19:   ; CALL OCCURS {sprintf} {0}       ; |164| 
$C$DW$L$VLIB_afast9_detectCorners_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$41$B:
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 167,column 13,is_stmt,isa 0
           LDW     .D2T2   *+SP(36),B4       ; |167| 
           LDHU    .D1T1   *+A13(14),A3      ; |167| 
           CMPEQ   .L1     A12,0,A4          ; |167| 
           CMPEQ   .L2     B12,0,B5          ; |167| 
           MVKL    .S1     desc,A8
           SHL     .S2     B4,4,B4           ; |167| 
           OR      .L2X    A4,B5,B6          ; |167| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MV      .L1X    B4,A4             ; |167| 
||         SUB     .L2X    A3,6,B4           ; |167| 
||         MVKH    .S1     desc,A8
||         ZERO    .D1     A6                ; |167| 
||         ZERO    .D2     B8                ; |167| 

$C$RL20:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |167| 
$C$DW$L$VLIB_afast9_detectCorners_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$42$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 169,column 9,is_stmt,isa 0
           B       .S1     $C$L20            ; |169| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 177,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 177 | VLIB_free(im1);                                                        
;----------------------------------------------------------------------
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("VLIB_free")
	.dwattr $C$DW$159, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |177| 
           LDW     .D2T1   *+SP(40),A4       ; |177| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 169,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L20}          ; |169| 
$C$DW$L$VLIB_afast9_detectCorners_d$42$E:
;** --------------------------------------------------------------------------*
$C$L19:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 69,column 9,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$43$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g32:
;** 171	-----------------------    sprintf(K$173, (const char *)"width= %d, height= %d", (int)(*U$15).imageWidth, (int)(*U$15).imageHeight);
;** 173	-----------------------    VLIB_skip_test(K$173);
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("sprintf")
	.dwattr $C$DW$160, DW_AT_TI_call

           CALL    .S1     sprintf           ; |171| 
||         LDHU    .D1T1   *+A13(14),A3      ; |171| 

           MVKL    .S2     $C$SL5+0,B4
           MVKH    .S2     $C$SL5+0,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 171,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |171| 

           STW     .D2T1   A4,*+SP(8)        ; |171| 
||         MVKL    .S1     desc,A4

           STW     .D2T1   A3,*+SP(12)       ; |171| 
||         MVKH    .S1     desc,A4
||         ADDKPC  .S2     $C$RL21,B3,0      ; |171| 

$C$RL21:   ; CALL OCCURS {sprintf} {0}       ; |171| 
$C$DW$L$VLIB_afast9_detectCorners_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$44$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 173,column 13,is_stmt,isa 0
$C$RL22:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |173| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 177,column 9,is_stmt,isa 0
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("VLIB_free")
	.dwattr $C$DW$162, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |177| 
           LDW     .D2T1   *+SP(40),A4       ; |177| 
           NOP             3
$C$DW$L$VLIB_afast9_detectCorners_d$44$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 169,column 9,is_stmt,isa 0
$C$DW$L$VLIB_afast9_detectCorners_d$45$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g33:
;** 177	-----------------------    VLIB_free((void *)im1);
;** 178	-----------------------    VLIB_free((void *)outFeatures);
;** 179	-----------------------    VLIB_align_free((void *)scratch);
;** 180	-----------------------    free((void *)outFeatures_cn);
;** 50	-----------------------    U$14 += 24;
;** 50	-----------------------    if ( test_cases > (++tpi) ) goto g3;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 177,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL23,B3,0      ; |177| 
$C$RL23:   ; CALL OCCURS {VLIB_free} {0}     ; |177| 
$C$DW$L$VLIB_afast9_detectCorners_d$45$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$46$B:
;          EXCLUSIVE CPU CYCLES: 18
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("VLIB_free")
	.dwattr $C$DW$163, DW_AT_TI_call

           CALLP   .S2     VLIB_free,B3
||         LDW     .D2T1   *+SP(44),A4       ; |178| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 178,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 178 | VLIB_free(outFeatures);                                                
;----------------------------------------------------------------------
$C$RL24:   ; CALL OCCURS {VLIB_free} {0}     ; |178| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(48),A4       ; |179| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 179,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 179 | VLIB_align_free(scratch);                                              
;----------------------------------------------------------------------
$C$RL25:   ; CALL OCCURS {VLIB_align_free} {0}  ; |179| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("free")
	.dwattr $C$DW$165, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(52),A4       ; |180| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 180,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 180 | free(outFeatures_cn);                                                  
;----------------------------------------------------------------------
$C$RL26:   ; CALL OCCURS {free} {0}          ; |180| 
$C$DW$L$VLIB_afast9_detectCorners_d$46$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_afast9_detectCorners_d$47$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |50| 
           ADDK    .S2     24,B11            ; |50| 
           ADD     .L1     1,A14,A14         ; |50| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 58,column 21,is_stmt,isa 0
           ADDK    .S1     24,A13            ; |58| 
           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 17,is_stmt,isa 0
           CMPGT   .L1     A3,A14,A0         ; |50| 

   [ A0]   BNOP    .S1     $C$L1,3           ; |50| 
|| [ A0]   LDHU    .D1T1   *+A13(16),A3      ; |61| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 58,column 21,is_stmt,isa 0
   [ A0]   LDHU    .D1T1   *+A13(14),A10     ; |58| 
   [ A0]   LDHU    .D1T1   *+A13(12),A11     ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 50,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |50| 
$C$DW$L$VLIB_afast9_detectCorners_d$47$E:
;** --------------------------------------------------------------------------*
$C$L21:    
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g34:
;** 184	-----------------------    VLIB_profile_cycle_report(2, "N = ((width-6)&0xFFF0) * (height-6), M=height-6", "((width-6)&0xFFF0) * (height-6)");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [17]
;** 168	-----------------------    VLIB_stack_memory();  // [17]
;**  	-----------------------    return;
           MVKL    .S2     $C$SL7+0,B4

           MVKL    .S1     $C$SL6+0,A6
||         MVKH    .S2     $C$SL7+0,B4

$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$166, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL6+0,A6
||         MVK     .L1     0x2,A4            ; |184| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 184,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 184 | VLIB_profile_cycle_report(vlib_PROFILE_FORMULA_RANGE,                  
; 185 |                           "N = ((width-6)&0xFFF0) * (height-6), M=heigh
;     | t-6",                                                                  
; 186 |                           "((width-6)&0xFFF0) * (height-6)");          
; 189 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL27:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |184| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL8+0,B4
           MVKH    .S2     $C$SL8+0,B4
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("printf")
	.dwattr $C$DW$167, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$168, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL29:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c",line 190,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(64),B3      ; |190| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |190| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$170	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$170, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.se66:$C$L1:1:1443280037")
	.dwattr $C$DW$170, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$170, DW_AT_TI_begin_line(0x32)
	.dwattr $C$DW$170, DW_AT_TI_end_line(0xb5)
$C$DW$171	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$171, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$4$B)
	.dwattr $C$DW$171, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$4$E)
$C$DW$172	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$172, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$43$B)
	.dwattr $C$DW$172, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$43$E)
$C$DW$173	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$173, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$38$B)
	.dwattr $C$DW$173, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$38$E)
$C$DW$174	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$174, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$27$B)
	.dwattr $C$DW$174, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$27$E)
$C$DW$175	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$175, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$26$B)
	.dwattr $C$DW$175, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$26$E)
$C$DW$176	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$176, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$28$B)
	.dwattr $C$DW$176, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$28$E)
$C$DW$177	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$177, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$10$B)
	.dwattr $C$DW$177, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$10$E)
$C$DW$178	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$178, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$5$B)
	.dwattr $C$DW$178, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$5$E)
$C$DW$179	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$179, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$6$B)
	.dwattr $C$DW$179, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$6$E)
$C$DW$180	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$180, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$7$B)
	.dwattr $C$DW$180, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$7$E)
$C$DW$181	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$181, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$8$B)
	.dwattr $C$DW$181, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$8$E)
$C$DW$182	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$182, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$9$B)
	.dwattr $C$DW$182, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$9$E)
$C$DW$183	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$183, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$18$B)
	.dwattr $C$DW$183, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$18$E)
$C$DW$184	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$184, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$19$B)
	.dwattr $C$DW$184, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$19$E)
$C$DW$185	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$185, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$20$B)
	.dwattr $C$DW$185, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$20$E)
$C$DW$186	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$186, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$21$B)
	.dwattr $C$DW$186, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$21$E)
$C$DW$187	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$187, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$25$B)
	.dwattr $C$DW$187, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$25$E)
$C$DW$188	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$188, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$29$B)
	.dwattr $C$DW$188, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$29$E)
$C$DW$189	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$189, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$30$B)
	.dwattr $C$DW$189, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$30$E)
$C$DW$190	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$190, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$31$B)
	.dwattr $C$DW$190, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$31$E)
$C$DW$191	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$191, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$32$B)
	.dwattr $C$DW$191, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$32$E)
$C$DW$192	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$192, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$36$B)
	.dwattr $C$DW$192, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$36$E)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$37$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$37$E)
$C$DW$194	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$194, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$39$B)
	.dwattr $C$DW$194, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$39$E)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$40$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$40$E)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$41$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$41$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$42$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$42$E)
$C$DW$198	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$198, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$44$B)
	.dwattr $C$DW$198, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$44$E)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$45$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$45$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$46$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$46$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$47$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$47$E)

$C$DW$202	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$202, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.se66:$C$L2:2:1443280037")
	.dwattr $C$DW$202, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$202, DW_AT_TI_begin_line(0x55)
	.dwattr $C$DW$202, DW_AT_TI_end_line(0x64)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$11$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$11$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$12$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$12$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$16$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$16$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$17$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$17$E)

$C$DW$207	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$207, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.se66:$C$L4:3:1443280037")
	.dwattr $C$DW$207, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$207, DW_AT_TI_begin_line(0x56)
	.dwattr $C$DW$207, DW_AT_TI_end_line(0x63)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$14$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$14$E)
	.dwendtag $C$DW$207

	.dwendtag $C$DW$202


$C$DW$209	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$209, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.se66:$C$L9:2:1443280037")
	.dwattr $C$DW$209, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$209, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$209, DW_AT_TI_end_line(0x86)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$23$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$23$E)
	.dwendtag $C$DW$209


$C$DW$211	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$211, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.se66:$C$L15:2:1443280037")
	.dwattr $C$DW$211, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$211, DW_AT_TI_begin_line(0x8f)
	.dwattr $C$DW$211, DW_AT_TI_end_line(0x97)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_afast9_detectCorners_d$34$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_afast9_detectCorners_d$34$E)
	.dwendtag $C$DW$211

	.dwendtag $C$DW$170

	.dwattr $C$DW$84, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_afast9_detectCorners/VLIB_afast9_detectCorners_d.c")
	.dwattr $C$DW$84, DW_AT_TI_end_line(0xbe)
	.dwattr $C$DW$84, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$84

;; Inlined function references:
;; [ 14] VLIB_profile_start
;; [ 15] VLIB_profile_stop
;; [ 17] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_afast9_detectCorners",0
$C$SL2:	.string	" Mismatch in Index = %u,%x,%x ",10,0
$C$SL3:	.string	" Mismatch in Index = %u ",10,0
$C$SL4:	.string	"%s generated input | Opt and NatC results compared | width="
	.string	" %d, height= %d, n_features found= %d, %s",0
$C$SL5:	.string	"width= %d, height= %d",0
$C$SL6:	.string	"((width-6)&0xFFF0) * (height-6)",0
$C$SL7:	.string	"N = ((width-6)&0xFFF0) * (height-6), M=height-6",0
$C$SL8:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_memalign
	.global	VLIB_malloc
	.global	VLIB_align_free
	.global	VLIB_free
	.global	VLIB_afast9_detectCorners
	.global	VLIB_afast9_detectCorners_cn
	.global	afast9_detectCorners_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$62	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x04)
$C$DW$213	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$213, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$213, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$213, DW_AT_decl_column(0x05)
$C$DW$214	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$214, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$214, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$214, DW_AT_decl_column(0x05)
$C$DW$215	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$215, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$215, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$215, DW_AT_decl_column(0x05)
$C$DW$216	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$216, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$216, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$216, DW_AT_decl_column(0x05)
$C$DW$217	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$217, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$217, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$217, DW_AT_decl_column(0x05)
$C$DW$218	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$218, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$218, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$218, DW_AT_decl_column(0x05)
$C$DW$219	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$219, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$219, DW_AT_decl_line(0x80)
	.dwattr $C$DW$219, DW_AT_decl_column(0x05)
$C$DW$220	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$220, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$220, DW_AT_decl_line(0x81)
	.dwattr $C$DW$220, DW_AT_decl_column(0x05)
$C$DW$221	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$221, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$221, DW_AT_decl_line(0x82)
	.dwattr $C$DW$221, DW_AT_decl_column(0x05)
$C$DW$222	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$222, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$222, DW_AT_decl_line(0x83)
	.dwattr $C$DW$222, DW_AT_decl_column(0x05)
$C$DW$223	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$223, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$223, DW_AT_decl_line(0x84)
	.dwattr $C$DW$223, DW_AT_decl_column(0x05)
$C$DW$224	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$224, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$224, DW_AT_decl_line(0x85)
	.dwattr $C$DW$224, DW_AT_decl_column(0x05)
$C$DW$225	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$225, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$225, DW_AT_decl_line(0x86)
	.dwattr $C$DW$225, DW_AT_decl_column(0x05)
$C$DW$226	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$226, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$226, DW_AT_decl_line(0x87)
	.dwattr $C$DW$226, DW_AT_decl_column(0x05)
$C$DW$227	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$227, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$227, DW_AT_decl_line(0x88)
	.dwattr $C$DW$227, DW_AT_decl_column(0x05)
$C$DW$228	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$228, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$228, DW_AT_decl_line(0x89)
	.dwattr $C$DW$228, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$62

	.dwattr $C$DW$T$62, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$62, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$62, DW_AT_decl_column(0x0e)
$C$DW$T$63	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$63, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$T$63, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$63, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$63, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$63, DW_AT_decl_column(0x03)

$C$DW$T$64	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x04)
$C$DW$229	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$229, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$229, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$229, DW_AT_decl_column(0x05)
$C$DW$230	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$230, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$230, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$230, DW_AT_decl_column(0x05)
$C$DW$231	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$231, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$231, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$231, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$64

	.dwattr $C$DW$T$64, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$T$64, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$64, DW_AT_decl_column(0x06)

$C$DW$T$65	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x04)
$C$DW$232	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$232, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$232, DW_AT_decl_line(0x72)
	.dwattr $C$DW$232, DW_AT_decl_column(0x05)
$C$DW$233	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$233, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$233, DW_AT_decl_line(0x73)
	.dwattr $C$DW$233, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$65

	.dwattr $C$DW$T$65, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\../common/VLIB_test.h")
	.dwattr $C$DW$T$65, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$65, DW_AT_decl_column(0x06)

$C$DW$T$66	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x04)
$C$DW$234	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_FALSE"), DW_AT_const_value(0x00)
	.dwattr $C$DW$234, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$234, DW_AT_decl_line(0x8f)
	.dwattr $C$DW$234, DW_AT_decl_column(0x05)
$C$DW$235	.dwtag  DW_TAG_enumerator, DW_AT_name("BOOL_TRUE"), DW_AT_const_value(0x01)
	.dwattr $C$DW$235, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$235, DW_AT_decl_line(0x90)
	.dwattr $C$DW$235, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$66

	.dwattr $C$DW$T$66, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$66, DW_AT_decl_line(0x8e)
	.dwattr $C$DW$T$66, DW_AT_decl_column(0x0e)
$C$DW$T$67	.dwtag  DW_TAG_typedef, DW_AT_name("CORB_Bool")
	.dwattr $C$DW$T$67, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$T$67, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$67, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$67, DW_AT_decl_line(0x91)
	.dwattr $C$DW$T$67, DW_AT_decl_column(0x02)

$C$DW$T$68	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x04)
$C$DW$236	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_OK"), DW_AT_const_value(0x00)
	.dwattr $C$DW$236, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$236, DW_AT_decl_line(0xa2)
	.dwattr $C$DW$236, DW_AT_decl_column(0x05)
$C$DW$237	.dwtag  DW_TAG_enumerator, DW_AT_name("CORB_FAIL"), DW_AT_const_value(-1)
	.dwattr $C$DW$237, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$237, DW_AT_decl_line(0xa3)
	.dwattr $C$DW$237, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$68

	.dwattr $C$DW$T$68, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$68, DW_AT_decl_line(0xa1)
	.dwattr $C$DW$T$68, DW_AT_decl_column(0x0e)
$C$DW$T$69	.dwtag  DW_TAG_typedef, DW_AT_name("CORBResult")
	.dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$T$69, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$69, DW_AT_decl_line(0xa4)
	.dwattr $C$DW$T$69, DW_AT_decl_column(0x02)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x18)
$C$DW$238	.dwtag  DW_TAG_member
	.dwattr $C$DW$238, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$238, DW_AT_name("testPattern")
	.dwattr $C$DW$238, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$238, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$238, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$238, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$238, DW_AT_decl_line(0x24)
	.dwattr $C$DW$238, DW_AT_decl_column(0x0f)
$C$DW$239	.dwtag  DW_TAG_member
	.dwattr $C$DW$239, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$239, DW_AT_name("staticIn")
	.dwattr $C$DW$239, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$239, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$239, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$239, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$239, DW_AT_decl_line(0x25)
	.dwattr $C$DW$239, DW_AT_decl_column(0x0f)
$C$DW$240	.dwtag  DW_TAG_member
	.dwattr $C$DW$240, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$240, DW_AT_name("staticOut")
	.dwattr $C$DW$240, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$240, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$240, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$240, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$240, DW_AT_decl_line(0x26)
	.dwattr $C$DW$240, DW_AT_decl_column(0x0f)
$C$DW$241	.dwtag  DW_TAG_member
	.dwattr $C$DW$241, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$241, DW_AT_name("imageWidth")
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$241, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$241, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$241, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x27)
	.dwattr $C$DW$241, DW_AT_decl_column(0x0f)
$C$DW$242	.dwtag  DW_TAG_member
	.dwattr $C$DW$242, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$242, DW_AT_name("imageHeight")
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$242, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$242, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$242, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x28)
	.dwattr $C$DW$242, DW_AT_decl_column(0x0f)
$C$DW$243	.dwtag  DW_TAG_member
	.dwattr $C$DW$243, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$243, DW_AT_name("imagePitch")
	.dwattr $C$DW$243, DW_AT_TI_symbol_name("imagePitch")
	.dwattr $C$DW$243, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$243, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x29)
	.dwattr $C$DW$243, DW_AT_decl_column(0x0f)
$C$DW$244	.dwtag  DW_TAG_member
	.dwattr $C$DW$244, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$244, DW_AT_name("threshold")
	.dwattr $C$DW$244, DW_AT_TI_symbol_name("threshold")
	.dwattr $C$DW$244, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$244, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$244, DW_AT_decl_column(0x0f)
$C$DW$245	.dwtag  DW_TAG_member
	.dwattr $C$DW$245, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$245, DW_AT_name("desc")
	.dwattr $C$DW$245, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$245, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$245, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$245, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$70	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$70, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$70, DW_AT_address_class(0x20)
$C$DW$T$72	.dwtag  DW_TAG_typedef, DW_AT_name("afast9_detectCorners_testParams_t")
	.dwattr $C$DW$T$72, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$72, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$72, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\VLIB_afast9_detectCorners_idat.h")
	.dwattr $C$DW$T$72, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$72, DW_AT_decl_column(0x03)
$C$DW$T$73	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$73, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$T$73, DW_AT_address_class(0x20)
$C$DW$T$74	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$74, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$T$74, DW_AT_address_class(0x20)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x18)
$C$DW$246	.dwtag  DW_TAG_member
	.dwattr $C$DW$246, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$246, DW_AT_name("fd")
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$246, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$246, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$246, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x49)
	.dwattr $C$DW$246, DW_AT_decl_column(0x0b)
$C$DW$247	.dwtag  DW_TAG_member
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$247, DW_AT_name("buf")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$247, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$247, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$247, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$247, DW_AT_decl_column(0x16)
$C$DW$248	.dwtag  DW_TAG_member
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$248, DW_AT_name("pos")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$248, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$248, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$248, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$248, DW_AT_decl_column(0x16)
$C$DW$249	.dwtag  DW_TAG_member
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$249, DW_AT_name("bufend")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$249, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$249, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$249, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$249, DW_AT_decl_column(0x16)
$C$DW$250	.dwtag  DW_TAG_member
	.dwattr $C$DW$250, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$250, DW_AT_name("buff_stop")
	.dwattr $C$DW$250, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$250, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$250, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$250, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$250, DW_AT_decl_column(0x16)
$C$DW$251	.dwtag  DW_TAG_member
	.dwattr $C$DW$251, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$251, DW_AT_name("flags")
	.dwattr $C$DW$251, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$251, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$251, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$251, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$251, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$75	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$75, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$75, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$75, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$75, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$75, DW_AT_decl_column(0x03)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x08)
$C$DW$252	.dwtag  DW_TAG_member
	.dwattr $C$DW$252, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$252, DW_AT_name("quot")
	.dwattr $C$DW$252, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$252, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$252, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$252, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$252, DW_AT_decl_column(0x16)
$C$DW$253	.dwtag  DW_TAG_member
	.dwattr $C$DW$253, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$253, DW_AT_name("rem")
	.dwattr $C$DW$253, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$253, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$253, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$253, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$253, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$76	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$76, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$76, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$76, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$76, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$76, DW_AT_decl_column(0x23)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x08)
$C$DW$254	.dwtag  DW_TAG_member
	.dwattr $C$DW$254, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$254, DW_AT_name("quot")
	.dwattr $C$DW$254, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$254, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$254, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$254, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x40)
	.dwattr $C$DW$254, DW_AT_decl_column(0x17)
$C$DW$255	.dwtag  DW_TAG_member
	.dwattr $C$DW$255, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$255, DW_AT_name("rem")
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$255, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$255, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$255, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x40)
	.dwattr $C$DW$255, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$77	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$77, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$77, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$77, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$77, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$77, DW_AT_decl_column(0x24)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x10)
$C$DW$256	.dwtag  DW_TAG_member
	.dwattr $C$DW$256, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$256, DW_AT_name("quot")
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$256, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$256, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$256, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$256, DW_AT_decl_line(0x43)
	.dwattr $C$DW$256, DW_AT_decl_column(0x1c)
$C$DW$257	.dwtag  DW_TAG_member
	.dwattr $C$DW$257, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$257, DW_AT_name("rem")
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$257, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$257, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$257, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$257, DW_AT_decl_line(0x43)
	.dwattr $C$DW$257, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$78	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$78, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$78, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$78, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$78, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$78, DW_AT_decl_column(0x29)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x24)
$C$DW$258	.dwtag  DW_TAG_member
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$258, DW_AT_name("area")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$258, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$258, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$258, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$258, DW_AT_decl_line(0x69)
	.dwattr $C$DW$258, DW_AT_decl_column(0x0d)
$C$DW$259	.dwtag  DW_TAG_member
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$259, DW_AT_name("xsum")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$259, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$259, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$259, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$259, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$259, DW_AT_decl_column(0x0d)
$C$DW$260	.dwtag  DW_TAG_member
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$260, DW_AT_name("ysum")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$260, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$260, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$260, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$260, DW_AT_decl_column(0x0d)
$C$DW$261	.dwtag  DW_TAG_member
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$261, DW_AT_name("xmin")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$261, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$261, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$261, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$261, DW_AT_decl_column(0x0d)
$C$DW$262	.dwtag  DW_TAG_member
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$262, DW_AT_name("ymin")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$262, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$262, DW_AT_decl_column(0x0d)
$C$DW$263	.dwtag  DW_TAG_member
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$263, DW_AT_name("xmax")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$263, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$263, DW_AT_decl_column(0x0d)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$264, DW_AT_name("ymax")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x70)
	.dwattr $C$DW$264, DW_AT_decl_column(0x0d)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$265, DW_AT_name("seedx")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x72)
	.dwattr $C$DW$265, DW_AT_decl_column(0x0d)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$266, DW_AT_name("seedy")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x73)
	.dwattr $C$DW$266, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$79	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$79, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$79, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$79, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$79, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$79, DW_AT_decl_column(0x03)

$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$267, DW_AT_name("daylight")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x52)
	.dwattr $C$DW$267, DW_AT_decl_column(0x0b)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$268, DW_AT_name("timezone")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x53)
	.dwattr $C$DW$268, DW_AT_decl_column(0x0b)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$269, DW_AT_name("tzname")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x54)
	.dwattr $C$DW$269, DW_AT_decl_column(0x0b)
$C$DW$270	.dwtag  DW_TAG_member
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$270, DW_AT_name("dstname")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$270, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x55)
	.dwattr $C$DW$270, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$34

	.dwattr $C$DW$T$34, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$34, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$34, DW_AT_decl_column(0x01)
$C$DW$T$80	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$80, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$80, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$80, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$80, DW_AT_decl_column(0x03)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x14)
$C$DW$271	.dwtag  DW_TAG_member
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$271, DW_AT_name("width")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("width")
	.dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0xaa)
	.dwattr $C$DW$271, DW_AT_decl_column(0x0d)
$C$DW$272	.dwtag  DW_TAG_member
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$272, DW_AT_name("height")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("height")
	.dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$272, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0xab)
	.dwattr $C$DW$272, DW_AT_decl_column(0x0d)
$C$DW$273	.dwtag  DW_TAG_member
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$273, DW_AT_name("marginPixels")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("marginPixels")
	.dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$273, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0xac)
	.dwattr $C$DW$273, DW_AT_decl_column(0x0d)
$C$DW$274	.dwtag  DW_TAG_member
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$274, DW_AT_name("fastDifferenceThreshold")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("fastDifferenceThreshold")
	.dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$274, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0xae)
	.dwattr $C$DW$274, DW_AT_decl_column(0x0d)
$C$DW$275	.dwtag  DW_TAG_member
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$275, DW_AT_name("n_features_desired")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("n_features_desired")
	.dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$275, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$275, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0xa9)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x10)
$C$DW$T$81	.dwtag  DW_TAG_typedef, DW_AT_name("CORBParameters")
	.dwattr $C$DW$T$81, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$81, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$81, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$81, DW_AT_decl_line(0xb3)
	.dwattr $C$DW$T$81, DW_AT_decl_column(0x02)

$C$DW$T$40	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x5a008)
$C$DW$276	.dwtag  DW_TAG_member
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$276, DW_AT_name("octave")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$276, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0xb9)
	.dwattr $C$DW$276, DW_AT_decl_column(0x0d)
$C$DW$277	.dwtag  DW_TAG_member
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$277, DW_AT_name("relative_patterns")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("relative_patterns")
	.dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$277, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0xbb)
	.dwattr $C$DW$277, DW_AT_decl_column(0x0d)
$C$DW$278	.dwtag  DW_TAG_member
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$278, DW_AT_name("rotated_patterns")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("rotated_patterns")
	.dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c004]
	.dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$278, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$278, DW_AT_decl_column(0x0d)
$C$DW$279	.dwtag  DW_TAG_member
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$279, DW_AT_name("integralImageWidth")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("integralImageWidth")
	.dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a004]
	.dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$279, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0xbd)
	.dwattr $C$DW$279, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$40

	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x10)
$C$DW$T$44	.dwtag  DW_TAG_typedef, DW_AT_name("CORBPatterns")
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$44, DW_AT_decl_line(0xbe)
	.dwattr $C$DW$T$44, DW_AT_decl_column(0x02)

$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x400)
$C$DW$280	.dwtag  DW_TAG_member
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$280, DW_AT_name("orientation_horizontal_offsets")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("orientation_horizontal_offsets")
	.dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$280, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0xc4)
	.dwattr $C$DW$280, DW_AT_decl_column(0x0d)
$C$DW$281	.dwtag  DW_TAG_member
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$281, DW_AT_name("orientation_vertical_offsets")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("orientation_vertical_offsets")
	.dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0x1e0]
	.dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$281, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0xc5)
	.dwattr $C$DW$281, DW_AT_decl_column(0x0d)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$282, DW_AT_name("u_max")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("u_max")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x3c0]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0xc6)
	.dwattr $C$DW$282, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0xc3)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x10)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOrientationOffsets")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0xc7)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x02)

$C$DW$T$52	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x5a420)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$283, DW_AT_name("patterns")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("patterns")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0xcd)
	.dwattr $C$DW$283, DW_AT_decl_column(0x1c)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$284, DW_AT_name("offsets")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("offsets")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a008]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0xce)
	.dwattr $C$DW$284, DW_AT_decl_column(0x1c)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$285, DW_AT_name("image")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("image")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a408]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0xcf)
	.dwattr $C$DW$285, DW_AT_decl_column(0x1c)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$286, DW_AT_name("prefimage")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("prefimage")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a40c]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0xd0)
	.dwattr $C$DW$286, DW_AT_decl_column(0x1c)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$287, DW_AT_name("harrisImage")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("harrisImage")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a410]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0xd1)
	.dwattr $C$DW$287, DW_AT_decl_column(0x1c)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$288, DW_AT_name("integralImage")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("integralImage")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a414]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0xd2)
	.dwattr $C$DW$288, DW_AT_decl_column(0x1c)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$289, DW_AT_name("scratchBuffer")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("scratchBuffer")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a418]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0xd3)
	.dwattr $C$DW$289, DW_AT_decl_column(0x1c)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$290, DW_AT_name("orbPattern31")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("orbPattern31")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x5a41c]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0xd4)
	.dwattr $C$DW$290, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$52

	.dwattr $C$DW$T$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0xcc)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x10)
$C$DW$T$82	.dwtag  DW_TAG_typedef, DW_AT_name("CORBInput")
	.dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$T$82, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$82, DW_AT_decl_line(0xd5)
	.dwattr $C$DW$T$82, DW_AT_decl_column(0x02)

$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x38)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$291, DW_AT_name("x")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("x")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0xdc)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0d)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$292, DW_AT_name("y")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("y")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0xde)
	.dwattr $C$DW$292, DW_AT_decl_column(0x0d)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$293, DW_AT_name("octave")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("octave")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0xe0)
	.dwattr $C$DW$293, DW_AT_decl_column(0x0d)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$294, DW_AT_name("angle")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("angle")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0xe3)
	.dwattr $C$DW$294, DW_AT_decl_column(0x0e)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$295, DW_AT_name("fastResponse")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("fastResponse")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0xe4)
	.dwattr $C$DW$295, DW_AT_decl_column(0x0e)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$296, DW_AT_name("harrisResponse")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("harrisResponse")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0xe5)
	.dwattr $C$DW$296, DW_AT_decl_column(0x0e)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$297, DW_AT_name("descriptor")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("descriptor")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0xe6)
	.dwattr $C$DW$297, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$55

	.dwattr $C$DW$T$55, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0xdb)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x10)
$C$DW$T$56	.dwtag  DW_TAG_typedef, DW_AT_name("CORBFeature")
	.dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0xe7)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x02)
$C$DW$T$57	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$57, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$T$57, DW_AT_address_class(0x20)

$C$DW$T$58	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x08)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$298, DW_AT_name("features")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("features")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0xed)
	.dwattr $C$DW$298, DW_AT_decl_column(0x12)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$299, DW_AT_name("n_features")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("n_features")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0xee)
	.dwattr $C$DW$299, DW_AT_decl_column(0x12)
	.dwendtag $C$DW$T$58

	.dwattr $C$DW$T$58, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$58, DW_AT_decl_line(0xec)
	.dwattr $C$DW$T$58, DW_AT_decl_column(0x10)
$C$DW$T$83	.dwtag  DW_TAG_typedef, DW_AT_name("CORBOutput")
	.dwattr $C$DW$T$83, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$T$83, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$83, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\c66\../../common/VLIB_orb.h")
	.dwattr $C$DW$T$83, DW_AT_decl_line(0xef)
	.dwattr $C$DW$T$83, DW_AT_decl_column(0x02)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$84	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$84, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$84, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$84, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$84, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$111	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$111, DW_AT_address_class(0x20)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x1d)
$C$DW$T$51	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$T$51, DW_AT_address_class(0x20)
$C$DW$T$125	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$125, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$T$125, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$125, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$125, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$125, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$127	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$20)

$C$DW$T$54	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x20)
$C$DW$300	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$300, DW_AT_upper_bound(0x1f)
	.dwendtag $C$DW$T$54

$C$DW$T$128	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$19)
$C$DW$T$129	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$128)
	.dwattr $C$DW$T$129, DW_AT_address_class(0x20)
$C$DW$T$130	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$129)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$46	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$46, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x1d)
$C$DW$T$47	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$47, DW_AT_address_class(0x20)
$C$DW$T$132	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$132, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$132, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$132, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$132, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$133	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$133, DW_AT_address_class(0x20)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1c)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$135	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$22)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x16)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x0d)
$C$DW$T$31	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$31, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x1d)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x11)

$C$DW$T$36	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x2000)
$C$DW$301	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$301, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$36


$C$DW$T$37	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x3c000)
$C$DW$302	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$302, DW_AT_upper_bound(0x1d)
$C$DW$303	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$303, DW_AT_upper_bound(0x7ff)
	.dwendtag $C$DW$T$37


$C$DW$T$38	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$38, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$38, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x1000)
$C$DW$304	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$304, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$38


$C$DW$T$39	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x1e000)
$C$DW$305	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$305, DW_AT_upper_bound(0x1d)
$C$DW$306	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$306, DW_AT_upper_bound(0x3ff)
	.dwendtag $C$DW$T$39


$C$DW$T$41	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x1e0)
$C$DW$307	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$307, DW_AT_upper_bound(0x77)
	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$42, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x40)
$C$DW$308	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$308, DW_AT_upper_bound(0x0f)
	.dwendtag $C$DW$T$42


$C$DW$T$59	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$59, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$59, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x10)
$C$DW$309	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$309, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$59

$C$DW$T$107	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$107, DW_AT_address_class(0x20)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x17)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x17)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x17)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x17)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x17)
$C$DW$T$170	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$170, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$170, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$170, DW_AT_decl_column(0x16)
$C$DW$T$85	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$85, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$85, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$85, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$85, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$85, DW_AT_decl_column(0x19)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x16)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x1c)
$C$DW$T$49	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$49, DW_AT_address_class(0x20)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x16)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x16)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x16)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x16)
$C$DW$T$169	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$169, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$169, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$171	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$171, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$171, DW_AT_decl_column(0x21)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$171)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x17)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$171)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x20)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x16)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$178	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$178, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$178, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$178, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$178, DW_AT_decl_column(0x21)
$C$DW$T$179	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$T$179, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$179, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$179, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$179, DW_AT_decl_column(0x17)
$C$DW$T$180	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$T$180, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$180, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$180, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$180, DW_AT_decl_column(0x17)
$C$DW$T$181	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$181, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$181, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$181, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$181, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$181, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$183	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$183, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$183, DW_AT_address_class(0x20)
$C$DW$T$184	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$184, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$184, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$184, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$184, DW_AT_decl_column(0x20)

$C$DW$T$185	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$185, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$T$185, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$185, DW_AT_byte_size(0x10)
$C$DW$310	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$310, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$185

$C$DW$T$186	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$186, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$T$186, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$186, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$186, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$186, DW_AT_decl_column(0x16)
$C$DW$T$187	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$187, DW_AT_type(*$C$DW$T$184)
	.dwattr $C$DW$T$187, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$187, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$187, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$187, DW_AT_decl_column(0x16)
$C$DW$T$188	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$188, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$188, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$188, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$188, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$188, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x0f)
$C$DW$T$189	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$189, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$189, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$189, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$189, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$189, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$190	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$190, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$190, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$190, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_afast9_detectCorners\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$190, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$190, DW_AT_decl_column(0x10)
$C$DW$T$191	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$191, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$191, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$191, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$191, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$191, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$23	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$23, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$23, DW_AT_name("signed char")
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x01)
$C$DW$T$24	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_address_class(0x20)
$C$DW$T$192	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$192, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$192, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$192, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$192, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$192, DW_AT_decl_column(0x12)

$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$311	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$311, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$33

$C$DW$T$137	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$23)
$C$DW$T$138	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$137)
	.dwattr $C$DW$T$138, DW_AT_address_class(0x20)

$C$DW$T$193	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$193, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$193, DW_AT_language(DW_LANG_C)
$C$DW$312	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$193


$C$DW$T$60	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$60, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x10)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$313, DW_AT_name("_v")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x44)
	.dwattr $C$DW$313, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$60

	.dwattr $C$DW$T$60, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$60, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$60, DW_AT_decl_column(0x01)
$C$DW$T$194	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$194, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$T$194, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$194, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$194, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$194, DW_AT_decl_column(0x01)
$C$DW$T$195	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$T$194)
	.dwattr $C$DW$T$195, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$195, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$195, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$195, DW_AT_decl_column(0x13)

$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("tm")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x24)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$314, DW_AT_name("tm_sec")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x41)
	.dwattr $C$DW$314, DW_AT_decl_column(0x09)
$C$DW$315	.dwtag  DW_TAG_member
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$315, DW_AT_name("tm_min")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$315, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x42)
	.dwattr $C$DW$315, DW_AT_decl_column(0x09)
$C$DW$316	.dwtag  DW_TAG_member
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$316, DW_AT_name("tm_hour")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$316, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$316, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$316, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x43)
	.dwattr $C$DW$316, DW_AT_decl_column(0x09)
$C$DW$317	.dwtag  DW_TAG_member
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$317, DW_AT_name("tm_mday")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$317, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$317, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$317, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x44)
	.dwattr $C$DW$317, DW_AT_decl_column(0x09)
$C$DW$318	.dwtag  DW_TAG_member
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$318, DW_AT_name("tm_mon")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$318, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$318, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$318, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x45)
	.dwattr $C$DW$318, DW_AT_decl_column(0x09)
$C$DW$319	.dwtag  DW_TAG_member
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$319, DW_AT_name("tm_year")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$319, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$319, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$319, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x46)
	.dwattr $C$DW$319, DW_AT_decl_column(0x09)
$C$DW$320	.dwtag  DW_TAG_member
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$320, DW_AT_name("tm_wday")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$320, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$320, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$320, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x47)
	.dwattr $C$DW$320, DW_AT_decl_column(0x09)
$C$DW$321	.dwtag  DW_TAG_member
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$321, DW_AT_name("tm_yday")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$321, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x48)
	.dwattr $C$DW$321, DW_AT_decl_column(0x09)
$C$DW$322	.dwtag  DW_TAG_member
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$322, DW_AT_name("tm_isdst")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$322, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x49)
	.dwattr $C$DW$322, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$61

	.dwattr $C$DW$T$61, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$61, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$61, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

