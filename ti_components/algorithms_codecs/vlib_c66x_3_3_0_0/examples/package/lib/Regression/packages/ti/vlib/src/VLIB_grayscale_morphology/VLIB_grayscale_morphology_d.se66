;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:10:13 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$119)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$23)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$119)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("memset")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("memset")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/string.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$11, DW_AT_decl_column(0x16)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$3)
$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$10)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$55)
	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x86)
	.dwattr $C$DW$15, DW_AT_decl_column(0x19)
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$15


$C$DW$17	.dwtag  DW_TAG_subprogram, DW_AT_name("memalign")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("memalign")
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwattr $C$DW$17, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$17, DW_AT_decl_line(0x87)
	.dwattr $C$DW$17, DW_AT_decl_column(0x19)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$55)
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$55)
	.dwendtag $C$DW$17


$C$DW$20	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwattr $C$DW$20, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$20, DW_AT_decl_line(0x58)
	.dwattr $C$DW$20, DW_AT_decl_column(0x05)

$C$DW$21	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwattr $C$DW$21, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$21, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$21, DW_AT_decl_column(0x06)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$21


$C$DW$24	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwattr $C$DW$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$24, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$24, DW_AT_decl_column(0x06)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$23)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$24


$C$DW$31	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external
	.dwattr $C$DW$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$31, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$31, DW_AT_decl_column(0x06)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$31


$C$DW$33	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external
	.dwattr $C$DW$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$33, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$33, DW_AT_decl_column(0x06)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$10)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$23)
$C$DW$36	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$33


$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x80)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$70)
	.dwendtag $C$DW$37


$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x81)
	.dwattr $C$DW$39, DW_AT_decl_column(0x06)

$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x82)
	.dwattr $C$DW$40, DW_AT_decl_column(0x0a)

$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x83)
	.dwattr $C$DW$41, DW_AT_decl_column(0x06)

$C$DW$42	.dwtag  DW_TAG_subprogram, DW_AT_name("copyRoi")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("copyRoi")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwattr $C$DW$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_memory.h")
	.dwattr $C$DW$42, DW_AT_decl_line(0x79)
	.dwattr $C$DW$42, DW_AT_decl_column(0x06)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$3)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$3)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$21)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$21)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$21)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$19)
	.dwendtag $C$DW$42


$C$DW$49	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwattr $C$DW$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_memory.h")
	.dwattr $C$DW$49, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$49, DW_AT_decl_column(0x06)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$19)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$19)
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$3)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$3)
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$21)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$21)
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$21)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$19)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$23)
	.dwendtag $C$DW$49


$C$DW$59	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("VLIB_memalign")
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwattr $C$DW$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_memory.h")
	.dwattr $C$DW$59, DW_AT_decl_line(0xb1)
	.dwattr $C$DW$59, DW_AT_decl_column(0x07)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$55)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$55)
	.dwendtag $C$DW$59


$C$DW$62	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("VLIB_align_free")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
	.dwattr $C$DW$62, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_memory.h")
	.dwattr $C$DW$62, DW_AT_decl_line(0xb6)
	.dwattr $C$DW$62, DW_AT_decl_column(0x07)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$62


$C$DW$64	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_grayscale_morphology")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("VLIB_grayscale_morphology")
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
	.dwattr $C$DW$64, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66/VLIB_grayscale_morphology.h")
	.dwattr $C$DW$64, DW_AT_decl_line(0x80)
	.dwattr $C$DW$64, DW_AT_decl_column(0x09)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$21)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$21)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$21)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$81)
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$21)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$21)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$81)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$81)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$20)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$20)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$20)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$19)
	.dwendtag $C$DW$64


$C$DW$77	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_grayscale_morphology_cn")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("VLIB_grayscale_morphology_cn")
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
	.dwattr $C$DW$77, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_cn.h")
	.dwattr $C$DW$77, DW_AT_decl_line(0x24)
	.dwattr $C$DW$77, DW_AT_decl_column(0x09)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$21)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$21)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$21)
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$81)
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$21)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$21)
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$81)
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$81)
$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$20)
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$20)
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$20)
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$38)
	.dwendtag $C$DW$77


$C$DW$90	.dwtag  DW_TAG_subprogram, DW_AT_name("grayScaleMorph_getTestParams")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("grayScaleMorph_getTestParams")
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$90, DW_AT_decl_line(0x31)
	.dwattr $C$DW$90, DW_AT_decl_column(0x06)
$C$DW$91	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$47)
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$86)
	.dwendtag $C$DW$90

$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
	.dwattr $C$DW$93, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$93, DW_AT_decl_line(0x60)
	.dwattr $C$DW$93, DW_AT_decl_column(0x13)
$C$DW$94	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external
	.dwattr $C$DW$94, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$94, DW_AT_decl_line(0x62)
	.dwattr $C$DW$94, DW_AT_decl_column(0x13)
$C$DW$95	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$170)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
	.dwattr $C$DW$95, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$95, DW_AT_decl_line(0x63)
	.dwattr $C$DW$95, DW_AT_decl_column(0x13)
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$170)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
	.dwattr $C$DW$96, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$96, DW_AT_decl_line(0x64)
	.dwattr $C$DW$96, DW_AT_decl_column(0x13)
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwattr $C$DW$97, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$97, DW_AT_decl_line(0x75)
	.dwattr $C$DW$97, DW_AT_decl_column(0x14)
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwattr $C$DW$98, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$98, DW_AT_decl_line(0x76)
	.dwattr $C$DW$98, DW_AT_decl_column(0x14)
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwattr $C$DW$99, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$99, DW_AT_decl_line(0x77)
	.dwattr $C$DW$99, DW_AT_decl_column(0x14)
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwattr $C$DW$100, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$100, DW_AT_decl_line(0x78)
	.dwattr $C$DW$100, DW_AT_decl_column(0x14)
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$160)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwattr $C$DW$101, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h")
	.dwattr $C$DW$101, DW_AT_decl_line(0x79)
	.dwattr $C$DW$101, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\009563 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\009565 
	.sect	".text"
	.clink
	.global	VLIB_grayscale_morphology_d

$C$DW$102	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_grayscale_morphology_d")
	.dwattr $C$DW$102, DW_AT_low_pc(VLIB_grayscale_morphology_d)
	.dwattr $C$DW$102, DW_AT_high_pc(0x00)
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("VLIB_grayscale_morphology_d")
	.dwattr $C$DW$102, DW_AT_external
	.dwattr $C$DW$102, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$102, DW_AT_TI_begin_line(0x25)
	.dwattr $C$DW$102, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$102, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$102, DW_AT_decl_line(0x25)
	.dwattr $C$DW$102, DW_AT_decl_column(0x06)
	.dwattr $C$DW$102, DW_AT_TI_max_frame_size(0xa0)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 38,column 1,is_stmt,address VLIB_grayscale_morphology_d,isa 0

	.dwfde $C$DW$CIE, VLIB_grayscale_morphology_d
$C$DW$103	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  37 | void VLIB_grayscale_morphology_d(uint8_t LevelOfFeedback)              
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_grayscale_morphology_d                                 *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 32 Args + 68 Auto + 56 Save = 156 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_grayscale_morphology_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 45	-----------------------    grayScaleMorph_getTestParams(&prm, &test_cases);
;** 47	-----------------------    operation = 0;
;**  	-----------------------    #pragma MUST_ITERATE(7, 7, 7)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  39 | int32_t                         tpi; /* test parameter index */        
;  40 | GrayscaleMorphologyOperation    operation;                             
;  43 | grayScaleMorph_testParams_t   *prm;                                    
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |38| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |38| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |38| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |38| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |38| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |38| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(112)     ; |38| 
	.dwcfi	cfa_offset, 160
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C3")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C3")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg21]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C4")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C4")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg20]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg3]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg4]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg3]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg8]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg8]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg6]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg6]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$f2")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$f2")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg0]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$U32")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$U32")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg29]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$U31")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$U31")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg14]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$U72")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$U72")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_breg31 72]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$U78")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$U78")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg3]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$K89")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$K89")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg20]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$K102")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$K102")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg20]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$U105")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$U105")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg21]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$K111")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$K111")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg13]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$U123")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$U123")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg28]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$U93")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$U93")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg10]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$U135")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$U135")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_reg5]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$U131")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$U131")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg22]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$K160")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$K160")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg8]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg15]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg28]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("outPadY")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("outPadY")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_breg31 72]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("outPadX")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("outPadX")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_reg15]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_reg21]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_reg13]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("struct_elem_refl")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("struct_elem_refl")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 76]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("struct_elem")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("struct_elem")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_breg31 80]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("scratch2")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("scratch2")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_breg31 84]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("scratch1")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("scratch1")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_breg31 88]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("output_cn")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("output_cn")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_breg31 92]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("output_opt")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("output_opt")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_breg31 96]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("input")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("input")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_breg31 100]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_reg26]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_breg31 36]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("operation")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("operation")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg27]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg11]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg20]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg12]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_reg24]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_reg20]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("testName")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("testName")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$171)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_breg31 40]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("grayScaleMorph_getTestParams")
	.dwattr $C$DW$149, DW_AT_TI_call

           CALLP   .S2     grayScaleMorph_getTestParams,B3
||         ADDAW   .D1X    SP,9,A4           ; |45| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 45,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  45 | grayScaleMorph_getTestParams(&prm, &test_cases);                       
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {grayScaleMorph_getTestParams} {0}  ; |45| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 2

           ZERO    .L2     B11               ; |47| 
||         MVKL    .S2     $C$SW1,B4

           CMPGTU  .L2     B11,6,B0          ; |51| 
||         MVKH    .S2     $C$SW1,B4

;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 47,column 10,is_stmt,isa 0
;----------------------------------------------------------------------
;  47 | for( operation = GRAYSCALE_MORPH_DILATE; operation <= GRAYSCALE_MORPH_G
;     | RADIENT; operation++ ) {                                               
;  49 |     char    testName[32];                                              
;  51 |     switch( operation ) {                                              
;  52 |         case GRAYSCALE_MORPH_DILATE :                                  
;  53 |             strcpy(testName, "GRAYSCALE_MORPH_DILATE");                
;  54 |             break;                                                     
;  56 |         case GRAYSCALE_MORPH_ERODE :                                   
;  57 |             strcpy(testName, "GRAYSCALE_MORPH_ERODE");                 
;  58 |             break;                                                     
;  60 |         case GRAYSCALE_MORPH_OPEN :                                    
;  61 |             strcpy(testName, "GRAYSCALE_MORPH_OPEN");                  
;  62 |             break;                                                     
;  64 |         case GRAYSCALE_MORPH_CLOSE :                                   
;  65 |             strcpy(testName, "GRAYSCALE_MORPH_CLOSE");                 
;  66 |             break;                                                     
;  68 |         case GRAYSCALE_MORPH_TOPHAT :                                  
;  69 |             strcpy(testName, "GRAYSCALE_MORPH_TOPHAT");                
;  70 |             break;                                                     
;  72 |         case GRAYSCALE_MORPH_BOTHAT :                                  
;  73 |             strcpy(testName, "GRAYSCALE_MORPH_BOTHAT");                
;  74 |             break;                                                     
;  76 |         case GRAYSCALE_MORPH_GRADIENT :                                
;  77 |             strcpy(testName, "GRAYSCALE_MORPH_GRADIENT");              
;  78 |             break;                                                     
;----------------------------------------------------------------------
$C$DW$L$VLIB_grayscale_morphology_d$3$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g2:
;** 51	-----------------------    switch ( operation ) {case 0: goto g9;, case 1: goto g8;, case 2: goto g7;, case 3: goto g6;, case 4: goto g5;, case 5: goto g4;, case 6: goto g3;, DEFAULT goto g10};

   [ B0]   B       .S1     $C$L10            ; |51| 
|| [!B0]   LDW     .D2T2   *+B4[B11],B4      ; |51| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 82,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  82 | VLIB_profile_init(2, testName);                                        
;----------------------------------------------------------------------
$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$150, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$150, DW_AT_TI_call
   [ B0]   CALL    .S1     VLIB_profile_init ; |82| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10} {-8}   ; |51| 
$C$DW$L$VLIB_grayscale_morphology_d$3$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
           BNOP    .S2     B4,5              ; |51| 
           ; BRANCH OCCURS {B4}              ; |51| 
	.sect	".switch:VLIB_grayscale_morphology_d"
	.clink
$C$SW1:	.word	$C$L8	; 0
	.word	$C$L7	; 1
	.word	$C$L6	; 2
	.word	$C$L5	; 3
	.word	$C$L4	; 4
	.word	$C$L3	; 5
	.word	$C$L2	; 6
	.sect	".text"
$C$DW$L$VLIB_grayscale_morphology_d$4$E:
;** --------------------------------------------------------------------------*
$C$L2:    
$C$DW$L$VLIB_grayscale_morphology_d$5$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g3:
;** 77	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_GRADIENT", 25u);
;** 78	-----------------------    goto g10;
           MVKL    .S1     $C$SL1+0,A8
           MVKH    .S1     $C$SL1+0,A8
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 77,column 17,is_stmt,isa 0
           LDB     .D1T1   *+A8(24),A3       ; |77| 
           LDNDW   .D1T1   *+A8(8),A7:A6     ; |77| 
           LDNDW   .D1T1   *+A8(16),A5:A4    ; |77| 

           B       .S1     $C$L9             ; |78| 
||         LDNDW   .D1T1   *A8,A9:A8         ; |77| 

           ADDAW   .D2     SP,10,B4          ; |77| 
           STB     .D2T1   A3,*+B4(24)       ; |77| 
           STNDW   .D2T1   A7:A6,*+B4(8)     ; |77| 
           STNDW   .D2T1   A5:A4,*+B4(16)    ; |77| 
           STNDW   .D2T1   A9:A8,*B4         ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 78,column 22,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L9}           ; |78| 
$C$DW$L$VLIB_grayscale_morphology_d$5$E:
;** --------------------------------------------------------------------------*
$C$L3:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$6$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g4:
;** 73	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_BOTHAT", 23u);
;** 74	-----------------------    goto g10;
           MVKL    .S1     $C$SL2+0,A6
           MVKH    .S1     $C$SL2+0,A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 73,column 17,is_stmt,isa 0
           LDB     .D1T1   *+A6(22),A3       ; |73| 
           LDNW    .D1T1   *+A6(16),A16      ; |73| 
           LDB     .D1T1   *+A6(20),A9       ; |73| 
           LDB     .D1T1   *+A6(21),A8       ; |73| 
           LDNDW   .D1T1   *+A6(8),A5:A4     ; |73| 

           LDNDW   .D1T1   *A6,A7:A6         ; |73| 
||         ADDAW   .D2     SP,10,B4          ; |73| 

           B       .S1     $C$L9             ; |74| 
||         STNW    .D2T1   A16,*+B4(16)      ; |73| 

           STB     .D2T1   A9,*+B4(20)       ; |73| 
           STB     .D2T1   A8,*+B4(21)       ; |73| 
           STB     .D2T1   A3,*+B4(22)       ; |73| 
           STNDW   .D2T1   A5:A4,*+B4(8)     ; |73| 
           STNDW   .D2T1   A7:A6,*B4         ; |73| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 74,column 22,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L9}           ; |74| 
$C$DW$L$VLIB_grayscale_morphology_d$6$E:
;** --------------------------------------------------------------------------*
$C$L4:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$7$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g5:
;** 69	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_TOPHAT", 23u);
;** 70	-----------------------    goto g10;
           MVKL    .S1     $C$SL3+0,A6
           MVKH    .S1     $C$SL3+0,A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 69,column 17,is_stmt,isa 0
           LDB     .D1T1   *+A6(22),A3       ; |69| 
           LDNW    .D1T1   *+A6(16),A16      ; |69| 
           LDB     .D1T1   *+A6(20),A9       ; |69| 
           LDB     .D1T1   *+A6(21),A8       ; |69| 
           LDNDW   .D1T1   *+A6(8),A5:A4     ; |69| 

           LDNDW   .D1T1   *A6,A7:A6         ; |69| 
||         ADDAW   .D2     SP,10,B4          ; |69| 

           B       .S1     $C$L9             ; |70| 
||         STNW    .D2T1   A16,*+B4(16)      ; |69| 

           STB     .D2T1   A9,*+B4(20)       ; |69| 
           STB     .D2T1   A8,*+B4(21)       ; |69| 
           STB     .D2T1   A3,*+B4(22)       ; |69| 
           STNDW   .D2T1   A5:A4,*+B4(8)     ; |69| 
           STNDW   .D2T1   A7:A6,*B4         ; |69| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 70,column 22,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L9}           ; |70| 
$C$DW$L$VLIB_grayscale_morphology_d$7$E:
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$8$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g6:
;** 65	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_CLOSE", 22u);
;** 66	-----------------------    goto g10;
           MVKL    .S1     $C$SL4+0,A6
           MVKH    .S1     $C$SL4+0,A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 65,column 17,is_stmt,isa 0
           LDNW    .D1T1   *+A6(16),A9       ; |65| 
           LDB     .D1T1   *+A6(20),A8       ; |65| 
           LDB     .D1T1   *+A6(21),A3       ; |65| 
           LDNDW   .D1T1   *+A6(8),A5:A4     ; |65| 

           B       .S1     $C$L9             ; |66| 
||         LDNDW   .D1T1   *A6,A7:A6         ; |65| 
||         ADDAW   .D2     SP,10,B4          ; |65| 

           STNW    .D2T1   A9,*+B4(16)       ; |65| 
           STB     .D2T1   A8,*+B4(20)       ; |65| 
           STB     .D2T1   A3,*+B4(21)       ; |65| 
           STNDW   .D2T1   A5:A4,*+B4(8)     ; |65| 
           STNDW   .D2T1   A7:A6,*B4         ; |65| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 66,column 22,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L9}           ; |66| 
$C$DW$L$VLIB_grayscale_morphology_d$8$E:
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$9$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g7:
;** 61	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_OPEN", 21u);
;** 62	-----------------------    goto g10;
           MVKL    .S1     $C$SL5+0,A6
           MVKH    .S1     $C$SL5+0,A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 61,column 17,is_stmt,isa 0
           LDNW    .D1T1   *+A6(16),A8       ; |61| 
           LDB     .D1T1   *+A6(20),A3       ; |61| 
           LDNDW   .D1T1   *+A6(8),A5:A4     ; |61| 

           B       .S1     $C$L9             ; |62| 
||         LDNDW   .D1T1   *A6,A7:A6         ; |61| 

           ADDAW   .D2     SP,10,B4          ; |61| 
           STNW    .D2T1   A8,*+B4(16)       ; |61| 
           STB     .D2T1   A3,*+B4(20)       ; |61| 
           STNDW   .D2T1   A5:A4,*+B4(8)     ; |61| 
           STNDW   .D2T1   A7:A6,*B4         ; |61| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 62,column 22,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L9}           ; |62| 
$C$DW$L$VLIB_grayscale_morphology_d$9$E:
;** --------------------------------------------------------------------------*
$C$L7:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$10$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g8:
;** 57	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_ERODE", 22u);
;** 58	-----------------------    goto g10;
           MVKL    .S1     $C$SL6+0,A6
           MVKH    .S1     $C$SL6+0,A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 57,column 17,is_stmt,isa 0
           LDNW    .D1T1   *+A6(16),A9       ; |57| 
           LDB     .D1T1   *+A6(20),A8       ; |57| 
           LDB     .D1T1   *+A6(21),A3       ; |57| 
           LDNDW   .D1T1   *+A6(8),A5:A4     ; |57| 

           B       .S1     $C$L9             ; |58| 
||         LDNDW   .D1T1   *A6,A7:A6         ; |57| 
||         ADDAW   .D2     SP,10,B4          ; |57| 

           STNW    .D2T1   A9,*+B4(16)       ; |57| 
           STB     .D2T1   A8,*+B4(20)       ; |57| 
           STB     .D2T1   A3,*+B4(21)       ; |57| 
           STNDW   .D2T1   A5:A4,*+B4(8)     ; |57| 
           STNDW   .D2T1   A7:A6,*B4         ; |57| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 58,column 22,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L9}           ; |58| 
$C$DW$L$VLIB_grayscale_morphology_d$10$E:
;** --------------------------------------------------------------------------*
$C$L8:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$11$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g9:
;** 53	-----------------------    memcpy(&testName, (const char *)"GRAYSCALE_MORPH_DILATE", 23u);
           MVKL    .S1     $C$SL7+0,A6
           MVKH    .S1     $C$SL7+0,A6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 53,column 17,is_stmt,isa 0
           LDB     .D1T1   *+A6(22),A3       ; |53| 
           LDNW    .D1T1   *+A6(16),A16      ; |53| 
           LDB     .D1T1   *+A6(20),A9       ; |53| 
           LDB     .D1T1   *+A6(21),A8       ; |53| 
           LDNDW   .D1T1   *+A6(8),A5:A4     ; |53| 

           LDNDW   .D1T1   *A6,A7:A6         ; |53| 
||         ADDAW   .D2     SP,10,B4          ; |53| 

           STNW    .D2T1   A16,*+B4(16)      ; |53| 
           STB     .D2T1   A9,*+B4(20)       ; |53| 
           STB     .D2T1   A8,*+B4(21)       ; |53| 
           STB     .D2T1   A3,*+B4(22)       ; |53| 
           STNDW   .D2T1   A5:A4,*+B4(8)     ; |53| 
           STNDW   .D2T1   A7:A6,*B4         ; |53| 
$C$DW$L$VLIB_grayscale_morphology_d$11$E:
;** --------------------------------------------------------------------------*
$C$L9:    
$C$DW$L$VLIB_grayscale_morphology_d$12$B:
;          EXCLUSIVE CPU CYCLES: 5
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 82,column 9,is_stmt,isa 0
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$151, DW_AT_TI_call
           CALL    .S1     VLIB_profile_init ; |82| 
           NOP             4
$C$DW$L$VLIB_grayscale_morphology_d$12$E:
;** --------------------------------------------------------------------------*
$C$L10:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 51,column 9,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$13$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g10:
;** 82	-----------------------    VLIB_profile_init(2, &testName);
;** 85	-----------------------    if ( test_cases <= 0 ) goto g27;

           MVK     .L1     0x2,A4            ; |82| 
||         ADDAW   .D2     SP,10,B4          ; |82| 
||         ADDKPC  .S2     $C$RL1,B3,0       ; |82| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 82,column 9,is_stmt,isa 0
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |82| 
$C$DW$L$VLIB_grayscale_morphology_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$14$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 85,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  85 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;  88 |     int32_t    status_nat_vs_int  = vlib_KERNEL_PASS; /* Test status :
;     | Natural c vs. Optimized */                                             
;----------------------------------------------------------------------
           LDW     .D1T1   *A3,A3            ; |85| 
           LDW     .D2T2   *+SP(36),B13
           NOP             3
           CMPGT   .L1     A3,0,A0           ; |85| 

   [!A0]   BNOP    .S2     $C$L21,4          ; |85| 
|| [ A0]   ZERO    .L1     A11               ; |85| 
|| [ A0]   ZERO    .S1     A14               ; |85| 
|| [ A0]   LDHU    .D2T2   *+B13(22),B5      ; |91| 
|| [ A0]   MVK     .D1     0x8,A4            ; |91| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 91,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  91 | uint8_t   *input             = (uint8_t *) VLIB_memalign(8, prm[tpi].im
;     | agePitch * prm[tpi].imageHeight);                                      
;----------------------------------------------------------------------
   [ A0]   LDHU    .D2T2   *+B13(24),B4      ; |91| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 85,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L21}        ; |85| 
$C$DW$L$VLIB_grayscale_morphology_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$15$B:
;**  	-----------------------    K$160 = &desc[0];
;**  	-----------------------    U$32 = prm;
;**  	-----------------------    U$31 = 0;
;** 85	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_grayscale_morphology_d$15$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L11
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 85,column 14,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$16$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g12:
;** 91	-----------------------    input = VLIB_memalign(8u, (unsigned)((*U$32).imagePitch*(*U$32).imageHeight));
;** 92	-----------------------    output_opt = VLIB_memalign(8u, (unsigned)((*U$32).imagePitch*(*U$32).imageHeight));
;** 93	-----------------------    output_cn = memalign(8u, (unsigned)((*U$32).imagePitch*(*U$32).imageHeight));
;** 94	-----------------------    scratch1 = VLIB_memalign(8u, (unsigned)((*U$32).imagePitch*(*U$32).imageHeight));
;** 95	-----------------------    scratch2 = VLIB_memalign(8u, (unsigned)((*U$32).imagePitch*(*U$32).imageHeight));
;** 96	-----------------------    struct_elem = VLIB_memalign(8u, (unsigned)((*U$32).se_w*(*U$32).se_h));
;** 97	-----------------------    struct_elem_refl = VLIB_memalign(8u, (unsigned)((*U$32).se_w*(*U$32).se_h));
;** 100	-----------------------    if ( !((input != NULL)&(output_opt != NULL)&(output_cn != NULL)&(scratch1 != NULL)&(scratch2 != NULL)&(struct_elem != NULL)&(struct_elem_refl != NULL)) ) goto g25;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 91,column 24,is_stmt,isa 0
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$152, DW_AT_TI_call
           CALL    .S1     VLIB_memalign     ; |91| 
           ADDKPC  .S2     $C$RL2,B3,2       ; |91| 
           MPYU    .M2     B5,B4,B4          ; |91| 
           NOP             1
$C$RL2:    ; CALL OCCURS {VLIB_memalign} {0}  ; |91| 
$C$DW$L$VLIB_grayscale_morphology_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$17$B:
;          EXCLUSIVE CPU CYCLES: 72
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 92,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  92 | uint8_t   *output_opt        = (uint8_t *) VLIB_memalign(8, prm[tpi].im
;     | agePitch * prm[tpi].imageHeight);                                      
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B13(22),B5      ; |92| 
           LDHU    .D2T2   *+B13(24),B4      ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 91,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(100)      ; |91| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 92,column 24,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |92| 
           NOP             2
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$153, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MPYU    .M2     B5,B4,B4          ; |92| 

$C$RL3:    ; CALL OCCURS {VLIB_memalign} {0}  ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 93,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  93 | uint8_t   *output_cn         = (uint8_t *) memalign(8, prm[tpi].imagePi
;     | tch * prm[tpi].imageHeight);                                           
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B13(22),B5      ; |93| 
           LDHU    .D2T2   *+B13(24),B4      ; |93| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 92,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(96)       ; |92| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 93,column 24,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |93| 
           NOP             2
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("memalign")
	.dwattr $C$DW$154, DW_AT_TI_call

           CALLP   .S2     memalign,B3
||         MPYU    .M2     B5,B4,B4          ; |93| 

$C$RL4:    ; CALL OCCURS {memalign} {0}      ; |93| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 94,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  94 | uint8_t   *scratch1          = (uint8_t *) VLIB_memalign(8, prm[tpi].im
;     | agePitch * prm[tpi].imageHeight);                                      
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B13(22),B5      ; |94| 
           LDHU    .D2T2   *+B13(24),B4      ; |94| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 93,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(92)       ; |93| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 94,column 24,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |94| 
           NOP             2
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$155, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MPYU    .M2     B5,B4,B4          ; |94| 

$C$RL5:    ; CALL OCCURS {VLIB_memalign} {0}  ; |94| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 95,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  95 | uint8_t   *scratch2          = (uint8_t *) VLIB_memalign(8, prm[tpi].im
;     | agePitch * prm[tpi].imageHeight);                                      
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B13(22),B5      ; |95| 
           LDHU    .D2T2   *+B13(24),B4      ; |95| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 94,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(88)       ; |94| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 95,column 24,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |95| 
           NOP             2
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$156, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MPYU    .M2     B5,B4,B4          ; |95| 

$C$RL6:    ; CALL OCCURS {VLIB_memalign} {0}  ; |95| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 96,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  96 | uint8_t   *struct_elem       = (uint8_t *) VLIB_memalign(8, prm[tpi].se
;     | _w * prm[tpi].se_h);                                                   
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B13(28),B5      ; |96| 
           LDHU    .D2T2   *+B13(26),B4      ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 95,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(84)       ; |95| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 96,column 24,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |96| 
           NOP             2
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$157, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MPYU    .M2     B5,B4,B4          ; |96| 

$C$RL7:    ; CALL OCCURS {VLIB_memalign} {0}  ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 97,column 24,is_stmt,isa 0
;----------------------------------------------------------------------
;  97 | uint8_t   *struct_elem_refl  = (uint8_t *) VLIB_memalign(8, prm[tpi].se
;     | _w * prm[tpi].se_h);                                                   
;----------------------------------------------------------------------
           LDHU    .D2T2   *+B13(28),B5      ; |97| 
           LDHU    .D2T2   *+B13(26),B4      ; |97| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 96,column 24,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(80)       ; |96| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 97,column 24,is_stmt,isa 0
           MVK     .L1     0x8,A4            ; |97| 
           NOP             2
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("VLIB_memalign")
	.dwattr $C$DW$158, DW_AT_TI_call

           CALLP   .S2     VLIB_memalign,B3
||         MPYU    .M2     B5,B4,B4          ; |97| 

$C$RL8:    ; CALL OCCURS {VLIB_memalign} {0}  ; |97| 
$C$DW$L$VLIB_grayscale_morphology_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$18$B:
;          EXCLUSIVE CPU CYCLES: 22

           LDW     .D2T1   *+SP(92),A2       ; |100| 
||         ZERO    .L2     B6                ; |100| 
||         ZERO    .L1     A3                ; |100| 
||         ZERO    .S2     B5                ; |100| 

           LDW     .D2T1   *+SP(100),A0      ; |100| 
||         ZERO    .L2     B4                ; |100| 
||         MV      .S2X    A4,B2             ; |100| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 100,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 100 | if( input && output_opt && output_cn && scratch1 && scratch2 && struct_
;     | elem && struct_elem_refl ) {                                           
; 102 |     int32_t    fail;                                                   
; 103 |     int32_t    i, j;                                                   
; 104 |     int32_t    outPadX = ((operation == GRAYSCALE_MORPH_DILATE) || (ope
;     | ration == GRAYSCALE_MORPH_ERODE) ||                                    
; 105 |                           (operation == GRAYSCALE_MORPH_GRADIENT)) ? (p
;     | rm[tpi].se_w - 1) : 2 * (prm[tpi].se_w - 1);                           
; 106 |     int32_t    outPadY = ((operation == GRAYSCALE_MORPH_DILATE) || (ope
;     | ration == GRAYSCALE_MORPH_ERODE) ||                                    
; 107 |                           (operation == GRAYSCALE_MORPH_GRADIENT)) ? (p
;     | rm[tpi].se_h - 1) : 2 * (prm[tpi].se_h - 1);                           
;----------------------------------------------------------------------
           LDW     .D2T1   *+SP(88),A1       ; |100| 
           LDW     .D2T2   *+SP(96),B0       ; |100| 

           STW     .D2T1   A4,*+SP(76)       ; |97| 
||         ZERO    .L1     A4                ; |100| 

   [ A2]   MVK     .L2     0x1,B6            ; |100| 
||         LDW     .D2T1   *+SP(84),A2       ; |100| 

   [ A0]   MVK     .L2     0x1,B5            ; |100| 

   [ A1]   MVK     .L1     0x1,A3            ; |100| 
||         LDW     .D2T1   *+SP(80),A1       ; |100| 

   [ B0]   MVK     .L2     0x1,B4            ; |100| 
           AND     .L2     B4,B5,B4          ; |100| 
           AND     .L2     B6,B4,B4          ; |100| 
   [ A2]   MVK     .L1     0x1,A4            ; |100| 

           AND     .L1X    A3,B4,A5          ; |100| 
||         ZERO    .S1     A3                ; |100| 
||         ZERO    .L2     B4                ; |100| 

           AND     .L1     A4,A5,A4          ; |100| 
|| [ A1]   MVK     .S1     0x1,A3            ; |100| 
|| [ B2]   MVK     .L2     0x1,B4            ; |100| 

           AND     .L1     A3,A4,A3          ; |100| 

           AND     .L1X    B4,A3,A0          ; |100| 
||         LDW     .D2T2   *+SP(36),B4       ; |104| 

   [!A0]   B       .S1     $C$L19            ; |100| 
||         MV      .L1     A0,A1             ; |100| branch predicate copy
|| [ A0]   AND     .D1X    -2,B11,A3         ; |104| 

   [ A0]   CMPEQ   .L1     A3,0,A4           ; |104| 
||         MV      .L2X    A0,B1             ; guard predicate rewrite
|| [!A1]   LDHU    .D2T2   *+B13(26),B6      ; |162| 

   [!A1]   LDHU    .D2T2   *+B13(28),B5      ; |162| 
|| [ A0]   CMPEQ   .L1X    B11,6,A5          ; |104| 

   [ A0]   OR      .L1     A5,A4,A3          ; |104| 
|| [!A1]   LDHU    .D2T2   *+B13(20),B8      ; |162| 

   [ A0]   MV      .L1     A3,A0             ; |104| 
|| [ B1]   STW     .D2T1   A3,*+SP(72)       ; |104| 

   [!A0]   ADD     .L1X    B4,A14,A3
|| [!A1]   LDW     .D2T2   *+B13(32),B4      ; |162| 

           ; BRANCHCC OCCURS {$C$L19}        ; |100| 
$C$DW$L$VLIB_grayscale_morphology_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$19$B:
;          EXCLUSIVE CPU CYCLES: 12
;** 104	-----------------------    v$1 = prm;
;**  	-----------------------    K$102 = 255;
;**  	-----------------------    U$105 = (unsigned char)operation;
;** 104	-----------------------    if ( U$72 = ((operation&0xfffffffe) == 0)|(operation == 6) ) goto g15;
;** 104	-----------------------    outPadX = ((*U$32).se_w-1)*2;
;**  	-----------------------    U$78 = U$31+v$1;
;** 104	-----------------------    goto g16;
;**	-----------------------g15:
;** 104	-----------------------    U$78 = U$31+v$1;
;** 104	-----------------------    outPadX = (*U$78).se_w-1;
;**	-----------------------g16:
;** 106	-----------------------    U$72 ? (outPadY = (*U$78).se_h-1) : (outPadY = ((*U$78).se_h-1)*2);
;** 110	-----------------------    VLIB_fillBuffer((*U$78).testPattern, 0u, (void *)input, (*U$78).staticIn, (*U$78).imageWidth, (*U$78).imageHeight, (*U$78).imagePitch, 1u, K$89 = &testPatternString[0]);
;** 116	-----------------------    C$11 = (*U$32).se_w;
;** 116	-----------------------    copyRoi((void *)struct_elem, (*U$32).se_ptr, C$11, (*U$32).se_h, C$11, 1u);
;** 117	-----------------------    C$10 = (*U$32).se_w;
;** 117	-----------------------    copyRoi((void *)struct_elem_refl, (*U$32).se_reflc_ptr, C$10, (*U$32).se_h, C$10, 1u);
;** 120	-----------------------    memset((void *)output_opt, 0, 4u);
;** 121	-----------------------    memset((void *)output_cn, K$102, 4u);
;** 137	-----------------------    act_kernel = 0;  // [16]
;** 140	-----------------------    VLIB_cache_inval();  // [16]
;** 143	-----------------------    initStack(getSP());  // [16]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [16]
;** 125	-----------------------    VLIB_grayscale_morphology((*U$32).imageWidth, (*U$32).imagePitch, (*U$32).imageHeight, input, (*U$32).se_w, (*U$32).se_h, struct_elem, struct_elem_refl, scratch1, scratch2, output_opt, U$105);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [17]
;** 153	-----------------------    end_count = v$2;  // [17]
;**  	-----------------------    K$111 = &cycles[0];
;** 156	-----------------------    C$9 = act_kernel;  // [17]
;** 156	-----------------------    *((C$9<<3)+K$111) = *((C$9<<3)+K$111)+(v$2-(beg_count+overhead));  // [17]
;** 159	-----------------------    setStackDepth();  // [17]
;** 137	-----------------------    act_kernel = 1;  // [16]
;** 140	-----------------------    VLIB_cache_inval();  // [16]

   [ A0]   ADD     .L1X    B4,A14,A3         ; |104| 
|| [!A0]   LDHU    .D1T1   *+A3(28),A13      ; |106| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 110,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 110 | VLIB_fillBuffer(prm[tpi].testPattern,                                  
; 111 |                 (uint8_t)0,                                            
; 112 |                 input, prm[tpi].staticIn,                              
; 113 |                 prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].ima
;     | gePitch,                                                               
; 114 |                 sizeof(uint8_t), testPatternString);                   
;----------------------------------------------------------------------
           LDHU    .D1T2   *+A3(22),B8       ; |110| 
           LDHU    .D1T1   *+A3(20),A8       ; |110| 
           LDHU    .D1T1   *+A3(24),A10      ; |110| 
           LDBU    .D1T1   *A3,A4            ; |110| 

           LDW     .D1T2   *+A3(4),B6        ; |110| 
|| [!A0]   LDHU    .D2T1   *+B13(26),A15     ; |104| 

$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$159, DW_AT_TI_call

           CALL    .S1     VLIB_fillBuffer   ; |110| 
|| [ A0]   LDHU    .D1T1   *+A3(26),A13      ; |104| 

   [ A0]   LDHU    .D1T2   *+A3(28),B12      ; |106| 
||         LDW     .D2T1   *+SP(100),A6      ; |106| 

           MVKL    .S1     testPatternString,A12
           MVKH    .S1     testPatternString,A12
           ADDKPC  .S2     $C$RL9,B3,0       ; |110| 

           MVK     .L2     0x1,B10           ; |110| 
||         ZERO    .S2     B4                ; |110| 

$C$RL9:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |110| 
$C$DW$L$VLIB_grayscale_morphology_d$19$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$20$B:
;          EXCLUSIVE CPU CYCLES: 115
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 116,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 116 | copyRoi(struct_elem, prm[tpi].se_ptr, prm[tpi].se_w, prm[tpi].se_h, prm
;     | [tpi].se_w, sizeof (uint8_t));                                         
;----------------------------------------------------------------------
           LDHU    .D2T1   *+B13(26),A6      ; |116| 
           LDHU    .D2T2   *+B13(28),B6      ; |116| 
           LDW     .D2T1   *+SP(80),A4       ; |116| 
           LDW     .D2T2   *+B13(12),B4      ; |116| 
           MV      .L2     B10,B8            ; |116| 
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("copyRoi")
	.dwattr $C$DW$160, DW_AT_TI_call

           CALLP   .S2     copyRoi,B3
||         MV      .L1     A6,A8             ; |116| 

$C$RL10:   ; CALL OCCURS {copyRoi} {0}       ; |116| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 117,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 117 | copyRoi(struct_elem_refl, prm[tpi].se_reflc_ptr, prm[tpi].se_w, prm[tpi
;     | ].se_h, prm[tpi].se_w, sizeof (uint8_t));                              
;----------------------------------------------------------------------
           LDHU    .D2T1   *+B13(26),A6      ; |117| 
           LDW     .D2T2   *+B13(16),B4      ; |117| 
           LDW     .D2T1   *+SP(76),A4       ; |117| 
           LDHU    .D2T2   *+B13(28),B6      ; |117| 
           MV      .L2     B10,B8            ; |117| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("copyRoi")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     copyRoi,B3
||         MV      .L1     A6,A8             ; |117| 

$C$RL11:   ; CALL OCCURS {copyRoi} {0}       ; |117| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("memset")
	.dwattr $C$DW$162, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(96),A4       ; |120| 
||         MVK     .L1     0x4,A6            ; |120| 
||         ZERO    .L2     B4                ; |120| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 120,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 120 | memset(output_opt, 0, sizeof(output_opt));                             
;----------------------------------------------------------------------
$C$RL12:   ; CALL OCCURS {memset} {0}        ; |120| 
           MVK     .S2     0xff,B4
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("memset")
	.dwattr $C$DW$163, DW_AT_TI_call

           CALLP   .S2     memset,B3
||         LDW     .D2T1   *+SP(92),A4       ; |121| 
||         MVK     .L1     0x4,A6            ; |121| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 121,column 17,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | memset(output_cn, 0xff, sizeof(output_cn));                            
; 124 | VLIB_profile_start(vlib_KERNEL_OPT);                                   
; 125 | VLIB_grayscale_morphology(prm[tpi].imageWidth, prm[tpi].imagePitch, prm
;     | [tpi].imageHeight,                                                     
; 126 |                           input, prm[tpi].se_w, prm[tpi].se_h, struct_e
;     | lem, struct_elem_refl,                                                 
; 127 |                           scratch1, scratch2, output_opt, operation);  
; 128 | VLIB_profile_stop();                                                   
; 131 | VLIB_profile_start(vlib_KERNEL_CN);                                    
; 132 | VLIB_grayscale_morphology_cn(prm[tpi].imageWidth, prm[tpi].imagePitch,
;     | prm[tpi].imageHeight,                                                  
; 133 |                              input, prm[tpi].se_w, prm[tpi].se_h, struc
;     | t_elem, struct_elem_refl,                                              
; 134 |                              scratch1, scratch2, output_cn, operation);
; 135 | VLIB_profile_stop();                                                   
; 138 | for( i=0; i < (prm[tpi].imageHeight - outPadY); i++ ) {                
; 139 |     for( j=0; j < (prm[tpi].imageWidth - outPadX); j++ ) {             
;----------------------------------------------------------------------
$C$RL13:   ; CALL OCCURS {memset} {0}        ; |121| 
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         ZERO    .L2     B4                ; |137| 

$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 140 | if( output_opt[i * prm[tpi].imageWidth + j] != output_cn[i * prm[tpi].i
;     | magePitch + j] ) {                                                     
; 141 |     status_nat_vs_int = vlib_KERNEL_FAIL;                              
; 142 |     printf("row:%d, col:%d, out:%u, EOut:%u \n", i, j, output_opt[i * p
;     | rm[tpi].imageWidth + j], output_cn[i * prm[tpi].imageWidth + j]);      
;----------------------------------------------------------------------
$C$RL14:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("getSP")
	.dwattr $C$DW$165, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 143 | break;                                                                 
;----------------------------------------------------------------------
$C$RL15:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("initStack")
	.dwattr $C$DW$166, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL16:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 110,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(72),A0       ; |110| 
           EXTU    .S2     B11,24,24,B5
           NOP             3

   [!A0]   SUB     .L1     A15,1,A3          ; |104| 
|| [!A0]   SUB     .L2X    A13,1,B4          ; |106| 

   [!A0]   ADD     .L1     A3,A3,A15         ; |104| 
|| [!A0]   ADD     .L2     B4,B4,B4          ; |106| 
|| [ A0]   SUB     .S1     A13,1,A15         ; |104| 
|| [ A0]   SUB     .D2     B12,1,B4          ; |106| 
||         MVC     .S2     TSCL,B6           ; |146| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 149 | fail = (status_nat_vs_int == vlib_KERNEL_FAIL) ? 1 : 0;                
; 151 | est_test=1;                                                            
;----------------------------------------------------------------------
   [ A0]   STW     .D2T2   B4,*+SP(72)       ; |146| 

   [!A0]   STW     .D2T2   B4,*+SP(72)       ; |146| 
||         MVC     .S2     TSCH,B4           ; |146| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 125,column 17,is_stmt,isa 0
           LDW     .D2T1   *+SP(96),A3       ; |125| 
           STB     .D2T2   B5,*+SP(8)        ; |125| 
           LDHU    .D2T1   *+B13(20),A4      ; |125| 
           LDHU    .D2T1   *+B13(22),A6      ; |125| 
           LDHU    .D2T2   *+B13(28),B8      ; |125| 
           LDHU    .D2T1   *+B13(26),A8      ; |125| 
           LDW     .D2T1   *+SP(88),A12      ; |125| 
           LDW     .D2T1   *+SP(80),A10      ; |125| 
           LDW     .D2T2   *+SP(84),B12      ; |125| 

           MVKL    .S1     beg_count,A13
||         LDW     .D2T2   *+SP(76),B10      ; |125| 

           MVKH    .S1     beg_count,A13
||         MV      .L2     B4,B7             ; |146| 
||         LDHU    .D2T2   *+B13(24),B4      ; |125| 

           STDW    .D1T2   B7:B6,*A13        ; |146| 
||         STW     .D2T1   A3,*+SP(4)        ; |125| 

$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("VLIB_grayscale_morphology")
	.dwattr $C$DW$167, DW_AT_TI_call

           CALLP   .S2     VLIB_grayscale_morphology,B3
||         LDW     .D2T2   *+SP(100),B6      ; |125| 

$C$RL17:   ; CALL OCCURS {VLIB_grayscale_morphology} {0}  ; |125| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 154 | sprintf(desc, "%s generated input | Opt and NatC results compared | blk
;     | _w= %d, blk_h= %d, se_w= %d, se_h= %d | %s",                           
; 155 |         testPatternString, prm[tpi].imageWidth, prm[tpi].imageHeight, p
;     | rm[tpi].se_w, prm[tpi].se_h, prm[tpi].desc);                           
;----------------------------------------------------------------------
           MVC     .S2     TSCL,B8           ; |153| 
           MVC     .S2     TSCH,B9           ; |153| 
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         MVKL    .S2     overhead,B4

           LDW     .D1T1   *A3,A8            ; |156| 
||         MVKH    .S2     overhead,B4

           MVKL    .S2     cycles,B31
||         MV      .L1     A13,A10

           MVKH    .S2     cycles,B31
||         LDDW    .D2T2   *B4,B7:B6         ; |156| 
||         LDDW    .D1T1   *A10,A5:A4        ; |156| 

           MVKL    .S1     end_count,A3
           MV      .L1X    B31,A13
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 157 | VLIB_formula_add_test((prm[tpi].imageWidth - prm[tpi].se_w + 1) * (prm[
;     | tpi].imageHeight - prm[tpi].se_h + 1) *                                
; 158 |                       prm[tpi].se_w * prm[tpi].se_h, NULL, NULL, fail,
;     | desc, NULL);                                                           
;----------------------------------------------------------------------
           LDDW    .D1T1   *+A13[A8],A7:A6   ; |156| 
           MVKH    .S1     end_count,A3
           ADDU    .L2X    B6,A4,B5:B4       ; |156| 

           ADD     .S2     B5,B7,B4          ; |156| 
||         SUBU    .L2     B8,B4,B7:B6       ; |156| 

           ADD     .L2X    B4,A5,B16         ; |156| 
           ADDU    .L2X    A6,B6,B5:B4       ; |156| 

           SUB     .L2     B9,B16,B6         ; |156| 
||         EXT     .S2     B7,24,24,B7       ; |156| 

           MV      .L1X    B4,A4             ; |156| 
||         ADD     .L2     B6,B7,B4          ; |156| 

           ADD     .L1X    B5,A7,A5          ; |156| 

           ADD     .L1X    A5,B4,A5          ; |156| 
||         STDW    .D1T2   B9:B8,*A3         ; |153| 

$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("setStackDepth")
	.dwattr $C$DW$168, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A13[A8]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL18:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
           MVKL    .S1     act_kernel,A3

           MVKH    .S1     act_kernel,A3
||         MVK     .L2     1,B4              ; |137| 

$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$169, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL19:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$L$VLIB_grayscale_morphology_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$21$B:
;          EXCLUSIVE CPU CYCLES: 6
;** 143	-----------------------    initStack(getSP());  // [16]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [16]
;** 132	-----------------------    VLIB_grayscale_morphology_cn((*U$32).imageWidth, (*U$32).imagePitch, (*U$32).imageHeight, input, (*U$32).se_w, (*U$32).se_h, struct_elem, struct_elem_refl, scratch1, scratch2, output_cn, operation);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [17]
;** 153	-----------------------    end_count = v$2;  // [17]
;** 156	-----------------------    C$8 = act_kernel;  // [17]
;** 156	-----------------------    *((C$8<<3)+K$111) = *((C$8<<3)+K$111)+(v$2-(beg_count+overhead));  // [17]
;** 159	-----------------------    setStackDepth();  // [17]
;** 138	-----------------------    v$1 = prm;
;** 88	-----------------------    status_nat_vs_int = 1;
;** 138	-----------------------    if ( (*U$32).imageHeight-outPadY <= 0 ) goto g24;
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("getSP")
	.dwattr $C$DW$170, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL20:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$L$VLIB_grayscale_morphology_d$21$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$22$B:
;          EXCLUSIVE CPU CYCLES: 49
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("initStack")
	.dwattr $C$DW$171, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL21:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
           LDW     .D2T1   *+SP(92),A4       ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 132,column 17,is_stmt,isa 0
           STW     .D2T2   B11,*+SP(8)       ; |132| 
           LDHU    .D2T2   *+B13(28),B8      ; |132| 
           LDHU    .D2T1   *+B13(26),A8      ; |132| 
           LDHU    .D2T1   *+B13(22),A6      ; |132| 

           MV      .L1     A10,A3            ; |132| 
||         MV      .L2     B4,B7             ; |146| 
||         LDW     .D2T1   *+SP(80),A10      ; |132| 

           STW     .D2T1   A4,*+SP(4)        ; |132| 
||         STDW    .D1T2   B7:B6,*A3         ; |146| 

           LDHU    .D2T2   *+B13(24),B4      ; |132| 
           LDW     .D2T2   *+SP(100),B6      ; |132| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("VLIB_grayscale_morphology_cn")
	.dwattr $C$DW$172, DW_AT_TI_call

           CALLP   .S2     VLIB_grayscale_morphology_cn,B3
||         LDHU    .D2T1   *+B13(20),A4      ; |132| 

$C$RL22:   ; CALL OCCURS {VLIB_grayscale_morphology_cn} {0}  ; |132| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B4           ; |153| 
           MVC     .S2     TSCH,B5           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKL    .S1     overhead,A4
           MVKH    .S1     act_kernel,A3
           MVKH    .S1     overhead,A4

           LDW     .D1T1   *A3,A8            ; |156| 
||         MVKL    .S1     beg_count,A31

           MV      .L2X    A4,B6             ; |156| 
||         MVKH    .S1     beg_count,A31

           LDDW    .D2T2   *B6,B7:B6         ; |156| 
||         LDDW    .D1T1   *A31,A5:A4        ; |156| 

           MVKL    .S1     end_count,A3
           MVKH    .S1     end_count,A3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A13[A8],A7:A6   ; |156| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           STDW    .D1T2   B5:B4,*A3         ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L2X    B6,A4,B9:B8       ; |156| 

           ADD     .S2     B9,B7,B8          ; |156| 
||         SUBU    .L2     B4,B8,B7:B6       ; |156| 

           ADD     .L2X    B8,A5,B8          ; |156| 

           ADDU    .L1X    A6,B6,A5:A4       ; |156| 
||         SUB     .L2     B5,B8,B6          ; |156| 
||         EXT     .S2     B7,24,24,B7       ; |156| 

           ADD     .L2     B6,B7,B6          ; |156| 
           ADD     .L1     A5,A7,A5          ; |156| 
           ADD     .L1X    A5,B6,A5          ; |156| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("setStackDepth")
	.dwattr $C$DW$173, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T1   A5:A4,*+A13[A8]   ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL23:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_grayscale_morphology_d$22$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$23$B:
;          EXCLUSIVE CPU CYCLES: 14
           LDW     .D2T2   *+SP(72),B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 138,column 27,is_stmt,isa 0
           LDHU    .D2T2   *+B13(22),B5      ; |138| 
           LDW     .D2T1   *+SP(36),A12      ; |138| 
           SHL     .S1     A11,5,A3
           ADDAW   .D1     A3,A11,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 88,column 24,is_stmt,isa 0
           MVK     .L2     0x1,B10           ; |88| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 138,column 27,is_stmt,isa 0
           SUB     .L2     B5,B4,B4          ; |138| 

           CMPGT   .L2     B4,0,B0           ; |138| 
||         ADD     .L1     A12,A3,A3

   [!B0]   B       .S1     $C$L18            ; |138| 
|| [ B0]   LDHU    .D1T1   *+A3(20),A10
|| [ B0]   LDW     .D2T2   *+SP(72),B4

   [ B0]   LDHU    .D1T1   *+A3(22),A3
           NOP             3
           SUB     .L1     A10,A15,A4
           ; BRANCHCC OCCURS {$C$L18}        ; |138| 
$C$DW$L$VLIB_grayscale_morphology_d$23$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$24$B:
;          EXCLUSIVE CPU CYCLES: 6
;**  	-----------------------    C$7 = &v$1[tpi];
;**  	-----------------------    U$93 = (*C$7).imageWidth;
;**  	-----------------------    U$123 = U$93-outPadX;
;**  	-----------------------    L$2 = (*C$7).imageHeight-outPadY;
;** 138	-----------------------    i = 0;
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           SUB     .L1X    A3,B4,A15
||         SUB     .L2X    A3,B4,B4
||         MVK     .S1     36,A3
||         ZERO    .D1     A13               ; |138| 

           MPYLI   .M1     A3,A11,A7:A6
||         MV      .L2X    A4,B12            ; Define a twin register

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 139,column 31,is_stmt,isa 0
           CMPGT   .L2     B12,0,B0          ; |139| 

   [ B0]   LDW     .D2T1   *+SP(92),A30
|| [ B0]   MVK     .L1     0x1,A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 140,column 25,is_stmt,isa 0
   [ B0]   LDW     .D2T1   *+SP(96),A31      ; |140| 
           ADD     .L1     A12,A6,A3
$C$DW$L$VLIB_grayscale_morphology_d$24$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L12
;** --------------------------------------------------------------------------*
$C$L12:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 138,column 22,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$25$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g18:
;** 139	-----------------------    if ( U$123 <= 0 ) goto g23;

   [!B0]   BNOP    .S1     $C$L16,5          ; |139| 
|| [ B0]   LDHU    .D1T1   *+A3(24),A4
|| [ B0]   MPY32   .M1     A13,A10,A3

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 139,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L16}        ; |139| 
$C$DW$L$VLIB_grayscale_morphology_d$25$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 139,column 68,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$26$B:
;**  	-----------------------    U$31 = _lo(_mpyli(36, tpi));
;**  	-----------------------    U$131 = &output_opt[U$93*i];
;**  	-----------------------    U$135 = &output_cn[(*(U$31+v$1)).imagePitch*i];
;** 140	-----------------------    L$3 = U$123;
;** 139	-----------------------    --U$135;
;** 139	-----------------------    --U$131;
;** 139	-----------------------    j = (-1);
;**  	-----------------------    #pragma MUST_ITERATE(1, 18446744073709551615, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g20:
;** 140	-----------------------    f$2 = (*(++U$131) != *(++U$135))-1;
;** 139	-----------------------    ++j;
;** 139	-----------------------    L$3 = L$3-1;
;** 139	-----------------------    if ( L$3&f$2 ) goto g20;
;**  	-----------------------    if ( f$2 ) goto g23;
$C$DW$L$VLIB_grayscale_morphology_d$26$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c
;*      Loop source line                 : 139
;*      Loop opening brace source line   : 139
;*      Loop closing brace source line   : 145
;*      Known Minimum Trip Count         : 1                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 1
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        0     
;*      .S units                     1        0     
;*      .D units                     1        1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          3        1     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     2*       1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    ** *                        |    ***                         |
;*       1: |    ** *                        |    ***                         |
;*       2: |   *** *                        |    ***                         |
;*       3: |    ****                        |    ***                         |
;*       4: |   *** *                        |    ***                         |
;*       5: |*   ** *                        |    ***                         |
;*       6: |    ** *                        |    ***                         |
;*       7: |    ** *                        |    ***                         |
;*       8: |    ** *                        |    ***                         |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh14
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.4%
;*
;*      Effective ii                : { min 9.00, est 9.13, max 10.00 }
;*
;*
;*      Total cycles (est.)         : 9 + trip_cnt * 9        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C71:
;*   5      [ A0]   LDBU    .D1T1   *++A5,A7          ; |140|  ^ 
;*     ||   [ A0]   LDBU    .D2T2   *++B6,B4          ; |140|  ^ 
;*   6              NOP             4
;*  10              CMPEQ   .L1X    B4,A7,A3          ; |140|  ^ 
;*  11              EXT     .S1     A3,31,31,A6       ; |140|  ^ 
;*     ||           SUB     .L1     A4,1,A4           ; |139|  ^ 
;*  12              AND     .L1     A6,A4,A3          ; |139|  ^ 
;*  13              MV      .L1     A3,A0             ; |139|  ^ 
;*  14      [ A0]   SPWBR           $C$C71
;*  15              NOP             2
;*  17              ADD     .L2     1,B5,B5           ; |139| 
;*  18              ; BRANCHCC OCCURS {$C$C71}        ; |139| 
;*----------------------------------------------------------------------------*
$C$L13:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 10

   [ A0]   SPLOOPW 9       ;18               ; (P) 
||         MPY32   .M1     A13,A4,A5

;** --------------------------------------------------------------------------*
$C$L14:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_grayscale_morphology_d$28$B:
;          EXCLUSIVE CPU CYCLES: 9
           NOP             2

           SPMASK          L1
||         ADD     .L1     A31,A3,A4

           SPMASK          L1
||         ADD     .L1     A30,A5,A3

           SPMASK          L1,L2
||         SUB     .L2X    A4,1,B6           ; |139| 
||         SUB     .L1     A3,1,A5           ; |139| 

   [ A0]   LDBU    .D1T1   *++A5,A7          ; |140| (P) <0,5>  ^ 
|| [ A0]   LDBU    .D2T2   *++B6,B4          ; |140| (P) <0,5>  ^ 

           NOP             2

           SPMASK          L1,S1,L2
||         MV      .L1X    B12,A4
||         MVK     .L2     0xffffffff,B5     ; |139| 
||         MV      .S1     A6,A14

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 140,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B4,A7,A3          ; |140| <0,10>  ^ 

           SUB     .L1     A4,1,A4           ; |139| <0,11>  ^ 
||         EXT     .S1     A3,31,31,A6       ; |140| <0,11>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 139,column 31,is_stmt,isa 0
           AND     .L1     A6,A4,A3          ; |139| <0,12>  ^ 
           MV      .L1     A3,A0             ; |139| <0,13>  ^ 
           NOP             2
           NOP             1

           SPKERNEL 0,0
||         ADD     .L2     1,B5,B5           ; |139| <0,17> 

$C$DW$L$VLIB_grayscale_morphology_d$28$E:
;** --------------------------------------------------------------------------*
$C$L15:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$30$B:
;          EXCLUSIVE CPU CYCLES: 7

           MV      .L1     A6,A0
||         MPY32   .M1     A13,A10,A3        ; |142| 

   [ A0]   B       .S1     $C$L17
|| [!A0]   LDW     .D2T1   *+SP(96),A31      ; |142| 
|| [!A0]   MVKL    .S2     $C$SL8+0,B4

   [!A0]   MVKH    .S2     $C$SL8+0,B4
|| [!A0]   STW     .D2T2   B5,*+SP(12)       ; |142| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 142,column 29,is_stmt,isa 0
   [!A0]   STW     .D2T2   B4,*+SP(4)        ; |142| 

   [!A0]   ADD     .L1X    B5,A3,A4          ; |142| 
|| [!A0]   STW     .D2T1   A13,*+SP(8)       ; |142| 

   [!A0]   LDW     .D2T1   *+SP(92),A30      ; |142| 

   [!A0]   LDBU    .D1T1   *+A4[A31],A3      ; |142| 
||         SUB     .L1     A15,1,A0          ; |138| 

           ; BRANCHCC OCCURS {$C$L17}  
$C$DW$L$VLIB_grayscale_morphology_d$30$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$31$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 142	-----------------------    C$6 = U$93*i+j;
;** 142	-----------------------    printf((const char *)"row:%d, col:%d, out:%u, EOut:%u \n", i, j, (int)output_opt[C$6], (int)output_cn[C$6]);
;** 141	-----------------------    status_nat_vs_int = 0;
           NOP             4
           STW     .D2T1   A3,*+SP(16)       ; |142| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x04)
	.dwattr $C$DW$174, DW_AT_name("printf")
	.dwattr $C$DW$174, DW_AT_TI_call

           LDBU    .D1T1   *+A4[A30],A3      ; |142| 
||         CALL    .S1     printf            ; |142| 

           ADDKPC  .S2     $C$RL24,B3,3      ; |142| 
           STW     .D2T1   A3,*+SP(20)       ; |142| 
$C$RL24:   ; CALL OCCURS {printf} {0}        ; |142| 
$C$DW$L$VLIB_grayscale_morphology_d$31$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$32$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 141,column 29,is_stmt,isa 0
           ZERO    .L2     B10               ; |141| 
$C$DW$L$VLIB_grayscale_morphology_d$32$E:
;** --------------------------------------------------------------------------*
$C$L16:    
$C$DW$L$VLIB_grayscale_morphology_d$33$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 138,column 27,is_stmt,isa 0
           SUB     .L1     A15,1,A0          ; |138| 
$C$DW$L$VLIB_grayscale_morphology_d$33$E:
;** --------------------------------------------------------------------------*
$C$L17:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 139,column 31,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$34$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g23:
;** 138	-----------------------    ++i;
;** 138	-----------------------    if ( L$2 = L$2-1 ) goto g18;

           MVK     .S1     36,A3
|| [ A0]   B       .S2     $C$L12            ; |138| 
||         CMPGT   .L2     B12,0,B0          ; |139| 
||         SUB     .D2X    A15,1,B4          ; |138| 
||         SUB     .L1     A15,1,A15         ; |138| 
||         ADD     .D1     1,A13,A13         ; |138| 

           MPYLI   .M1     A3,A11,A7:A6
||         MV      .L1     A0,A2             ; guard predicate rewrite

   [ B0]   LDW     .D2T1   *+SP(92),A30
   [ B0]   MVK     .L1     0x1,A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 140,column 25,is_stmt,isa 0
   [ B0]   LDW     .D2T1   *+SP(96),A31      ; |140| 
   [ A2]   ADD     .L1     A12,A6,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 138,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |138| 
$C$DW$L$VLIB_grayscale_morphology_d$34$E:
;** --------------------------------------------------------------------------*
$C$L18:    
$C$DW$L$VLIB_grayscale_morphology_d$35$B:
;          EXCLUSIVE CPU CYCLES: 19
;**	-----------------------g24:
;** 151	-----------------------    est_test = 1;
;** 154	-----------------------    C$5 = U$31+v$1;
;** 154	-----------------------    sprintf(K$160, (const char *)"%s generated input | Opt and NatC results compared | blk_w= %d, blk_h= %d, se_w= %d, se_h= %d | %s", K$89, (int)(*C$5).imageWidth, (int)(*C$5).imageHeight, (int)(*C$5).se_w, (int)(*C$5).se_h, (*C$5).desc);
;** 157	-----------------------    C$4 = (*U$32).se_h;
;** 157	-----------------------    C$3 = (*U$32).se_w;
;** 157	-----------------------    VLIB_formula_add_test(((*U$32).imageWidth-C$3+1)*((*U$32).imageHeight-C$4+1)*C$3*C$4, 0, 0, status_nat_vs_int == 0, K$160, 0);
;** 160	-----------------------    goto g26;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 154,column 17,is_stmt,isa 0
           ADD     .L1     A12,A14,A3        ; |154| 
           LDHU    .D1T1   *+A3(26),A4       ; |154| 
           MVKL    .S2     $C$SL9+0,B5
           LDHU    .D1T1   *+A3(22),A5       ; |154| 
           MVKL    .S2     testPatternString,B4

           LDW     .D1T1   *+A3(32),A6       ; |154| 
||         MVKL    .S2     est_test,B6

           STW     .D2T1   A4,*+SP(20)       ; |154| 
||         MVKH    .S2     $C$SL9+0,B5

           LDHU    .D1T1   *+A3(28),A7       ; |154| 
||         MVKH    .S2     testPatternString,B4
||         STW     .D2T2   B5,*+SP(4)        ; |154| 

           LDHU    .D1T1   *+A3(20),A3       ; |154| 
||         MVKH    .S2     est_test,B6
||         MVK     .L1     1,A8              ; |151| 
||         STW     .D2T2   B4,*+SP(8)        ; |154| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 151,column 17,is_stmt,isa 0
           STW     .D2T1   A8,*B6            ; |151| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 154,column 17,is_stmt,isa 0
           STW     .D2T1   A6,*+SP(28)       ; |154| 
           STW     .D2T1   A5,*+SP(16)       ; |154| 

           MVKL    .S1     desc,A4
||         STW     .D2T1   A7,*+SP(24)       ; |154| 

$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("sprintf")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     sprintf,B3
||         MVKH    .S1     desc,A4
||         STW     .D2T1   A3,*+SP(12)       ; |154| 

$C$RL25:   ; CALL OCCURS {sprintf} {0}       ; |154| 
$C$DW$L$VLIB_grayscale_morphology_d$35$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$36$B:
;          EXCLUSIVE CPU CYCLES: 29
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 157,column 17,is_stmt,isa 0
           LDHU    .D2T2   *+B13(20),B6      ; |157| 
           LDHU    .D2T2   *+B13(26),B5      ; |157| 
           LDHU    .D2T2   *+B13(22),B7      ; |157| 
           LDHU    .D2T2   *+B13(28),B4      ; |157| 
           MVKL    .S1     desc,A8
           ZERO    .L2     B8                ; |157| 
           SUB     .L2     B6,B5,B6          ; |157| 
           ADD     .L2     1,B6,B6           ; |157| 
           SUB     .L2     B7,B4,B7          ; |157| 
           ADD     .L2     1,B7,B7           ; |157| 
           MPY32   .M2     B7,B6,B6          ; |157| 
           MVKH    .S1     desc,A8
           ZERO    .L1     A6                ; |157| 
           NOP             1
           MPY32   .M2     B5,B6,B5          ; |157| 
           CMPEQ   .L2     B10,0,B6          ; |157| 
           NOP             2
           MPY32   .M2     B4,B5,B5          ; |157| 
           ZERO    .L2     B4                ; |157| 
           NOP             3
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$176, DW_AT_TI_call

           CALLP   .S2     VLIB_formula_add_test,B3
||         MV      .L1X    B5,A4             ; |157| 

$C$RL26:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |157| 
$C$DW$L$VLIB_grayscale_morphology_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$37$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 160,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 160 | } else {                                                               
; 162 |     sprintf(desc, "blk_w= %d, blk_h= %d, se_w= %d, se_h= %d | %s",     
; 163 |             prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi].se_w, p
;     | rm[tpi].se_h, prm[tpi].desc);                                          
; 164 |     VLIB_skip_test(desc);                                              
;----------------------------------------------------------------------
           B       .S1     $C$L20            ; |160| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 167,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 167 | VLIB_align_free(struct_elem_refl);                                     
;----------------------------------------------------------------------
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$177, DW_AT_TI_call
           CALL    .S1     VLIB_align_free   ; |167| 
           LDW     .D2T1   *+SP(76),A4       ; |167| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 160,column 13,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L20}          ; |160| 
$C$DW$L$VLIB_grayscale_morphology_d$37$E:
;** --------------------------------------------------------------------------*
$C$L19:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 100,column 13,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$38$B:
;          EXCLUSIVE CPU CYCLES: 8
;**	-----------------------g25:
;** 162	-----------------------    sprintf(K$160, (const char *)"blk_w= %d, blk_h= %d, se_w= %d, se_h= %d | %s", (int)(*U$32).imageWidth, (int)(*U$32).imageHeight, (int)(*U$32).se_w, (int)(*U$32).se_h, (*U$32).desc);
;** 164	-----------------------    VLIB_skip_test(K$160);

           LDHU    .D2T2   *+B13(22),B7      ; |162| 
||         MVKL    .S2     $C$SL10+0,B9

           MVKH    .S2     $C$SL10+0,B9
||         MVKL    .S1     desc,A4
||         STW     .D2T2   B5,*+SP(20)       ; |162| 

$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("sprintf")
	.dwattr $C$DW$178, DW_AT_TI_call

           CALL    .S2     sprintf           ; |162| 
||         STW     .D2T2   B9,*+SP(4)        ; |162| 
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 162,column 17,is_stmt,isa 0
           STW     .D2T2   B8,*+SP(8)        ; |162| 
           STW     .D2T2   B4,*+SP(24)       ; |162| 

           STW     .D2T2   B7,*+SP(12)       ; |162| 
||         ADDKPC  .S2     $C$RL27,B3,1      ; |162| 

           STW     .D2T2   B6,*+SP(16)       ; |162| 
$C$RL27:   ; CALL OCCURS {sprintf} {0}       ; |162| 
$C$DW$L$VLIB_grayscale_morphology_d$38$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$39$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$179, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 164,column 17,is_stmt,isa 0
$C$RL28:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |164| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 167,column 13,is_stmt,isa 0
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$180, DW_AT_TI_call
           CALL    .S1     VLIB_align_free   ; |167| 
           LDW     .D2T1   *+SP(76),A4       ; |167| 
           NOP             3
$C$DW$L$VLIB_grayscale_morphology_d$39$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 160,column 13,is_stmt,isa 0
$C$DW$L$VLIB_grayscale_morphology_d$40$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g26:
;** 167	-----------------------    VLIB_align_free((void *)struct_elem_refl);
;** 168	-----------------------    VLIB_align_free((void *)struct_elem);
;** 169	-----------------------    VLIB_align_free((void *)scratch2);
;** 170	-----------------------    VLIB_align_free((void *)scratch1);
;** 171	-----------------------    free((void *)output_cn);
;** 172	-----------------------    VLIB_align_free((void *)output_opt);
;** 173	-----------------------    VLIB_align_free((void *)input);
;** 85	-----------------------    U$31 += 36;
;** 85	-----------------------    U$32 += 36;
;** 85	-----------------------    if ( test_cases > (++tpi) ) goto g12;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 167,column 13,is_stmt,isa 0
           ADDKPC  .S2     $C$RL29,B3,0      ; |167| 
$C$RL29:   ; CALL OCCURS {VLIB_align_free} {0}  ; |167| 
$C$DW$L$VLIB_grayscale_morphology_d$40$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$41$B:
;          EXCLUSIVE CPU CYCLES: 36
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$181, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(80),A4       ; |168| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 168,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 168 | VLIB_align_free(struct_elem);                                          
;----------------------------------------------------------------------
$C$RL30:   ; CALL OCCURS {VLIB_align_free} {0}  ; |168| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$182, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(84),A4       ; |169| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 169,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 169 | VLIB_align_free(scratch2);                                             
;----------------------------------------------------------------------
$C$RL31:   ; CALL OCCURS {VLIB_align_free} {0}  ; |169| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$183, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(88),A4       ; |170| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 170,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 170 | VLIB_align_free(scratch1);                                             
;----------------------------------------------------------------------
$C$RL32:   ; CALL OCCURS {VLIB_align_free} {0}  ; |170| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("free")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D2T1   *+SP(92),A4       ; |171| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 171,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 171 | align_free(output_cn);                                                 
;----------------------------------------------------------------------
$C$RL33:   ; CALL OCCURS {free} {0}          ; |171| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$185, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(96),A4       ; |172| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 172,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 172 | VLIB_align_free(output_opt);                                           
;----------------------------------------------------------------------
$C$RL34:   ; CALL OCCURS {VLIB_align_free} {0}  ; |172| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("VLIB_align_free")
	.dwattr $C$DW$186, DW_AT_TI_call

           CALLP   .S2     VLIB_align_free,B3
||         LDW     .D2T1   *+SP(100),A4      ; |173| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 173,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 173 | VLIB_align_free(input);                                                
;----------------------------------------------------------------------
$C$RL35:   ; CALL OCCURS {VLIB_align_free} {0}  ; |173| 
$C$DW$L$VLIB_grayscale_morphology_d$41$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$42$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S1     test_cases,A3
           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 85,column 21,is_stmt,isa 0
           LDW     .D1T1   *A3,A3            ; |85| 
           ADDK    .S2     36,B13            ; |85| 
           ADD     .L1     1,A11,A11         ; |85| 
           ADDK    .S1     36,A14            ; |85| 
           NOP             1
           CMPGT   .L1     A3,A11,A0         ; |85| 

   [ A0]   BNOP    .S1     $C$L11,4          ; |85| 
|| [ A0]   MVK     .L1     0x8,A4            ; |91| 
|| [ A0]   LDHU    .D2T2   *+B13(22),B5      ; |91| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 91,column 24,is_stmt,isa 0
   [ A0]   LDHU    .D2T2   *+B13(24),B4      ; |91| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 85,column 21,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L11}        ; |85| 
$C$DW$L$VLIB_grayscale_morphology_d$42$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_grayscale_morphology_d$43$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g27:
;** 177	-----------------------    VLIB_profile_cycle_report(1, NULL, "((blk_w - se_w + 1) * (blk_h - se_h + 1) * se_w * se_h)");
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [20]
;** 168	-----------------------    VLIB_stack_memory();  // [20]
;** 47	-----------------------    if ( (++operation) < 7 ) goto g2;
           MVKL    .S1     $C$SL11+0,A6
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$187, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MVKH    .S1     $C$SL11+0,A6
||         MVK     .L1     0x1,A4            ; |177| 
||         ZERO    .L2     B4                ; |177| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 177,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 177 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 178 |                           NULL,                                        
; 179 |                           "((blk_w - se_w + 1) * (blk_h - se_h + 1) * s
;     | e_w * se_h)");                                                         
; 182 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL36:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |177| 
$C$DW$L$VLIB_grayscale_morphology_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$44$B:
;          EXCLUSIVE CPU CYCLES: 14
           MVKL    .S2     $C$SL12+0,B4
           MVKH    .S2     $C$SL12+0,B4
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("printf")
	.dwattr $C$DW$188, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL37:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$189, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL38:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
$C$DW$L$VLIB_grayscale_morphology_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_grayscale_morphology_d$45$B:
;          EXCLUSIVE CPU CYCLES: 8
;**  	-----------------------    return;

           ADD     .L2     1,B11,B11         ; |47| 
||         MVKL    .S2     $C$SW1,B4

           CMPLT   .L2     B11,7,B0          ; |47| 
||         MVKH    .S2     $C$SW1,B4

   [ B0]   BNOP    .S1     $C$L1,5           ; |47| 
||         MV      .S2     B0,B1             ; guard predicate rewrite
||         CMPGTU  .L2     B11,6,B0          ; |51| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 47,column 46,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |47| 
$C$DW$L$VLIB_grayscale_morphology_d$45$E:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c",line 184,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(112),B3     ; |184| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |184| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$191	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$191, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.se66:$C$L1:1:1443280213")
	.dwattr $C$DW$191, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$191, DW_AT_TI_begin_line(0x2f)
	.dwattr $C$DW$191, DW_AT_TI_end_line(0xb7)
$C$DW$192	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$192, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$3$B)
	.dwattr $C$DW$192, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$3$E)
$C$DW$193	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$193, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$15$B)
	.dwattr $C$DW$193, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$15$E)
$C$DW$194	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$194, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$4$B)
	.dwattr $C$DW$194, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$4$E)
$C$DW$195	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$195, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$5$B)
	.dwattr $C$DW$195, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$5$E)
$C$DW$196	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$6$B)
	.dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$6$E)
$C$DW$197	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$197, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$7$B)
	.dwattr $C$DW$197, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$7$E)
$C$DW$198	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$198, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$8$B)
	.dwattr $C$DW$198, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$8$E)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$9$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$9$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$10$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$10$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$11$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$11$E)
$C$DW$202	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$202, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$12$B)
	.dwattr $C$DW$202, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$12$E)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$13$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$13$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$14$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$14$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$43$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$43$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$44$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$44$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$45$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$45$E)

$C$DW$208	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$208, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.se66:$C$L11:2:1443280213")
	.dwattr $C$DW$208, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$208, DW_AT_TI_begin_line(0x55)
	.dwattr $C$DW$208, DW_AT_TI_end_line(0xae)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$16$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$16$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$38$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$38$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$24$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$24$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$17$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$17$E)
$C$DW$213	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$18$B)
	.dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$18$E)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$19$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$19$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$20$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$20$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$21$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$21$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$22$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$22$E)
$C$DW$218	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$218, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$23$B)
	.dwattr $C$DW$218, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$23$E)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$35$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$35$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$36$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$36$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$37$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$37$E)
$C$DW$222	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$39$B)
	.dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$39$E)
$C$DW$223	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$223, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$40$B)
	.dwattr $C$DW$223, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$40$E)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$41$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$41$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$42$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$42$E)

$C$DW$226	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$226, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.se66:$C$L12:3:1443280213")
	.dwattr $C$DW$226, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$226, DW_AT_TI_begin_line(0x8a)
	.dwattr $C$DW$226, DW_AT_TI_end_line(0x92)
$C$DW$227	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$227, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$25$B)
	.dwattr $C$DW$227, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$25$E)
$C$DW$228	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$228, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$31$B)
	.dwattr $C$DW$228, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$31$E)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$32$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$32$E)
$C$DW$230	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$230, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$26$B)
	.dwattr $C$DW$230, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$26$E)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$30$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$30$E)
$C$DW$232	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$232, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$33$B)
	.dwattr $C$DW$232, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$33$E)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$34$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$34$E)

$C$DW$234	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$234, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.se66:$C$L14:4:1443280213")
	.dwattr $C$DW$234, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$234, DW_AT_TI_begin_line(0x8b)
	.dwattr $C$DW$234, DW_AT_TI_end_line(0x91)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_grayscale_morphology_d$28$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_grayscale_morphology_d$28$E)
	.dwendtag $C$DW$234

	.dwendtag $C$DW$226

	.dwendtag $C$DW$208

	.dwendtag $C$DW$191

	.dwattr $C$DW$102, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_grayscale_morphology/VLIB_grayscale_morphology_d.c")
	.dwattr $C$DW$102, DW_AT_TI_end_line(0xb8)
	.dwattr $C$DW$102, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$102

;; Inlined function references:
;; [ 16] VLIB_profile_start
;; [ 17] VLIB_profile_stop
;; [ 20] VLIB_kernel_memory
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"GRAYSCALE_MORPH_GRADIENT",0
$C$SL2:	.string	"GRAYSCALE_MORPH_BOTHAT",0
$C$SL3:	.string	"GRAYSCALE_MORPH_TOPHAT",0
$C$SL4:	.string	"GRAYSCALE_MORPH_CLOSE",0
$C$SL5:	.string	"GRAYSCALE_MORPH_OPEN",0
$C$SL6:	.string	"GRAYSCALE_MORPH_ERODE",0
$C$SL7:	.string	"GRAYSCALE_MORPH_DILATE",0
$C$SL8:	.string	"row:%d, col:%d, out:%u, EOut:%u ",10,0
$C$SL9:	.string	"%s generated input | Opt and NatC results compared | blk_w="
	.string	" %d, blk_h= %d, se_w= %d, se_h= %d | %s",0
$C$SL10:	.string	"blk_w= %d, blk_h= %d, se_w= %d, se_h= %d | %s",0
$C$SL11:	.string	"((blk_w - se_w + 1) * (blk_h - se_h + 1) * se_w * se_h)",0
$C$SL12:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	memset
	.global	free
	.global	memalign
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	copyRoi
	.global	VLIB_fillBuffer
	.global	VLIB_memalign
	.global	VLIB_align_free
	.global	VLIB_grayscale_morphology
	.global	VLIB_grayscale_morphology_cn
	.global	grayScaleMorph_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$37	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x04)
$C$DW$236	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_DILATE"), DW_AT_const_value(0x00)
	.dwattr $C$DW$236, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$236, DW_AT_decl_line(0x5e)
	.dwattr $C$DW$236, DW_AT_decl_column(0x05)
$C$DW$237	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_ERODE"), DW_AT_const_value(0x01)
	.dwattr $C$DW$237, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$237, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$237, DW_AT_decl_column(0x05)
$C$DW$238	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_OPEN"), DW_AT_const_value(0x02)
	.dwattr $C$DW$238, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$238, DW_AT_decl_line(0x60)
	.dwattr $C$DW$238, DW_AT_decl_column(0x05)
$C$DW$239	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_CLOSE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$239, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$239, DW_AT_decl_line(0x61)
	.dwattr $C$DW$239, DW_AT_decl_column(0x05)
$C$DW$240	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_TOPHAT"), DW_AT_const_value(0x04)
	.dwattr $C$DW$240, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$240, DW_AT_decl_line(0x62)
	.dwattr $C$DW$240, DW_AT_decl_column(0x05)
$C$DW$241	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_BOTHAT"), DW_AT_const_value(0x05)
	.dwattr $C$DW$241, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$241, DW_AT_decl_line(0x63)
	.dwattr $C$DW$241, DW_AT_decl_column(0x05)
$C$DW$242	.dwtag  DW_TAG_enumerator, DW_AT_name("GRAYSCALE_MORPH_GRADIENT"), DW_AT_const_value(0x06)
	.dwattr $C$DW$242, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$242, DW_AT_decl_line(0x64)
	.dwattr $C$DW$242, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$37

	.dwattr $C$DW$T$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$T$37, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$37, DW_AT_decl_column(0x0e)
$C$DW$T$38	.dwtag  DW_TAG_typedef, DW_AT_name("GrayscaleMorphologyOperation")
	.dwattr $C$DW$T$38, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$38, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$38, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\c66\../VLIB_grayscale_morphology_types.h")
	.dwattr $C$DW$T$38, DW_AT_decl_line(0x65)
	.dwattr $C$DW$T$38, DW_AT_decl_column(0x03)

$C$DW$T$39	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x04)
$C$DW$243	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$243, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$243, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$243, DW_AT_decl_column(0x05)
$C$DW$244	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$244, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$244, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$244, DW_AT_decl_column(0x05)
$C$DW$245	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$245, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$245, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$245, DW_AT_decl_column(0x05)
$C$DW$246	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$246, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$246, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$246, DW_AT_decl_column(0x05)
$C$DW$247	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$247, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$247, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$247, DW_AT_decl_column(0x05)
$C$DW$248	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$248, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$248, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$248, DW_AT_decl_column(0x05)
$C$DW$249	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$249, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$249, DW_AT_decl_line(0x80)
	.dwattr $C$DW$249, DW_AT_decl_column(0x05)
$C$DW$250	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$250, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$250, DW_AT_decl_line(0x81)
	.dwattr $C$DW$250, DW_AT_decl_column(0x05)
$C$DW$251	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$251, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$251, DW_AT_decl_line(0x82)
	.dwattr $C$DW$251, DW_AT_decl_column(0x05)
$C$DW$252	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$252, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$252, DW_AT_decl_line(0x83)
	.dwattr $C$DW$252, DW_AT_decl_column(0x05)
$C$DW$253	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$253, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$253, DW_AT_decl_line(0x84)
	.dwattr $C$DW$253, DW_AT_decl_column(0x05)
$C$DW$254	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$254, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$254, DW_AT_decl_line(0x85)
	.dwattr $C$DW$254, DW_AT_decl_column(0x05)
$C$DW$255	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$255, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$255, DW_AT_decl_line(0x86)
	.dwattr $C$DW$255, DW_AT_decl_column(0x05)
$C$DW$256	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$256, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$256, DW_AT_decl_line(0x87)
	.dwattr $C$DW$256, DW_AT_decl_column(0x05)
$C$DW$257	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$257, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$257, DW_AT_decl_line(0x88)
	.dwattr $C$DW$257, DW_AT_decl_column(0x05)
$C$DW$258	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$258, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$258, DW_AT_decl_line(0x89)
	.dwattr $C$DW$258, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$39

	.dwattr $C$DW$T$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$39, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$39, DW_AT_decl_column(0x0e)
$C$DW$T$40	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$T$40, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$40, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$40, DW_AT_decl_column(0x03)

$C$DW$T$41	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x04)
$C$DW$259	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$259, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$259, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$259, DW_AT_decl_column(0x05)
$C$DW$260	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$260, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$260, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$260, DW_AT_decl_column(0x05)
$C$DW$261	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$261, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$261, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$261, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$41

	.dwattr $C$DW$T$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x06)

$C$DW$T$42	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x04)
$C$DW$262	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$262, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$262, DW_AT_decl_line(0x72)
	.dwattr $C$DW$262, DW_AT_decl_column(0x05)
$C$DW$263	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$263, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$263, DW_AT_decl_line(0x73)
	.dwattr $C$DW$263, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\../common/VLIB_test.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x06)

$C$DW$T$24	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$24, DW_AT_byte_size(0x24)
$C$DW$264	.dwtag  DW_TAG_member
	.dwattr $C$DW$264, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$264, DW_AT_name("testPattern")
	.dwattr $C$DW$264, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$264, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$264, DW_AT_decl_line(0x24)
	.dwattr $C$DW$264, DW_AT_decl_column(0x0e)
$C$DW$265	.dwtag  DW_TAG_member
	.dwattr $C$DW$265, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$265, DW_AT_name("staticIn")
	.dwattr $C$DW$265, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$265, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$265, DW_AT_decl_line(0x25)
	.dwattr $C$DW$265, DW_AT_decl_column(0x0e)
$C$DW$266	.dwtag  DW_TAG_member
	.dwattr $C$DW$266, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$266, DW_AT_name("staticOut")
	.dwattr $C$DW$266, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$266, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$266, DW_AT_decl_line(0x26)
	.dwattr $C$DW$266, DW_AT_decl_column(0x0e)
$C$DW$267	.dwtag  DW_TAG_member
	.dwattr $C$DW$267, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$267, DW_AT_name("se_ptr")
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("se_ptr")
	.dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$267, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$267, DW_AT_decl_line(0x27)
	.dwattr $C$DW$267, DW_AT_decl_column(0x0e)
$C$DW$268	.dwtag  DW_TAG_member
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$268, DW_AT_name("se_reflc_ptr")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("se_reflc_ptr")
	.dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$268, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x28)
	.dwattr $C$DW$268, DW_AT_decl_column(0x0e)
$C$DW$269	.dwtag  DW_TAG_member
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$269, DW_AT_name("imageWidth")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$269, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x29)
	.dwattr $C$DW$269, DW_AT_decl_column(0x0e)
$C$DW$270	.dwtag  DW_TAG_member
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$270, DW_AT_name("imageHeight")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$270, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$270, DW_AT_decl_column(0x0e)
$C$DW$271	.dwtag  DW_TAG_member
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$271, DW_AT_name("imagePitch")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("imagePitch")
	.dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$271, DW_AT_decl_column(0x0e)
$C$DW$272	.dwtag  DW_TAG_member
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$272, DW_AT_name("se_w")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("se_w")
	.dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$272, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$272, DW_AT_decl_column(0x0e)
$C$DW$273	.dwtag  DW_TAG_member
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$273, DW_AT_name("se_h")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("se_h")
	.dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$273, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$273, DW_AT_decl_column(0x0e)
$C$DW$274	.dwtag  DW_TAG_member
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$274, DW_AT_name("desc")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$274, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$274, DW_AT_decl_column(0x0e)
	.dwendtag $C$DW$T$24

	.dwattr $C$DW$T$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$T$24, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$24, DW_AT_decl_column(0x10)
$C$DW$T$43	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$43, DW_AT_address_class(0x20)
$C$DW$T$45	.dwtag  DW_TAG_typedef, DW_AT_name("grayScaleMorph_testParams_t")
	.dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\VLIB_grayscale_morphology_idat.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x03)
$C$DW$T$46	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$T$46, DW_AT_address_class(0x20)
$C$DW$T$47	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$T$47, DW_AT_address_class(0x20)

$C$DW$T$26	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$26, DW_AT_byte_size(0x18)
$C$DW$275	.dwtag  DW_TAG_member
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$275, DW_AT_name("fd")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$275, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x49)
	.dwattr $C$DW$275, DW_AT_decl_column(0x0b)
$C$DW$276	.dwtag  DW_TAG_member
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$276, DW_AT_name("buf")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$276, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$276, DW_AT_decl_column(0x16)
$C$DW$277	.dwtag  DW_TAG_member
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$277, DW_AT_name("pos")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$277, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$277, DW_AT_decl_column(0x16)
$C$DW$278	.dwtag  DW_TAG_member
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$278, DW_AT_name("bufend")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$278, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$278, DW_AT_decl_column(0x16)
$C$DW$279	.dwtag  DW_TAG_member
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$279, DW_AT_name("buff_stop")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$279, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$279, DW_AT_decl_column(0x16)
$C$DW$280	.dwtag  DW_TAG_member
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$280, DW_AT_name("flags")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$280, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$280, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$26

	.dwattr $C$DW$T$26, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$26, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$26, DW_AT_decl_column(0x10)
$C$DW$T$48	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$48, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$48, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$48, DW_AT_decl_column(0x03)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x08)
$C$DW$281	.dwtag  DW_TAG_member
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$281, DW_AT_name("quot")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$281, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$281, DW_AT_decl_column(0x16)
$C$DW$282	.dwtag  DW_TAG_member
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$282, DW_AT_name("rem")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$282, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$282, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x23)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x08)
$C$DW$283	.dwtag  DW_TAG_member
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$283, DW_AT_name("quot")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$283, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0x40)
	.dwattr $C$DW$283, DW_AT_decl_column(0x17)
$C$DW$284	.dwtag  DW_TAG_member
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$284, DW_AT_name("rem")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$284, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0x40)
	.dwattr $C$DW$284, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$50	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$50, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$50, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$50, DW_AT_decl_column(0x24)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x10)
$C$DW$285	.dwtag  DW_TAG_member
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$285, DW_AT_name("quot")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$285, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0x43)
	.dwattr $C$DW$285, DW_AT_decl_column(0x1c)
$C$DW$286	.dwtag  DW_TAG_member
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$286, DW_AT_name("rem")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$286, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0x43)
	.dwattr $C$DW$286, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$51	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$51, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$51, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$51, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$51, DW_AT_decl_column(0x29)

$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x24)
$C$DW$287	.dwtag  DW_TAG_member
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$287, DW_AT_name("area")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0x69)
	.dwattr $C$DW$287, DW_AT_decl_column(0x0d)
$C$DW$288	.dwtag  DW_TAG_member
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$288, DW_AT_name("xsum")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$288, DW_AT_decl_column(0x0d)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$289, DW_AT_name("ysum")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0d)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$290, DW_AT_name("xmin")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$290, DW_AT_decl_column(0x0d)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$291, DW_AT_name("ymin")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0d)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$292, DW_AT_name("xmax")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$292, DW_AT_decl_column(0x0d)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$293, DW_AT_name("ymax")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0x70)
	.dwattr $C$DW$293, DW_AT_decl_column(0x0d)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$294, DW_AT_name("seedx")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0x72)
	.dwattr $C$DW$294, DW_AT_decl_column(0x0d)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$295, DW_AT_name("seedy")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0x73)
	.dwattr $C$DW$295, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$31

	.dwattr $C$DW$T$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x03)

$C$DW$T$33	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x10)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$296, DW_AT_name("daylight")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x52)
	.dwattr $C$DW$296, DW_AT_decl_column(0x0b)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$297, DW_AT_name("timezone")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0x53)
	.dwattr $C$DW$297, DW_AT_decl_column(0x0b)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$298, DW_AT_name("tzname")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0x54)
	.dwattr $C$DW$298, DW_AT_decl_column(0x0b)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$299, DW_AT_name("dstname")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0x55)
	.dwattr $C$DW$299, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$33

	.dwattr $C$DW$T$33, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$33, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$33, DW_AT_decl_column(0x01)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x03)
$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$90	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$90, DW_AT_address_class(0x20)
$C$DW$T$111	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$111, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$111, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$111, DW_AT_decl_column(0x1d)
$C$DW$T$112	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$T$112, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$112, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$112, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$112, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$80	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$19)
$C$DW$T$81	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$81, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$T$81, DW_AT_address_class(0x20)
$C$DW$T$113	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$113, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$113, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$113, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$113, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$113, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$114	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$114, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$114, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$114, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$114, DW_AT_decl_column(0x1d)
$C$DW$T$115	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$114)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$115, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$115, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$115, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1c)
$C$DW$T$117	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$117, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$117, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$117, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$117, DW_AT_decl_column(0x16)
$C$DW$T$116	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$116, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$116, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$116, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$116, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x0d)
$C$DW$T$30	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x1d)
$C$DW$T$127	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$127, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$127, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$127, DW_AT_decl_column(0x11)

$C$DW$T$34	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$34, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$300	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$300, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$34

$C$DW$T$86	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$86, DW_AT_address_class(0x20)
$C$DW$T$128	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$128, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$128, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$128, DW_AT_decl_column(0x17)
$C$DW$T$129	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$129, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$129, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$129, DW_AT_decl_column(0x17)
$C$DW$T$130	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$130, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$130, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$130, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$130, DW_AT_decl_column(0x17)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x17)
$C$DW$T$132	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$132, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$132, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$132, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$132, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x17)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x16)
$C$DW$T$55	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$55, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$55, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x19)
$C$DW$T$138	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$138, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$138, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$138, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$138, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$138, DW_AT_decl_column(0x16)
$C$DW$T$70	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$70, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$70, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$70, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$70, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$70, DW_AT_decl_column(0x1c)
$C$DW$T$140	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$140, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$140, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$140, DW_AT_decl_column(0x16)
$C$DW$T$141	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$141, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$141, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$141, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$141, DW_AT_decl_column(0x16)
$C$DW$T$142	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$142, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$142, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$142, DW_AT_decl_column(0x16)
$C$DW$T$143	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$T$143, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$143, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$143, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$143, DW_AT_decl_column(0x16)
$C$DW$T$144	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$144, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$144, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$144, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$144, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$144, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$146	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$146, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$146, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$146, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$146, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$146, DW_AT_decl_column(0x21)
$C$DW$T$147	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$T$146)
	.dwattr $C$DW$T$147, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$147, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$147, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$147, DW_AT_decl_column(0x17)
$C$DW$T$148	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$146)
	.dwattr $C$DW$T$148, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$148, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$148, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$148, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x20)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x16)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x21)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$153)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x17)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$153)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x17)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$158	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$158, DW_AT_address_class(0x20)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x20)

$C$DW$T$160	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_byte_size(0x10)
$C$DW$301	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$301, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$160

$C$DW$T$161	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$161, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$161, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$161, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$161, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$161, DW_AT_decl_column(0x16)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$159)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x16)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x0f)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$166	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$166, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$166, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$166, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_grayscale_morphology\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$166, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$166, DW_AT_decl_column(0x10)
$C$DW$T$167	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$167, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$167, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$167, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$167, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$22	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$22, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$22, DW_AT_name("signed char")
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x01)
$C$DW$T$23	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$23, DW_AT_address_class(0x20)
$C$DW$T$169	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$169, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$169, DW_AT_decl_column(0x12)

$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x04)
$C$DW$302	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$302, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$32

$C$DW$T$118	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$22)
$C$DW$T$119	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$118)
	.dwattr $C$DW$T$119, DW_AT_address_class(0x20)

$C$DW$T$170	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
$C$DW$303	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$170


$C$DW$T$171	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_byte_size(0x20)
$C$DW$304	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$304, DW_AT_upper_bound(0x1f)
	.dwendtag $C$DW$T$171


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x10)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$305, DW_AT_name("_v")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x44)
	.dwattr $C$DW$305, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x01)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x01)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x13)

$C$DW$T$36	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$36, DW_AT_name("tm")
	.dwattr $C$DW$T$36, DW_AT_byte_size(0x24)
$C$DW$306	.dwtag  DW_TAG_member
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$306, DW_AT_name("tm_sec")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$306, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x41)
	.dwattr $C$DW$306, DW_AT_decl_column(0x09)
$C$DW$307	.dwtag  DW_TAG_member
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$307, DW_AT_name("tm_min")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$307, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x42)
	.dwattr $C$DW$307, DW_AT_decl_column(0x09)
$C$DW$308	.dwtag  DW_TAG_member
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$308, DW_AT_name("tm_hour")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$308, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x43)
	.dwattr $C$DW$308, DW_AT_decl_column(0x09)
$C$DW$309	.dwtag  DW_TAG_member
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$309, DW_AT_name("tm_mday")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$309, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x44)
	.dwattr $C$DW$309, DW_AT_decl_column(0x09)
$C$DW$310	.dwtag  DW_TAG_member
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$310, DW_AT_name("tm_mon")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$310, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x45)
	.dwattr $C$DW$310, DW_AT_decl_column(0x09)
$C$DW$311	.dwtag  DW_TAG_member
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$311, DW_AT_name("tm_year")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$311, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x46)
	.dwattr $C$DW$311, DW_AT_decl_column(0x09)
$C$DW$312	.dwtag  DW_TAG_member
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$312, DW_AT_name("tm_wday")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$312, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x47)
	.dwattr $C$DW$312, DW_AT_decl_column(0x09)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$313, DW_AT_name("tm_yday")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x48)
	.dwattr $C$DW$313, DW_AT_decl_column(0x09)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$314, DW_AT_name("tm_isdst")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x49)
	.dwattr $C$DW$314, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$36

	.dwattr $C$DW$T$36, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$36, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$36, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

