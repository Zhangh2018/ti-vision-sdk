;******************************************************************************
;* TMS320C6x C/C++ Codegen                                          PC v7.4.2 *
;* Date/Time created: Sat Sep 26 11:09:28 2015                                *
;******************************************************************************
	.compiler_opts --abi=eabi --c64p_l1d_workaround=off --endian=little --hll_source=on --long_precision_bits=32 --mem_model:code=near --mem_model:const=data --mem_model:data=far --object_format=elf --silicon_version=6600 --symdebug:dwarf --symdebug:dwarf_version=3 

;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Architecture      : TMS320C66xx                                          *
;*   Optimization      : Enabled at level 3                                   *
;*   Optimizing for    : Speed                                                *
;*                       Based on options: -o3, no -ms                        *
;*   Endian            : Little                                               *
;*   Interrupt Thrshld : 10000                                                *
;*   Data Access Model : Far                                                  *
;*   Pipelining        : Enabled                                              *
;*   Speculate Loads   : Enabled with threshold = 0                           *
;*   Memory Aliases    : Presume are aliases (pessimistic)                    *
;*   Debug Info        : DWARF Debug w/Optimization                           *
;*                                                                            *
;******************************************************************************

	.asg	A15, FP
	.asg	B14, DP
	.asg	B15, SP
	.global	$bss


$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C6x C/C++ Codegen PC v7.4.2 Copyright (c) 1996-2012 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("c:\nightlybuilds\vlib\ti\vlib\vlib\examples")

$C$DW$1	.dwtag  DW_TAG_subprogram, DW_AT_name("_itoll")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_itoll")
	.dwattr $C$DW$1, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwattr $C$DW$1, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$1, DW_AT_decl_line(0xdf)
	.dwattr $C$DW$1, DW_AT_decl_column(0x0b)
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$11)
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$11)
	.dwendtag $C$DW$1


$C$DW$4	.dwtag  DW_TAG_subprogram, DW_AT_name("printf")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("printf")
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwattr $C$DW$4, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$4, DW_AT_decl_line(0xb8)
	.dwattr $C$DW$4, DW_AT_decl_column(0x19)
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$121)
$C$DW$6	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$4


$C$DW$7	.dwtag  DW_TAG_subprogram, DW_AT_name("sprintf")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("sprintf")
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
	.dwattr $C$DW$7, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$7, DW_AT_decl_line(0xbc)
	.dwattr $C$DW$7, DW_AT_decl_column(0x19)
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$65)
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$121)
$C$DW$10	.dwtag  DW_TAG_unspecified_parameters
	.dwendtag $C$DW$7


$C$DW$11	.dwtag  DW_TAG_subprogram, DW_AT_name("malloc")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("malloc")
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
	.dwattr $C$DW$11, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$11, DW_AT_decl_line(0x82)
	.dwattr $C$DW$11, DW_AT_decl_column(0x19)
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram, DW_AT_name("free")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("free")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwattr $C$DW$13, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$13, DW_AT_decl_line(0x86)
	.dwattr $C$DW$13, DW_AT_decl_column(0x19)
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("VLIB_cache_inval")
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwattr $C$DW$15, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c6x/VLIB_cache.h")
	.dwattr $C$DW$15, DW_AT_decl_line(0x58)
	.dwattr $C$DW$15, DW_AT_decl_column(0x05)

$C$DW$16	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("VLIB_profile_init")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwattr $C$DW$16, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$16, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$16, DW_AT_decl_column(0x06)
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$65)
	.dwendtag $C$DW$16


$C$DW$19	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_setMode")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("VLIB_profile_setMode")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwattr $C$DW$19, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$19, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$19, DW_AT_decl_column(0x06)
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$10)
$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$10)
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$65)
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$19


$C$DW$24	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("VLIB_formula_add_test")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwattr $C$DW$24, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$24, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$24, DW_AT_decl_column(0x06)
$C$DW$25	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$25, DW_AT_type(*$C$DW$T$10)
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$10)
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$65)
$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$10)
	.dwendtag $C$DW$24


$C$DW$31	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("VLIB_skip_test")
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external
	.dwattr $C$DW$31, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$31, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$31, DW_AT_decl_column(0x06)
$C$DW$32	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$65)
	.dwendtag $C$DW$31


$C$DW$33	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external
	.dwattr $C$DW$33, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$33, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$33, DW_AT_decl_column(0x06)
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$10)
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$65)
$C$DW$36	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$65)
	.dwendtag $C$DW$33


$C$DW$37	.dwtag  DW_TAG_subprogram, DW_AT_name("initStack")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("initStack")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwattr $C$DW$37, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$37, DW_AT_decl_line(0x80)
	.dwattr $C$DW$37, DW_AT_decl_column(0x06)
$C$DW$38	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$38, DW_AT_type(*$C$DW$T$76)
	.dwendtag $C$DW$37


$C$DW$39	.dwtag  DW_TAG_subprogram, DW_AT_name("setStackDepth")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("setStackDepth")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwattr $C$DW$39, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$39, DW_AT_decl_line(0x81)
	.dwattr $C$DW$39, DW_AT_decl_column(0x06)

$C$DW$40	.dwtag  DW_TAG_subprogram, DW_AT_name("getSP")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("getSP")
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwattr $C$DW$40, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$40, DW_AT_decl_line(0x82)
	.dwattr $C$DW$40, DW_AT_decl_column(0x0a)

$C$DW$41	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("VLIB_stack_memory")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwattr $C$DW$41, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$41, DW_AT_decl_line(0x83)
	.dwattr $C$DW$41, DW_AT_decl_column(0x06)

$C$DW$42	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("VLIB_fillBuffer")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwattr $C$DW$42, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_memory.h")
	.dwattr $C$DW$42, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$42, DW_AT_decl_column(0x06)
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$19)
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$19)
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$3)
$C$DW$46	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$46, DW_AT_type(*$C$DW$T$3)
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$21)
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$21)
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$21)
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$19)
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$65)
	.dwendtag $C$DW$42


$C$DW$52	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("VLIB_malloc")
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwattr $C$DW$52, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_memory.h")
	.dwattr $C$DW$52, DW_AT_decl_line(0xb2)
	.dwattr $C$DW$52, DW_AT_decl_column(0x07)
$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$60)
	.dwendtag $C$DW$52


$C$DW$54	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_free")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("VLIB_free")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwattr $C$DW$54, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_memory.h")
	.dwattr $C$DW$54, DW_AT_decl_line(0xb7)
	.dwattr $C$DW$54, DW_AT_decl_column(0x07)
$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$3)
	.dwendtag $C$DW$54


$C$DW$56	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_coOccurrenceMatrix")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("VLIB_coOccurrenceMatrix")
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwattr $C$DW$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\c66/VLIB_coOccurrenceMatrix.h")
	.dwattr $C$DW$56, DW_AT_decl_line(0x98)
	.dwattr $C$DW$56, DW_AT_decl_column(0x0a)
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$109)
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$116)
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$118)
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$118)
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$118)
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$107)
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$107)
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$118)
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$107)
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$105)
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$105)
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$56


$C$DW$69	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_coOccurrenceMatrix_cn")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("VLIB_coOccurrenceMatrix_cn")
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$69, DW_AT_declaration
	.dwattr $C$DW$69, DW_AT_external
	.dwattr $C$DW$69, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_cn.h")
	.dwattr $C$DW$69, DW_AT_decl_line(0x57)
	.dwattr $C$DW$69, DW_AT_decl_column(0x0d)
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$20)
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$117)
$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$21)
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$21)
$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$21)
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$19)
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$19)
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$21)
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$19)
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$102)
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$102)
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$20)
	.dwendtag $C$DW$69


$C$DW$82	.dwtag  DW_TAG_subprogram, DW_AT_name("coOccurrence_getTestParams")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("coOccurrence_getTestParams")
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
	.dwattr $C$DW$82, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$82, DW_AT_decl_line(0x33)
	.dwattr $C$DW$82, DW_AT_decl_column(0x06)
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$51)
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$84)
	.dwendtag $C$DW$82

$C$DW$85	.dwtag  DW_TAG_variable, DW_AT_name("test_cases")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("test_cases")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwattr $C$DW$85, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$85, DW_AT_decl_line(0x60)
	.dwattr $C$DW$85, DW_AT_decl_column(0x13)
$C$DW$86	.dwtag  DW_TAG_variable, DW_AT_name("act_kernel")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("act_kernel")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwattr $C$DW$86, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$86, DW_AT_decl_line(0x62)
	.dwattr $C$DW$86, DW_AT_decl_column(0x13)
$C$DW$87	.dwtag  DW_TAG_variable, DW_AT_name("desc")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("desc")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwattr $C$DW$87, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$87, DW_AT_decl_line(0x63)
	.dwattr $C$DW$87, DW_AT_decl_column(0x13)
$C$DW$88	.dwtag  DW_TAG_variable, DW_AT_name("testPatternString")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("testPatternString")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwattr $C$DW$88, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$88, DW_AT_decl_line(0x64)
	.dwattr $C$DW$88, DW_AT_decl_column(0x13)
$C$DW$89	.dwtag  DW_TAG_variable, DW_AT_name("est_test")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("est_test")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwattr $C$DW$89, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$89, DW_AT_decl_line(0x75)
	.dwattr $C$DW$89, DW_AT_decl_column(0x14)
$C$DW$90	.dwtag  DW_TAG_variable, DW_AT_name("beg_count")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("beg_count")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwattr $C$DW$90, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$90, DW_AT_decl_line(0x76)
	.dwattr $C$DW$90, DW_AT_decl_column(0x14)
$C$DW$91	.dwtag  DW_TAG_variable, DW_AT_name("end_count")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("end_count")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
	.dwattr $C$DW$91, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$91, DW_AT_decl_line(0x77)
	.dwattr $C$DW$91, DW_AT_decl_column(0x14)
$C$DW$92	.dwtag  DW_TAG_variable, DW_AT_name("overhead")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("overhead")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external
	.dwattr $C$DW$92, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$92, DW_AT_decl_line(0x78)
	.dwattr $C$DW$92, DW_AT_decl_column(0x14)
$C$DW$93	.dwtag  DW_TAG_variable, DW_AT_name("cycles")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("cycles")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$169)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
	.dwattr $C$DW$93, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h")
	.dwattr $C$DW$93, DW_AT_decl_line(0x79)
	.dwattr $C$DW$93, DW_AT_decl_column(0x14)
;	C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\bin\opt6x.exe C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\026723 C:\\Users\\gtbldadm\\AppData\\Local\\Temp\\026725 


; The following local variables in VLIB_coOccurrenceMatrix_d() will be grouped together
; to share stack space among distinct scoping blocks.  References
; in the source interlisting will look like "O$1.s3_1.l3_2" or "&$O$O1+0".
;
;    --offset--    --reference--		 --variable--
;
;         0	  O$1.s3_1.l3_2                  unsigned short *outMatrix_cn[4]  [./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c:65]
;        16	  O$1.s3_1.l3_3                  unsigned short *outMatrix[4]  [./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c:64]

	.sect	".text"
	.clink
	.global	VLIB_coOccurrenceMatrix_d

$C$DW$94	.dwtag  DW_TAG_subprogram, DW_AT_name("VLIB_coOccurrenceMatrix_d")
	.dwattr $C$DW$94, DW_AT_low_pc(VLIB_coOccurrenceMatrix_d)
	.dwattr $C$DW$94, DW_AT_high_pc(0x00)
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("VLIB_coOccurrenceMatrix_d")
	.dwattr $C$DW$94, DW_AT_external
	.dwattr $C$DW$94, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$94, DW_AT_TI_begin_line(0x2d)
	.dwattr $C$DW$94, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$94, DW_AT_decl_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$94, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$94, DW_AT_decl_column(0x06)
	.dwattr $C$DW$94, DW_AT_TI_max_frame_size(0x98)
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 46,column 1,is_stmt,address VLIB_coOccurrenceMatrix_d,isa 0

	.dwfde $C$DW$CIE, VLIB_coOccurrenceMatrix_d
$C$DW$95	.dwtag  DW_TAG_formal_parameter, DW_AT_name("LevelOfFeedback")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("LevelOfFeedback")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$95, DW_AT_location[DW_OP_reg4]
;----------------------------------------------------------------------
;  45 | void VLIB_coOccurrenceMatrix_d(uint8_t LevelOfFeedback)                
;----------------------------------------------------------------------

;******************************************************************************
;* FUNCTION NAME: VLIB_coOccurrenceMatrix_d                                   *
;*                                                                            *
;*   Regs Modified     : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,  *
;*                           A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20,B21, *
;*                           B22,B23,B24,B25,B26,B27,B28,B29,B30,B31          *
;*   Regs Used         : A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,   *
;*                           A15,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,   *
;*                           B13,DP,SP,A16,A17,A18,A19,A20,A21,A22,A23,A24,   *
;*                           A25,A26,A27,A28,A29,A30,A31,B16,B17,B18,B19,B20, *
;*                           B21,B22,B23,B24,B25,B26,B27,B28,B29,B30,B31      *
;*   Local Frame Size  : 32 Args + 60 Auto + 56 Save = 148 byte               *
;******************************************************************************

;******************************************************************************
;*                                                                            *
;* Using -g (debug) with optimization (-o3) may disable key optimizations!    *
;*                                                                            *
;******************************************************************************
VLIB_coOccurrenceMatrix_d:
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 15
;** 52	-----------------------    coOccurrence_getTestParams(&prm, &test_cases);
;** 55	-----------------------    VLIB_profile_init(4, "VLIB_coOccurrenceMatrix");
;** 58	-----------------------    if ( test_cases <= 0 ) goto g46;
	.dwcfi	cfa_offset, 0
;----------------------------------------------------------------------
;  47 | int32_t    tpi;                      /* test parameter index */        
;  50 | coOccurrence_testParams_t   *prm;                                      
;----------------------------------------------------------------------
           STW     .D2T1   A11,*SP--(8)      ; |46| 
	.dwcfi	cfa_offset, 8
	.dwcfi	save_reg_to_mem, 11, 0
           STW     .D2T1   A10,*SP--(8)      ; |46| 
	.dwcfi	cfa_offset, 16
	.dwcfi	save_reg_to_mem, 10, -8
           STDW    .D2T2   B13:B12,*SP--     ; |46| 
	.dwcfi	cfa_offset, 24
	.dwcfi	save_reg_to_mem, 29, -12
	.dwcfi	save_reg_to_mem, 28, -16
           STDW    .D2T2   B11:B10,*SP--     ; |46| 
	.dwcfi	cfa_offset, 32
	.dwcfi	save_reg_to_mem, 27, -20
	.dwcfi	save_reg_to_mem, 26, -24
           STDW    .D2T1   A15:A14,*SP--     ; |46| 
	.dwcfi	cfa_offset, 40
	.dwcfi	save_reg_to_mem, 15, -28
	.dwcfi	save_reg_to_mem, 14, -32
           STDW    .D2T1   A13:A12,*SP--     ; |46| 
	.dwcfi	cfa_offset, 48
	.dwcfi	save_reg_to_mem, 13, -36
	.dwcfi	save_reg_to_mem, 12, -40
           STW     .D2T2   B3,*SP--(104)     ; |46| 
	.dwcfi	cfa_offset, 152
	.dwcfi	save_reg_to_mem, 19, 0
$C$DW$96	.dwtag  DW_TAG_variable, DW_AT_name("$O$C5")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("$O$C5")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$96, DW_AT_location[DW_OP_reg10]
$C$DW$97	.dwtag  DW_TAG_variable, DW_AT_name("$O$C6")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("$O$C6")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$97, DW_AT_location[DW_OP_reg3]
$C$DW$98	.dwtag  DW_TAG_variable, DW_AT_name("$O$C7")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("$O$C7")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$98, DW_AT_location[DW_OP_reg3]
$C$DW$99	.dwtag  DW_TAG_variable, DW_AT_name("$O$C8")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("$O$C8")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$99, DW_AT_location[DW_OP_reg6]
$C$DW$100	.dwtag  DW_TAG_variable, DW_AT_name("$O$C9")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("$O$C9")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$100, DW_AT_location[DW_OP_reg22]
$C$DW$101	.dwtag  DW_TAG_variable, DW_AT_name("$O$C10")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("$O$C10")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_location[DW_OP_reg3]
$C$DW$102	.dwtag  DW_TAG_variable, DW_AT_name("$O$C11")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("$O$C11")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$102, DW_AT_location[DW_OP_reg5]
$C$DW$103	.dwtag  DW_TAG_variable, DW_AT_name("$O$C12")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("$O$C12")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$103, DW_AT_location[DW_OP_reg16]
$C$DW$104	.dwtag  DW_TAG_variable, DW_AT_name("$O$C13")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("$O$C13")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$104, DW_AT_location[DW_OP_reg7]
$C$DW$105	.dwtag  DW_TAG_variable, DW_AT_name("$O$C14")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("$O$C14")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_location[DW_OP_reg5]
$C$DW$106	.dwtag  DW_TAG_variable, DW_AT_name("$O$C15")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("$O$C15")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$167)
	.dwattr $C$DW$106, DW_AT_location[DW_OP_reg20]
$C$DW$107	.dwtag  DW_TAG_variable, DW_AT_name("$O$C16")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("$O$C16")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$107, DW_AT_location[DW_OP_reg20]
$C$DW$108	.dwtag  DW_TAG_variable, DW_AT_name("$O$f3")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("$O$f3")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_location[DW_OP_reg0]
$C$DW$109	.dwtag  DW_TAG_variable, DW_AT_name("$O$f4")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("$O$f4")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$109, DW_AT_location[DW_OP_reg0]
$C$DW$110	.dwtag  DW_TAG_variable, DW_AT_name("$O$U12")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("$O$U12")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$110, DW_AT_location[DW_OP_reg11]
$C$DW$111	.dwtag  DW_TAG_variable, DW_AT_name("$O$U31")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("$O$U31")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$111, DW_AT_location[DW_OP_reg14]
$C$DW$112	.dwtag  DW_TAG_variable, DW_AT_name("$O$U11")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("$O$U11")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_location[DW_OP_reg13]
$C$DW$113	.dwtag  DW_TAG_variable, DW_AT_name("$O$U61")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("$O$U61")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$113)
	.dwattr $C$DW$113, DW_AT_location[DW_OP_reg21]
$C$DW$114	.dwtag  DW_TAG_variable, DW_AT_name("$O$U83")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("$O$U83")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$114, DW_AT_location[DW_OP_reg15]
$C$DW$115	.dwtag  DW_TAG_variable, DW_AT_name("$O$U85")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("$O$U85")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$115, DW_AT_location[DW_OP_reg28]
$C$DW$116	.dwtag  DW_TAG_variable, DW_AT_name("$O$K95")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("$O$K95")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$167)
	.dwattr $C$DW$116, DW_AT_location[DW_OP_reg3]
$C$DW$117	.dwtag  DW_TAG_variable, DW_AT_name("$O$U119")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("$O$U119")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$117, DW_AT_location[DW_OP_reg6]
$C$DW$118	.dwtag  DW_TAG_variable, DW_AT_name("$O$U120")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("$O$U120")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$118, DW_AT_location[DW_OP_reg5]
$C$DW$119	.dwtag  DW_TAG_variable, DW_AT_name("$O$U45")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("$O$U45")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$119, DW_AT_location[DW_OP_reg28]
$C$DW$120	.dwtag  DW_TAG_variable, DW_AT_name("$O$U150")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("$O$U150")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$120, DW_AT_location[DW_OP_reg22]
$C$DW$121	.dwtag  DW_TAG_variable, DW_AT_name("$O$U151")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("$O$U151")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$121, DW_AT_location[DW_OP_reg21]
$C$DW$122	.dwtag  DW_TAG_variable, DW_AT_name("$O$K73")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("$O$K73")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$122, DW_AT_location[DW_OP_reg26]
$C$DW$123	.dwtag  DW_TAG_variable, DW_AT_name("$O$K189")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("$O$K189")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$88)
	.dwattr $C$DW$123, DW_AT_location[DW_OP_reg8]
$C$DW$124	.dwtag  DW_TAG_variable, DW_AT_name("$O$U139")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("$O$U139")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$124, DW_AT_location[DW_OP_breg31 72]
$C$DW$125	.dwtag  DW_TAG_variable, DW_AT_name("$O$U131")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("$O$U131")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$125, DW_AT_location[DW_OP_reg12]
$C$DW$126	.dwtag  DW_TAG_variable, DW_AT_name("$O$L1")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("$O$L1")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$126, DW_AT_location[DW_OP_reg12]
$C$DW$127	.dwtag  DW_TAG_variable, DW_AT_name("$O$L2")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("$O$L2")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$127, DW_AT_location[DW_OP_reg4]
$C$DW$128	.dwtag  DW_TAG_variable, DW_AT_name("$O$L3")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("$O$L3")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$128, DW_AT_location[DW_OP_reg29]
$C$DW$129	.dwtag  DW_TAG_variable, DW_AT_name("$O$L4")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("$O$L4")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$129, DW_AT_location[DW_OP_reg7]
$C$DW$130	.dwtag  DW_TAG_variable, DW_AT_name("tpi")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("tpi")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$130, DW_AT_location[DW_OP_breg31 76]
$C$DW$131	.dwtag  DW_TAG_variable, DW_AT_name("prm")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("prm")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$131, DW_AT_location[DW_OP_breg31 36]
$C$DW$132	.dwtag  DW_TAG_variable, DW_AT_name("outWidth")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("outWidth")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$132, DW_AT_location[DW_OP_breg31 80]
$C$DW$133	.dwtag  DW_TAG_variable, DW_AT_name("outHeight")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("outHeight")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$133, DW_AT_location[DW_OP_breg31 84]
$C$DW$134	.dwtag  DW_TAG_variable, DW_AT_name("retVal")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("retVal")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$134, DW_AT_location[DW_OP_reg12]
$C$DW$135	.dwtag  DW_TAG_variable, DW_AT_name("fail")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("fail")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$135, DW_AT_location[DW_OP_reg29]
$C$DW$136	.dwtag  DW_TAG_variable, DW_AT_name("mode")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("mode")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$136, DW_AT_location[DW_OP_reg27]
$C$DW$137	.dwtag  DW_TAG_variable, DW_AT_name("scratch")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("scratch")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$137, DW_AT_location[DW_OP_breg31 88]
$C$DW$138	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_int")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("status_nat_vs_int")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$138, DW_AT_location[DW_OP_reg14]
$C$DW$139	.dwtag  DW_TAG_variable, DW_AT_name("status_nat_vs_ref")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("status_nat_vs_ref")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$139, DW_AT_location[DW_OP_reg8]
$C$DW$140	.dwtag  DW_TAG_variable, DW_AT_name("input")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("input")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$140, DW_AT_location[DW_OP_breg31 92]
$C$DW$141	.dwtag  DW_TAG_variable, DW_AT_name("$O$U35")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("$O$U35")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$113)
	.dwattr $C$DW$141, DW_AT_location[DW_OP_reg12]
$C$DW$142	.dwtag  DW_TAG_variable, DW_AT_name("$O$U35")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("$O$U35")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$113)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_reg10]
$C$DW$143	.dwtag  DW_TAG_variable, DW_AT_name("$O$U117")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("$O$U117")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$143, DW_AT_location[DW_OP_reg22]
$C$DW$144	.dwtag  DW_TAG_variable, DW_AT_name("$O$U117")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("$O$U117")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$144, DW_AT_location[DW_OP_reg6]
$C$DW$145	.dwtag  DW_TAG_variable, DW_AT_name("$O$U118")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("$O$U118")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$145, DW_AT_location[DW_OP_reg21]
$C$DW$146	.dwtag  DW_TAG_variable, DW_AT_name("$O$U118")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("$O$U118")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$146, DW_AT_location[DW_OP_reg5]
$C$DW$147	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$147, DW_AT_location[DW_OP_reg10]
$C$DW$148	.dwtag  DW_TAG_variable, DW_AT_name("i")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("i")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$148, DW_AT_location[DW_OP_reg15]
$C$DW$149	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$149, DW_AT_location[DW_OP_reg20]
$C$DW$150	.dwtag  DW_TAG_variable, DW_AT_name("j")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("j")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_reg20]
$C$DW$151	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_reg10]
$C$DW$152	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_reg26]
$C$DW$153	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg10]
$C$DW$154	.dwtag  DW_TAG_variable, DW_AT_name("k")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("k")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_reg12]
$C$DW$155	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_reg22]
$C$DW$156	.dwtag  DW_TAG_variable, DW_AT_name("$O$v1")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("$O$v1")
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$156, DW_AT_location[DW_OP_reg28]
$C$DW$157	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$157, DW_AT_location[DW_OP_regx 0x35]
$C$DW$158	.dwtag  DW_TAG_variable, DW_AT_name("$O$v2")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("$O$v2")
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$158, DW_AT_location[DW_OP_reg24]
$C$DW$159	.dwtag  DW_TAG_variable, DW_AT_name("$O$O1")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("$O$O1")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$159, DW_AT_location[DW_OP_breg31 40]
           MVKL    .S2     test_cases,B4
           MVKH    .S2     test_cases,B4
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("coOccurrence_getTestParams")
	.dwattr $C$DW$160, DW_AT_TI_call

           CALLP   .S2     coOccurrence_getTestParams,B3
||         ADDAW   .D1X    SP,9,A4           ; |52| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 52,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  52 | coOccurrence_getTestParams(&prm, &test_cases);                         
;----------------------------------------------------------------------
$C$RL0:    ; CALL OCCURS {coOccurrence_getTestParams} {0}  ; |52| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 8
           MVKL    .S2     $C$SL1+0,B4
           MVKH    .S2     $C$SL1+0,B4
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("VLIB_profile_init")
	.dwattr $C$DW$161, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_init,B3
||         MVK     .L1     0x4,A4            ; |55| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 55,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
;  55 | VLIB_profile_init(4, "VLIB_coOccurrenceMatrix");                       
;  58 | for( tpi=0; tpi < test_cases; tpi++ ) {                                
;----------------------------------------------------------------------
$C$RL1:    ; CALL OCCURS {VLIB_profile_init} {0}  ; |55| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 14
;**  	-----------------------    U$12 = prm-32;
;**  	-----------------------    K$189 = &desc[0];
;**  	-----------------------    U$11 = 0;
;** 58	-----------------------    tpi = 0;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           MVKL    .S1     test_cases,A3
||         LDW     .D2T2   *+SP(36),B4

           MVKH    .S1     test_cases,A3

           ZERO    .L1     A3
||         LDW     .D1T1   *A3,A4            ; |58| 

           MVK     .S1     32,A5
           STW     .D2T1   A3,*+SP(76)
           SUB     .L1X    B4,A5,A11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 60,column 21,is_stmt,isa 0
;----------------------------------------------------------------------
;  60 | uint16_t    outWidth     = prm[tpi].numLevels;                         
;  61 | uint16_t    outHeight    = prm[tpi].numLevels;                         
;  62 | uint32_t    retVal;                                                    
;  63 | uint32_t    i, j, k, fail, mode;                                       
;  64 | uint16_t   *outMatrix[MAX_OUT_MATRIX];                                 
;  65 | uint16_t   *outMatrix_cn[MAX_OUT_MATRIX];                              
;  66 | uint8_t    *scratch;                                                   
;  69 | int32_t    status_nat_vs_int  = vlib_KERNEL_PASS; /* Test status : Natu
;     | ral c vs. Optimized */                                                 
;  70 | int32_t    status_nat_vs_ref  = vlib_KERNEL_PASS; /* Test status : Natu
;     | ral c vs. Static Reference */                                          
;----------------------------------------------------------------------
           ADDK    .S1     32,A11            ; |60| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 58,column 17,is_stmt,isa 0
           CMPGT   .L1     A4,0,A0           ; |58| 

   [!A0]   B       .S1     $C$L32            ; |58| 
|| [ A0]   LDHU    .D1T1   *+A11(14),A4      ; |73| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 73,column 20,is_stmt,isa 0
;----------------------------------------------------------------------
;  73 | uint8_t   *input        = (uint8_t *) VLIB_malloc(prm[tpi].imagePitch *
;     |  prm[tpi].imageHeight);                                                
;----------------------------------------------------------------------
   [ A0]   LDHU    .D1T1   *+A11(16),A3      ; |73| 
           ZERO    .L1     A13
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 58,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L32}        ; |58| 
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L1
;** --------------------------------------------------------------------------*
$C$L1:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 58,column 10,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$4$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g3:
;** 60	-----------------------    outWidth = (*(U$12 += 32)).numLevels;
;** 61	-----------------------    outHeight = outWidth;
;** 73	-----------------------    input = VLIB_malloc((unsigned)((*U$12).imagePitch*(*U$12).imageHeight));
;** 75	-----------------------    v$4 = prm;
;** 75	-----------------------    v$1 = v$4;
;** 75	-----------------------    if ( !(*U$12).numOffsets ) goto g6;
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$162, DW_AT_TI_call

           CALL    .S1     VLIB_malloc       ; |73| 
||         MPYU    .M1     A4,A3,A4          ; |73| 
||         LDHU    .D1T1   *+A11(20),A3      ; |60| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 73,column 20,is_stmt,isa 0
           ADDKPC  .S2     $C$RL2,B3,3       ; |73| 
           STW     .D2T1   A3,*+SP(80)       ; |73| 
$C$RL2:    ; CALL OCCURS {VLIB_malloc} {0}   ; |73| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$4$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$5$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 75,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
;  75 | for( k=0; k < prm[tpi].numOffsets; k++ ) {                             
;----------------------------------------------------------------------
           LDBU    .D1T1   *+A11(22),A0      ; |75| 
           LDW     .D2T2   *+SP(36),B6       ; |75| 
           LDW     .D2T1   *+SP(80),A3
           ADDAW   .D1X    SP,10,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 73,column 20,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(92)       ; |73| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 75,column 19,is_stmt,isa 0
   [!A0]   BNOP    .S1     $C$L3,1           ; |75| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 61,column 21,is_stmt,isa 0
           STW     .D2T1   A3,*+SP(84)       ; |61| 
   [ A0]   MPYU    .M1     A3,A3,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 75,column 14,is_stmt,isa 0
   [ A0]   ZERO    .L1     A10               ; |75| 
   [ A0]   ADD     .L1     A3,A3,A14
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 75,column 19,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L3}         ; |75| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$5$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$6$B:
;**  	-----------------------    U$31 = _mpyu(outHeight, outHeight)*2;
;**  	-----------------------    U$35 = &O$1;
;** 75	-----------------------    k = 0u;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
$C$DW$L$VLIB_coOccurrenceMatrix_d$6$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L2:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 75,column 14,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$7$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g5:
;** 76	-----------------------    U$35[4] = VLIB_malloc(U$31);
;** 77	-----------------------    *U$35++ = malloc(U$31);
;** 75	-----------------------    v$4 = prm;
;** 75	-----------------------    v$1 = v$4;
;** 75	-----------------------    if ( (unsigned)(*U$12).numOffsets > (++k) ) goto g5;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 76,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  76 | outMatrix[k]    = (uint16_t *) VLIB_malloc(outWidth * outHeight * sizeo
;     | f(uint16_t));                                                          
;----------------------------------------------------------------------
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("VLIB_malloc")
	.dwattr $C$DW$163, DW_AT_TI_call
           CALL    .S1     VLIB_malloc       ; |76| 
           ADDKPC  .S2     $C$RL3,B3,3       ; |76| 
           MV      .L1     A14,A4            ; |76| 
$C$RL3:    ; CALL OCCURS {VLIB_malloc} {0}   ; |76| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$7$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$8$B:
;          EXCLUSIVE CPU CYCLES: 6
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("malloc")
	.dwattr $C$DW$164, DW_AT_TI_call

           CALLP   .S2     malloc,B3
||         STW     .D1T1   A4,*+A12(16)      ; |76| 
||         MV      .L1     A14,A4            ; |77| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 77,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  77 | outMatrix_cn[k] = (uint16_t *) malloc(outWidth * outHeight * sizeof(uin
;     | t16_t));                                                               
;----------------------------------------------------------------------
$C$RL4:    ; CALL OCCURS {malloc} {0}        ; |77| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$8$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$9$B:
;          EXCLUSIVE CPU CYCLES: 13
           STW     .D1T1   A4,*A12++         ; |77| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 75,column 19,is_stmt,isa 0
           LDBU    .D1T1   *+A11(22),A3      ; |75| 
           LDW     .D2T2   *+SP(36),B6       ; |75| 
           ADD     .L1     1,A10,A10         ; |75| 
           NOP             2
           CMPGTU  .L1     A3,A10,A0         ; |75| 
   [ A0]   BNOP    .S1     $C$L2,5           ; |75| 
           ; BRANCHCC OCCURS {$C$L2}         ; |75| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$9$E:
;** --------------------------------------------------------------------------*
$C$L3:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$10$B:
;          EXCLUSIVE CPU CYCLES: 12
;**	-----------------------g6:
;** 80	-----------------------    if ( (*(U$11+v$1)).scratchFlow ) goto g8;
;** 86	-----------------------    scratch = NULL;
;** 86	-----------------------    goto g9;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 80,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  80 | if( prm[tpi].scratchFlow ) {                                           
;  84 |     scratch = (uint8_t *) malloc(outWidth * outHeight * 4 * sizeof(uint
;     | 16_t));                                                                
;  85 | } else {                                                               
;----------------------------------------------------------------------
           ADD     .L1X    B6,A13,A3         ; |80| 
           LDBU    .D1T1   *+A3(31),A0       ; |80| 
           LDW     .D2T1   *+SP(84),A4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 86,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
;  86 | scratch = NULL;                                                        
;----------------------------------------------------------------------
           ZERO    .L2     B4                ; |86| 
           NOP             2

   [!A0]   B       .S1     $C$L4             ; |86| 
|| [!A0]   STW     .D2T2   B4,*+SP(88)       ; |86| 

$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("malloc")
	.dwattr $C$DW$165, DW_AT_TI_call

   [ A0]   CALL    .S1     malloc            ; |84| 
|| [!A0]   LDW     .D2T1   *+SP(92),A0

           MV      .L1     A4,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 84,column 13,is_stmt,isa 0
           MPYU    .M1     A4,A3,A3          ; |84| 
           NOP             2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 86,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L4}         ; |86| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$10$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 80,column 9,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$11$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g8:
;** 84	-----------------------    scratch = malloc((unsigned)(outWidth*outHeight<<3));
;** 85	-----------------------    v$4 = prm;
;** 85	-----------------------    v$1 = v$4;

           SHL     .S1     A3,3,A4           ; |84| 
||         ADDKPC  .S2     $C$RL5,B3,0       ; |84| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 84,column 13,is_stmt,isa 0
$C$RL5:    ; CALL OCCURS {malloc} {0}        ; |84| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$11$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$12$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 85,column 9,is_stmt,isa 0
           LDW     .D2T2   *+SP(36),B6       ; |85| 
           LDW     .D2T1   *+SP(92),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 84,column 13,is_stmt,isa 0
           STW     .D2T1   A4,*+SP(88)       ; |84| 
           NOP             3
$C$DW$L$VLIB_coOccurrenceMatrix_d$12$E:
;** --------------------------------------------------------------------------*
$C$L4:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 86,column 13,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$13$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g9:
;** 90	-----------------------    if ( input == NULL ) goto g39;

           ADD     .L2X    B6,A13,B4         ; |90| 
|| [!A0]   B       .S1     $C$L25            ; |90| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 90,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
;  90 | if( input && outMatrix[prm[tpi].numOffsets - 1] && outMatrix_cn[prm[tpi
;     | ].numOffsets - 1] ) {                                                  
;  93 |     VLIB_fillBuffer(prm[tpi].testPattern,                              
;  94 |                     (uint8_t)255,                                      
;  95 |                     input, prm[tpi].staticIn,                          
;  96 |                     prm[tpi].imageWidth, prm[tpi].imageHeight, prm[tpi]
;     | .imagePitch,                                                           
;  97 |                     sizeof(uint8_t), testPatternString);               
; 100 |     VLIB_profile_start(vlib_KERNEL_OPT);                               
; 101 |     retVal =  VLIB_coOccurrenceMatrix(input,                           
; 102 |                                       outMatrix,                       
; 103 |                                       prm[tpi].imageWidth,             
; 104 |                                       prm[tpi].imageHeight,            
; 105 |                                       prm[tpi].imagePitch,             
; 106 |                                       prm[tpi].loPixelVal,             
; 107 |                                       prm[tpi].hiPixelVal,             
; 108 |                                       prm[tpi].numLevels,              
; 109 |                                       prm[tpi].numOffsets,             
; 110 |                                       prm[tpi].rowOffsets,             
; 111 |                                       prm[tpi].colOffsets,             
; 112 |                                       scratch);                        
; 113 |     VLIB_profile_stop();                                               
; 115 |     if( retVal == 0x0 ) {                                              
; 116 |         status_nat_vs_int = vlib_KERNEL_FAIL;                          
; 120 |     VLIB_profile_start(vlib_KERNEL_CN);                                
; 121 |     retVal =  VLIB_coOccurrenceMatrix_cn(input,                        
; 122 |                                          outMatrix_cn,                 
; 123 |                                          prm[tpi].imageWidth,          
; 124 |                                          prm[tpi].imageHeight,         
; 125 |                                          prm[tpi].imagePitch,          
; 126 |                                          prm[tpi].loPixelVal,          
; 127 |                                          prm[tpi].hiPixelVal,          
; 128 |                                          prm[tpi].numLevels,           
; 129 |                                          prm[tpi].numOffsets,          
; 130 |                                          prm[tpi].rowOffsets,          
; 131 |                                          prm[tpi].colOffsets,          
; 132 |                                          scratch);                     
; 133 |     VLIB_profile_stop();                                               
; 136 |     for( k=0; k < (prm[tpi].numOffsets); k++ ) {                       
; 137 |         for( i=0; i < (outHeight); i++ ) {                             
; 138 |             for( j=0; j < (outWidth); j++ ) {                          
; 139 |                 if((outMatrix_cn[k][i * outWidth + j] != outMatrix[k][i
;     |  * outWidth + j])) {                                                   
; 140 |                     status_nat_vs_int = vlib_KERNEL_FAIL;              
; 141 |                     printf("Matrix:%d, row:%d, col:%d, out:%u, EOut:%u
;     | \n", k, i, j,\                                                         
; 142 |                            outMatrix[k][i * outWidth + j], outMatrix_cn
;     | [k][i * outWidth + j]);                                                
; 143 |                     break;                                             
; 150 |     if( prm[tpi].staticOut != NULL ) {                                 
; 151 |         for( k=0; k < prm[tpi].numOffsets; k++ ) {                     
; 152 |             for( i=0; i < (outHeight); i++ ) {                         
; 153 |                 for( j=0; j < (outWidth); j++ ) {                      
; 154 |                     if((prm[tpi].staticOut[k * outWidth * outHeight + i
;     |  * outWidth + j] != outMatrix_cn[k][i * outWidth + j])) {              
; 155 |                         status_nat_vs_ref = vlib_KERNEL_FAIL;          
; 156 |                         printf("Matrix:%d, row:%d, col:%d, Eout:%u, Out
;     | :%u \n", k, i, j,\                                                     
; 157 |                                prm[tpi].staticOut[k * outWidth * outHei
;     | ght + i * outWidth + j], outMatrix_cn[k][i * outWidth + j]);           
; 158 |                         break;                                         
; 166 |     fail = ((status_nat_vs_int == vlib_KERNEL_FAIL) || (status_nat_vs_r
;     | ef == vlib_KERNEL_FAIL)) ? 1 : 0;                                      
; 168 |     est_test=1;                                                        
; 170 |     if( prm[tpi].scratchFlow ) {                                       
; 171 |         if( ppwr2((prm[tpi].hiPixelVal - prm[tpi].loPixelVal + 1) / prm
;     | [tpi].numLevels) && (prm[tpi].numLevels <= 64)) {                      
; 172 |             mode = 1;                                                  
; 173 |         } else {                                                       
; 174 |             mode = 2;                                                  
; 176 |     } else {                                                           
; 177 |         mode = 3;                                                      
; 181 |     sprintf(desc, "%s generated input | Opt and NatC results compared |
;     |  imageWidth= %d, imageHeight= %d, outWidth= %d, outHeight= %d mode =%d"
;     | ,                                                                      
; 182 |             testPatternString, prm[tpi].imageWidth, prm[tpi].imageHeigh
;     | t, outWidth, outHeight, mode);                                         
; 183 |     VLIB_formula_add_test(prm[tpi].imageWidth * prm[tpi].imageHeight *
;     | prm[tpi].numOffsets,                                                   
; 184 |                           prm[tpi].imageHeight * prm[tpi].numOffsets,  
; 185 |                           prm[tpi].numOffsets, fail, desc, mode);      
; 187 | } else {                                                               
;----------------------------------------------------------------------
   [ A0]   LDBU    .D2T2   *+B4(22),B5       ; |90| 
           NOP             4
           ; BRANCHCC OCCURS {$C$L25}        ; |90| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$13$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$14$B:
;          EXCLUSIVE CPU CYCLES: 13
;** 90	-----------------------    v$1 = v$4;
;** 90	-----------------------    C$16 = U$11+v$1;
;** 90	-----------------------    U$61 = (*C$16).numOffsets*4+&O$1-4;
;** 90	-----------------------    if ( U$61[4] == NULL ) goto g39;
           ADDAW   .D2     SP,B5,B5          ; |90| 
           ADDAW   .D2     B5,9,B5           ; |90| 
           LDW     .D2T2   *+B5(16),B0       ; |90| 
           NOP             4

   [!B0]   BNOP    .S1     $C$L26,1          ; |90| 
||         MV      .L2     B0,B2             ; branch predicate copy
||         MV      .S2     B0,B1             ; guard predicate rewrite
|| [ B0]   LDW     .D2T2   *B5,B0            ; |90| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 189,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 189 | sprintf(desc, "imageWidth= %d, imageHeight= %d, outWidth= %d, outHeight
;     | = %d ",                                                                
;----------------------------------------------------------------------
   [!B2]   ADD     .L1X    B6,A13,A3         ; |189| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 90,column 9,is_stmt,isa 0
   [!B1]   MVK     .L2     0x1,B0            ; |90| nullify predicate
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 189,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 190 | prm[tpi].imageWidth, prm[tpi].imageHeight, outWidth, outHeight);       
; 191 | VLIB_skip_test(desc);                                                  
;----------------------------------------------------------------------
   [!B2]   LDHU    .D1T1   *+A3(14),A4       ; |189| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 90,column 9,is_stmt,isa 0
   [!B0]   B       .S1     $C$L27            ; |90| 
           ; BRANCHCC OCCURS {$C$L26}        ; |90| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$14$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$15$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 90	-----------------------    if ( *U$61 == NULL ) goto g39;

   [!B0]   ADD     .L1X    B6,A13,A3         ; |189| 
|| [ B0]   LDHU    .D2T1   *+B4(16),A10      ; |93| 

   [ B0]   LDW     .D2T2   *+B4(4),B6        ; |93| 
|| [!B0]   LDHU    .D1T1   *+A3(12),A5       ; |189| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 93,column 13,is_stmt,isa 0
   [ B0]   LDBU    .D2T1   *B4,A4            ; |93| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("VLIB_fillBuffer")
	.dwattr $C$DW$166, DW_AT_TI_call

   [ B0]   CALL    .S1     VLIB_fillBuffer   ; |93| 
|| [ B0]   LDHU    .D2T1   *+B4(12),A8       ; |93| 

   [!B0]   LDHU    .D1T1   *+A3(14),A4       ; |189| 
|| [ B0]   LDHU    .D2T2   *+B4(14),B8       ; |93| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 90,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L27}        ; |90| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$15$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$16$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 93	-----------------------    VLIB_fillBuffer((*C$16).testPattern, 0xffu, (void *)input, (*C$16).staticIn, (*C$16).imageWidth, (*C$16).imageHeight, (*C$16).imagePitch, 1u, &testPatternString);
;** 137	-----------------------    act_kernel = 0;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 101	-----------------------    U$83 = (char (*)[4])U$12+27;
;** 101	-----------------------    U$85 = (char (*)[4])U$12+23;
;** 101	-----------------------    retVal = VLIB_coOccurrenceMatrix(input, &O$1+16, (*U$12).imageWidth, (*U$12).imageHeight, (*U$12).imagePitch, (*U$12).loPixelVal, (*U$12).hiPixelVal, (*U$12).numLevels, (*U$12).numOffsets, U$85, U$83, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    C$15 = (act_kernel<<3)+&cycles;  // [16]
;** 156	-----------------------    *C$15 = *C$15+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
;** 69	-----------------------    status_nat_vs_int = retVal != 0u;
;** 137	-----------------------    act_kernel = 1;  // [15]
;** 140	-----------------------    VLIB_cache_inval();  // [15]
;** 143	-----------------------    initStack(getSP());  // [15]
;** 146	-----------------------    beg_count = _itoll(TSCH, TSCL);  // [15]
;** 121	-----------------------    VLIB_coOccurrenceMatrix_cn(input, &O$1, (*U$12).imageWidth, (*U$12).imageHeight, (*U$12).imagePitch, (*U$12).loPixelVal, (*U$12).hiPixelVal, (*U$12).numLevels, (*U$12).numOffsets, U$85, U$83, scratch);
;** 153	-----------------------    v$2 = _itoll(TSCH, TSCL);  // [16]
;** 153	-----------------------    end_count = v$2;  // [16]
;** 156	-----------------------    K$95 = &cycles[0];  // [16]
;** 156	-----------------------    C$14 = act_kernel;  // [16]
;** 156	-----------------------    *((C$14<<3)+K$95) = *((C$14<<3)+K$95)+(v$2-(beg_count+overhead));  // [16]
;** 159	-----------------------    setStackDepth();  // [16]
           MVKL    .S1     testPatternString,A12
           MVKH    .S1     testPatternString,A12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 93,column 13,is_stmt,isa 0
           ADDKPC  .S2     $C$RL6,B3,0       ; |93| 

           MVK     .S2     0xff,B4           ; |93| 
||         MV      .L1     A0,A6             ; |93| 
||         MVK     .L2     0x1,B10           ; |93| 

$C$RL6:    ; CALL OCCURS {VLIB_fillBuffer} {0}  ; |93| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$16$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$17$B:
;          EXCLUSIVE CPU CYCLES: 122
           MVKL    .S1     act_kernel,A14

           MVKH    .S1     act_kernel,A14
||         ZERO    .L2     B4                ; |137| 

$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$167, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A14           ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL7:    ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("getSP")
	.dwattr $C$DW$168, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL8:    ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("initStack")
	.dwattr $C$DW$169, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL9:    ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B6           ; |146| 
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 101,column 13,is_stmt,isa 0
           ADD     .D1     A11,23,A3         ; |101| 
           ADD     .D1     A11,27,A15        ; |101| 
           LDBU    .D1T1   *+A11(19),A10     ; |101| 

           LDW     .D2T2   *+SP(88),B5       ; |101| 
||         LDHU    .D1T1   *+A11(16),A8      ; |101| 

           LDHU    .D1T1   *+A11(12),A6      ; |101| 

           MVKL    .S1     beg_count,A4
||         LDBU    .D1T2   *+A11(18),B8      ; |101| 
||         STW     .D2T1   A3,*+SP(72)       ; |101| 

           MVKH    .S1     beg_count,A4
||         MV      .L2     B4,B7             ; |146| 
||         LDHU    .D1T2   *+A11(20),B10     ; |101| 
||         STW     .D2T1   A15,*+SP(4)       ; |101| 

           STDW    .D1T2   B7:B6,*A4         ; |146| 
||         ADDAW   .D2     SP,14,B4          ; |101| 

           LDBU    .D1T1   *+A11(22),A12     ; |101| 
||         STW     .D2T2   B5,*+SP(8)        ; |101| 

$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("VLIB_coOccurrenceMatrix")
	.dwattr $C$DW$170, DW_AT_TI_call

           CALLP   .S2     VLIB_coOccurrenceMatrix,B3
||         LDHU    .D1T2   *+A11(14),B6      ; |101| 
||         LDW     .D2T1   *+SP(92),A4       ; |101| 
||         MV      .L2X    A3,B12            ; |101| 

$C$RL10:   ; CALL OCCURS {VLIB_coOccurrenceMatrix} {0}  ; |101| 

           MV      .L1     A4,A12            ; |101| 
||         MVC     .S2     TSCL,B16          ; |153| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B5           ; |153| 

           MVKL    .S2     overhead,B13
||         MVKL    .S1     beg_count,A10

           MVKH    .S2     overhead,B13
||         MVKH    .S1     beg_count,A10

           LDDW    .D1T1   *A10,A7:A6        ; |156| 
||         LDDW    .D2T2   *B13,B7:B6        ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDW     .D1T2   *A14,B8           ; |156| 
           MVKL    .S2     cycles,B4
           MVKH    .S2     cycles,B4
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MV      .L2     B5,B17            ; |153| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           ADDU    .L1X    B6,A6,A5:A4       ; |156| 

           ADDAD   .D2     B4,B8,B4          ; |156| 
||         ADD     .L1X    A5,B7,A3          ; |156| 

           LDDW    .D2T2   *B4,B9:B8         ; |156| 
||         ADD     .L1     A3,A7,A3          ; |156| 

           SUBU    .L1X    B16,A4,A5:A4      ; |156| 
           SUB     .L2X    B5,A3,B5          ; |156| 
           EXT     .S1     A5,24,24,A31      ; |156| 
           ADD     .L1X    B5,A31,A3         ; |156| 
           ADDU    .L1X    B8,A4,A5:A4       ; |156| 
           ADD     .L1X    A5,B9,A5          ; |156| 

           ADD     .L1     A5,A3,A5          ; |156| 
||         MVKL    .S1     end_count,A3

           MVKH    .S1     end_count,A3
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("setStackDepth")
	.dwattr $C$DW$171, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B17:B16,*A3       ; |153| 
||         STDW    .D2T1   A5:A4,*B4         ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL11:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 

           MV      .L1     A14,A3            ; |137| 
||         MVK     .L2     1,B4              ; |137| 

$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("VLIB_cache_inval")
	.dwattr $C$DW$172, DW_AT_TI_call

           CALLP   .S2     VLIB_cache_inval,B3
||         STW     .D1T2   B4,*A3            ; |137| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 140,column 5,is_stmt,isa 0
$C$RL12:   ; CALL OCCURS {VLIB_cache_inval} {0}  ; |140| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("getSP")
	.dwattr $C$DW$173, DW_AT_TI_call
           CALLP   .S2     getSP,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 143,column 5,is_stmt,isa 0
$C$RL13:   ; CALL OCCURS {getSP} {0}         ; |143| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("initStack")
	.dwattr $C$DW$174, DW_AT_TI_call
           CALLP   .S2     initStack,B3
$C$RL14:   ; CALL OCCURS {initStack} {0}     ; |143| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 69,column 20,is_stmt,isa 0
           CMPEQ   .L1     A12,0,A3          ; |69| 

           XOR     .L1     1,A3,A14          ; |69| 
||         MVC     .S2     TSCL,B8           ; |146| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 146,column 5,is_stmt,isa 0
           MVC     .S2     TSCH,B4           ; |146| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 121,column 13,is_stmt,isa 0
           LDHU    .D1T2   *+A11(14),B6      ; |121| 

           MV      .L2     B4,B9             ; |146| 
||         LDW     .D2T2   *+SP(88),B4       ; |121| 
||         LDHU    .D1T1   *+A11(12),A6      ; |121| 

           LDBU    .D1T1   *+A11(22),A12     ; |121| 

           MVKL    .S1     beg_count,A3
||         LDBU    .D1T1   *+A11(19),A10     ; |121| 

           MVKH    .S1     beg_count,A3
||         LDHU    .D1T2   *+A11(20),B10     ; |121| 
||         STW     .D2T1   A15,*+SP(4)       ; |121| 

           STDW    .D1T2   B9:B8,*A3         ; |146| 
||         LDW     .D2T1   *+SP(92),A4       ; |146| 

           LDHU    .D1T1   *+A11(16),A8      ; |121| 
||         STW     .D2T2   B4,*+SP(8)        ; |121| 

$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("VLIB_coOccurrenceMatrix_cn")
	.dwattr $C$DW$175, DW_AT_TI_call

           CALLP   .S2     VLIB_coOccurrenceMatrix_cn,B3
||         LDBU    .D1T2   *+A11(18),B8      ; |121| 
||         ADDAW   .D2     SP,10,B4          ; |121| 

$C$RL15:   ; CALL OCCURS {VLIB_coOccurrenceMatrix_cn} {0}  ; |121| 
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 153,column 5,is_stmt,isa 0
           MVC     .S2     TSCL,B8           ; |153| 
           MVC     .S2     TSCH,B4           ; |153| 
           MVKL    .S1     act_kernel,A3
           MVKH    .S1     act_kernel,A3

           MV      .L1     A3,A4
||         MVKL    .S1     beg_count,A31

           LDW     .D1T1   *A4,A5            ; |156| 
||         MVKH    .S1     beg_count,A31

           LDDW    .D1T1   *A31,A9:A8        ; |156| 
||         LDDW    .D2T2   *B13,B7:B6        ; |156| 

           MVKL    .S1     cycles,A3
           MVKH    .S1     cycles,A3
           MVKL    .S1     end_count,A4
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 156,column 5,is_stmt,isa 0
           LDDW    .D1T1   *+A3[A5],A7:A6    ; |156| 

           ADDU    .L2X    B6,A8,B17:B16     ; |156| 
||         MVKH    .S1     end_count,A4

           MV      .L2     B16,B5            ; |156| 
||         MV      .S2     B4,B9             ; |153| 

           ADD     .S2     B17,B7,B5         ; |156| 
||         SUBU    .L2     B8,B5,B7:B6       ; |156| 
||         MV      .D2X    A4,B4

           ADD     .L2X    B5,A9,B5          ; |156| 

           SUB     .D2     B9,B5,B5          ; |156| 
||         EXT     .S2     B7,24,24,B16      ; |156| 
||         ADDU    .L2X    A6,B6,B7:B6       ; |156| 

           ADD     .L2X    B7,A7,B5          ; |156| 
||         ADD     .S2     B5,B16,B7         ; |156| 

           ADD     .L2     B5,B7,B7          ; |156| 
||         STDW    .D2T2   B9:B8,*B4         ; |153| 

$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("setStackDepth")
	.dwattr $C$DW$176, DW_AT_TI_call

           CALLP   .S2     setStackDepth,B3
||         STDW    .D1T2   B7:B6,*+A3[A5]    ; |156| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\VLIB_profile.h",line 159,column 5,is_stmt,isa 0
$C$RL16:   ; CALL OCCURS {setStackDepth} {0}  ; |159| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$17$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$18$B:
;          EXCLUSIVE CPU CYCLES: 11
;** 136	-----------------------    v$1 = prm;
;** 136	-----------------------    if ( !(*U$12).numOffsets ) goto g23;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 136,column 23,is_stmt,isa 0
           LDBU    .D1T1   *+A11(22),A0      ; |136| 
           LDW     .D2T1   *+SP(76),A3
           LDW     .D2T2   *+SP(36),B12      ; |136| 
           NOP             2
   [!A0]   B       .S1     $C$L13            ; |136| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 137,column 22,is_stmt,isa 0
           SHL     .S1     A3,5,A3           ; |137| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 136,column 18,is_stmt,isa 0
   [ A0]   ZERO    .L2     B10               ; |136| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 137,column 22,is_stmt,isa 0
           ADD     .L2X    B12,A3,B4         ; |137| 
   [ A0]   LDBU    .D2T1   *+B4(22),A12      ; |137| 
           LDW     .D2T1   *+SP(84),A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 136,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L13}        ; |136| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$18$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$19$B:
;          EXCLUSIVE CPU CYCLES: 4
;** 137	-----------------------    L$1 = (unsigned)(*((tpi<<5)+v$1)).numOffsets;
;** 136	-----------------------    k = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 255, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)
           NOP             4
$C$DW$L$VLIB_coOccurrenceMatrix_d$19$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L5
;** --------------------------------------------------------------------------*
$C$L5:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 136,column 18,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$20$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g14:
;** 137	-----------------------    if ( !outHeight ) goto g22;

   [!A0]   BNOP    .S1     $C$L12,5          ; |137| 
||         LDW     .D2T1   *+SP(80),A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 137,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L12}        ; |137| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$20$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$21$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 137	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)

           ZERO    .L1     A10               ; |137| 
|| [ A0]   ADDAW   .D2     SP,B10,B4

$C$DW$L$VLIB_coOccurrenceMatrix_d$21$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L6
;** --------------------------------------------------------------------------*
$C$L6:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 137,column 22,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$22$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g16:
;** 138	-----------------------    if ( !outWidth ) goto g21;

   [!A0]   B       .S1     $C$L10            ; |138| 
|| [ A0]   ADDAW   .D2     SP,B10,B5
|| [ A0]   MV      .L1     A0,A4

   [ A0]   MPY32   .M1     A10,A4,A7
   [ A0]   MV      .L1     A0,A4
   [ A0]   LDW     .D2T1   *+B5(40),A3
   [ A0]   LDW     .D2T1   *+B4(56),A5
   [ A0]   MVK     .L1     0x1,A0
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 138,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L10}        ; |138| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$22$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 138,column 47,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$23$B:
;**  	-----------------------    C$13 = outWidth*i;
;**  	-----------------------    U$117 = C$13*2+*(k*4+&O$1);
;**  	-----------------------    U$119 = C$13*2+*(k*4+&O$1+16);
;** 139	-----------------------    L$2 = (unsigned)outWidth;
;** 138	-----------------------    --U$119;
;** 138	-----------------------    --U$117;
;** 138	-----------------------    j = 0xffffffffu;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g18:
;** 139	-----------------------    U$120 = *(++U$119);
;** 139	-----------------------    U$118 = *(++U$117);
;** 139	-----------------------    f$3 = (U$118 != U$120)-1;
;** 138	-----------------------    ++j;
;** 138	-----------------------    L$2 = L$2-1;
;** 138	-----------------------    if ( L$2&f$3 ) goto g18;
;**  	-----------------------    if ( f$3 ) goto g21;
$C$DW$L$VLIB_coOccurrenceMatrix_d$23$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c
;*      Loop source line                 : 138
;*      Loop opening brace source line   : 138
;*      Loop closing brace source line   : 145
;*      Known Minimum Trip Count         : 1                    
;*      Known Maximum Trip Count         : 65535                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 1
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        0     
;*      .S units                     1        0     
;*      .D units                     1        1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          3        1     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     2*       1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |    ***                         |    ***                         |
;*       1: |    ***                         |    ***                         |
;*       2: |   ****                         |    ***                         |
;*       3: |    ****                        |    ***                         |
;*       4: |   ****                         |    ***                         |
;*       5: |*   ***                         |    ***                         |
;*       6: |    ***                         |    ***                         |
;*       7: |    ***                         |    ***                         |
;*       8: |    ***                         |    ***                         |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.4%
;*
;*      Effective ii                : { min 9.00, est 9.13, max 10.00 }
;*
;*
;*      Total cycles (est.)         : 9 + trip_cnt * 9        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C117:
;*   5      [ A0]   LDHU    .D1T1   *++A6,A5          ; |139|  ^ 
;*     ||   [ A0]   LDHU    .D2T2   *++B6,B5          ; |139|  ^ 
;*   6              NOP             4
;*  10              CMPEQ   .L1X    B5,A5,A3          ; |139|  ^ 
;*  11              EXT     .S1     A3,31,31,A7       ; |139|  ^ 
;*     ||           SUB     .L1     A4,1,A4           ; |138|  ^ 
;*  12              AND     .L1     A7,A4,A3          ; |138|  ^ 
;*  13              MV      .L1     A3,A0             ; |138|  ^ 
;*  14      [ A0]   SPWBR           $C$C117
;*  15              NOP             2
;*  17              ADD     .L2     1,B4,B4           ; |138| 
;*  18              ; BRANCHCC OCCURS {$C$C117}       ; |138| 
;*----------------------------------------------------------------------------*
$C$L7:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 10
   [ A0]   SPLOOPW 9       ;18               ; (P) 
;** --------------------------------------------------------------------------*
$C$L8:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_coOccurrenceMatrix_d$25$B:
;          EXCLUSIVE CPU CYCLES: 9
           NOP             2

           SPMASK          D1
||         ADDAH   .D1     A3,A7,A6

           SPMASK          D1
||         ADDAH   .D1     A5,A7,A3

           SPMASK          L1,L2
||         SUB     .L1     A3,2,A6           ; |138| 
||         SUB     .L2X    A6,2,B6           ; |138| 

   [ A0]   LDHU    .D1T1   *++A6,A5          ; |139| (P) <0,5>  ^ 
|| [ A0]   LDHU    .D2T2   *++B6,B5          ; |139| (P) <0,5>  ^ 

           NOP             2

           SPMASK          L2
||         MVK     .L2     0xffffffff,B4     ; |138| 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 139,column 25,is_stmt,isa 0
           CMPEQ   .L1X    B5,A5,A3          ; |139| <0,10>  ^ 

           SUB     .L1     A4,1,A4           ; |138| <0,11>  ^ 
||         EXT     .S1     A3,31,31,A7       ; |139| <0,11>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 138,column 31,is_stmt,isa 0
           AND     .L1     A7,A4,A3          ; |138| <0,12>  ^ 
           MV      .L1     A3,A0             ; |138| <0,13>  ^ 
           NOP             2
           NOP             1

           SPKERNEL 0,0
||         ADD     .L2     1,B4,B4           ; |138| <0,17> 

$C$DW$L$VLIB_coOccurrenceMatrix_d$25$E:
;** --------------------------------------------------------------------------*
$C$L9:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$27$B:
;          EXCLUSIVE CPU CYCLES: 7
           MV      .L1     A7,A0

   [ A0]   BNOP    .S1     $C$L11,2
|| [ A0]   LDW     .D2T1   *+SP(84),A3       ; |137| 
|| [!A0]   MVKL    .S2     $C$SL2+0,B6
|| [ A0]   ADD     .L1     1,A10,A10         ; |137| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 141,column 29,is_stmt,isa 0
   [!A0]   STW     .D2T2   B10,*+SP(8)       ; |141| 
   [!A0]   MVKH    .S2     $C$SL2+0,B6
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("printf")
	.dwattr $C$DW$177, DW_AT_TI_call

   [!A0]   CALL    .S1     printf            ; |141| 
|| [ A0]   CMPGTU  .L1     A3,A10,A0         ; |137| 

           ; BRANCHCC OCCURS {$C$L11}  
$C$DW$L$VLIB_coOccurrenceMatrix_d$27$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$28$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 141	-----------------------    printf((const char *)"Matrix:%d, row:%d, col:%d, out:%u, EOut:%u \n", k, i, j, (int)U$120, (int)U$118);
;** 140	-----------------------    status_nat_vs_int = 0;
           STW     .D2T2   B6,*+SP(4)        ; |141| 
           STW     .D2T2   B5,*+SP(24)       ; |141| 
           STW     .D2T1   A5,*+SP(20)       ; |141| 
           STW     .D2T2   B4,*+SP(16)       ; |141| 

           STW     .D2T1   A10,*+SP(12)      ; |141| 
||         ADDKPC  .S2     $C$RL17,B3,0      ; |141| 

$C$RL17:   ; CALL OCCURS {printf} {0}        ; |141| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$28$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$29$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 140,column 29,is_stmt,isa 0
           ZERO    .L1     A14               ; |140| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$29$E:
;** --------------------------------------------------------------------------*
$C$L10:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$30$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 137,column 27,is_stmt,isa 0
           LDW     .D2T1   *+SP(84),A3       ; |137| 
           ADD     .L1     1,A10,A10         ; |137| 
           NOP             3
           CMPGTU  .L1     A3,A10,A0         ; |137| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$30$E:
;** --------------------------------------------------------------------------*
$C$L11:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 138,column 31,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$31$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g21:
;** 137	-----------------------    if ( (unsigned)outHeight > (++i) ) goto g16;

   [ A0]   BNOP    .S1     $C$L6,4           ; |137| 
||         LDW     .D2T1   *+SP(80),A0

   [ A0]   ADDAW   .D2     SP,B10,B4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 137,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L6}         ; |137| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$31$E:
;** --------------------------------------------------------------------------*
$C$L12:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$32$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g22:
;** 136	-----------------------    ++k;
;** 136	-----------------------    if ( L$1 = L$1-1 ) goto g14;

           SUB     .L1     A12,1,A0          ; |136| 
||         ADD     .L2     1,B10,B10         ; |136| 
||         SUB     .S1     A12,1,A12         ; |136| 

   [ A0]   BNOP    .S1     $C$L5,5           ; |136| 
||         LDW     .D2T1   *+SP(84),A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 136,column 23,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L5}         ; |136| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$32$E:
;** --------------------------------------------------------------------------*
$C$L13:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$33$B:
;          EXCLUSIVE CPU CYCLES: 13
;**	-----------------------g23:
;** 150	-----------------------    U$45 = U$11+v$1;
;** 150	-----------------------    U$139 = (*U$45).staticOut;
;** 70	-----------------------    status_nat_vs_ref = 1;
;** 93	-----------------------    K$73 = &testPatternString[0];
;** 150	-----------------------    if ( U$139 == NULL ) goto g35;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 150,column 13,is_stmt,isa 0
           ADD     .L2X    B12,A13,B12       ; |150| 
           LDW     .D2T1   *+B12(8),A3       ; |150| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 70,column 20,is_stmt,isa 0
           MVK     .L1     0x1,A8            ; |70| 
           MVKL    .S2     testPatternString,B10
           MVKH    .S2     testPatternString,B10
           NOP             1

           MV      .L1     A3,A0             ; |70| 
||         STW     .D2T1   A3,*+SP(72)       ; |150| 

   [!A0]   BNOP    .S1     $C$L23,4          ; |150| 
|| [ A0]   LDBU    .D2T2   *+B12(22),B0      ; |151| 
|| [!A0]   MVK     .L2     0x1,B0            ; |151| nullify predicate

   [!B0]   B       .S1     $C$L22            ; |151| 
|| [!A0]   LDBU    .D2T2   *+B12(31),B0      ; |170| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 150,column 13,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L23}        ; |150| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$33$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$34$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 151	-----------------------    if ( !(C$12 = (*U$45).numOffsets) ) goto g35;
           LDW     .D2T1   *+SP(84),A0
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 151,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L22}        ; |151| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$34$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$35$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 152	-----------------------    L$3 = (unsigned)C$12;
;** 151	-----------------------    k = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 255, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           MV      .L2     B0,B13            ; |152| 
||         ZERO    .L1     A10               ; |151| 
||         MV      .S1     A0,A12            ; |152| 

$C$DW$L$VLIB_coOccurrenceMatrix_d$35$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L14
;** --------------------------------------------------------------------------*
$C$L14:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 151,column 22,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$36$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g26:
;** 152	-----------------------    if ( !outHeight ) goto g34;

   [!A0]   BNOP    .S1     $C$L21,5          ; |152| 
||         LDW     .D2T1   *+SP(80),A0

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 152,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L21}        ; |152| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$36$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$37$B:
;          EXCLUSIVE CPU CYCLES: 2
;**  	-----------------------    U$131 = (unsigned)outHeight;
;** 152	-----------------------    i = 0u;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(1024u)

           ZERO    .L1     A15               ; |152| 
||         MV      .S1     A0,A3
|| [ A0]   MV      .D1X    SP,A31            ; Register A/B partition copy

   [ A0]   MV      .L1     A0,A4
$C$DW$L$VLIB_coOccurrenceMatrix_d$37$E:
;** --------------------------------------------------------------------------*
;**   BEGIN LOOP $C$L15
;** --------------------------------------------------------------------------*
$C$L15:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 152,column 26,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$38$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g28:
;** 153	-----------------------    if ( !outWidth ) goto g33;

   [!A0]   B       .S1     $C$L19            ; |153| 
||         MPY32   .M1     A10,A3,A3
||         MV      .L1     A0,A1             ; guard predicate rewrite
|| [ A0]   MV      .D1     A0,A7
|| [ A0]   LDW     .D2T1   *+SP(72),A29

   [ A0]   MPY32   .M1     A15,A4,A5
   [ A0]   ADDAW   .D1     A31,A10,A4
   [ A0]   MVK     .L1     0x1,A0
   [ A1]   LDW     .D1T1   *+A4(40),A30
           MPY32   .M1     A12,A3,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 153,column 35,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L19}        ; |153| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$38$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 153,column 51,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$39$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    C$11 = outWidth*i;
;**  	-----------------------    U$117 = C$11*2+*(k*4+&O$1);
;**  	-----------------------    U$150 = &U$139[(int)C$11+outWidth*k*U$131];
;** 154	-----------------------    L$4 = (unsigned)outWidth;
;** 153	-----------------------    --U$150;
;** 153	-----------------------    --U$117;
;** 153	-----------------------    j = 0xffffffffu;
;**  	-----------------------    #pragma MUST_ITERATE(1, 65535, 1)
;**  	-----------------------    #pragma LOOP_FLAGS(4352u)
;**	-----------------------g30:
;** 154	-----------------------    U$118 = *(++U$117);
;** 154	-----------------------    U$151 = *(++U$150);
;** 154	-----------------------    f$4 = (U$151 != U$118)-1;
;** 153	-----------------------    ++j;
;** 153	-----------------------    L$4 = L$4-1;
;** 153	-----------------------    if ( L$4&f$4 ) goto g30;
;**  	-----------------------    if ( f$4 ) goto g33;
           NOP             1
$C$DW$L$VLIB_coOccurrenceMatrix_d$39$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*
;*      Loop found in file               : ./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c
;*      Loop source line                 : 153
;*      Loop opening brace source line   : 153
;*      Loop closing brace source line   : 160
;*      Known Minimum Trip Count         : 1                    
;*      Known Maximum Trip Count         : 65535                    
;*      Known Max Trip Count Factor      : 1
;*      Loop Carried Dependency Bound(^) : 1
;*      Unpartitioned Resource Bound     : 2
;*      Partitioned Resource Bound(*)    : 2
;*      Resource Partition:
;*                                A-side   B-side
;*      .L units                     1        0     
;*      .S units                     1        0     
;*      .D units                     1        1     
;*      .M units                     0        0     
;*      .X cross paths               1        0     
;*      .T address paths             1        1     
;*      Long read paths              0        0     
;*      Long write paths             0        0     
;*      Logical  ops (.LS)           0        0     (.L or .S unit)
;*      Addition ops (.LSD)          3        1     (.L or .S or .D unit)
;*      Bound(.L .S .LS)             1        0     
;*      Bound(.L .S .D .LS .LSD)     2*       1     
;*
;*      Searching for software pipeline schedule at ...
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Unsafe schedule for irregular loop
;*         ii = 4  Did not find schedule
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Unsafe schedule for irregular loop
;*         ii = 5  Did not find schedule
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Unsafe schedule for irregular loop
;*         ii = 6  Did not find schedule
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Unsafe schedule for irregular loop
;*         ii = 7  Did not find schedule
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Unsafe schedule for irregular loop
;*         ii = 8  Did not find schedule
;*         ii = 9  Schedule found with 2 iterations in parallel
;*
;*      Register Usage Table:
;*          +-----------------------------------------------------------------+
;*          |AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB|
;*          |00000000001111111111222222222233|00000000001111111111222222222233|
;*          |01234567890123456789012345678901|01234567890123456789012345678901|
;*          |--------------------------------+--------------------------------|
;*       0: |     ***                        |    ***                         |
;*       1: |     ***                        |    ***                         |
;*       2: |   * ***                        |    ***                         |
;*       3: |    ****                        |    ***                         |
;*       4: |   * ***                        |    ***                         |
;*       5: |*    ***                        |    ***                         |
;*       6: |     ***                        |    ***                         |
;*       7: |     ***                        |    ***                         |
;*       8: |     ***                        |    ***                         |
;*          +-----------------------------------------------------------------+
;*
;*      Done
;*
;*      Loop will be splooped
;*      Collapsed epilog stages       : 1
;*      Collapsed prolog stages       : 0
;*      Minimum required memory pad   : 0 bytes
;*
;*      For further improvement on this loop, try option -mh28
;*
;*      Minimum safe trip count       : 1
;*      Min. prof. trip count  (est.) : 3
;*
;*      Mem bank conflicts/iter(est.) : { min 0.000, est 0.125, max 1.000 }
;*      Mem bank perf. penalty (est.) : 1.4%
;*
;*      Effective ii                : { min 9.00, est 9.13, max 10.00 }
;*
;*
;*      Total cycles (est.)         : 9 + trip_cnt * 9        
;*----------------------------------------------------------------------------*
;*       SETUP CODE
;*
;*                  MVK             0x1,A0
;*
;*        SINGLE SCHEDULED ITERATION
;*
;*        $C$C63:
;*   5      [ A0]   LDHU    .D1T1   *++A6,A5          ; |154|  ^ 
;*     ||   [ A0]   LDHU    .D2T2   *++B6,B5          ; |154|  ^ 
;*   6              NOP             4
;*  10              CMPEQ   .L1X    B5,A5,A3          ; |154|  ^ 
;*  11              EXT     .S1     A3,31,31,A4       ; |154|  ^ 
;*     ||           SUB     .L1     A7,1,A7           ; |153|  ^ 
;*  12              AND     .L1     A4,A7,A3          ; |153|  ^ 
;*  13              MV      .L1     A3,A0             ; |153|  ^ 
;*  14      [ A0]   SPWBR           $C$C63
;*  15              NOP             2
;*  17              ADD     .L2     1,B4,B4           ; |153| 
;*  18              ; BRANCHCC OCCURS {$C$C63}        ; |153| 
;*----------------------------------------------------------------------------*
$C$L16:    ; PIPED LOOP PROLOG
;          EXCLUSIVE CPU CYCLES: 10
   [ A0]   SPLOOPW 9       ;18               ; (P) 
;** --------------------------------------------------------------------------*
$C$L17:    ; PIPED LOOP KERNEL
$C$DW$L$VLIB_coOccurrenceMatrix_d$41$B:
;          EXCLUSIVE CPU CYCLES: 9
           NOP             1

           SPMASK          L1
||         ADD     .L1     A3,A5,A3

           SPMASK          D1
||         ADDAH   .D1     A29,A3,A3

           SPMASK          D1
||         ADDAH   .D1     A30,A5,A4

           SPMASK          L1,L2
||         SUB     .L1     A4,2,A6           ; |153| 
||         SUB     .L2X    A3,2,B6           ; |153| 

   [ A0]   LDHU    .D1T1   *++A6,A5          ; |154| (P) <0,5>  ^ 
|| [ A0]   LDHU    .D2T2   *++B6,B5          ; |154| (P) <0,5>  ^ 

           NOP             2

           SPMASK          L2
||         MVK     .L2     0xffffffff,B4     ; |153| 

           NOP             1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 154,column 29,is_stmt,isa 0
           CMPEQ   .L1X    B5,A5,A3          ; |154| <0,10>  ^ 

           SUB     .L1     A7,1,A7           ; |153| <0,11>  ^ 
||         EXT     .S1     A3,31,31,A4       ; |154| <0,11>  ^ 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 153,column 35,is_stmt,isa 0
           AND     .L1     A4,A7,A3          ; |153| <0,12>  ^ 
           MV      .L1     A3,A0             ; |153| <0,13>  ^ 
           NOP             2
           NOP             1

           SPKERNEL 0,0
||         ADD     .L2     1,B4,B4           ; |153| <0,17> 

$C$DW$L$VLIB_coOccurrenceMatrix_d$41$E:
;** --------------------------------------------------------------------------*
$C$L18:    ; PIPED LOOP EPILOG
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$43$B:
;          EXCLUSIVE CPU CYCLES: 7
           MV      .L1     A4,A0

   [ A0]   BNOP    .S1     $C$L20,2
|| [ A0]   LDW     .D2T1   *+SP(84),A3       ; |152| 
|| [!A0]   MVKL    .S2     $C$SL3+0,B6
|| [ A0]   ADD     .L1     1,A15,A15         ; |152| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 156,column 33,is_stmt,isa 0
   [!A0]   STW     .D2T1   A10,*+SP(8)       ; |156| 
   [!A0]   MVKH    .S2     $C$SL3+0,B6
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("printf")
	.dwattr $C$DW$178, DW_AT_TI_call

   [!A0]   CALL    .S1     printf            ; |156| 
|| [ A0]   CMPGTU  .L1     A3,A15,A0         ; |152| 

           ; BRANCHCC OCCURS {$C$L20}  
$C$DW$L$VLIB_coOccurrenceMatrix_d$43$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$44$B:
;          EXCLUSIVE CPU CYCLES: 5
;** 156	-----------------------    printf((const char *)"Matrix:%d, row:%d, col:%d, Eout:%u, Out:%u \n", k, i, j, (int)U$151, (int)U$118);
;** 155	-----------------------    status_nat_vs_ref = 0;
           STW     .D2T2   B6,*+SP(4)        ; |156| 
           STW     .D2T1   A5,*+SP(24)       ; |156| 
           STW     .D2T2   B5,*+SP(20)       ; |156| 
           STW     .D2T2   B4,*+SP(16)       ; |156| 

           STW     .D2T1   A15,*+SP(12)      ; |156| 
||         ADDKPC  .S2     $C$RL18,B3,0      ; |156| 

$C$RL18:   ; CALL OCCURS {printf} {0}        ; |156| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$44$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$45$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 155,column 33,is_stmt,isa 0
           ZERO    .L1     A8                ; |155| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$45$E:
;** --------------------------------------------------------------------------*
$C$L19:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$46$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 152,column 31,is_stmt,isa 0
           LDW     .D2T1   *+SP(84),A3       ; |152| 
           ADD     .L1     1,A15,A15         ; |152| 
           NOP             3
           CMPGTU  .L1     A3,A15,A0         ; |152| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$46$E:
;** --------------------------------------------------------------------------*
$C$L20:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 153,column 35,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$47$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g33:
;** 152	-----------------------    U$131 = (unsigned)outHeight;
;** 152	-----------------------    if ( (unsigned)outHeight > (++i) ) goto g28;

   [ A0]   BNOP    .S1     $C$L15,4          ; |152| 
||         MV      .L1     A0,A2             ; guard predicate rewrite
||         LDW     .D2T1   *+SP(80),A0

           MV      .L1     A0,A3
|| [ A0]   MV      .S1X    SP,A31            ; Register A/B partition copy
|| [ A0]   MV      .D1     A0,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 152,column 31,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L15}        ; |152| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$47$E:
;** --------------------------------------------------------------------------*
$C$L21:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$48$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g34:
;** 151	-----------------------    ++k;
;** 151	-----------------------    if ( L$3 = L$3-1 ) goto g26;

           SUB     .L2     B13,1,B0          ; |151| 
||         LDW     .D2T1   *+SP(84),A0
||         SUB     .S2     B13,1,B13         ; |151| 
||         ADD     .L1     1,A10,A10         ; |151| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 151,column 27,is_stmt,isa 0
   [ B0]   BNOP    .S1     $C$L14,4          ; |151| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 152,column 26,is_stmt,isa 0
   [ B0]   MV      .L1     A0,A12            ; |152| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 151,column 27,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L14}        ; |151| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$48$E:
;** --------------------------------------------------------------------------*
$C$L22:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$49$B:
;          EXCLUSIVE CPU CYCLES: 1
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 170,column 13,is_stmt,isa 0
           LDBU    .D2T2   *+B12(31),B0      ; |170| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$49$E:
;** --------------------------------------------------------------------------*
$C$L23:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 150,column 13,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$50$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g35:
;** 166	-----------------------    fail = (unsigned)(status_nat_vs_int == 0)|(unsigned)(status_nat_vs_ref == 0);
;** 168	-----------------------    est_test = 1;
;** 170	-----------------------    if ( (*U$45).scratchFlow ) goto g37;
;** 177	-----------------------    mode = 3u;
;** 177	-----------------------    goto g38;

           CMPEQ   .L2X    A8,0,B4           ; |166| 
||         MVKL    .S1     est_test,A4
||         MVK     .L1     1,A5              ; |168| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 166,column 13,is_stmt,isa 0
           CMPEQ   .L1     A14,0,A3          ; |166| 
           MVKH    .S1     est_test,A4
           OR      .L2X    B4,A3,B13         ; |166| 

   [!B0]   B       .S1     $C$L24            ; |177| 
|| [ B0]   LDBU    .D2T2   *+B12(18),B5      ; |41| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 41,column 5,is_stmt,isa 0
   [ B0]   LDBU    .D2T2   *+B12(19),B7      ; |41| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 181,column 13,is_stmt,isa 0
   [!B0]   LDW     .D2T1   *+SP(80),A3       ; |181| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("__c6xabi_divi")
	.dwattr $C$DW$179, DW_AT_TI_call

   [ B0]   CALL    .S1     __c6xabi_divi     ; |41| 
|| [ B0]   LDHU    .D2T2   *+B12(20),B6      ; |41| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 168,column 13,is_stmt,isa 0
           STW     .D1T1   A5,*A4            ; |168| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 177,column 17,is_stmt,isa 0
   [!B0]   MVK     .L2     0x3,B11           ; |177| 
           ; BRANCHCC OCCURS {$C$L24}        ; |177| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$50$E:
;** --------------------------------------------------------------------------*
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 170,column 13,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$51$B:
;          EXCLUSIVE CPU CYCLES: 3
;**	-----------------------g37:
;** 41	-----------------------    C$9 = (*U$45).numLevels;  // [24]
;** 41	-----------------------    C$10 = ((*U$45).hiPixelVal-(*U$45).loPixelVal+1)/C$9;  // [24]
;** 174	-----------------------    ((C$10 <= 0)|C$10-1&C$10|(C$9 >= 65)) ? (mode = 2u) : (mode = 1u);
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 41,column 5,is_stmt,isa 0
           SUB     .L2     B7,B5,B5          ; |41| 
           ADDKPC  .S2     $C$RL19,B3,0      ; |41| 

           MV      .L2     B6,B4             ; |41| 
||         ADD     .L1X    1,B5,A4           ; |41| 

$C$RL19:   ; CALL OCCURS {__c6xabi_divi} {0}  ; |41| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$51$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$52$B:
;          EXCLUSIVE CPU CYCLES: 8
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 174,column 21,is_stmt,isa 0
           MVK     .S2     65,B4             ; |174| 

           CMPLTU  .L2     B6,B4,B4          ; |174| 
||         MV      .S1     A4,A3             ; |41| 
||         SUB     .D1     A4,1,A5           ; |174| 
||         CMPGT   .L1     A4,0,A4           ; |174| 

           XOR     .L2     1,B4,B4           ; |174| 
||         AND     .L1     A3,A5,A4          ; |174| 
||         XOR     .S1     1,A4,A3           ; |174| 

           OR      .L1     A4,A3,A3          ; |174| 

           OR      .L1X    B4,A3,A0          ; |174| 
||         LDW     .D2T1   *+SP(80),A3       ; |181| 

   [!A0]   MVK     .L2     0x1,B11           ; |174| 
   [ A0]   MVK     .L2     0x2,B11           ; |174| 
           NOP             1
$C$DW$L$VLIB_coOccurrenceMatrix_d$52$E:
;** --------------------------------------------------------------------------*
$C$L24:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 177,column 17,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$53$B:
;          EXCLUSIVE CPU CYCLES: 10
;**	-----------------------g38:
;** 181	-----------------------    sprintf(K$189, (const char *)"%s generated input | Opt and NatC results compared | imageWidth= %d, imageHeight= %d, outWidth= %d, outHeight= %d mode =%d", K$73, (int)(*U$45).imageWidth, (int)(*U$45).imageHeight, (int)outWidth, (int)outHeight, mode);
;** 183	-----------------------    C$8 = (*U$12).numOffsets;
;** 183	-----------------------    C$7 = (*U$12).imageHeight;
;** 183	-----------------------    VLIB_formula_add_test(_mpyu((*U$12).imageWidth, C$7)*C$8, (int)_mpyu(C$7, C$8), (int)C$8, (int)fail, K$189, (int)mode);
;** 187	-----------------------    goto g40;

           MVKL    .S2     $C$SL4+0,B5
||         MVKL    .S1     desc,A4
||         LDHU    .D2T2   *+B12(14),B4      ; |181| 

           MVKH    .S2     $C$SL4+0,B5
||         MVKH    .S1     desc,A4
||         STW     .D2T1   A3,*+SP(20)       ; |181| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 181,column 13,is_stmt,isa 0
           LDW     .D2T1   *+SP(84),A3       ; |181| 
           LDHU    .D2T2   *+B12(12),B6      ; |181| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x04)
	.dwattr $C$DW$180, DW_AT_name("sprintf")
	.dwattr $C$DW$180, DW_AT_TI_call

           STW     .D2T2   B5,*+SP(4)        ; |181| 
||         CALL    .S1     sprintf           ; |181| 

           STW     .D2T2   B4,*+SP(16)       ; |181| 
           STW     .D2T2   B10,*+SP(8)       ; |181| 
           STW     .D2T1   A3,*+SP(24)       ; |181| 

           ADDKPC  .S2     $C$RL20,B3,0      ; |181| 
||         STW     .D2T2   B6,*+SP(12)       ; |181| 

           STW     .D2T2   B11,*+SP(28)      ; |181| 
$C$RL20:   ; CALL OCCURS {sprintf} {0}       ; |181| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$53$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$54$B:
;          EXCLUSIVE CPU CYCLES: 16
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 183,column 13,is_stmt,isa 0
           LDHU    .D1T1   *+A11(14),A3      ; |183| 
           LDHU    .D1T1   *+A11(12),A4      ; |183| 
           LDBU    .D1T1   *+A11(22),A6      ; |183| 
           MVKL    .S1     desc,A8
           MV      .L2     B13,B6            ; |183| 
           MVKH    .S1     desc,A8
           MPYU    .M1     A4,A3,A4          ; |183| 
           MPYU    .M1     A3,A6,A3          ; |183| 
           MV      .L2     B11,B8            ; |183| 
           MPY32   .M1     A6,A4,A4          ; |183| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x04)
	.dwattr $C$DW$181, DW_AT_name("VLIB_formula_add_test")
	.dwattr $C$DW$181, DW_AT_TI_call

           MV      .L2X    A3,B4             ; |183| 
||         CALLP   .S2     VLIB_formula_add_test,B3

$C$RL21:   ; CALL OCCURS {VLIB_formula_add_test} {0}  ; |183| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$54$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$55$B:
;          EXCLUSIVE CPU CYCLES: 6
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 187,column 9,is_stmt,isa 0
           B       .S1     $C$L28            ; |187| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 194,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 194 | VLIB_free(input);                                                      
;----------------------------------------------------------------------
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("VLIB_free")
	.dwattr $C$DW$182, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |194| 
           LDW     .D2T1   *+SP(92),A4       ; |194| 
           NOP             3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 187,column 9,is_stmt,isa 0
           ; BRANCH OCCURS {$C$L28}          ; |187| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$55$E:
;** --------------------------------------------------------------------------*
$C$L25:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$56$B:
;          EXCLUSIVE CPU CYCLES: 2
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 189,column 13,is_stmt,isa 0
           ADD     .L1X    B6,A13,A3         ; |189| 
           LDHU    .D1T1   *+A3(14),A4       ; |189| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$56$E:
;** --------------------------------------------------------------------------*
$C$L26:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$57$B:
;          EXCLUSIVE CPU CYCLES: 2
           LDHU    .D1T1   *+A3(12),A5       ; |189| 
           NOP             1
$C$DW$L$VLIB_coOccurrenceMatrix_d$57$E:
;** --------------------------------------------------------------------------*
$C$L27:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 90,column 9,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$58$B:
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g39:
;** 189	-----------------------    C$6 = U$11+v$1;
;** 189	-----------------------    sprintf(K$189, (const char *)"imageWidth= %d, imageHeight= %d, outWidth= %d, outHeight= %d ", (int)(*C$6).imageWidth, (int)(*C$6).imageHeight, (int)outWidth, (int)outHeight);
;** 191	-----------------------    VLIB_skip_test(K$189);

           LDW     .D2T1   *+SP(80),A3       ; |189| 
||         MVKL    .S2     $C$SL5+0,B4

$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x04)
	.dwattr $C$DW$183, DW_AT_name("sprintf")
	.dwattr $C$DW$183, DW_AT_TI_call

           MVKH    .S2     $C$SL5+0,B4
||         CALL    .S1     sprintf           ; |189| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 189,column 13,is_stmt,isa 0
           STW     .D2T2   B4,*+SP(4)        ; |189| 
           STW     .D2T1   A5,*+SP(8)        ; |189| 

           STW     .D2T1   A4,*+SP(12)       ; |189| 
||         MVKL    .S1     desc,A4

           STW     .D2T1   A3,*+SP(16)       ; |189| 
||         MVKH    .S1     desc,A4

           STW     .D2T1   A3,*+SP(20)       ; |189| 
||         ADDKPC  .S2     $C$RL22,B3,0      ; |189| 

$C$RL22:   ; CALL OCCURS {sprintf} {0}       ; |189| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$58$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$59$B:
;          EXCLUSIVE CPU CYCLES: 12
           MVKL    .S1     desc,A4
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("VLIB_skip_test")
	.dwattr $C$DW$184, DW_AT_TI_call

           CALLP   .S2     VLIB_skip_test,B3
||         MVKH    .S1     desc,A4

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 191,column 13,is_stmt,isa 0
$C$RL23:   ; CALL OCCURS {VLIB_skip_test} {0}  ; |191| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 194,column 9,is_stmt,isa 0
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("VLIB_free")
	.dwattr $C$DW$185, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |194| 
           LDW     .D2T1   *+SP(92),A4       ; |194| 
           NOP             3
$C$DW$L$VLIB_coOccurrenceMatrix_d$59$E:
;** --------------------------------------------------------------------------*
$C$L28:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 187,column 9,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$60$B:
;          EXCLUSIVE CPU CYCLES: 1
;**	-----------------------g40:
;** 194	-----------------------    VLIB_free((void *)input);
;** 196	-----------------------    if ( !(*U$12).numOffsets ) goto g43;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 194,column 9,is_stmt,isa 0
           ADDKPC  .S2     $C$RL24,B3,0      ; |194| 
$C$RL24:   ; CALL OCCURS {VLIB_free} {0}     ; |194| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$60$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$61$B:
;          EXCLUSIVE CPU CYCLES: 11
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 196,column 19,is_stmt,isa 0
;----------------------------------------------------------------------
; 196 | for( k=0; k < prm[tpi].numOffsets; k++ ) {                             
;----------------------------------------------------------------------
           LDBU    .D1T1   *+A11(22),A0      ; |196| 
           NOP             4
   [!A0]   BNOP    .S1     $C$L30,5          ; |196| 
           ; BRANCHCC OCCURS {$C$L30}        ; |196| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$61$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$62$B:
;          EXCLUSIVE CPU CYCLES: 1
;**  	-----------------------    U$35 = &O$1;
;** 196	-----------------------    k = 0u;
;**  	-----------------------    #pragma LOOP_FLAGS(5120u)

           ZERO    .L1     A12               ; |196| 
||         ADDAW   .D1X    SP,10,A10

$C$DW$L$VLIB_coOccurrenceMatrix_d$62$E:
;*----------------------------------------------------------------------------*
;*   SOFTWARE PIPELINE INFORMATION
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*      Disqualified loop: Loop contains a call
;*      Disqualified loop: Loop contains non-pipelinable instructions
;*----------------------------------------------------------------------------*
$C$L29:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 196,column 14,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$63$B:
;          EXCLUSIVE CPU CYCLES: 6
;**	-----------------------g42:
;** 197	-----------------------    VLIB_free(U$35[4]);
;** 198	-----------------------    free(*U$35++);
;** 196	-----------------------    if ( (unsigned)(*U$12).numOffsets > (++k) ) goto g42;
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 197,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 197 | VLIB_free(outMatrix[k]);                                               
;----------------------------------------------------------------------
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("VLIB_free")
	.dwattr $C$DW$186, DW_AT_TI_call
           CALL    .S1     VLIB_free         ; |197| 
           LDW     .D1T1   *+A10(16),A4      ; |197| 
           ADDKPC  .S2     $C$RL25,B3,3      ; |197| 
$C$RL25:   ; CALL OCCURS {VLIB_free} {0}     ; |197| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$63$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$64$B:
;          EXCLUSIVE CPU CYCLES: 6
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("free")
	.dwattr $C$DW$187, DW_AT_TI_call

           CALLP   .S2     free,B3
||         LDW     .D1T1   *A10++,A4         ; |198| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 198,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 198 | free(outMatrix_cn[k]);                                                 
;----------------------------------------------------------------------
$C$RL26:   ; CALL OCCURS {free} {0}          ; |198| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$64$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$65$B:
;          EXCLUSIVE CPU CYCLES: 12
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 196,column 19,is_stmt,isa 0
           LDBU    .D1T1   *+A11(22),A3      ; |196| 
           ADD     .L1     1,A12,A12         ; |196| 
           NOP             3
           CMPGTU  .L1     A3,A12,A0         ; |196| 
   [ A0]   BNOP    .S1     $C$L29,5          ; |196| 
           ; BRANCHCC OCCURS {$C$L29}        ; |196| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$65$E:
;** --------------------------------------------------------------------------*
$C$L30:    
$C$DW$L$VLIB_coOccurrenceMatrix_d$66$B:
;          EXCLUSIVE CPU CYCLES: 11
;**	-----------------------g43:
;** 201	-----------------------    if ( scratch == NULL ) goto g45;
           LDW     .D2T1   *+SP(88),A0
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 201,column 9,is_stmt,isa 0
;----------------------------------------------------------------------
; 201 | if( scratch != NULL ) {                                                
;----------------------------------------------------------------------
   [!A0]   B       .S1     $C$L31            ; |201| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 202,column 13,is_stmt,isa 0
;----------------------------------------------------------------------
; 202 | free(scratch);                                                         
;----------------------------------------------------------------------
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("free")
	.dwattr $C$DW$188, DW_AT_TI_call
   [ A0]   CALL    .S1     free              ; |202| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 201,column 9,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L31}        ; |201| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$66$E:
;** --------------------------------------------------------------------------*
$C$DW$L$VLIB_coOccurrenceMatrix_d$67$B:
;          EXCLUSIVE CPU CYCLES: 1
;** 202	-----------------------    free((void *)scratch);

           MV      .L1     A0,A4             ; |202| 
||         ADDKPC  .S2     $C$RL27,B3,0      ; |202| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 202,column 13,is_stmt,isa 0
$C$RL27:   ; CALL OCCURS {free} {0}          ; |202| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$67$E:
;** --------------------------------------------------------------------------*
$C$L31:    
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 201,column 9,is_stmt,isa 0
$C$DW$L$VLIB_coOccurrenceMatrix_d$68$B:
;          EXCLUSIVE CPU CYCLES: 14
;**	-----------------------g45:
;** 58	-----------------------    U$11 += 32;
;** 58	-----------------------    if ( test_cases > (++tpi) ) goto g3;

           MVKL    .S1     test_cases,A3
||         LDW     .D2T1   *+SP(76),A31

           MVKH    .S1     test_cases,A3
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 58,column 17,is_stmt,isa 0
           LDW     .D1T1   *A3,A4            ; |58| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 60,column 21,is_stmt,isa 0
           ADDK    .S1     32,A11            ; |60| 
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 58,column 17,is_stmt,isa 0
           ADDK    .S1     32,A13            ; |58| 
           ADD     .L1     1,A31,A3          ; |58| 
           STW     .D2T1   A3,*+SP(76)       ; |58| 
           CMPGT   .L1     A4,A3,A0          ; |58| 

   [ A0]   B       .S1     $C$L1             ; |58| 
|| [ A0]   LDHU    .D1T1   *+A11(14),A4      ; |73| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 73,column 20,is_stmt,isa 0
   [ A0]   LDHU    .D1T1   *+A11(16),A3      ; |73| 
           NOP             4
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 58,column 17,is_stmt,isa 0
           ; BRANCHCC OCCURS {$C$L1}         ; |58| 
$C$DW$L$VLIB_coOccurrenceMatrix_d$68$E:
;** --------------------------------------------------------------------------*
$C$L32:    
;          EXCLUSIVE CPU CYCLES: 7
;**	-----------------------g46:
;** 207	-----------------------    VLIB_profile_setMode(1, 4, "Scratch used; internal LUT not required", 0);
;** 208	-----------------------    VLIB_profile_cycle_report(1, NULL, C$5 = "imageWidth*imageHeight*numOffsets");
;** 212	-----------------------    VLIB_profile_setMode(2, 4, "Scratch used; internal LUT required", 0);
;** 213	-----------------------    VLIB_profile_cycle_report(1, NULL, C$5);
;** 217	-----------------------    VLIB_profile_setMode(3, 4, "Scratch not used; internal LUT required", 1);
;** 218	-----------------------    VLIB_profile_cycle_report(1, NULL, C$5);
;** 161	-----------------------    printf((const char *)"---------------------------------------------------------------------------------------------------------------------------------------------\n");  // [18]
;** 168	-----------------------    VLIB_stack_memory();  // [18]
;**  	-----------------------    return;
           MVKL    .S1     $C$SL6+0,A6
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("VLIB_profile_setMode")
	.dwattr $C$DW$189, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_setMode,B3
||         MVKH    .S1     $C$SL6+0,A6
||         MVK     .L1     0x1,A4            ; |207| 
||         MVK     .L2     0x4,B4            ; |207| 
||         ZERO    .D2     B6                ; |207| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 207,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 207 | VLIB_profile_setMode(1, 4, "Scratch used; internal LUT not required", 0
;     | ); /* Mode 1 */                                                        
;----------------------------------------------------------------------
$C$RL28:   ; CALL OCCURS {VLIB_profile_setMode} {0}  ; |207| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 48
           MVKL    .S1     $C$SL7+0,A10
           MVKH    .S1     $C$SL7+0,A10
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$190, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MV      .L1     A10,A6            ; |208| 
||         MVK     .S1     0x1,A4            ; |208| 
||         ZERO    .L2     B4                ; |208| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 208,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 208 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 209 |                           NULL,                                        
; 210 |                           "imageWidth*imageHeight*numOffsets");        
;----------------------------------------------------------------------
$C$RL29:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |208| 
           MVKL    .S1     $C$SL8+0,A6
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("VLIB_profile_setMode")
	.dwattr $C$DW$191, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_setMode,B3
||         MVKH    .S1     $C$SL8+0,A6
||         ZERO    .L2     B6                ; |212| 
||         MVK     .L1     0x2,A4            ; |212| 
||         MVK     .D2     0x4,B4            ; |212| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 212,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 212 | VLIB_profile_setMode(2, 4, "Scratch used; internal LUT required", 0);
;     |    /* Mode 2 */                                                        
;----------------------------------------------------------------------
$C$RL30:   ; CALL OCCURS {VLIB_profile_setMode} {0}  ; |212| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$192, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MV      .L1     A10,A6            ; |213| 
||         MVK     .S1     0x1,A4            ; |213| 
||         ZERO    .L2     B4                ; |213| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 213,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 213 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 214 |                           NULL,                                        
; 215 |                           "imageWidth*imageHeight*numOffsets");        
;----------------------------------------------------------------------
$C$RL31:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |213| 
           MVKL    .S1     $C$SL9+0,A6
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("VLIB_profile_setMode")
	.dwattr $C$DW$193, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_setMode,B3
||         MVKH    .S1     $C$SL9+0,A6
||         MVK     .L2     0x1,B6            ; |217| 
||         MVK     .L1     0x3,A4            ; |217| 
||         MVK     .D2     0x4,B4            ; |217| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 217,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 217 | VLIB_profile_setMode(3, 4, "Scratch not used; internal LUT required", 1
;     | ); /* Mode 3 */                                                        
;----------------------------------------------------------------------
$C$RL32:   ; CALL OCCURS {VLIB_profile_setMode} {0}  ; |217| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("VLIB_profile_cycle_report")
	.dwattr $C$DW$194, DW_AT_TI_call

           CALLP   .S2     VLIB_profile_cycle_report,B3
||         MV      .L1     A10,A6            ; |218| 
||         MVK     .S1     0x1,A4            ; |218| 
||         ZERO    .L2     B4                ; |218| 

	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 218,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | VLIB_profile_cycle_report(vlib_PROFILE_RANGE,                          
; 219 |                           NULL,                                        
; 220 |                           "imageWidth*imageHeight*numOffsets");        
; 223 | VLIB_kernel_memory();                                                  
;----------------------------------------------------------------------
$C$RL33:   ; CALL OCCURS {VLIB_profile_cycle_report} {0}  ; |218| 
           MVKL    .S2     $C$SL10+0,B4
           MVKH    .S2     $C$SL10+0,B4
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("printf")
	.dwattr $C$DW$195, DW_AT_TI_call

           CALLP   .S2     printf,B3
||         STW     .D2T2   B4,*+SP(4)        ; |161| 

	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_memory.h",line 161,column 5,is_stmt,isa 0
$C$RL34:   ; CALL OCCURS {printf} {0}        ; |161| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("VLIB_stack_memory")
	.dwattr $C$DW$196, DW_AT_TI_call
           CALLP   .S2     VLIB_stack_memory,B3
	.dwpsn	file ".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_memory.h",line 168,column 5,is_stmt,isa 0
$C$RL35:   ; CALL OCCURS {VLIB_stack_memory} {0}  ; |168| 
;** --------------------------------------------------------------------------*
;          EXCLUSIVE CPU CYCLES: 13
	.dwpsn	file "./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c",line 225,column 1,is_stmt,isa 0
           LDW     .D2T2   *++SP(104),B3     ; |225| 
	.dwcfi	cfa_offset, 48
	.dwcfi	restore_reg, 19
           LDDW    .D2T1   *++SP,A13:A12
	.dwcfi	cfa_offset, 40
	.dwcfi	restore_reg, 13
	.dwcfi	restore_reg, 12
           LDDW    .D2T1   *++SP,A15:A14
	.dwcfi	cfa_offset, 32
	.dwcfi	restore_reg, 15
	.dwcfi	restore_reg, 14
           LDDW    .D2T2   *++SP,B11:B10
	.dwcfi	cfa_offset, 24
	.dwcfi	restore_reg, 27
	.dwcfi	restore_reg, 26
           LDDW    .D2T2   *++SP,B13:B12
	.dwcfi	cfa_offset, 16
	.dwcfi	restore_reg, 29
	.dwcfi	restore_reg, 28
           LDW     .D2T1   *++SP(8),A10
	.dwcfi	cfa_offset, 8
	.dwcfi	restore_reg, 10
           LDW     .D2T1   *++SP(8),A11      ; |225| 
	.dwcfi	cfa_offset, 0
	.dwcfi	restore_reg, 11
	.dwcfi	cfa_offset, 0
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_TI_return
           RETNOP  .S2     B3,5
           ; BRANCH OCCURS {B3}  

$C$DW$198	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$198, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L1:1:1443280168")
	.dwattr $C$DW$198, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$198, DW_AT_TI_begin_line(0x3a)
	.dwattr $C$DW$198, DW_AT_TI_end_line(0xcc)
$C$DW$199	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$199, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$4$B)
	.dwattr $C$DW$199, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$4$E)
$C$DW$200	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$200, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$62$B)
	.dwattr $C$DW$200, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$62$E)
$C$DW$201	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$201, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$56$B)
	.dwattr $C$DW$201, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$56$E)
$C$DW$202	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$202, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$57$B)
	.dwattr $C$DW$202, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$57$E)
$C$DW$203	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$203, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$58$B)
	.dwattr $C$DW$203, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$58$E)
$C$DW$204	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$204, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$51$B)
	.dwattr $C$DW$204, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$51$E)
$C$DW$205	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$35$B)
	.dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$35$E)
$C$DW$206	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$34$B)
	.dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$34$E)
$C$DW$207	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$19$B)
	.dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$19$E)
$C$DW$208	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$11$B)
	.dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$11$E)
$C$DW$209	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$209, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$6$B)
	.dwattr $C$DW$209, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$6$E)
$C$DW$210	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$5$B)
	.dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$5$E)
$C$DW$211	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$10$B)
	.dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$10$E)
$C$DW$212	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$12$B)
	.dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$12$E)
$C$DW$213	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$13$B)
	.dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$13$E)
$C$DW$214	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$214, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$14$B)
	.dwattr $C$DW$214, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$14$E)
$C$DW$215	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$215, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$15$B)
	.dwattr $C$DW$215, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$15$E)
$C$DW$216	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$216, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$16$B)
	.dwattr $C$DW$216, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$16$E)
$C$DW$217	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$217, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$17$B)
	.dwattr $C$DW$217, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$17$E)
$C$DW$218	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$218, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$18$B)
	.dwattr $C$DW$218, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$18$E)
$C$DW$219	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$219, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$33$B)
	.dwattr $C$DW$219, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$33$E)
$C$DW$220	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$220, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$49$B)
	.dwattr $C$DW$220, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$49$E)
$C$DW$221	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$221, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$50$B)
	.dwattr $C$DW$221, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$50$E)
$C$DW$222	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$52$B)
	.dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$52$E)
$C$DW$223	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$223, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$53$B)
	.dwattr $C$DW$223, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$53$E)
$C$DW$224	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$54$B)
	.dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$54$E)
$C$DW$225	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$55$B)
	.dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$55$E)
$C$DW$226	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$226, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$59$B)
	.dwattr $C$DW$226, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$59$E)
$C$DW$227	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$227, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$60$B)
	.dwattr $C$DW$227, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$60$E)
$C$DW$228	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$228, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$61$B)
	.dwattr $C$DW$228, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$61$E)
$C$DW$229	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$229, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$66$B)
	.dwattr $C$DW$229, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$66$E)
$C$DW$230	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$230, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$67$B)
	.dwattr $C$DW$230, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$67$E)
$C$DW$231	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$231, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$68$B)
	.dwattr $C$DW$231, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$68$E)

$C$DW$232	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$232, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L14:2:1443280168")
	.dwattr $C$DW$232, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$232, DW_AT_TI_begin_line(0x97)
	.dwattr $C$DW$232, DW_AT_TI_end_line(0xa2)
$C$DW$233	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$233, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$36$B)
	.dwattr $C$DW$233, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$36$E)
$C$DW$234	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$234, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$37$B)
	.dwattr $C$DW$234, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$37$E)
$C$DW$235	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$235, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$48$B)
	.dwattr $C$DW$235, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$48$E)

$C$DW$236	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$236, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L15:3:1443280168")
	.dwattr $C$DW$236, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$236, DW_AT_TI_begin_line(0x98)
	.dwattr $C$DW$236, DW_AT_TI_end_line(0xa1)
$C$DW$237	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$237, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$38$B)
	.dwattr $C$DW$237, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$38$E)
$C$DW$238	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$238, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$44$B)
	.dwattr $C$DW$238, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$44$E)
$C$DW$239	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$239, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$45$B)
	.dwattr $C$DW$239, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$45$E)
$C$DW$240	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$240, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$39$B)
	.dwattr $C$DW$240, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$39$E)
$C$DW$241	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$241, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$43$B)
	.dwattr $C$DW$241, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$43$E)
$C$DW$242	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$242, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$46$B)
	.dwattr $C$DW$242, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$46$E)
$C$DW$243	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$243, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$47$B)
	.dwattr $C$DW$243, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$47$E)

$C$DW$244	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$244, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L17:4:1443280168")
	.dwattr $C$DW$244, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$244, DW_AT_TI_begin_line(0x99)
	.dwattr $C$DW$244, DW_AT_TI_end_line(0xa0)
$C$DW$245	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$245, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$41$B)
	.dwattr $C$DW$245, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$41$E)
	.dwendtag $C$DW$244

	.dwendtag $C$DW$236

	.dwendtag $C$DW$232


$C$DW$246	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$246, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L2:2:1443280168")
	.dwattr $C$DW$246, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$246, DW_AT_TI_begin_line(0x4b)
	.dwattr $C$DW$246, DW_AT_TI_end_line(0x4e)
$C$DW$247	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$247, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$7$B)
	.dwattr $C$DW$247, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$7$E)
$C$DW$248	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$248, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$8$B)
	.dwattr $C$DW$248, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$8$E)
$C$DW$249	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$249, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$9$B)
	.dwattr $C$DW$249, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$9$E)
	.dwendtag $C$DW$246


$C$DW$250	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$250, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L5:2:1443280168")
	.dwattr $C$DW$250, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$250, DW_AT_TI_begin_line(0x88)
	.dwattr $C$DW$250, DW_AT_TI_end_line(0x93)
$C$DW$251	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$251, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$20$B)
	.dwattr $C$DW$251, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$20$E)
$C$DW$252	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$252, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$21$B)
	.dwattr $C$DW$252, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$21$E)
$C$DW$253	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$253, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$32$B)
	.dwattr $C$DW$253, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$32$E)

$C$DW$254	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$254, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L6:3:1443280168")
	.dwattr $C$DW$254, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$254, DW_AT_TI_begin_line(0x89)
	.dwattr $C$DW$254, DW_AT_TI_end_line(0x92)
$C$DW$255	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$255, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$22$B)
	.dwattr $C$DW$255, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$22$E)
$C$DW$256	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$256, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$28$B)
	.dwattr $C$DW$256, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$28$E)
$C$DW$257	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$257, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$29$B)
	.dwattr $C$DW$257, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$29$E)
$C$DW$258	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$258, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$23$B)
	.dwattr $C$DW$258, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$23$E)
$C$DW$259	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$259, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$27$B)
	.dwattr $C$DW$259, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$27$E)
$C$DW$260	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$260, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$30$B)
	.dwattr $C$DW$260, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$30$E)
$C$DW$261	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$261, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$31$B)
	.dwattr $C$DW$261, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$31$E)

$C$DW$262	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$262, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L8:4:1443280168")
	.dwattr $C$DW$262, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$262, DW_AT_TI_begin_line(0x8a)
	.dwattr $C$DW$262, DW_AT_TI_end_line(0x91)
$C$DW$263	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$263, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$25$B)
	.dwattr $C$DW$263, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$25$E)
	.dwendtag $C$DW$262

	.dwendtag $C$DW$254

	.dwendtag $C$DW$250


$C$DW$264	.dwtag  DW_TAG_TI_loop
	.dwattr $C$DW$264, DW_AT_name("c:\nightlybuilds\vlib\ti\vlib\vlib\examples\package/lib/Regression/regress_d_c/./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.se66:$C$L29:2:1443280168")
	.dwattr $C$DW$264, DW_AT_TI_begin_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$264, DW_AT_TI_begin_line(0xc4)
	.dwattr $C$DW$264, DW_AT_TI_end_line(0xc7)
$C$DW$265	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$265, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$63$B)
	.dwattr $C$DW$265, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$63$E)
$C$DW$266	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$266, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$64$B)
	.dwattr $C$DW$266, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$64$E)
$C$DW$267	.dwtag  DW_TAG_TI_loop_range
	.dwattr $C$DW$267, DW_AT_low_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$65$B)
	.dwattr $C$DW$267, DW_AT_high_pc($C$DW$L$VLIB_coOccurrenceMatrix_d$65$E)
	.dwendtag $C$DW$264

	.dwendtag $C$DW$198

	.dwattr $C$DW$94, DW_AT_TI_end_file("./../packages/ti/vlib/src/VLIB_coOccurrenceMatrix/VLIB_coOccurrenceMatrix_d.c")
	.dwattr $C$DW$94, DW_AT_TI_end_line(0xe1)
	.dwattr $C$DW$94, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$94

;; Inlined function references:
;; [ 15] VLIB_profile_start
;; [ 16] VLIB_profile_stop
;; [ 18] VLIB_kernel_memory
;; [ 24] ppwr2
;******************************************************************************
;* STRINGS                                                                    *
;******************************************************************************
	.sect	".const:.string"
$C$SL1:	.string	"VLIB_coOccurrenceMatrix",0
$C$SL2:	.string	"Matrix:%d, row:%d, col:%d, out:%u, EOut:%u ",10,0
$C$SL3:	.string	"Matrix:%d, row:%d, col:%d, Eout:%u, Out:%u ",10,0
$C$SL4:	.string	"%s generated input | Opt and NatC results compared | imageW"
	.string	"idth= %d, imageHeight= %d, outWidth= %d, outHeight= %d mode"
	.string	" =%d",0
$C$SL5:	.string	"imageWidth= %d, imageHeight= %d, outWidth= %d, outHeight= %"
	.string	"d ",0
$C$SL6:	.string	"Scratch used; internal LUT not required",0
$C$SL7:	.string	"imageWidth*imageHeight*numOffsets",0
$C$SL8:	.string	"Scratch used; internal LUT required",0
$C$SL9:	.string	"Scratch not used; internal LUT required",0
$C$SL10:	.string	"-----------------------------------------------------------"
	.string	"-----------------------------------------------------------"
	.string	"-----------------------",10,0
;*****************************************************************************
;* UNDEFINED EXTERNAL REFERENCES                                             *
;*****************************************************************************
	.global	printf
	.global	sprintf
	.global	malloc
	.global	free
	.global	VLIB_cache_inval
	.global	VLIB_profile_init
	.global	VLIB_profile_setMode
	.global	VLIB_formula_add_test
	.global	VLIB_skip_test
	.global	VLIB_profile_cycle_report
	.global	initStack
	.global	setStackDepth
	.global	getSP
	.global	VLIB_stack_memory
	.global	VLIB_fillBuffer
	.global	VLIB_malloc
	.global	VLIB_free
	.global	VLIB_coOccurrenceMatrix
	.global	VLIB_coOccurrenceMatrix_cn
	.global	coOccurrence_getTestParams
	.global	test_cases
	.global	act_kernel
	.global	desc
	.global	testPatternString
	.global	est_test
	.global	beg_count
	.global	end_count
	.global	overhead
	.global	cycles
	.global	__c6xabi_divi

;******************************************************************************
;* BUILD ATTRIBUTES                                                           *
;******************************************************************************
	.battr "TI", Tag_File, 1, Tag_Long_Precision_Bits(2)
	.battr "TI", Tag_File, 1, Tag_Bitfield_layout(2)
	.battr "TI", Tag_File, 1, Tag_ABI_enum_size(2)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_wchar_t(1)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_alignment(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_array_object_align_expected(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PIC(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_PID(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_DSBT(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_needed(0)
	.battr "c6xabi", Tag_File, 1, Tag_ABI_stack_align_preserved(0)
	.battr "TI", Tag_File, 1, Tag_Tramps_Use_SOC(1)

;******************************************************************************
;* TYPE INFORMATION                                                           *
;******************************************************************************

$C$DW$T$43	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x04)
$C$DW$268	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_NO_ERROR"), DW_AT_const_value(0x00)
	.dwattr $C$DW$268, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$268, DW_AT_decl_line(0x7a)
	.dwattr $C$DW$268, DW_AT_decl_column(0x05)
$C$DW$269	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_INVALID"), DW_AT_const_value(0x01)
	.dwattr $C$DW$269, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$269, DW_AT_decl_line(0x7b)
	.dwattr $C$DW$269, DW_AT_decl_column(0x05)
$C$DW$270	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_NEGATIVE"), DW_AT_const_value(0x02)
	.dwattr $C$DW$270, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$270, DW_AT_decl_line(0x7c)
	.dwattr $C$DW$270, DW_AT_decl_column(0x05)
$C$DW$271	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_INPUT_EXCEEDED_RANGE"), DW_AT_const_value(0x03)
	.dwattr $C$DW$271, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$271, DW_AT_decl_line(0x7d)
	.dwattr $C$DW$271, DW_AT_decl_column(0x05)
$C$DW$272	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_EXCEEDED_BOUNDARY"), DW_AT_const_value(0x04)
	.dwattr $C$DW$272, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$272, DW_AT_decl_line(0x7e)
	.dwattr $C$DW$272, DW_AT_decl_column(0x05)
$C$DW$273	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_ALLOCATION_FAILURE"), DW_AT_const_value(0x05)
	.dwattr $C$DW$273, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$273, DW_AT_decl_line(0x7f)
	.dwattr $C$DW$273, DW_AT_decl_column(0x05)
$C$DW$274	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_MEMORY_POINTER_NULL"), DW_AT_const_value(0x06)
	.dwattr $C$DW$274, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$274, DW_AT_decl_line(0x80)
	.dwattr $C$DW$274, DW_AT_decl_column(0x05)
$C$DW$275	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_DMA_FAILURE"), DW_AT_const_value(0x07)
	.dwattr $C$DW$275, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$275, DW_AT_decl_line(0x81)
	.dwattr $C$DW$275, DW_AT_decl_column(0x05)
$C$DW$276	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_OPEN_FAILURE"), DW_AT_const_value(0x08)
	.dwattr $C$DW$276, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$276, DW_AT_decl_line(0x82)
	.dwattr $C$DW$276, DW_AT_decl_column(0x05)
$C$DW$277	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_READ_FAILURE"), DW_AT_const_value(0x09)
	.dwattr $C$DW$277, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$277, DW_AT_decl_line(0x83)
	.dwattr $C$DW$277, DW_AT_decl_column(0x05)
$C$DW$278	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_WRITE_FAILURE"), DW_AT_const_value(0x0a)
	.dwattr $C$DW$278, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$278, DW_AT_decl_line(0x84)
	.dwattr $C$DW$278, DW_AT_decl_column(0x05)
$C$DW$279	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_CLOSE_FAILURE"), DW_AT_const_value(0x0b)
	.dwattr $C$DW$279, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$279, DW_AT_decl_line(0x85)
	.dwattr $C$DW$279, DW_AT_decl_column(0x05)
$C$DW$280	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_FILE_FORMAT_FAILURE"), DW_AT_const_value(0x0c)
	.dwattr $C$DW$280, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$280, DW_AT_decl_line(0x86)
	.dwattr $C$DW$280, DW_AT_decl_column(0x05)
$C$DW$281	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_WARNING_LOW_MEMORY"), DW_AT_const_value(0x0d)
	.dwattr $C$DW$281, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$281, DW_AT_decl_line(0x87)
	.dwattr $C$DW$281, DW_AT_decl_column(0x05)
$C$DW$282	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERR_NOT_IMPLEMENTED"), DW_AT_const_value(0x0e)
	.dwattr $C$DW$282, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$282, DW_AT_decl_line(0x88)
	.dwattr $C$DW$282, DW_AT_decl_column(0x05)
$C$DW$283	.dwtag  DW_TAG_enumerator, DW_AT_name("VLIB_ERROR_MAX"), DW_AT_const_value(0x0f)
	.dwattr $C$DW$283, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$283, DW_AT_decl_line(0x89)
	.dwattr $C$DW$283, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$43

	.dwattr $C$DW$T$43, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$43, DW_AT_decl_line(0x79)
	.dwattr $C$DW$T$43, DW_AT_decl_column(0x0e)
$C$DW$T$44	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_STATUS")
	.dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$44, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$44, DW_AT_decl_line(0x8a)
	.dwattr $C$DW$T$44, DW_AT_decl_column(0x03)

$C$DW$T$45	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x04)
$C$DW$284	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_OPT"), DW_AT_const_value(0x00)
	.dwattr $C$DW$284, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$284, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$284, DW_AT_decl_column(0x05)
$C$DW$285	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CN"), DW_AT_const_value(0x01)
	.dwattr $C$DW$285, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$285, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$285, DW_AT_decl_column(0x05)
$C$DW$286	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_CNT"), DW_AT_const_value(0x02)
	.dwattr $C$DW$286, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$286, DW_AT_decl_line(0x6c)
	.dwattr $C$DW$286, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$45

	.dwattr $C$DW$T$45, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$T$45, DW_AT_decl_line(0x69)
	.dwattr $C$DW$T$45, DW_AT_decl_column(0x06)

$C$DW$T$46	.dwtag  DW_TAG_enumeration_type
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x04)
$C$DW$287	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_FAIL"), DW_AT_const_value(0x00)
	.dwattr $C$DW$287, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$287, DW_AT_decl_line(0x72)
	.dwattr $C$DW$287, DW_AT_decl_column(0x05)
$C$DW$288	.dwtag  DW_TAG_enumerator, DW_AT_name("vlib_KERNEL_PASS"), DW_AT_const_value(0x01)
	.dwattr $C$DW$288, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$288, DW_AT_decl_line(0x73)
	.dwattr $C$DW$288, DW_AT_decl_column(0x05)
	.dwendtag $C$DW$T$46

	.dwattr $C$DW$T$46, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\../common/VLIB_test.h")
	.dwattr $C$DW$T$46, DW_AT_decl_line(0x71)
	.dwattr $C$DW$T$46, DW_AT_decl_column(0x06)

$C$DW$T$25	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$25, DW_AT_byte_size(0x20)
$C$DW$289	.dwtag  DW_TAG_member
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$289, DW_AT_name("testPattern")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("testPattern")
	.dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$289, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$289, DW_AT_decl_line(0x24)
	.dwattr $C$DW$289, DW_AT_decl_column(0x0f)
$C$DW$290	.dwtag  DW_TAG_member
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$290, DW_AT_name("staticIn")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("staticIn")
	.dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$290, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$290, DW_AT_decl_line(0x25)
	.dwattr $C$DW$290, DW_AT_decl_column(0x0f)
$C$DW$291	.dwtag  DW_TAG_member
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$291, DW_AT_name("staticOut")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("staticOut")
	.dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$291, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$291, DW_AT_decl_line(0x26)
	.dwattr $C$DW$291, DW_AT_decl_column(0x0f)
$C$DW$292	.dwtag  DW_TAG_member
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$292, DW_AT_name("imageWidth")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("imageWidth")
	.dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$292, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$292, DW_AT_decl_line(0x27)
	.dwattr $C$DW$292, DW_AT_decl_column(0x0f)
$C$DW$293	.dwtag  DW_TAG_member
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$293, DW_AT_name("imageHeight")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("imageHeight")
	.dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$293, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$293, DW_AT_decl_line(0x28)
	.dwattr $C$DW$293, DW_AT_decl_column(0x0f)
$C$DW$294	.dwtag  DW_TAG_member
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$294, DW_AT_name("imagePitch")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("imagePitch")
	.dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$294, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$294, DW_AT_decl_line(0x29)
	.dwattr $C$DW$294, DW_AT_decl_column(0x0f)
$C$DW$295	.dwtag  DW_TAG_member
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$295, DW_AT_name("loPixelVal")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("loPixelVal")
	.dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$295, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$295, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$295, DW_AT_decl_column(0x0f)
$C$DW$296	.dwtag  DW_TAG_member
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$296, DW_AT_name("hiPixelVal")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("hiPixelVal")
	.dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$296, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$296, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$296, DW_AT_decl_column(0x0f)
$C$DW$297	.dwtag  DW_TAG_member
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$297, DW_AT_name("numLevels")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("numLevels")
	.dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$297, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$297, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$297, DW_AT_decl_column(0x0f)
$C$DW$298	.dwtag  DW_TAG_member
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$298, DW_AT_name("numOffsets")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("numOffsets")
	.dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$298, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$298, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$298, DW_AT_decl_column(0x0f)
$C$DW$299	.dwtag  DW_TAG_member
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$299, DW_AT_name("rowOffsets")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("rowOffsets")
	.dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$299, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$299, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$299, DW_AT_decl_column(0x0f)
$C$DW$300	.dwtag  DW_TAG_member
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$300, DW_AT_name("colOffsets")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("colOffsets")
	.dwattr $C$DW$300, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$300, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$300, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$300, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$300, DW_AT_decl_column(0x0f)
$C$DW$301	.dwtag  DW_TAG_member
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$301, DW_AT_name("scratchFlow")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("scratchFlow")
	.dwattr $C$DW$301, DW_AT_data_member_location[DW_OP_plus_uconst 0x1f]
	.dwattr $C$DW$301, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$301, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$301, DW_AT_decl_line(0x30)
	.dwattr $C$DW$301, DW_AT_decl_column(0x0f)
	.dwendtag $C$DW$T$25

	.dwattr $C$DW$T$25, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$T$25, DW_AT_decl_line(0x23)
	.dwattr $C$DW$T$25, DW_AT_decl_column(0x10)
$C$DW$T$47	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$47, DW_AT_address_class(0x20)
$C$DW$T$49	.dwtag  DW_TAG_typedef, DW_AT_name("coOccurrence_testParams_t")
	.dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$49, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\VLIB_coOccurrenceMatrix_idat.h")
	.dwattr $C$DW$T$49, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$49, DW_AT_decl_column(0x03)
$C$DW$T$50	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$50, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$T$50, DW_AT_address_class(0x20)
$C$DW$T$51	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$T$51, DW_AT_address_class(0x20)

$C$DW$T$27	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$27, DW_AT_byte_size(0x18)
$C$DW$302	.dwtag  DW_TAG_member
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$302, DW_AT_name("fd")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("fd")
	.dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$302, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$302, DW_AT_decl_line(0x49)
	.dwattr $C$DW$302, DW_AT_decl_column(0x0b)
$C$DW$303	.dwtag  DW_TAG_member
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$303, DW_AT_name("buf")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("buf")
	.dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$303, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$303, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$303, DW_AT_decl_column(0x16)
$C$DW$304	.dwtag  DW_TAG_member
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$304, DW_AT_name("pos")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("pos")
	.dwattr $C$DW$304, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$304, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$304, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$304, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$304, DW_AT_decl_column(0x16)
$C$DW$305	.dwtag  DW_TAG_member
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$305, DW_AT_name("bufend")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("bufend")
	.dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$305, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$305, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$305, DW_AT_decl_column(0x16)
$C$DW$306	.dwtag  DW_TAG_member
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$306, DW_AT_name("buff_stop")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("buff_stop")
	.dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$306, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$306, DW_AT_decl_line(0x4d)
	.dwattr $C$DW$306, DW_AT_decl_column(0x16)
$C$DW$307	.dwtag  DW_TAG_member
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$307, DW_AT_name("flags")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("flags")
	.dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$307, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$307, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$307, DW_AT_decl_column(0x16)
	.dwendtag $C$DW$T$27

	.dwattr $C$DW$T$27, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$27, DW_AT_decl_line(0x48)
	.dwattr $C$DW$T$27, DW_AT_decl_column(0x10)
$C$DW$T$52	.dwtag  DW_TAG_typedef, DW_AT_name("FILE")
	.dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$52, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$52, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$52, DW_AT_decl_column(0x03)

$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x08)
$C$DW$308	.dwtag  DW_TAG_member
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$308, DW_AT_name("quot")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$308, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$308, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$308, DW_AT_decl_column(0x16)
$C$DW$309	.dwtag  DW_TAG_member
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$309, DW_AT_name("rem")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$309, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$309, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$309, DW_AT_decl_column(0x1c)
	.dwendtag $C$DW$T$28

	.dwattr $C$DW$T$28, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$28, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$28, DW_AT_decl_column(0x10)
$C$DW$T$53	.dwtag  DW_TAG_typedef, DW_AT_name("div_t")
	.dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$53, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$53, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$53, DW_AT_decl_column(0x23)

$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x08)
$C$DW$310	.dwtag  DW_TAG_member
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$310, DW_AT_name("quot")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$310, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$310, DW_AT_decl_line(0x40)
	.dwattr $C$DW$310, DW_AT_decl_column(0x17)
$C$DW$311	.dwtag  DW_TAG_member
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$311, DW_AT_name("rem")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$311, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$311, DW_AT_decl_line(0x40)
	.dwattr $C$DW$311, DW_AT_decl_column(0x1d)
	.dwendtag $C$DW$T$29

	.dwattr $C$DW$T$29, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$29, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$29, DW_AT_decl_column(0x10)
$C$DW$T$54	.dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
	.dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$54, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$54, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$54, DW_AT_decl_line(0x40)
	.dwattr $C$DW$T$54, DW_AT_decl_column(0x24)

$C$DW$T$30	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x10)
$C$DW$312	.dwtag  DW_TAG_member
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$312, DW_AT_name("quot")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("quot")
	.dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$312, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$312, DW_AT_decl_line(0x43)
	.dwattr $C$DW$312, DW_AT_decl_column(0x1c)
$C$DW$313	.dwtag  DW_TAG_member
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$313, DW_AT_name("rem")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("rem")
	.dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$313, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$313, DW_AT_decl_line(0x43)
	.dwattr $C$DW$313, DW_AT_decl_column(0x22)
	.dwendtag $C$DW$T$30

	.dwattr $C$DW$T$30, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$30, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
$C$DW$T$55	.dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
	.dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$T$55, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$55, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$55, DW_AT_decl_line(0x43)
	.dwattr $C$DW$T$55, DW_AT_decl_column(0x29)

$C$DW$T$32	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x24)
$C$DW$314	.dwtag  DW_TAG_member
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$314, DW_AT_name("area")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("area")
	.dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$314, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$314, DW_AT_decl_line(0x69)
	.dwattr $C$DW$314, DW_AT_decl_column(0x0d)
$C$DW$315	.dwtag  DW_TAG_member
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$315, DW_AT_name("xsum")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("xsum")
	.dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$315, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$315, DW_AT_decl_line(0x6a)
	.dwattr $C$DW$315, DW_AT_decl_column(0x0d)
$C$DW$316	.dwtag  DW_TAG_member
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$316, DW_AT_name("ysum")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("ysum")
	.dwattr $C$DW$316, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$316, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$316, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$316, DW_AT_decl_line(0x6b)
	.dwattr $C$DW$316, DW_AT_decl_column(0x0d)
$C$DW$317	.dwtag  DW_TAG_member
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$317, DW_AT_name("xmin")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("xmin")
	.dwattr $C$DW$317, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$317, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$317, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$317, DW_AT_decl_line(0x6d)
	.dwattr $C$DW$317, DW_AT_decl_column(0x0d)
$C$DW$318	.dwtag  DW_TAG_member
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$318, DW_AT_name("ymin")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("ymin")
	.dwattr $C$DW$318, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$318, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$318, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$318, DW_AT_decl_line(0x6e)
	.dwattr $C$DW$318, DW_AT_decl_column(0x0d)
$C$DW$319	.dwtag  DW_TAG_member
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$319, DW_AT_name("xmax")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("xmax")
	.dwattr $C$DW$319, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$319, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$319, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$319, DW_AT_decl_line(0x6f)
	.dwattr $C$DW$319, DW_AT_decl_column(0x0d)
$C$DW$320	.dwtag  DW_TAG_member
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$320, DW_AT_name("ymax")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("ymax")
	.dwattr $C$DW$320, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$320, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$320, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$320, DW_AT_decl_line(0x70)
	.dwattr $C$DW$320, DW_AT_decl_column(0x0d)
$C$DW$321	.dwtag  DW_TAG_member
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$321, DW_AT_name("seedx")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("seedx")
	.dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$321, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$321, DW_AT_decl_line(0x72)
	.dwattr $C$DW$321, DW_AT_decl_column(0x0d)
$C$DW$322	.dwtag  DW_TAG_member
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$322, DW_AT_name("seedy")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("seedy")
	.dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$322, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$322, DW_AT_decl_line(0x73)
	.dwattr $C$DW$322, DW_AT_decl_column(0x0d)
	.dwendtag $C$DW$T$32

	.dwattr $C$DW$T$32, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$32, DW_AT_decl_line(0x68)
	.dwattr $C$DW$T$32, DW_AT_decl_column(0x10)
$C$DW$T$56	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CC")
	.dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$56, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$56, DW_AT_decl_line(0x75)
	.dwattr $C$DW$T$56, DW_AT_decl_column(0x03)

$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x10)
$C$DW$323	.dwtag  DW_TAG_member
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$323, DW_AT_name("daylight")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("daylight")
	.dwattr $C$DW$323, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$323, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$323, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$323, DW_AT_decl_line(0x52)
	.dwattr $C$DW$323, DW_AT_decl_column(0x0b)
$C$DW$324	.dwtag  DW_TAG_member
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$324, DW_AT_name("timezone")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("timezone")
	.dwattr $C$DW$324, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$324, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$324, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$324, DW_AT_decl_line(0x53)
	.dwattr $C$DW$324, DW_AT_decl_column(0x0b)
$C$DW$325	.dwtag  DW_TAG_member
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$325, DW_AT_name("tzname")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("tzname")
	.dwattr $C$DW$325, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$325, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$325, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$325, DW_AT_decl_line(0x54)
	.dwattr $C$DW$325, DW_AT_decl_column(0x0b)
$C$DW$326	.dwtag  DW_TAG_member
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$326, DW_AT_name("dstname")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("dstname")
	.dwattr $C$DW$326, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$326, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$326, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$326, DW_AT_decl_line(0x55)
	.dwattr $C$DW$326, DW_AT_decl_column(0x0b)
	.dwendtag $C$DW$T$35

	.dwattr $C$DW$T$35, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$35, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$35, DW_AT_decl_column(0x01)
$C$DW$T$57	.dwtag  DW_TAG_typedef, DW_AT_name("TZ")
	.dwattr $C$DW$T$57, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$57, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$57, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$57, DW_AT_decl_line(0x56)
	.dwattr $C$DW$T$57, DW_AT_decl_column(0x03)

$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("S3_1")
	.dwattr $C$DW$T$39, DW_AT_declaration
	.dwendtag $C$DW$T$39


$C$DW$T$36	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$36, DW_AT_name("U3_0")
	.dwattr $C$DW$T$36, DW_AT_declaration
	.dwendtag $C$DW$T$36

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")
$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)
$C$DW$T$59	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_PTR")
	.dwattr $C$DW$T$59, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$T$59, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$59, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$59, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$59, DW_AT_decl_column(0x19)
$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
$C$DW$T$88	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$88, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$88, DW_AT_address_class(0x20)
$C$DW$T$23	.dwtag  DW_TAG_typedef, DW_AT_name("int8_t")
	.dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$23, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$23, DW_AT_decl_line(0x2a)
	.dwattr $C$DW$T$23, DW_AT_decl_column(0x1d)

$C$DW$T$24	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$24, DW_AT_byte_size(0x04)
$C$DW$327	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$327, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$24

$C$DW$T$102	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$102, DW_AT_address_class(0x20)
$C$DW$T$103	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$23)
$C$DW$T$104	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$104, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$T$104, DW_AT_address_class(0x20)
$C$DW$T$105	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$104)
$C$DW$T$106	.dwtag  DW_TAG_typedef, DW_AT_name("int_least8_t")
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$106, DW_AT_decl_line(0x39)
	.dwattr $C$DW$T$106, DW_AT_decl_column(0x17)
$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)
$C$DW$T$19	.dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$19, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$19, DW_AT_decl_line(0x2b)
	.dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
$C$DW$T$20	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$20, DW_AT_address_class(0x20)
$C$DW$T$107	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$19)
$C$DW$T$108	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$T$108, DW_AT_address_class(0x20)
$C$DW$T$109	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$109, DW_AT_type(*$C$DW$T$108)
$C$DW$T$110	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least8_t")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$110, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$110, DW_AT_decl_line(0x3a)
	.dwattr $C$DW$T$110, DW_AT_decl_column(0x16)
$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x02)
$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x02)
$C$DW$T$111	.dwtag  DW_TAG_typedef, DW_AT_name("int16_t")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$8)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$111, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$111, DW_AT_decl_line(0x2c)
	.dwattr $C$DW$T$111, DW_AT_decl_column(0x1d)
$C$DW$T$112	.dwtag  DW_TAG_typedef, DW_AT_name("int_least16_t")
	.dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$T$112, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$112, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$112, DW_AT_decl_line(0x3c)
	.dwattr $C$DW$T$112, DW_AT_decl_column(0x17)
$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x02)
$C$DW$T$37	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$37, DW_AT_address_class(0x20)

$C$DW$T$38	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$38, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$38, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x10)
$C$DW$328	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$328, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$38

$C$DW$T$113	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$113, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$113, DW_AT_address_class(0x20)
$C$DW$T$21	.dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$21, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$21, DW_AT_decl_line(0x2d)
	.dwattr $C$DW$T$21, DW_AT_decl_column(0x1c)
$C$DW$T$22	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$22, DW_AT_address_class(0x20)
$C$DW$T$115	.dwtag  DW_TAG_restrict_type
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$22)
$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)
$C$DW$T$117	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$T$117, DW_AT_address_class(0x20)
$C$DW$T$118	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$21)
$C$DW$T$119	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least16_t")
	.dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$119, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$119, DW_AT_decl_line(0x3d)
	.dwattr $C$DW$T$119, DW_AT_decl_column(0x16)
$C$DW$T$114	.dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$114, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$114, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdlib.h")
	.dwattr $C$DW$T$114, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$114, DW_AT_decl_column(0x1a)
$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x04)
$C$DW$T$136	.dwtag  DW_TAG_typedef, DW_AT_name("fpos_t")
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$136, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$136, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$136, DW_AT_decl_line(0x53)
	.dwattr $C$DW$T$136, DW_AT_decl_column(0x0d)
$C$DW$T$31	.dwtag  DW_TAG_typedef, DW_AT_name("int32_t")
	.dwattr $C$DW$T$31, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$31, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$31, DW_AT_decl_line(0x2e)
	.dwattr $C$DW$T$31, DW_AT_decl_column(0x1d)
$C$DW$T$129	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_CCHandle")
	.dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$129, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$129, DW_AT_decl_line(0x77)
	.dwattr $C$DW$T$129, DW_AT_decl_column(0x11)

$C$DW$T$40	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$40, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x10)
$C$DW$329	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$329, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$40

$C$DW$T$84	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$84, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$84, DW_AT_address_class(0x20)
$C$DW$T$131	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast16_t")
	.dwattr $C$DW$T$131, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$131, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$131, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$131, DW_AT_decl_line(0x4b)
	.dwattr $C$DW$T$131, DW_AT_decl_column(0x17)
$C$DW$T$132	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast32_t")
	.dwattr $C$DW$T$132, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$132, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$132, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$132, DW_AT_decl_line(0x4e)
	.dwattr $C$DW$T$132, DW_AT_decl_column(0x17)
$C$DW$T$133	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast8_t")
	.dwattr $C$DW$T$133, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$133, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$133, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$133, DW_AT_decl_line(0x49)
	.dwattr $C$DW$T$133, DW_AT_decl_column(0x17)
$C$DW$T$134	.dwtag  DW_TAG_typedef, DW_AT_name("int_least32_t")
	.dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$134, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$134, DW_AT_decl_line(0x3e)
	.dwattr $C$DW$T$134, DW_AT_decl_column(0x17)
$C$DW$T$135	.dwtag  DW_TAG_typedef, DW_AT_name("intptr_t")
	.dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$135, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$135, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$135, DW_AT_decl_line(0x58)
	.dwattr $C$DW$T$135, DW_AT_decl_column(0x1a)
$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x04)
$C$DW$T$137	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_VAL")
	.dwattr $C$DW$T$137, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$137, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$137, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$137, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$137, DW_AT_decl_column(0x17)
$C$DW$T$154	.dwtag  DW_TAG_typedef, DW_AT_name("clock_t")
	.dwattr $C$DW$T$154, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$154, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$154, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$154, DW_AT_decl_line(0x37)
	.dwattr $C$DW$T$154, DW_AT_decl_column(0x16)
$C$DW$T$60	.dwtag  DW_TAG_typedef, DW_AT_name("size_t")
	.dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$60, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$60, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdio.h")
	.dwattr $C$DW$T$60, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$60, DW_AT_decl_column(0x19)
$C$DW$T$145	.dwtag  DW_TAG_typedef, DW_AT_name("time_t")
	.dwattr $C$DW$T$145, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$145, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$145, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$145, DW_AT_decl_line(0x38)
	.dwattr $C$DW$T$145, DW_AT_decl_column(0x16)
$C$DW$T$76	.dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
	.dwattr $C$DW$T$76, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$76, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$76, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$76, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$76, DW_AT_decl_column(0x1c)
$C$DW$T$149	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast16_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$149, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$149, DW_AT_decl_line(0x4c)
	.dwattr $C$DW$T$149, DW_AT_decl_column(0x16)
$C$DW$T$150	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast32_t")
	.dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$150, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$150, DW_AT_decl_line(0x4f)
	.dwattr $C$DW$T$150, DW_AT_decl_column(0x16)
$C$DW$T$151	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast8_t")
	.dwattr $C$DW$T$151, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$151, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$151, DW_AT_decl_line(0x4a)
	.dwattr $C$DW$T$151, DW_AT_decl_column(0x16)
$C$DW$T$152	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least32_t")
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$T$152, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$152, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$152, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$152, DW_AT_decl_column(0x16)
$C$DW$T$153	.dwtag  DW_TAG_typedef, DW_AT_name("uintptr_t")
	.dwattr $C$DW$T$153, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$153, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$153, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$153, DW_AT_decl_line(0x59)
	.dwattr $C$DW$T$153, DW_AT_decl_column(0x1a)
$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("__int40_t")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$12, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$12, DW_AT_bit_offset(0x18)
$C$DW$T$155	.dwtag  DW_TAG_typedef, DW_AT_name("int40_t")
	.dwattr $C$DW$T$155, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$155, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$155, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$155, DW_AT_decl_line(0x31)
	.dwattr $C$DW$T$155, DW_AT_decl_column(0x21)
$C$DW$T$156	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast40_t")
	.dwattr $C$DW$T$156, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$156, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$156, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$156, DW_AT_decl_line(0x51)
	.dwattr $C$DW$T$156, DW_AT_decl_column(0x17)
$C$DW$T$157	.dwtag  DW_TAG_typedef, DW_AT_name("int_least40_t")
	.dwattr $C$DW$T$157, DW_AT_type(*$C$DW$T$155)
	.dwattr $C$DW$T$157, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$157, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$157, DW_AT_decl_line(0x41)
	.dwattr $C$DW$T$157, DW_AT_decl_column(0x17)
$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned __int40_t")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x08)
	.dwattr $C$DW$T$13, DW_AT_bit_size(0x28)
	.dwattr $C$DW$T$13, DW_AT_bit_offset(0x18)
$C$DW$T$158	.dwtag  DW_TAG_typedef, DW_AT_name("uint40_t")
	.dwattr $C$DW$T$158, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$158, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$158, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$158, DW_AT_decl_line(0x32)
	.dwattr $C$DW$T$158, DW_AT_decl_column(0x20)
$C$DW$T$159	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast40_t")
	.dwattr $C$DW$T$159, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$T$159, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$159, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$159, DW_AT_decl_line(0x52)
	.dwattr $C$DW$T$159, DW_AT_decl_column(0x16)
$C$DW$T$160	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least40_t")
	.dwattr $C$DW$T$160, DW_AT_type(*$C$DW$T$158)
	.dwattr $C$DW$T$160, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$160, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$160, DW_AT_decl_line(0x42)
	.dwattr $C$DW$T$160, DW_AT_decl_column(0x16)
$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x08)
$C$DW$T$162	.dwtag  DW_TAG_typedef, DW_AT_name("int64_t")
	.dwattr $C$DW$T$162, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$162, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$162, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$162, DW_AT_decl_line(0x34)
	.dwattr $C$DW$T$162, DW_AT_decl_column(0x21)
$C$DW$T$163	.dwtag  DW_TAG_typedef, DW_AT_name("int_fast64_t")
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$162)
	.dwattr $C$DW$T$163, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$163, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$163, DW_AT_decl_line(0x54)
	.dwattr $C$DW$T$163, DW_AT_decl_column(0x17)
$C$DW$T$164	.dwtag  DW_TAG_typedef, DW_AT_name("int_least64_t")
	.dwattr $C$DW$T$164, DW_AT_type(*$C$DW$T$162)
	.dwattr $C$DW$T$164, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$164, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$164, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$164, DW_AT_decl_column(0x17)
$C$DW$T$165	.dwtag  DW_TAG_typedef, DW_AT_name("intmax_t")
	.dwattr $C$DW$T$165, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$165, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$165, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$165, DW_AT_decl_line(0x5c)
	.dwattr $C$DW$T$165, DW_AT_decl_column(0x20)
$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x08)
$C$DW$T$167	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$167, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$167, DW_AT_address_class(0x20)
$C$DW$T$168	.dwtag  DW_TAG_typedef, DW_AT_name("uint64_t")
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$168, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$168, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$168, DW_AT_decl_line(0x35)
	.dwattr $C$DW$T$168, DW_AT_decl_column(0x20)

$C$DW$T$169	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$169, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$T$169, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$169, DW_AT_byte_size(0x10)
$C$DW$330	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$330, DW_AT_upper_bound(0x01)
	.dwendtag $C$DW$T$169

$C$DW$T$170	.dwtag  DW_TAG_typedef, DW_AT_name("uint_fast64_t")
	.dwattr $C$DW$T$170, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$T$170, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$170, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$170, DW_AT_decl_line(0x55)
	.dwattr $C$DW$T$170, DW_AT_decl_column(0x16)
$C$DW$T$171	.dwtag  DW_TAG_typedef, DW_AT_name("uint_least64_t")
	.dwattr $C$DW$T$171, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$T$171, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$171, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$171, DW_AT_decl_line(0x45)
	.dwattr $C$DW$T$171, DW_AT_decl_column(0x16)
$C$DW$T$172	.dwtag  DW_TAG_typedef, DW_AT_name("uintmax_t")
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$T$172, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$172, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdint.h")
	.dwattr $C$DW$T$172, DW_AT_decl_line(0x5d)
	.dwattr $C$DW$T$172, DW_AT_decl_column(0x20)
$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x04)
$C$DW$T$173	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_F32")
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$173, DW_AT_decl_line(0x5b)
	.dwattr $C$DW$T$173, DW_AT_decl_column(0x0f)
$C$DW$T$174	.dwtag  DW_TAG_typedef, DW_AT_name("float32_t")
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$T$174, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$174, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$174, DW_AT_decl_line(0x30)
	.dwattr $C$DW$T$174, DW_AT_decl_column(0x0f)
$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x08)
$C$DW$T$175	.dwtag  DW_TAG_typedef, DW_AT_name("VLIB_D64")
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_decl_file(".\..\packages\ti\vlib\src\VLIB_coOccurrenceMatrix\..\common\c66/VLIB_types.h")
	.dwattr $C$DW$T$175, DW_AT_decl_line(0x5a)
	.dwattr $C$DW$T$175, DW_AT_decl_column(0x10)
$C$DW$T$176	.dwtag  DW_TAG_typedef, DW_AT_name("__float2_t")
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/c6x.h")
	.dwattr $C$DW$T$176, DW_AT_decl_line(0x5f)
	.dwattr $C$DW$T$176, DW_AT_decl_column(0x14)
$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x08)
$C$DW$T$33	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$33, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$33, DW_AT_name("signed char")
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x01)

$C$DW$T$34	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$34, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$34, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x04)
$C$DW$331	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$331, DW_AT_upper_bound(0x03)
	.dwendtag $C$DW$T$34

$C$DW$T$65	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$65, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$65, DW_AT_address_class(0x20)
$C$DW$T$177	.dwtag  DW_TAG_typedef, DW_AT_name("va_list")
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$T$177, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$177, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/stdarg.h")
	.dwattr $C$DW$T$177, DW_AT_decl_line(0x2f)
	.dwattr $C$DW$T$177, DW_AT_decl_column(0x12)
$C$DW$T$120	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$33)
$C$DW$T$121	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$120)
	.dwattr $C$DW$T$121, DW_AT_address_class(0x20)

$C$DW$T$178	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$T$178, DW_AT_language(DW_LANG_C)
$C$DW$332	.dwtag  DW_TAG_subrange_type
	.dwendtag $C$DW$T$178


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("__simd128_int32_t")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x10)
$C$DW$333	.dwtag  DW_TAG_member
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$333, DW_AT_name("_v")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_v")
	.dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$333, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$333, DW_AT_decl_line(0x44)
	.dwattr $C$DW$333, DW_AT_decl_column(0x01)
	.dwendtag $C$DW$T$41

	.dwattr $C$DW$T$41, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$41, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$41, DW_AT_decl_column(0x01)
$C$DW$T$179	.dwtag  DW_TAG_typedef, DW_AT_name("int32x4_t")
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$T$179, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$179, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$179, DW_AT_decl_line(0x44)
	.dwattr $C$DW$T$179, DW_AT_decl_column(0x01)
$C$DW$T$180	.dwtag  DW_TAG_typedef, DW_AT_name("__x128_t")
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$180, DW_AT_decl_file("C:\VLIB_Tools\CCSV5_4_0\ccsv5\tools\compiler\C6000\include\vect.h")
	.dwattr $C$DW$T$180, DW_AT_decl_line(0x46)
	.dwattr $C$DW$T$180, DW_AT_decl_column(0x13)

$C$DW$T$42	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$42, DW_AT_name("tm")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x24)
$C$DW$334	.dwtag  DW_TAG_member
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$334, DW_AT_name("tm_sec")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("tm_sec")
	.dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$334, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$334, DW_AT_decl_line(0x41)
	.dwattr $C$DW$334, DW_AT_decl_column(0x09)
$C$DW$335	.dwtag  DW_TAG_member
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$335, DW_AT_name("tm_min")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("tm_min")
	.dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$335, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$335, DW_AT_decl_line(0x42)
	.dwattr $C$DW$335, DW_AT_decl_column(0x09)
$C$DW$336	.dwtag  DW_TAG_member
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$336, DW_AT_name("tm_hour")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("tm_hour")
	.dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$336, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$336, DW_AT_decl_line(0x43)
	.dwattr $C$DW$336, DW_AT_decl_column(0x09)
$C$DW$337	.dwtag  DW_TAG_member
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$337, DW_AT_name("tm_mday")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("tm_mday")
	.dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$337, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$337, DW_AT_decl_line(0x44)
	.dwattr $C$DW$337, DW_AT_decl_column(0x09)
$C$DW$338	.dwtag  DW_TAG_member
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$338, DW_AT_name("tm_mon")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("tm_mon")
	.dwattr $C$DW$338, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$338, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$338, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$338, DW_AT_decl_line(0x45)
	.dwattr $C$DW$338, DW_AT_decl_column(0x09)
$C$DW$339	.dwtag  DW_TAG_member
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$339, DW_AT_name("tm_year")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("tm_year")
	.dwattr $C$DW$339, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$339, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$339, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$339, DW_AT_decl_line(0x46)
	.dwattr $C$DW$339, DW_AT_decl_column(0x09)
$C$DW$340	.dwtag  DW_TAG_member
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$340, DW_AT_name("tm_wday")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("tm_wday")
	.dwattr $C$DW$340, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$340, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$340, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$340, DW_AT_decl_line(0x47)
	.dwattr $C$DW$340, DW_AT_decl_column(0x09)
$C$DW$341	.dwtag  DW_TAG_member
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$341, DW_AT_name("tm_yday")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("tm_yday")
	.dwattr $C$DW$341, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$341, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$341, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$341, DW_AT_decl_line(0x48)
	.dwattr $C$DW$341, DW_AT_decl_column(0x09)
$C$DW$342	.dwtag  DW_TAG_member
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$342, DW_AT_name("tm_isdst")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("tm_isdst")
	.dwattr $C$DW$342, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$342, DW_AT_accessibility(DW_ACCESS_public)
	.dwattr $C$DW$342, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$342, DW_AT_decl_line(0x49)
	.dwattr $C$DW$342, DW_AT_decl_column(0x09)
	.dwendtag $C$DW$T$42

	.dwattr $C$DW$T$42, DW_AT_decl_file("C:/VLIB_Tools/CCSV5_4_0/ccsv5/tools/compiler/C6000/include/time.h")
	.dwattr $C$DW$T$42, DW_AT_decl_line(0x3f)
	.dwattr $C$DW$T$42, DW_AT_decl_column(0x08)
	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 19
	.dwcfi	cfa_register, 31
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	undefined, 6
	.dwcfi	undefined, 7
	.dwcfi	undefined, 8
	.dwcfi	undefined, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	same_value, 12
	.dwcfi	same_value, 13
	.dwcfi	same_value, 14
	.dwcfi	same_value, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	same_value, 26
	.dwcfi	same_value, 27
	.dwcfi	same_value, 28
	.dwcfi	same_value, 29
	.dwcfi	same_value, 30
	.dwcfi	same_value, 31
	.dwcfi	same_value, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 39
	.dwcfi	undefined, 40
	.dwcfi	undefined, 41
	.dwcfi	undefined, 42
	.dwcfi	undefined, 43
	.dwcfi	undefined, 44
	.dwcfi	undefined, 45
	.dwcfi	undefined, 46
	.dwcfi	undefined, 47
	.dwcfi	undefined, 48
	.dwcfi	undefined, 49
	.dwcfi	undefined, 50
	.dwcfi	undefined, 51
	.dwcfi	undefined, 52
	.dwcfi	undefined, 53
	.dwcfi	undefined, 54
	.dwcfi	undefined, 55
	.dwcfi	undefined, 56
	.dwcfi	undefined, 57
	.dwcfi	undefined, 58
	.dwcfi	undefined, 59
	.dwcfi	undefined, 60
	.dwcfi	undefined, 61
	.dwcfi	undefined, 62
	.dwcfi	undefined, 63
	.dwcfi	undefined, 64
	.dwcfi	undefined, 65
	.dwcfi	undefined, 66
	.dwcfi	undefined, 67
	.dwcfi	undefined, 68
	.dwcfi	undefined, 69
	.dwcfi	undefined, 70
	.dwcfi	undefined, 71
	.dwcfi	undefined, 72
	.dwcfi	undefined, 73
	.dwcfi	undefined, 74
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 78
	.dwcfi	undefined, 79
	.dwcfi	undefined, 80
	.dwcfi	undefined, 81
	.dwcfi	undefined, 82
	.dwcfi	undefined, 83
	.dwcfi	undefined, 84
	.dwcfi	undefined, 85
	.dwcfi	undefined, 86
	.dwcfi	undefined, 87
	.dwcfi	undefined, 88
	.dwcfi	undefined, 89
	.dwcfi	undefined, 90
	.dwcfi	undefined, 91
	.dwcfi	undefined, 92
	.dwcfi	undefined, 93
	.dwcfi	undefined, 94
	.dwcfi	undefined, 95
	.dwcfi	undefined, 96
	.dwcfi	undefined, 97
	.dwcfi	undefined, 98
	.dwcfi	undefined, 99
	.dwcfi	undefined, 100
	.dwcfi	undefined, 101
	.dwcfi	undefined, 102
	.dwcfi	undefined, 103
	.dwcfi	undefined, 104
	.dwcfi	undefined, 105
	.dwcfi	undefined, 106
	.dwcfi	undefined, 107
	.dwcfi	undefined, 108
	.dwcfi	undefined, 109
	.dwcfi	undefined, 110
	.dwcfi	undefined, 111
	.dwcfi	undefined, 112
	.dwcfi	undefined, 113
	.dwcfi	undefined, 114
	.dwcfi	undefined, 115
	.dwcfi	undefined, 116
	.dwcfi	undefined, 117
	.dwcfi	undefined, 118
	.dwcfi	undefined, 119
	.dwcfi	undefined, 120
	.dwcfi	undefined, 121
	.dwcfi	undefined, 122
	.dwcfi	undefined, 123
	.dwcfi	undefined, 124
	.dwcfi	undefined, 125
	.dwcfi	undefined, 126
	.dwcfi	undefined, 127
	.dwendentry
	.dwendtag $C$DW$CU

